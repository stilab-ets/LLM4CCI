Unnamed: 0,Id,Label,OwnerName,Title,Description,ChangedFiles,files_diff_dict,Moataz Labelling,Gemini,Heuristic
9539.0,9539.0,deprecat; resource,Rohan McGovern [inactive],Removed forcesuccess from working qtnamespace Ubuntu 11.10 x64 stage,"Removed forcesuccess from working qtnamespace Ubuntu 11.10 x64 stage

This passes, so set it to enforcing.

Task-number: QTQAINFRA-305
Change-Id: I4817757f54aaa2ccdb5ff76d23e8428e9c132e1b",['projects/QtQA_master_Integration/stages/linux-g++_developer-build_qtnamespace_qtlibinfix_Ubuntu_11.10_x64/forcesuccess'],"{""forcesuccess"": ""@@ -1 +0,0 @@\n-1\n""}",deprecat; resource,"bug 
",deprecat;resource;
17339.0,17339.0,resource,Joerg Bornemann,fix license headers,"fix license headers

Change-Id: I55b322795808d967161983c4808040b408bbf814","['src/lib/Qbs/private/resolvedproduct.h', 'src/lib/Qbs/runenvironment.cpp', 'src/lib/Qbs/private/resolvedproduct.cpp', 'src/lib/Qbs/runenvironment.h']","{""resolvedproduct.cpp"": ""@@ -1,10 +1,10 @@\n /**************************************************************************\n **\n-** This file is part of Qt Creator\n+** This file is part of the Qt Build Suite\n **\n ** Copyright (c) 2012 Nokia Corporation and/or its subsidiary(-ies).\n **\n-** Contact: Nokia Corporation (qt-info@nokia.com)\n+** Contact: Nokia Corporation (info@qt.nokia.com)\n **\n **\n ** GNU Lesser General Public License Usage\n@@ -20,17 +20,21 @@\n ** rights. These rights are described in the Nokia Qt LGPL Exception\n ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n **\n-** Other Usage\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file.\n+** Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n **\n+** Other Usage\n ** Alternatively, this file may be used in accordance with the terms and\n ** conditions contained in a signed written agreement between you and Nokia.\n **\n-** If you have questions regarding the use of this file, please contact\n-** Nokia at qt-info@nokia.com.\n-**\n **************************************************************************/\n \n-\n #include \""resolvedproduct.h\""\n \n \n"", ""resolvedproduct.h"": ""@@ -1,10 +1,10 @@\n /**************************************************************************\n **\n-** This file is part of Qt Creator\n+** This file is part of the Qt Build Suite\n **\n ** Copyright (c) 2012 Nokia Corporation and/or its subsidiary(-ies).\n **\n-** Contact: Nokia Corporation (qt-info@nokia.com)\n+** Contact: Nokia Corporation (info@qt.nokia.com)\n **\n **\n ** GNU Lesser General Public License Usage\n@@ -20,17 +20,21 @@\n ** rights. These rights are described in the Nokia Qt LGPL Exception\n ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n **\n-** Other Usage\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file.\n+** Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n **\n+** Other Usage\n ** Alternatively, this file may be used in accordance with the terms and\n ** conditions contained in a signed written agreement between you and Nokia.\n **\n-** If you have questions regarding the use of this file, please contact\n-** Nokia at qt-info@nokia.com.\n-**\n **************************************************************************/\n \n-\n #ifndef QBS_PRIVATE_RESOLVEDPRODUCT_H\n #define QBS_PRIVATE_RESOLVEDPRODUCT_H\n \n"", ""runenvironment.cpp"": ""@@ -1,10 +1,10 @@\n /**************************************************************************\n **\n-** This file is part of Qt Creator\n+** This file is part of the Qt Build Suite\n **\n ** Copyright (c) 2012 Nokia Corporation and/or its subsidiary(-ies).\n **\n-** Contact: Nokia Corporation (qt-info@nokia.com)\n+** Contact: Nokia Corporation (info@qt.nokia.com)\n **\n **\n ** GNU Lesser General Public License Usage\n@@ -20,14 +20,19 @@\n ** rights. These rights are described in the Nokia Qt LGPL Exception\n ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n **\n-** Other Usage\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file.\n+** Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n **\n+** Other Usage\n ** Alternatively, this file may be used in accordance with the terms and\n ** conditions contained in a signed written agreement between you and Nokia.\n **\n-** If you have questions regarding the use of this file, please contact\n-** Nokia at qt-info@nokia.com.\n-**\n **************************************************************************/\n \n \n"", ""runenvironment.h"": ""@@ -1,10 +1,10 @@\n /**************************************************************************\n **\n-** This file is part of Qt Creator\n+** This file is part of the Qt Build Suite\n **\n ** Copyright (c) 2012 Nokia Corporation and/or its subsidiary(-ies).\n **\n-** Contact: Nokia Corporation (qt-info@nokia.com)\n+** Contact: Nokia Corporation (info@qt.nokia.com)\n **\n **\n ** GNU Lesser General Public License Usage\n@@ -20,17 +20,21 @@\n ** rights. These rights are described in the Nokia Qt LGPL Exception\n ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n **\n-** Other Usage\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file.\n+** Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n **\n+** Other Usage\n ** Alternatively, this file may be used in accordance with the terms and\n ** conditions contained in a signed written agreement between you and Nokia.\n **\n-** If you have questions regarding the use of this file, please contact\n-** Nokia at qt-info@nokia.com.\n-**\n **************************************************************************/\n \n-\n #ifndef QBS_RUNENVIRONMENT_H\n #define QBS_RUNENVIRONMENT_H\n \n""}",resource,"resource 
",bug;resource;
26950.0,26950.0,bug,Daniel Teske,TargetSetupPageWrapper: The default profile always exists,"TargetSetupPageWrapper: The default profile always exists

Change-Id: I11118decce1df25d371dfbec85638d0b2964883b",['src/plugins/qt4projectmanager/unconfiguredprojectpanel.cpp'],"{""unconfiguredprojectpanel.cpp"": ""@@ -139,26 +139,21 @@ void TargetSetupPageWrapper::updateNoteText()\n     ProjectExplorer::Profile *p = ProjectExplorer::ProfileManager::instance()->defaultProfile();\n \n     QString text;\n-    if (p && p->isValid())\n+    if (p->isValid())\n         text = tr(\""<p>The project <b>%1</b> is not yet configured.</p>\""\n                   \""<p>Qt Creator uses the profile: <b>%2</b> \""\n                   \""to parse the project. You can edit \""\n                   \""these in the <b><a href=\\\""edit\\\"">settings.</a></b></p>\"")\n                 .arg(m_project->displayName())\n                 .arg(p->displayName());\n-    else if (p && !p->isValid())\n+    else\n         text = tr(\""<p>The project <b>%1</b> is not yet configured.</p>\""\n                   \""<p>Qt Creator uses the <b>invalid</b> profile: <b>%2</b> \""\n                   \""to parse the project. You can edit \""\n                   \""these in the <b><a href=\\\""edit\\\"">settings</a></b></p>\"")\n                 .arg(m_project->displayName())\n                 .arg(p->displayName());\n-    else if (!p)\n-        text = tr(\""<p>The project <b>%1</b> is not yet configured.</p>\""\n-                  \""<p>Qt Creator could <b>not</b> find any profile \""\n-                  \""to parse the project. You can edit \""\n-                  \""these in the <b><a href=\\\""edit\\\"">settings</a></b></p>\"")\n-                .arg(m_project->displayName());\n+\n \n     m_targetSetupPage->setNoteText(text);\n }\n""}",bug,"bug
",others;
16397.0,16397.0,bug,Friedemann Kleint,QtDeclarative/Quick: Fix warnings.,"QtDeclarative/Quick: Fix warnings.

Change-Id: I71bd638fcc41356e0b76df27ec76ad3ed5ef90d9","['tests/auto/qtquick2/examples/examples.pro', 'src/quick/util/qdeclarativetransition.cpp', 'src/imports/qtquick2/plugin.cpp', 'src/quick/items/context2d/qquickcanvasitem.cpp', 'src/quick/util/qdeclarativestyledtext.cpp', 'src/declarative/qml/qdeclarativevmemetaobject.cpp', 'src/plugins/accessible/quick/qaccessiblequickview.cpp', 'src/qmltest/quicktest.cpp', 'src/declarative/animations/qparallelanimationgroupjob.cpp']","{""qparallelanimationgroupjob.cpp"": ""@@ -200,7 +200,7 @@ void QParallelAnimationGroupJob::updateDirection(QAbstractAnimationJob::Directio\n \n void QParallelAnimationGroupJob::uncontrolledAnimationFinished(QAbstractAnimationJob *animation)\n {\n-    Q_ASSERT(animation && animation->duration() == -1 || animation->loopCount() < 0);\n+    Q_ASSERT(animation && (animation->duration() == -1 || animation->loopCount() < 0));\n     int uncontrolledRunningCount = 0;\n \n     for (QAbstractAnimationJob *child = firstChild(); child; child = child->nextSibling()) {\n"", ""qdeclarativevmemetaobject.cpp"": ""@@ -736,7 +736,8 @@ int QDeclarativeVMEMetaObject::metaCall(QMetaObject::Call c, int _id, void **a)\n                     // are not rewritten correctly but this bug is deemed out-of-scope to fix for\n                     // performance reasons; see QTBUG-24064) and thus compilation will have failed.\n                     QDeclarativeError e;\n-                    e.setDescription(QString(QLatin1String(\""Exception occurred during compilation of function: %1\"")).arg(QMetaObject::method(_id).signature()));\n+                    e.setDescription(QString(QLatin1String(\""Exception occurred during compilation of function: %1\"")).\n+                                     arg(QLatin1String(QMetaObject::method(_id).signature())));\n                     ep->warning(e);\n                     return -1; // The dynamic method with that id is not available.\n                 }\n"", ""plugin.cpp"": ""@@ -53,6 +53,7 @@ public:\n     virtual void registerTypes(const char *uri)\n     {\n         Q_ASSERT(QLatin1String(uri) == QLatin1String(\""QtQuick\""));\n+        Q_UNUSED(uri);\n         QDeclarativeQtQuick2Module::defineModule();\n     }\n };\n"", ""qaccessiblequickview.cpp"": ""@@ -105,6 +105,8 @@ QString QAccessibleQuickView::text(QAccessible::Text text) const\n     if (text == QAccessible::DebugDescription) {\n         return QString::fromAscii(object()->metaObject()->className()) ;\n     }\n+#else\n+    Q_UNUSED(text)\n #endif\n     return view()->windowTitle();\n }\n"", ""quicktest.cpp"": ""@@ -181,6 +181,7 @@ template <class View> void handleCompileErrors(const QFileInfo &fi, const View &\n \n int quick_test_main(int argc, char **argv, const char *name, quick_test_viewport_create createViewport, const char *sourceDir)\n {\n+    Q_UNUSED(createViewport);\n     QGuiApplication* app = 0;\n     if (!QCoreApplication::instance()) {\n         app = new QGuiApplication(argc, argv);\n"", ""qquickcanvasitem.cpp"": ""@@ -910,7 +910,7 @@ bool QQuickCanvasItem::createContext(const QString &contextType)\n     Q_D(QQuickCanvasItem);\n \n     if (contextType == QLatin1String(\""2d\"")) {\n-        if (d->contextType.compare(\""2d\"", Qt::CaseInsensitive) != 0)  {\n+        if (d->contextType.compare(QLatin1String(\""2d\""), Qt::CaseInsensitive) != 0)  {\n             d->contextType = QLatin1String(\""2d\"");\n             emit contextTypeChanged(); // XXX: can't be in setContextType()\n         }\n"", ""qdeclarativestyledtext.cpp"": ""@@ -690,9 +690,9 @@ void QDeclarativeStyledTextPrivate::parseImageAttributes(const QChar *&ch, const\n \n     QFontMetricsF fm(layout.font());\n     QString padding(qFloor(imgWidth / fm.width(QChar::Nbsp)), QChar::Nbsp);\n-    textOut += QChar(' ');\n+    textOut += QLatin1Char(' ');\n     textOut += padding;\n-    textOut += QChar(' ');\n+    textOut += QLatin1Char(' ');\n }\n \n QPair<QStringRef,QStringRef> QDeclarativeStyledTextPrivate::parseAttribute(const QChar *&ch, const QString &textIn)\n"", ""qdeclarativetransition.cpp"": ""@@ -206,7 +206,6 @@ QDeclarativeTransition::QDeclarativeTransition(QObject *parent)\n \n QDeclarativeTransition::~QDeclarativeTransition()\n {\n-    Q_D(QDeclarativeTransition);\n }\n \n void QDeclarativeTransition::setReversed(bool r)\n"", ""examples.pro"": ""@@ -7,4 +7,4 @@ DEFINES += SRCDIR=\\\\\\\""$$PWD\\\\\\\""\n \n CONFIG += parallel_test\n #temporary\n-QT += core-private gui-private declarative-private quick-private qtquick1-private widgets-private v8-private testlib\n+QT += core-private gui-private declarative-private quick-private widgets-private v8-private testlib\n""}",bug,"bug
",bug;
20700.0,20700.0,feature,Denis Shienkov,"SerialPortInfo, MacOSX added support get VID/PID","SerialPortInfo, MacOSX added support get VID/PID

Change-Id: I3c9f9e5a9fa4b14c955a65574e16ddb8d818852a",['src/serialportinfo_mac.cpp'],"{""serialportinfo_mac.cpp"": ""@@ -28,7 +28,7 @@ QT_BEGIN_NAMESPACE_SERIALPORT\n /* Public methods */\n \n //\n-enum { MATCHING_PROPERTIES_COUNT = 4 };\n+enum { MATCHING_PROPERTIES_COUNT = 6 };\n \n QList<SerialPortInfo> SerialPortInfo::availablePorts()\n {\n@@ -37,28 +37,30 @@ QList<SerialPortInfo> SerialPortInfo::availablePorts()\n     int matchingPropertiesCounter = 0;\n \n \n-    CFMutableDictionaryRef matching = IOServiceMatching(kIOSerialBSDServiceValue);\n+    ::CFMutableDictionaryRef matching = ::IOServiceMatching(kIOSerialBSDServiceValue);\n \n-    CFDictionaryAddValue(matching,\n-                         CFSTR(kIOSerialBSDTypeKey),\n-                         CFSTR(kIOSerialBSDAllTypes));\n+    ::CFDictionaryAddValue(matching,\n+                           CFSTR(kIOSerialBSDTypeKey),\n+                           CFSTR(kIOSerialBSDAllTypes));\n \n     io_iterator_t iter = 0;\n-    kern_return_t kr = IOServiceGetMatchingServices(kIOMasterPortDefault,\n-                                                    matching,\n-                                                    &iter);\n+    kern_return_t kr = ::IOServiceGetMatchingServices(kIOMasterPortDefault,\n+                                                      matching,\n+                                                      &iter);\n \n     if (kr != kIOReturnSuccess)\n         return ports;\n \n     io_registry_entry_t service;\n \n-    while ((service = IOIteratorNext(iter))) {\n+    while ((service = ::IOIteratorNext(iter))) {\n \n-        CFTypeRef device = 0;\n-        CFTypeRef portName = 0;\n-        CFTypeRef description = 0;\n-        CFTypeRef manufacturer = 0;\n+        ::CFTypeRef device = 0;\n+        ::CFTypeRef portName = 0;\n+        ::CFTypeRef description = 0;\n+        ::CFTypeRef manufacturer = 0;\n+        ::CFTypeRef vid = 0;\n+        ::CFTypeRef pid = 0;\n \n         io_registry_entry_t entry = service;\n \n@@ -67,65 +69,89 @@ QList<SerialPortInfo> SerialPortInfo::availablePorts()\n \n             if (!device) {\n                 device =\n-                        IORegistryEntrySearchCFProperty(entry,\n-                                                        kIOServicePlane,\n-                                                        CFSTR(kIOCalloutDeviceKey),\n-                                                        kCFAllocatorDefault,\n-                                                        0);\n+                        ::IORegistryEntrySearchCFProperty(entry,\n+                                                          kIOServicePlane,\n+                                                          CFSTR(kIOCalloutDeviceKey),\n+                                                          kCFAllocatorDefault,\n+                                                          0);\n                 if (device)\n                     ++matchingPropertiesCounter;\n             }\n \n             if (!portName) {\n                 portName =\n-                        IORegistryEntrySearchCFProperty(entry,\n-                                                        kIOServicePlane,\n-                                                        CFSTR(kIOTTYDeviceKey),\n-                                                        kCFAllocatorDefault,\n-                                                        0);\n+                        ::IORegistryEntrySearchCFProperty(entry,\n+                                                          kIOServicePlane,\n+                                                          CFSTR(kIOTTYDeviceKey),\n+                                                          kCFAllocatorDefault,\n+                                                          0);\n                 if (portName)\n                     ++matchingPropertiesCounter;\n             }\n \n             if (!description) {\n                 description =\n-                        IORegistryEntrySearchCFProperty(entry,\n-                                                        kIOServicePlane,\n-                                                        CFSTR(kIOPropertyProductNameKey),\n-                                                        kCFAllocatorDefault,\n-                                                        0);\n+                        ::IORegistryEntrySearchCFProperty(entry,\n+                                                          kIOServicePlane,\n+                                                          CFSTR(kIOPropertyProductNameKey),\n+                                                          kCFAllocatorDefault,\n+                                                          0);\n                 if (!description)\n                     description =\n-                            IORegistryEntrySearchCFProperty(entry,\n-                                                            kIOServicePlane,\n-                                                            CFSTR(kUSBProductString),\n-                                                            kCFAllocatorDefault,\n-                                                            0);\n+                            ::IORegistryEntrySearchCFProperty(entry,\n+                                                              kIOServicePlane,\n+                                                              CFSTR(kUSBProductString),\n+                                                              kCFAllocatorDefault,\n+                                                              0);\n                 if (description)\n                     ++matchingPropertiesCounter;\n             }\n \n             if (!manufacturer) {\n                 manufacturer =\n-                        IORegistryEntrySearchCFProperty(entry,\n-                                                        kIOServicePlane,\n-                                                        CFSTR(kUSBVendorString),\n-                                                        kCFAllocatorDefault,\n-                                                        0);\n+                        ::IORegistryEntrySearchCFProperty(entry,\n+                                                          kIOServicePlane,\n+                                                          CFSTR(kUSBVendorString),\n+                                                          kCFAllocatorDefault,\n+                                                          0);\n                 if (manufacturer)\n                     ++matchingPropertiesCounter;\n \n             }\n \n+            if (!vid) {\n+                vid =\n+                        ::IORegistryEntrySearchCFProperty(entry,\n+                                                          kIOServicePlane,\n+                                                          CFSTR(kUSBVendorID),\n+                                                          kCFAllocatorDefault,\n+                                                          0);\n+                if (vid)\n+                    ++matchingPropertiesCounter;\n+\n+            }\n+\n+            if (!pid) {\n+                pid =\n+                        ::IORegistryEntrySearchCFProperty(entry,\n+                                                          kIOServicePlane,\n+                                                          CFSTR(kUSBProductID),\n+                                                          kCFAllocatorDefault,\n+                                                          0);\n+                if (pid)\n+                    ++matchingPropertiesCounter;\n+\n+            }\n+\n             // If all matching properties is found, then force break loop.\n             if (matchingPropertiesCounter == MATCHING_PROPERTIES_COUNT)\n                 break;\n \n-            kr = IORegistryEntryGetParentEntry(entry, kIOServicePlane, &entry);\n+            kr = ::IORegistryEntryGetParentEntry(entry, kIOServicePlane, &entry);\n \n         } while (kr == kIOReturnSuccess);\n \n-        (void) IOObjectRelease(entry);\n+        (void) ::IOObjectRelease(entry);\n \n         // Convert from MacOSX-specific properties to Qt4-specific.\n         if (matchingPropertiesCounter > 0) {\n@@ -134,56 +160,77 @@ QList<SerialPortInfo> SerialPortInfo::availablePorts()\n             QByteArray buffer(MAXPATHLEN, 0);\n \n             if (device) {\n-                if (CFStringGetCString(CFStringRef(device),\n-                                       buffer.data(),\n-                                       buffer.size(),\n-                                       kCFStringEncodingUTF8)) {\n+                if (::CFStringGetCString(CFStringRef(device),\n+                                         buffer.data(),\n+                                         buffer.size(),\n+                                         kCFStringEncodingUTF8)) {\n \n                     info.d_ptr->device = QString(buffer);\n                 }\n \n-                CFRelease(device);\n+                ::CFRelease(device);\n             }\n \n             if (portName) {\n-                if (CFStringGetCString(CFStringRef(portName),\n-                                       buffer.data(),\n-                                       buffer.size(),\n-                                       kCFStringEncodingUTF8)) {\n+                if (::CFStringGetCString(CFStringRef(portName),\n+                                         buffer.data(),\n+                                         buffer.size(),\n+                                         kCFStringEncodingUTF8)) {\n \n                     info.d_ptr->portName = QString(buffer);\n                 }\n \n-                CFRelease(portName);\n+                ::CFRelease(portName);\n             }\n \n             if (description) {\n-                CFStringGetCString(CFStringRef(description),\n-                                   buffer.data(),\n-                                   buffer.size(),\n-                                   kCFStringEncodingUTF8);\n+                ::CFStringGetCString(CFStringRef(description),\n+                                     buffer.data(),\n+                                     buffer.size(),\n+                                     kCFStringEncodingUTF8);\n \n                 info.d_ptr->description = QString(buffer);\n-                CFRelease(description);\n+                ::CFRelease(description);\n             }\n \n             if (manufacturer) {\n-                CFStringGetCString(CFStringRef(manufacturer),\n-                                   buffer.data(),\n-                                   buffer.size(),\n-                                   kCFStringEncodingUTF8);\n+                ::CFStringGetCString(CFStringRef(manufacturer),\n+                                     buffer.data(),\n+                                     buffer.size(),\n+                                     kCFStringEncodingUTF8);\n \n                 info.d_ptr->manufacturer = QString(buffer);\n-                CFRelease(manufacturer);\n+                ::CFRelease(manufacturer);\n+            }\n+\n+\n+            int value = 0;\n+\n+            if (vid) {\n+                ::CFNumberGetValue(CFNumberRef(vid),\n+                                   kCFNumberIntType,\n+                                   &value);\n+\n+                info.d_ptr->vid = QString::number(value, 16);\n+                ::CFRelease(vid);\n+            }\n+\n+            if (pid) {\n+                ::CFNumberGetValue(CFNumberRef(pid),\n+                                   kCFNumberIntType,\n+                                   &value);\n+\n+                info.d_ptr->pid = QString::number(value, 16);\n+                ::CFRelease(pid);\n             }\n \n             ports.append(info);\n         }\n \n-        (void) IOObjectRelease(service);\n+        (void) ::IOObjectRelease(service);\n     }\n \n-    (void) IOObjectRelease(iter);\n+    (void) ::IOObjectRelease(iter);\n \n     return ports;\n }\n""}",feature,"feature 
",feature;
3849.0,3849.0,feature,Gunnar Sletta,Implement backtrace debug output of leaked textures,"Implement backtrace debug output of leaked textures

Change-Id: I9aeece87aae393eadd32503af5eb7cd1508a732c",['src/declarative/scenegraph/util/qsgtexture.cpp'],"{""qsgtexture.cpp"": ""@@ -45,6 +45,12 @@\n #include <qglfunctions.h>\n #include <private/qsgcontext_p.h>\n #include <qthread.h>\n+#include <private/qdeclarativedebugtrace_p.h>\n+\n+#if !defined(QT_NO_DEBUG) && (defined(Q_OS_LINUX) || defined(Q_OS_MAC))\n+#include <execinfo.h>\n+#include <QHash>\n+#endif\n \n QT_BEGIN_NAMESPACE\n \n@@ -65,36 +71,108 @@ QSGTexturePrivate::QSGTexturePrivate()\n }\n \n #ifndef QT_NO_DEBUG\n-static int qt_texture_count = 0;\n \n-static void qt_print_texture_count()\n+static int qt_debug_texture_count = 0;\n+\n+#if defined(Q_OS_LINUX) || defined (Q_OS_MAC)\n+DEFINE_BOOL_CONFIG_OPTION(qmlDebugLeakBacktrace, QML_DEBUG_LEAK_BACKTRACE)\n+\n+#define BACKTRACE_SIZE 20\n+class SGTextureTraceItem\n {\n-    qDebug(\""Number of leaked textures: %i\"", qt_texture_count);\n-    qt_texture_count = -1;\n-}\n+public:\n+    void *backTrace[BACKTRACE_SIZE];\n+    size_t backTraceSize;\n+};\n+\n+static QHash<QSGTexture*, SGTextureTraceItem*> qt_debug_allocated_textures;\n #endif\n \n+inline static void qt_debug_print_texture_count()\n+{\n+    qDebug(\""Number of leaked textures: %i\"", qt_debug_texture_count);\n+    qt_debug_texture_count = -1;\n \n+#if defined(Q_OS_LINUX) || defined (Q_OS_MAC)\n+    if (qmlDebugLeakBacktrace()) {\n+        while (!qt_debug_allocated_textures.isEmpty()) {\n+            QHash<QSGTexture*, SGTextureTraceItem*>::Iterator it = qt_debug_allocated_textures.begin();\n+            QSGTexture* texture = it.key();\n+            SGTextureTraceItem* item = it.value();\n \n-QSGTexture::QSGTexture()\n-    : QObject(*(new QSGTexturePrivate))\n+            qt_debug_allocated_textures.erase(it);\n+\n+            qDebug() << \""------\"";\n+            qDebug() << \""Leaked\"" << texture << \""backtrace:\"";\n+\n+            char** symbols = backtrace_symbols(item->backTrace, item->backTraceSize);\n+\n+            if (symbols) {\n+                for (int i=0; i<(int) item->backTraceSize; i++)\n+                    qDebug(\""Backtrace <%02d>: %s\"", i, symbols[i]);\n+                free(symbols);\n+            }\n+\n+            qDebug() << \""------\"";\n+\n+            delete item;\n+        }\n+    }\n+#endif\n+}\n+\n+inline static void qt_debug_add_texture(QSGTexture* texture)\n {\n-#ifndef QT_NO_DEBUG\n-    ++qt_texture_count;\n+#if defined(Q_OS_LINUX) || defined (Q_OS_MAC)\n+    if (qmlDebugLeakBacktrace()) {\n+        SGTextureTraceItem* item = new SGTextureTraceItem;\n+        item->backTraceSize = backtrace(item->backTrace, BACKTRACE_SIZE);\n+        qt_debug_allocated_textures.insert(texture, item);\n+    }\n+#endif // Q_OS_LINUX\n+\n+    ++qt_debug_texture_count;\n+\n     static bool atexit_registered = false;\n     if (!atexit_registered) {\n-        atexit(qt_print_texture_count);\n+        atexit(qt_debug_print_texture_count);\n         atexit_registered = true;\n     }\n+}\n+\n+static void qt_debug_remove_texture(QSGTexture* texture)\n+{\n+#if defined(Q_OS_LINUX) || defined (Q_OS_MAC)\n+    if (qmlDebugLeakBacktrace()) {\n+        SGTextureTraceItem* item = qt_debug_allocated_textures.value(texture, 0);\n+        if (item) {\n+            qt_debug_allocated_textures.remove(texture);\n+            delete item;\n+        }\n+    }\n+#endif\n+\n+    --qt_debug_texture_count;\n+\n+    if (qt_debug_texture_count < 0)\n+        qDebug(\""Material destroyed after qt_debug_print_texture_count() was called.\"");\n+}\n+\n+#endif // QT_NO_DEBUG\n+\n+\n+QSGTexture::QSGTexture()\n+    : QObject(*(new QSGTexturePrivate))\n+{\n+#ifndef QT_NO_DEBUG\n+    qt_debug_add_texture(this);\n #endif\n }\n \n QSGTexture::~QSGTexture()\n {\n #ifndef QT_NO_DEBUG\n-    --qt_texture_count;\n-    if (qt_texture_count < 0)\n-        qDebug(\""Material destroyed after qt_print_texture_count() was called.\"");\n+    qt_debug_remove_texture(this);\n #endif\n }\n \n""}",feature,"bug, feature 
",bug;feature;
4604.0,4604.0,"bug,refactor",Oswald Buddenhagen,Removed the unnecessary dependency of the QtHelp module on the QtXml one,"Removed the unnecessary dependency of the QtHelp module on the QtXml one

Merge-request: 2669
Reviewed-by: Oswald Buddenhagen <oswald.buddenhagen@nokia.com>

(cherry picked from commit 02f55668dada4a23ab84e4d3bda1df8a4984b3ae)

Conflicts:
	mkspecs/features/help.prf
	tools/assistant/lib/lib.pro

Change-Id: Ic102dccd79106f6b21aa702efdb2add31fefd72a",['src/assistant/lib/lib.pro'],"{""lib.pro"": ""@@ -3,7 +3,6 @@ MODULE = help\n load(qt_module)\n \n QT += sql \\\n-    xml \\\n     network \\\n     core-private\n TEMPLATE = lib\n""}","bug,refactor","refactor, deprecate 
",deprecat;resource;
25404.0,25404.0,bug; resource,Denis Dzyubenko (old account),Fixed some of the qdoc warnings,"Fixed some of the qdoc warnings

The documentation for error codes in the c++ api will be improved later in a
separate patch.

Change-Id: I2160410a6c1223119f318430b8630522fc36ae75","['src/client/qjsondbconnection.cpp', 'src/imports/jsondb/jsondbpartition.cpp', 'src/client/qjsondbwriterequest.cpp', 'src/imports/jsondb/jsondatabase.cpp', 'src/imports/jsondb/jsondblistmodel.cpp', 'src/client/qjsondbrequest.cpp', 'src/client/qjsondbwatcher.cpp', 'src/imports/jsondb/jsondbsortinglistmodel.cpp', 'src/client/qjsondbreadrequest.cpp']","{""qjsondbconnection.cpp"": ""@@ -149,6 +149,7 @@ Q_GLOBAL_STATIC(QThreadStorage<QJsonDbConnection *>, _q_defaultConnection);\n \n     \\value Unconnected Not connected.\n     \\value Connecting Connection to the database is being established.\n+    \\value Authenticating Authentication is in process.\n     \\value Connected Connection established.\n */\n \n"", ""qjsondbreadrequest.cpp"": ""@@ -76,10 +76,14 @@ QT_BEGIN_NAMESPACE_JSONDB\n     be emitted by the error() signal.\n \n     \\value NoError\n+    \\value InvalidRequest\n+    \\value OperationNotPermitted\n+    \\value InvalidPartition Invalid partition.\n+    \\value DatabaseConnectionError\n+    \\value PartitionUnavailable\n     \\value MissingQuery Missing query field.\n-    \\value MissingType Missing _type field.\n+    \\value InvalidMessage\n     \\value InvalidLimit Invalid limit field\n-    \\value InvalidPartition Invalid partition.\n \n     \\sa error(), QJsonDbRequest::ErrorCode\n */\n"", ""qjsondbrequest.cpp"": ""@@ -62,11 +62,29 @@ QT_BEGIN_NAMESPACE_JSONDB\n     documentation - e.g. QJsonDbReadRequest::ErrorCode.\n \n     \\value NoError\n+\n+    \\value InvalidRequest\n+    \\value OperationNotPermitted\n+    \\value InvalidPartition Invalid partition.\n+    \\value DatabaseConnectionError\n+    \\value PartitionUnavailable\n     \\value MissingQuery Missing query field.\n+    \\value InvalidMessage\n     \\value InvalidLimit Invalid limit field\n-    \\value InvalidPartition Invalid partition.\n+    \\value InvalidOffset\n+    \\value InvalidStateNumber\n     \\value MissingObject Invalid or missing \""object\"" field.\n+    \\value DatabaseError\n+    \\value MissingUUID\n     \\value MissingType Missing _type field\n+    \\value UpdatingStaleVersion\n+    \\value FailedSchemaValidation\n+    \\value InvalidMap\n+    \\value InvalidReduce\n+    \\value InvalidSchemaOperation\n+    \\value InvalidIndexOperation\n+    \\value InvalidType\n+\n */\n /*!\n     \\enum QJsonDbRequest::Status\n@@ -240,7 +258,7 @@ bool QJsonDbRequest::isActive() const\n     \\sa finished(), statusChanged()\n */\n /*!\n-    \\fn void QJsonDbRequest::statusChanged(QtJsonDb::QJsonDbRequest::Status newStatus);\n+    \\fn void QJsonDbRequest::statusChanged(QtJsonDb::QJsonDbRequest::Status newStatus)\n     This signal is emitted when state of the request changed to \\a newStatus.\n     \\sa status, finished(), error()\n */\n"", ""qjsondbwatcher.cpp"": ""@@ -240,10 +240,12 @@ QJsonDbWatcherPrivate::QJsonDbWatcherPrivate(QJsonDbWatcher *q)\n     This enum describes possible errors that can happen when activating the watcher.\n \n     \\value NoError\n-    \\value InvalidActions the set of actions that was given is incorrect.\n-    \\value InvalidQuery the given query is incorrect.\n+    \\value InvalidRequest\n+    \\value OperationNotPermitted\n     \\value InvalidPartition the given partition is incorrect.\n-    \\value InvalidStateNumber the given initialStateNumber is incorrect.\n+    \\value DatabaseConnectionError\n+    \\value MissingQuery\n+    \\value InvalidStateNumber\n */\n \n /*!\n"", ""qjsondbwriterequest.cpp"": ""@@ -88,10 +88,26 @@ QT_BEGIN_NAMESPACE_JSONDB\n     be emitted by the error() signal.\n \n     \\value NoError\n+\n+\n+    \\value InvalidRequest\n+    \\value OperationNotPermitted\n+    \\value InvalidPartition\n+    \\value DatabaseConnectionError\n+    \\value PartitionUnavailable\n     \\value MissingObject Missing object field.\n+    \\value DatabaseError\n+    \\value MissingUUID\n+    \\value MissingType\n     \\value UpdatingStaleVersion The value of _version supplied to this write request\n-    does not match the current value of _version stored for this object in the\n-    database.\n+        does not match the current value of _version stored for this object in the\n+        database.\n+    \\value FailedSchemaValidation\n+    \\value InvalidMap\n+    \\value InvalidReduce\n+    \\value InvalidSchemaOperation\n+    \\value InvalidIndexOperation\n+    \\value InvalidType\n \n     \\sa error(), QJsonDbRequest::ErrorCode\n */\n"", ""jsondatabase.cpp"": ""@@ -65,12 +65,15 @@ JsonDatabase::JsonDatabase(QObject *parent)\n {\n }\n \n+/*!\n+    \\internal\n+ */\n JsonDatabase::~JsonDatabase()\n {\n }\n \n /*!\n-    \\qmlmethod object QtJsonDb::JsonDatabase::partition(partitionName, parentItem)\n+    \\qmlmethod object QtJsonDb::JsonDatabase::partition(partitionName)\n \n     Retrieve the Partition object for the specifed \\a partitionName. The script engine\n     decides the life time of the returned object. The returned object can be saved\n@@ -81,8 +84,6 @@ JsonDatabase::~JsonDatabase()\n     var nokiaDb = JsonDb.partition(\""com.nokia\"")\n     \\endcode\n */\n-\n-\n JsonDbPartition* JsonDatabase::partition(const QString &partitionName)\n {\n     JsonDbPartition* newPartition = new JsonDbPartition(partitionName);\n"", ""jsondblistmodel.cpp"": ""@@ -1316,8 +1316,8 @@ QVariant JsonDbListModel::get(int idx, const QString &property) const\n \n     This property holds the current error information for the object. It contains:\n     \\list\n-    \\o error.code -  code for the current error.\n-    \\o error.message - detailed explanation of the error\n+    \\li error.code -  code for the current error.\n+    \\li error.message - detailed explanation of the error\n     \\endlist\n */\n \n"", ""jsondbpartition.cpp"": ""@@ -267,13 +267,11 @@ int JsonDbPartition::create(const QJSValue &object,  const QJSValue &options, co\n */\n /*!\n     \\qmlmethod int QtJsonDb::Partition::update(object updatedObject, function callback)\n-    \\overload QtJsonDbPartition::update(object,object,function)\n \n     Update the object without specifying the update options.\n */\n /*!\n     \\qmlmethod int QtJsonDb::Partition::update(object updatedObject)\n-    \\overload QtJsonDbPartition::update(object,object,function)\n \n     Update the object without specifying the update options or callback function.\n */\n@@ -367,14 +365,12 @@ int JsonDbPartition::update(const QJSValue &object,  const QJSValue &options, co\n */\n /*!\n     \\qmlmethod int QtJsonDb::Partition::remove(object updatedObject, function callback)\n-    \\overload QtJsonDbPartition::remove(object,object,function)\n \n     Remove the object without specifying the update options.\n */\n \n /*!\n     \\qmlmethod int QtJsonDb::Partition::remove(object updatedObject)\n-    \\overload QtJsonDbPartition::remove(object,object,function)\n \n     Remove the object without specifying the update options or callback function.\n */\n"", ""jsondbsortinglistmodel.cpp"": ""@@ -1114,8 +1114,8 @@ JsonDbPartition* JsonDbSortingListModel::getPartition(int index) const\n \n     This property holds the current error information for the object. It contains:\n     \\list\n-    \\o error.code -  code for the current error.\n-    \\o error.message - detailed explanation of the error\n+    \\li error.code -  code for the current error.\n+    \\li error.message - detailed explanation of the error\n     \\endlist\n */\n \n""}",bug; resource,"bug 
",bug;
7798.0,7798.0,bug,hjk,debugger: don't store empty watched expressions,"debugger: don't store empty watched expressions

Change-Id: I3aa6ae756557c86caed7860bd0ffb26dced35bdc",['src/plugins/debugger/watchhandler.cpp'],"{""watchhandler.cpp"": ""@@ -1223,6 +1223,7 @@ void WatchHandler::endCycle()\n void WatchHandler::cleanup()\n {\n     m_expandedINames.clear();\n+    m_watcherNames.remove(QByteArray());\n     m_return->reinitialize();\n     m_locals->reinitialize();\n     m_tooltips->reinitialize();\n""}",bug,"bug 
",bug;
2439.0,2439.0,test,Jędrzej Nowacki,Enable globalObjectProperties_enumerate test.,"Enable globalObjectProperties_enumerate test.

The test can be enabled because QJSValueIterator is back.

Change-Id: I81220ea17470663dab799eb818168480d2df1a54",['tests/auto/declarative/qjsengine/tst_qjsengine.cpp'],"{""tst_qjsengine.cpp"": ""@@ -43,6 +43,7 @@\n #include <QtTest/QtTest>\n \n #include <qjsengine.h>\n+#include <qjsvalueiterator.h>\n #include <qgraphicsitem.h>\n #include <qstandarditemmodel.h>\n #include <QtCore/qnumeric.h>\n@@ -138,9 +139,7 @@ private slots:\n #endif\n     void globalObjectProperties();\n     void globalObjectEquals();\n-#if 0 // ###FIXME: No QScriptValueIterator API\n     void globalObjectProperties_enumerate();\n-#endif\n     void createGlobalObjectProperty();\n     void globalObjectGetterSetterProperty();\n #if 0 // ###FIXME: No support for setting the global object\n@@ -1560,11 +1559,10 @@ void tst_QJSEngine::globalObjectEquals()\n     QVERIFY(o.equals(eng.globalObject()));\n }\n \n-#if 0 // ###FIXME: No QScriptValueIterator API\n void tst_QJSEngine::globalObjectProperties_enumerate()\n {\n-    QScriptEngine eng;\n-    QScriptValue global = eng.globalObject();\n+    QJSEngine eng;\n+    QJSValue global = eng.globalObject();\n \n     QSet<QString> expectedNames;\n     expectedNames\n@@ -1598,10 +1596,6 @@ void tst_QJSEngine::globalObjectProperties_enumerate()\n         << \""unescape\""\n         << \""SyntaxError\""\n         << \""undefined\""\n-        // non-standard\n-        << \""gc\""\n-        << \""version\""\n-        << \""print\""\n         // JavaScriptCore\n         << \""JSON\""\n         // V8\n@@ -1609,7 +1603,7 @@ void tst_QJSEngine::globalObjectProperties_enumerate()\n         ;\n     QSet<QString> actualNames;\n     {\n-        QScriptValueIterator it(global);\n+        QJSValueIterator it(global);\n         while (it.hasNext()) {\n             it.next();\n             actualNames.insert(it.name());\n@@ -1627,7 +1621,6 @@ void tst_QJSEngine::globalObjectProperties_enumerate()\n     }\n     QVERIFY(remainingNames.isEmpty());\n }\n-#endif\n \n void tst_QJSEngine::createGlobalObjectProperty()\n {\n""}",test,"test 
",test;
17897.0,17897.0,test,[BB] Sergio Ahumada,QtScript: set win32-msvc2010 Windows 7 tests to significant,"QtScript: set win32-msvc2010 Windows 7 tests to significant

These are passing, make sure they stay that way.

Change-Id: Ic27e53f79cebe7d4314398ca050c01c5829a25aa",['projects/QtScript_master_Integration/stages/win32-msvc2010_Windows_7/properties/qt.tests.insignificant'],"{""qt.tests.insignificant"": ""@@ -1 +0,0 @@\n-1\n""}",test,"test 
",resource;test;
17220.0,17220.0,refactor,Xizhi Zhu,profileType --> currentProfileType.,"profileType --> currentProfileType.

Change-Id: I1d86c9d2adce1d981476429b1eca0db3747c7c7c","['src/imports/systeminfo/qsysteminfo.cpp', 'src/systeminfo/qdeviceprofile_linux_p.h', 'src/systeminfo/qdeviceprofile.cpp', 'src/systeminfo/qdeviceprofile_linux.cpp', 'src/systeminfo/qdeviceprofile.h']","{""qsysteminfo.cpp"": ""@@ -124,7 +124,7 @@ Q_EXPORT_PLUGIN2(qsysteminfodeclarativemodule, QT_PREPEND_NAMESPACE(QSystemInfoD\n  */\n \n /*!\n-    \\qmlproperty enum DeviceProfile::profileType\n+    \\qmlproperty enum DeviceProfile::currentProfileType\n \n     Returns the type of the current profile, possible types are:\n     \\list\n"", ""qdeviceprofile.cpp"": ""@@ -128,14 +128,14 @@ int QDeviceProfile::voiceRingtoneVolume() const\n }\n \n /*!\n-    \\property QDeviceProfile::profileType\n+    \\property QDeviceProfile::currentProfileType\n     \\brief The current activated profile.\n \n     Returns the type for this profile.\n */\n-QDeviceProfile::ProfileType QDeviceProfile::profileType() const\n+QDeviceProfile::ProfileType QDeviceProfile::currentProfileType() const\n {\n-    return d_ptr->profileType();\n+    return d_ptr->currentProfileType();\n }\n \n QT_END_NAMESPACE\n"", ""qdeviceprofile.h"": ""@@ -55,7 +55,7 @@ class Q_SYSTEMINFO_EXPORT QDeviceProfile : public QObject\n     Q_OBJECT\n \n     Q_ENUMS(ProfileType)\n-    Q_PROPERTY(ProfileType profileType READ profileType NOTIFY profileTypeChanged)\n+    Q_PROPERTY(ProfileType currentProfileType READ currentProfileType NOTIFY currentProfileTypeChanged)\n \n public:\n     enum ProfileType {\n@@ -72,10 +72,10 @@ public:\n     Q_INVOKABLE bool isVibrationActivated() const;\n     Q_INVOKABLE int messageRingtoneVolume() const;\n     Q_INVOKABLE int voiceRingtoneVolume() const;\n-    ProfileType profileType() const;\n+    ProfileType currentProfileType() const;\n \n Q_SIGNALS:\n-    void profileTypeChanged(ProfileType profile);\n+    void currentProfileTypeChanged(ProfileType profile);\n \n private:\n     Q_DISABLE_COPY(QDeviceProfile)\n"", ""qdeviceprofile_linux.cpp"": ""@@ -96,7 +96,7 @@ int QDeviceProfilePrivate::voiceRingtoneVolume()\n     return -1;\n }\n \n-QDeviceProfile::ProfileType QDeviceProfilePrivate::profileType()\n+QDeviceProfile::ProfileType QDeviceProfilePrivate::currentProfileType()\n {\n #if !defined(QT_NO_JSONDB)\n     if (!jsondbWrapper)\n"", ""qdeviceprofile_linux_p.h"": ""@@ -70,7 +70,7 @@ public:\n     bool isVibrationActivated();\n     int messageRingtoneVolume();\n     int voiceRingtoneVolume();\n-    QDeviceProfile::ProfileType profileType();\n+    QDeviceProfile::ProfileType currentProfileType();\n \n private:\n     QDeviceProfile * const q_ptr;\n""}",refactor,"refactor 
",others;
2671.0,2671.0,bug,Jarek Kobus,Apply code style settings to templates,"Apply code style settings to templates

Task-number: QTCREATORBUG-169

Change-Id: I380c956d3256c186ff9497463ab845228017ff87","['src/plugins/texteditor/texteditorsettings.h', 'src/plugins/texteditor/icodestylepreferencesfactory.h', 'src/plugins/qmljstools/qmljstoolsplugin.cpp', 'src/plugins/cpptools/cppcodestylesettingsfactory.cpp', 'src/plugins/qmljstools/qmljscodestylesettingsfactory.cpp', 'src/plugins/qmljstools/qmljscodestylesettingsfactory.h', 'src/plugins/projectexplorer/projectfilewizardextension.h', 'src/plugins/projectexplorer/projectfilewizardextension.cpp', 'src/plugins/cpptools/cppcodestylesettingsfactory.h', 'src/plugins/coreplugin/basefilewizard.cpp', 'src/plugins/cpptools/cpptoolsplugin.cpp', 'src/plugins/texteditor/texteditorsettings.cpp', 'src/plugins/coreplugin/ifilewizardextension.h']","{""basefilewizard.cpp"": ""@@ -599,6 +599,13 @@ void BaseFileWizard::runWizard(const QString &path, QWidget *parent)\n     case OverwriteOk:\n         break;\n     }\n+\n+    foreach (IFileWizardExtension *ex, extensions) {\n+        for (int i = 0; i < files.count(); i++) {\n+            ex->applyCodeStyle(&files[i]);\n+        }\n+    }\n+\n     // Write\n     if (!writeFiles(files, &errorMessage)) {\n         QMessageBox::critical(parent, tr(\""File Generation Failure\""), errorMessage);\n"", ""ifilewizardextension.h"": ""@@ -63,6 +63,7 @@ public:\n     virtual bool process(const QList<GeneratedFile> &files,\n                          bool *removeOpenProjectAttribute,\n                          QString *errorMessage) = 0;\n+    virtual void applyCodeStyle(GeneratedFile *file) const = 0;\n \n public slots:\n     /* Notification about the first extension page being shown. */\n"", ""cppcodestylesettingsfactory.cpp"": ""@@ -35,6 +35,7 @@\n #include \""cppcodestylesettingspage.h\""\n #include \""cppcodestylepreferences.h\""\n #include \""cpptoolsconstants.h\""\n+#include \""cppqtstyleindenter.h\""\n #include <texteditor/tabpreferences.h>\n #include <texteditor/tabsettings.h>\n #include <QtGui/QLayout>\n@@ -74,3 +75,8 @@ QWidget *CppCodeStylePreferencesFactory::createEditor(TextEditor::IFallbackPrefe\n     return widget;\n }\n \n+TextEditor::Indenter *CppCodeStylePreferencesFactory::createIndenter() const\n+{\n+    return new CppQtStyleIndenter();\n+}\n+\n"", ""cppcodestylesettingsfactory.h"": ""@@ -48,6 +48,7 @@ public:\n     virtual QWidget *createEditor(TextEditor::IFallbackPreferences *settings,\n                                           TextEditor::TabPreferences *tabSettings,\n                                           QWidget *parent) const;\n+    virtual TextEditor::Indenter *createIndenter() const;\n \n };\n \n"", ""cpptoolsplugin.cpp"": ""@@ -154,6 +154,12 @@ bool CppToolsPlugin::initialize(const QStringList &arguments, QString *error)\n     mcpptools->addAction(command);\n     connect(switchAction, SIGNAL(triggered()), this, SLOT(switchHeaderSource()));\n \n+    TextEditor::TextEditorSettings *ts = TextEditor::TextEditorSettings::instance();\n+    ts->registerMimeTypeForLanguageId(QLatin1String(Constants::C_SOURCE_MIMETYPE), Constants::CPP_SETTINGS_ID);\n+    ts->registerMimeTypeForLanguageId(QLatin1String(Constants::C_HEADER_MIMETYPE), Constants::CPP_SETTINGS_ID);\n+    ts->registerMimeTypeForLanguageId(QLatin1String(Constants::CPP_SOURCE_MIMETYPE), Constants::CPP_SETTINGS_ID);\n+    ts->registerMimeTypeForLanguageId(QLatin1String(Constants::CPP_HEADER_MIMETYPE), Constants::CPP_SETTINGS_ID);\n+\n     return true;\n }\n \n"", ""projectfilewizardextension.cpp"": ""@@ -45,7 +45,16 @@\n #include <coreplugin/icore.h>\n #include <coreplugin/iversioncontrol.h>\n #include <coreplugin/vcsmanager.h>\n+#include <coreplugin/mimedatabase.h>\n #include <extensionsystem/pluginmanager.h>\n+#include <texteditor/texteditorsettings.h>\n+#include <texteditor/indenter.h>\n+#include <texteditor/codestylepreferencesmanager.h>\n+#include <texteditor/icodestylepreferencesfactory.h>\n+#include <texteditor/normalindenter.h>\n+#include <texteditor/tabpreferences.h>\n+#include <projectexplorer/project.h>\n+#include <projectexplorer/editorconfiguration.h>\n \n #include <QtCore/QVariant>\n #include <QtCore/QtAlgorithms>\n@@ -53,6 +62,8 @@\n #include <QtCore/QFileInfo>\n #include <QtCore/QMultiMap>\n #include <QtCore/QDir>\n+#include <QtGui/QTextDocument>\n+#include <QtGui/QTextCursor>\n \n /*!\n     \\class ProjectExplorer::Internal::ProjectFileWizardExtension\n@@ -487,5 +498,69 @@ bool ProjectFileWizardExtension::processVersionControl(const QList<Core::Generat\n     return true;\n }\n \n+static TextEditor::TabPreferences *tabPreferences(ProjectExplorer::Project *project, const QString &languageId)\n+{\n+    if (!languageId.isEmpty()) {\n+        if (project)\n+            return project->editorConfiguration()->tabPreferences(languageId);\n+        return TextEditor::TextEditorSettings::instance()->tabPreferences(languageId);\n+    } else if (project) {\n+        return project->editorConfiguration()->tabPreferences();\n+    }\n+    return TextEditor::TextEditorSettings::instance()->tabPreferences();\n+}\n+\n+static TextEditor::IFallbackPreferences *codeStylePreferences(ProjectExplorer::Project *project, const QString &languageId)\n+{\n+    if (languageId.isEmpty())\n+        return 0;\n+\n+    if (project)\n+        return project->editorConfiguration()->codeStylePreferences(languageId);\n+\n+    return TextEditor::TextEditorSettings::instance()->codeStylePreferences(languageId);\n+}\n+\n+void ProjectFileWizardExtension::applyCodeStyle(Core::GeneratedFile *file) const\n+{\n+    if (file->isBinary() || file->contents().isEmpty())\n+        return; // nothing to do\n+\n+    const Core::MimeDatabase *mdb = Core::ICore::instance()->mimeDatabase();\n+    Core::MimeType mt = mdb->findByFile(QFileInfo(file->path()));\n+    const QString languageId = TextEditor::TextEditorSettings::instance()->languageId(mt.type());\n+\n+    if (languageId.isEmpty())\n+        return; // don't modify files like *.ui *.pro\n+\n+    ProjectNode *project = 0;\n+    const int projectIndex = m_context->page->currentProjectIndex() - 1;\n+    if (projectIndex >= 0 && projectIndex < m_context->projects.size())\n+        project = m_context->projects.at(projectIndex).node;\n+\n+    ProjectExplorer::Project *baseProject\n+            = ProjectExplorer::ProjectExplorerPlugin::instance()->session()->projectForNode(project);\n+\n+    TextEditor::ICodeStylePreferencesFactory *factory\n+            = TextEditor::CodeStylePreferencesManager::instance()->factory(languageId);\n+\n+    TextEditor::Indenter *indenter = 0;\n+    if (factory)\n+        indenter = factory->createIndenter();\n+    if (!indenter)\n+        indenter = new TextEditor::NormalIndenter();\n+\n+    TextEditor::TabPreferences *tabPrefs = tabPreferences(baseProject, languageId);\n+    TextEditor::IFallbackPreferences *codeStylePrefs = codeStylePreferences(baseProject, languageId);\n+    indenter->setCodeStylePreferences(codeStylePrefs);\n+\n+    QTextDocument doc(file->contents());\n+    QTextCursor cursor(&doc);\n+    cursor.select(QTextCursor::Document);\n+    indenter->indent(&doc, cursor, QChar::Null, tabPrefs->currentSettings());\n+    file->setContents(doc.toPlainText());\n+    delete indenter;\n+}\n+\n } // namespace Internal\n } // namespace ProjectExplorer\n"", ""projectfilewizardextension.h"": ""@@ -51,6 +51,7 @@ public:\n     QList<QWizardPage *> extensionPages(const Core::IWizard *wizard);\n     bool process(const QList<Core::GeneratedFile> &files,\n                  bool *removeOpenProjectAttribute, QString *errorMessage);\n+    void applyCodeStyle(Core::GeneratedFile *file) const;\n \n public slots:\n     void firstExtensionPageShown(const QList<Core::GeneratedFile> &files);\n"", ""qmljscodestylesettingsfactory.cpp"": ""@@ -33,6 +33,7 @@\n #include \""qmljscodestylesettingsfactory.h\""\n #include \""qmljscodestylesettingspage.h\""\n #include \""qmljstoolsconstants.h\""\n+#include \""qmljsindenter.h\""\n #include <texteditor/tabpreferences.h>\n #include <texteditor/tabsettings.h>\n #include <QtGui/QLayout>\n@@ -72,3 +73,8 @@ QWidget *QmlJSCodeStylePreferencesFactory::createEditor(TextEditor::IFallbackPre\n     return widget;\n }\n \n+TextEditor::Indenter *QmlJSCodeStylePreferencesFactory::createIndenter() const\n+{\n+    return new QmlJSEditor::Internal::Indenter();\n+}\n+\n"", ""qmljscodestylesettingsfactory.h"": ""@@ -48,6 +48,7 @@ public:\n     virtual QWidget *createEditor(TextEditor::IFallbackPreferences *settings,\n                                           TextEditor::TabPreferences *tabSettings,\n                                           QWidget *parent) const;\n+    virtual TextEditor::Indenter *createIndenter() const;\n \n };\n \n"", ""qmljstoolsplugin.cpp"": ""@@ -126,6 +126,10 @@ bool QmlJSToolsPlugin::initialize(const QStringList &arguments, QString *error)\n     connect(core->progressManager(), SIGNAL(allTasksFinished(QString)),\n             this, SLOT(onAllTasksFinished(QString)));\n \n+    TextEditor::TextEditorSettings *ts = TextEditor::TextEditorSettings::instance();\n+    ts->registerMimeTypeForLanguageId(QLatin1String(Constants::QML_MIMETYPE), Constants::QML_JS_SETTINGS_ID);\n+    ts->registerMimeTypeForLanguageId(QLatin1String(Constants::JS_MIMETYPE), Constants::QML_JS_SETTINGS_ID);\n+\n     return true;\n }\n \n"", ""icodestylepreferencesfactory.h"": ""@@ -41,6 +41,7 @@ namespace TextEditor {\n \n class IFallbackPreferences;\n class TabPreferences;\n+class Indenter;\n \n class TEXTEDITOR_EXPORT ICodeStylePreferencesFactory : public QObject\n {\n@@ -52,6 +53,7 @@ public:\n     virtual QString displayName() = 0;\n     virtual IFallbackPreferences *createPreferences(const QList<IFallbackPreferences *> &fallbacks) const = 0;\n     virtual QWidget *createEditor(IFallbackPreferences *preferences, TabPreferences *tabSettings, QWidget *parent) const = 0;\n+    virtual TextEditor::Indenter *createIndenter() const = 0;\n };\n \n } // namespace TextEditor\n"", ""texteditorsettings.cpp"": ""@@ -73,6 +73,8 @@ public:\n     QMap<QString, TabPreferences *> m_languageTabPreferences;\n     QMap<QString, IFallbackPreferences *> m_languageCodeStylePreferences;\n \n+    QMap<QString, QString> m_mimeTypeToLanguage;\n+\n     CompletionSettings m_completionSettings;\n \n     void fontZoomRequested(int pointSize);\n@@ -343,4 +345,14 @@ void TextEditorSettings::registerLanguageCodeStylePreferences(const QString &lan\n     m_d->m_languageCodeStylePreferences.insert(languageId, prefs);\n }\n \n+void TextEditorSettings::registerMimeTypeForLanguageId(const QString &mimeType, const QString &languageId)\n+{\n+    m_d->m_mimeTypeToLanguage.insert(mimeType, languageId);\n+}\n+\n+QString TextEditorSettings::languageId(const QString &mimeType) const\n+{\n+    return m_d->m_mimeTypeToLanguage.value(mimeType);\n+}\n+\n #include \""moc_texteditorsettings.cpp\""\n"", ""texteditorsettings.h"": ""@@ -96,6 +96,9 @@ public:\n     QMap<QString, IFallbackPreferences *> languageCodeStylePreferences() const;\n     void registerLanguageCodeStylePreferences(const QString &languageId, IFallbackPreferences *prefs);\n \n+    void registerMimeTypeForLanguageId(const QString &mimeType, const QString &languageId);\n+    QString languageId(const QString &mimeType) const;\n+\n signals:\n     void fontSettingsChanged(const TextEditor::FontSettings &);\n     void storageSettingsChanged(const TextEditor::StorageSettings &);\n""}",bug,"feature,bug
",bug;refactor;
19388.0,19388.0,bug,Yunqiao Yin (Nokia ID),Return early if animationjob was deleted in all callback methods.,"Return early if animationjob was deleted in all callback methods.

Change-Id: I703c8a8904ffd760683de4ee74544dff9eb53144",['src/qml/animations/qabstractanimationjob.cpp'],"{""qabstractanimationjob.cpp"": ""@@ -499,8 +499,9 @@ void QAbstractAnimationJob::finished()\n     //TODO: update this code so it is valid to delete the animation in animationFinished\n     for (int i = 0; i < changeListeners.count(); ++i) {\n         const QAbstractAnimationJob::ChangeListener &change = changeListeners.at(i);\n-        if (change.types & QAbstractAnimationJob::Completion)\n-            change.listener->animationFinished(this);\n+        if (change.types & QAbstractAnimationJob::Completion) {\n+            RETURN_IF_DELETED(change.listener->animationFinished(this));\n+        }\n     }\n \n     if (m_group && (duration() == -1 || loopCount() < 0)) {\n@@ -513,8 +514,9 @@ void QAbstractAnimationJob::stateChanged(QAbstractAnimationJob::State newState,\n {\n     for (int i = 0; i < changeListeners.count(); ++i) {\n         const QAbstractAnimationJob::ChangeListener &change = changeListeners.at(i);\n-        if (change.types & QAbstractAnimationJob::StateChange)\n-            change.listener->animationStateChanged(this, newState, oldState);\n+        if (change.types & QAbstractAnimationJob::StateChange) {\n+            RETURN_IF_DELETED(change.listener->animationStateChanged(this, newState, oldState));\n+        }\n     }\n }\n \n@@ -523,8 +525,9 @@ void QAbstractAnimationJob::currentLoopChanged(int currentLoop)\n     Q_UNUSED(currentLoop);\n     for (int i = 0; i < changeListeners.count(); ++i) {\n         const QAbstractAnimationJob::ChangeListener &change = changeListeners.at(i);\n-        if (change.types & QAbstractAnimationJob::CurrentLoop)\n-            change.listener->animationCurrentLoopChanged(this);\n+        if (change.types & QAbstractAnimationJob::CurrentLoop) {\n+           RETURN_IF_DELETED(change.listener->animationFinished(this));\n+        }\n     }\n }\n \n""}",bug,"bug 
",deprecat;
16861.0,16861.0,"feature,test",Kent Hansen,Add QMetaMethod::isValid() function,"Add QMetaMethod::isValid() function

This function provides a proper way of determining whether a function
returned by QMetaObject::method() is valid. (Checking whether
signature() returns a 0 pointer, which e.g. testlib does, is not an
ideal API -- especially given that signature() will soon be removed
and replaced by a function that returns a QByteArray.)

Change-Id: I644f476b09904925f2042945f5d0ad744482b682","['src/corelib/kernel/qmetaobject.h', 'src/corelib/kernel/qmetaobject.cpp', 'tests/auto/corelib/kernel/qmetamethod/tst_qmetamethod.cpp']","{""qmetaobject.cpp"": ""@@ -1247,6 +1247,14 @@ bool QMetaObject::invokeMethod(QObject *obj,\n     \\value Scriptable\n */\n \n+/*!\n+    \\fn bool QMetaMethod::isValid() const\n+    \\since 5.0\n+\n+    Returns true if this method is valid (can be introspected and\n+    invoked), otherwise returns false.\n+*/\n+\n /*!\n     \\fn const QMetaObject *QMetaMethod::enclosingMetaObject() const\n     \\internal\n"", ""qmetaobject.h"": ""@@ -134,6 +134,8 @@ public:\n                       val0, val1, val2, val3, val4, val5, val6, val7, val8, val9);\n     }\n \n+    inline bool isValid() const { return mobj != 0; }\n+\n private:\n     const QMetaObject *mobj;\n     uint handle;\n"", ""tst_qmetamethod.cpp"": ""@@ -52,6 +52,8 @@ class tst_QMetaMethod : public QObject\n private slots:\n     void method_data();\n     void method();\n+\n+    void invalidMethod();\n };\n \n struct CustomType { };\n@@ -597,6 +599,7 @@ void tst_QMetaMethod::method()\n     QVERIFY(index != -1);\n     QMetaMethod method = (methodType == QMetaMethod::Constructor)\n                          ? mo->constructor(index) : mo->method(index);\n+    QVERIFY(method.isValid());\n     QCOMPARE(method.methodType(), methodType);\n     QCOMPARE(method.access(), access);\n \n@@ -611,5 +614,17 @@ void tst_QMetaMethod::method()\n     QCOMPARE(method.parameterNames(), parameterNames);\n }\n \n+void tst_QMetaMethod::invalidMethod()\n+{\n+    QMetaMethod method;\n+    QVERIFY(!method.isValid());\n+\n+    QMetaMethod method2 = staticMetaObject.method(staticMetaObject.methodCount());\n+    QVERIFY(!method2.isValid());\n+\n+    QMetaMethod method3 = staticMetaObject.method(-1);\n+    QVERIFY(!method3.isValid());\n+}\n+\n QTEST_MAIN(tst_QMetaMethod)\n #include \""tst_qmetamethod.moc\""\n""}","feature,test","feature, test 
",deprecat;test;
2258.0,2258.0,"bug; test,resource",Sarah Jane Smith,Fix QTBUG-18823.,"Fix QTBUG-18823.

Implemented correctly the clip space algorithm and
fixed a number of minor but fatal problems with the
previous implementation.

Also added useful debug to the camera class, which
helped during debugging.

Made a correction to the frustum doc, which impacted
the testing work, and added a section on the aspect
ratio which had garnered some questions on the list.

In the tests, added some tests that cover the view
frustum being forwards or backwards over the object
being viewed/culled, which was not covered before.

Change-Id: I488441eb89b5b112daa973d13260880ee3286038","['src/threed/viewing/qglcamera.h', 'tests/auto/threed/qglpainter/tst_qglpainter.cpp', 'doc/src/camera-frustum.qdoc', 'src/threed/viewing/qglcamera.cpp', 'src/threed/painting/qglpainter.cpp']","{""camera-frustum.qdoc"": ""@@ -60,13 +60,17 @@\n     \\endlist\n \n     When you first create a QGLCamera object, by default it has\n-    \\list\n-    \\o center: x=0, y=0, z=0\n-    \\o eye: x=0, y=0, z=10\n-    \\o viewportSize: w=2.0 x h=2.0\n-    \\o nearPlane: 5\n-    \\o farPlane: 1000\n-    \\endlist\n+    \\code\n+    QGLCamera camera;\n+    qDebug() camera;\n+    --\n+    // displays:\n+    QGLCamera\n+        projection: Perspective -- viewsize: 2 x 2\n+        near-plane: 5 -- far-plane: 1000 -- field-of-view: 0\n+        rotation: 0  -- motion adjust: QVector3D(0, 0, 1)  -- aspect adjust: true\n+        eye: QVector3D(0, 0, 10) -- center: QVector3D(0, 0, 0) -- up: QVector3D(0, 1, 0)\n+    \\endcode\n \n     In the visualisation just mentioned, with positive Z pointing toward you the\n     camera is sitting at the tip of your middle finger, looking in the same\n@@ -78,7 +82,7 @@\n     \\code\n     camera.setNearPlane(2.2f);\n     camera.setFarPlane(14.0f);\n-    camera.setViewSize(QSizeF(0.62857f, 0.62857f));\n+    camera.setViewSize(QSizeF(1.257f, 1.257f));\n     camera.setEye(QVector3D(0, 0, -8.0f));\n     \\endcode\n \n@@ -92,9 +96,9 @@\n     \\image view-frustum-angle-shot.png\n \n     The odd value for view size comes from the far plane size which was set at\n-    4 x 4 when creating the diagram: (4 / 14) x 2.2 = 0.62587.  There is no\n-    API call for setting the size of the far-plane, same as in OpenGL.  So to\n-    get this 4 x 4 far plane we had to work out the near plane size.\n+    8 x 8 when creating the diagram: by similar triangles (8 / 14) x 2.2 = 1.257.\n+    There is no API call for setting the size of the far-plane, same as in OpenGL.\n+    So to get this 8 x 8 far plane we had to work out the near plane size.\n \n     \\image view-frustum-origin.png\n \n@@ -203,4 +207,34 @@\n     The optimisation technique where you detect this case is called \\bold{View Frustum\n     Culling} and it can a simple and valuable performance enhancement.  Qt3D implements\n     view frustum culling via the QGLPainter::isCullable() function.\n+\n+    \\section1 Aspect-Ratio Correction\n+\n+    The default camera has a viewport which is 2 x 2 in size, as discussed above.  However\n+    when the camera is used to display a scene on a QGLAbstractSurface, for example a\n+    QGLWidgetSurface, the \\bold{aspect ratio} of that surface is taken into account in\n+    the View Frustum.  Specifically code in the QGLCamera::projectionMatrix() function\n+    takes the aspect ratio and expands the default viewport to match.  If the surface is\n+    wider than it is high, the aspect ratio is greater than 1 and the viewport width is\n+    multiplied by the aspect ratio to make it larger.  If the surface is higher than it\n+    is wide, the aspect ratio is less than 1 and the viewport height is divided by the\n+    aspect ratio to make it larger.  The result is the viewport aspect ratio matches that\n+    of the surface it is to be displayed on.\n+\n+    \\code\n+    QGLWidget widget;              // creates a 640 x 480 widget by default\n+    QGLPainter painter(&widget)    // internally makes a 640 x 480 QGLWidgetSurface\n+    qreal asp = painter.currentSurface()->aspectRatio();\n+    // asp == 1.3333 which is (640 / 480)\n+    QGLCamera camera;              // default camera as above\n+    painter.setCamera(&camera);    // applies the aspect ratio to the perspective projection\n+    QMatrix4x4 p = painter.projectionMatrix().top();\n+    QMatrix4x4 q;\n+    q.frustum(-asp, asp, -1, 1, camera.nearPlane(), camera.farPlane());\n+    qDebug() << q == p;                     // prints \""true\""\n+    \\endcode\n+\n+    One result of this is that clipping to the view frustum can only be done with the\n+    knowledge of the surface because more of the scene is visible to the left and right\n+    than would be suggested by the default camera settings.\n */\n"", ""qglpainter.cpp"": ""@@ -805,6 +805,25 @@ bool QGLPainter::isCullable(const QVector3D& point) const\n     return !d->viewingCube.contains(projected);\n }\n \n+static inline uint outcode(const QVector4D &v)\n+{\n+    // For a discussion of outcodes see pg 388 Dunn & Parberry.\n+    // For why you can't just test if the point is in a bounding box\n+    // consider the case where a view frustum with view-size 1.5 x 1.5\n+    // is tested against a 2x2 box which encloses the near-plane, while\n+    // all the points in the box are outside the frustum.\n+    // TODO: optimise this with assembler - according to D&P this can\n+    // be done in one line of assembler on some platforms\n+    uint code = 0;\n+    if (v.x() < -v.w()) code |= 0x01;\n+    if (v.x() > v.w())  code |= 0x02;\n+    if (v.y() < -v.w()) code |= 0x04;\n+    if (v.y() > v.w())  code |= 0x08;\n+    if (v.z() < -v.w()) code |= 0x10;\n+    if (v.z() > v.w())  code |= 0x20;\n+    return code;\n+}\n+\n /*!\n     Returns true if \\a box is completely outside the current viewing volume.\n     This is used to perform object culling checks.\n@@ -813,30 +832,33 @@ bool QGLPainter::isCullable(const QBox3D& box) const\n {\n     Q_D(const QGLPainter);\n     QGLPAINTER_CHECK_PRIVATE();\n-    QBox3D projected = box.transformed(d->modelViewMatrix);\n-    if (projected.minimum().z() >= 0.0f || projected.maximum().z() >= 0.0f) {\n-        // The box crosses the eye line in the view.  Don't do the\n-        // projection or the math will go all strange with a\n-        // perspective projection.  Just assume that it is cullable\n-        // if it passes the eye line, and hence is definitely outside\n-        // the viewing volume.  Note that it is possible that the box is\n-        // half in front of the eye and half behind, which we handle now\n-        // by truncating the box at the eye plane.\n-        //\n-        // If the projection is orthographic, we don't need to do this.\n-        // Orthographic projections have the last row set to (0, 0, 0, 1).\n-        QMatrix4x4 *proj = &(d->projectionMatrix.d_ptr->matrix);\n-        if ((*proj)(3, 0) != 0.0f || (*proj)(3, 1) != 0.0f ||\n-                (*proj)(3, 2) != 0.0f || (*proj)(3, 3) != 1.0f) {\n-            if (projected.minimum().z() >= 0.0f)\n-                return true;\n-            projected.setExtents(projected.minimum(),\n-                                 QVector3D(projected.maximum().x(),\n-                                           projected.maximum().y(), 0.0f));\n-        }\n+    // This function uses the technique of view frustum culling known as\n+    // clip space testing.  Since the normal QVector3D representation\n+    // of the points throws away the w value needed, we convert the box\n+    // into a set of 8 points represented as QVector4D's and then apply\n+    // the test.  The test is to transform the points into clip space\n+    // by applying the MV and Proj matrices, then test to see if the 4D\n+    // points are outside the clip space by testing x, y & z against w.\n+    QArray<QVector4D> box4d;\n+    QVector3D n = box.minimum();\n+    QVector3D x = box.maximum();\n+    box4d.append(QVector4D(n.x(), n.y(), x.z(), 1), QVector4D(x.x(), n.y(), x.z(), 1),\n+                 QVector4D(x.x(), x.y(), x.z(), 1), QVector4D(n.x(), x.y(), x.z(), 1));\n+    box4d.append(QVector4D(n.x(), n.y(), n.z(), 1), QVector4D(x.x(), n.y(), n.z(), 1),\n+                 QVector4D(x.x(), x.y(), n.z(), 1), QVector4D(n.x(), x.y(), n.z(), 1));\n+    QMatrix4x4 mvp = d->projectionMatrix.top() * d->modelViewMatrix.top();\n+    for (int i = 0; i < box4d.size(); ++i)\n+    {\n+        box4d[i] = mvp * box4d.at(i);\n+    }\n+    // if the logical AND of all the outcodes is non-zero then the BB is\n+    // definitely outside the view frustum.\n+    uint out = 0xff;\n+    for (int i = 0; i < box4d.size(); ++i)\n+    {\n+        out = out & outcode(box4d.at(i));\n     }\n-    projected.transform(d->projectionMatrix);\n-    return !d->viewingCube.intersects(projected);\n+    return out;\n }\n \n /*!\n"", ""qglcamera.cpp"": ""@@ -1307,4 +1307,22 @@ void QGLCamera::tiltPanRollEye\n     }\n }\n \n+QDebug operator<<(QDebug dbg, const QGLCamera &cam)\n+{\n+    dbg << \""QGLCamera\"";\n+    if (!cam.objectName().isEmpty())\n+        dbg << cam.objectName();\n+    dbg << \""\\n\"";\n+    dbg << \""   projection:\"" << ( cam.projectionType() == QGLCamera::Perspective ?\n+                                     \""Perspective\"" : \""Orthographic\"" );\n+    dbg << \""-- viewsize:\"" << cam.viewSize().width() << \""x\"" << cam.viewSize().height() << \""\\n\"";\n+    dbg << \""   near-plane:\"" << cam.nearPlane() << \""-- far-plane:\"" << cam.farPlane();\n+    dbg << \""-- field-of-view:\"" << cam.fieldOfView() << \""\\n\"";\n+    dbg << \""   rotation:\"" << cam.screenRotation() << \"" -- motion adjust:\"" <<\n+           cam.motionAdjustment() << \"" -- aspect adjust:\"" << cam.adjustForAspectRatio() << \""\\n\"";\n+    dbg << \""   eye:\"" << cam.eye() << \""-- center:\"" << cam.center();\n+    dbg << \""-- up:\"" << cam.upVector() << \""\\n\"";\n+    return dbg;\n+}\n+\n QT_END_NAMESPACE\n"", ""qglcamera.h"": ""@@ -172,6 +172,11 @@ private:\n     Q_DISABLE_COPY(QGLCamera)\n };\n \n+#ifndef QT_NO_DEBUG_STREAM\n+#include <QtCore/qdebug.h>\n+Q_QT3D_EXPORT QDebug operator<<(QDebug dbg, const QGLCamera &order);\n+#endif\n+\n QT_END_NAMESPACE\n \n QT_END_HEADER\n"", ""tst_qglpainter.cpp"": ""@@ -609,7 +609,7 @@ void tst_QGLPainter::basicCullable()\n     QVERIFY(painter.isCullable(box8));\n }\n \n-static void setupTestCamera(QGLCamera &camera)\n+static void setupTestCamera(QGLCamera &camera, float distance)\n {\n     // These values are based on the special camera as per the images in\n     // doc/src/images/view-frustum*\n@@ -621,19 +621,25 @@ static void setupTestCamera(QGLCamera &camera)\n     camera.setNearPlane(2.2f);\n     camera.setFarPlane(14.0f);\n \n-    // This value comes from the ratio of the far plane size 4 x 4 to the\n+    // This value comes from the ratio of the far plane size 8 x 8 to the\n     // far plane distance, multiplied by the near plane, to give the near\n-    // plane size:  2.2 x (4 / 14) = 0.62857\n-    camera.setViewSize(QSizeF(0.62857f, 0.62857f));\n+    // plane size:  2.2 x (4 / 14) = 1.257\n+    camera.setViewSize(QSizeF(1.257f, 1.257f));\n \n     // as shown in the images, we use a camera at -z instead of the default +z\n     // but the center remains the same at 0, 0, 0\n-    camera.setEye(QVector3D(0, 0, -8.0f));\n+    camera.setEye(QVector3D(0, 0, distance));\n+\n+    // if the distance would push the camera eye past the view center\n+    // move the view center away\n+    if (distance > 0.0f)\n+        camera.setCenter(QVector3D(0.0f, 0.0f, distance + 2));\n }\n \n void tst_QGLPainter::isCullable_data()\n {\n     QTest::addColumn<float>(\""angle\"");\n+    QTest::addColumn<float>(\""distance\"");\n     QTest::addColumn<bool>(\""culled\"");\n     QTest::addColumn<bool>(\""center_culled\"");\n \n@@ -641,15 +647,28 @@ void tst_QGLPainter::isCullable_data()\n     // It should be visible between -20 and 20 degrees but otherwise not.\n     // Also check the point at the center of the box.\n \n-    QTest::newRow(\""culled-neg40\"") << -40.0f << true << true;\n-    QTest::newRow(\""culled-neg30\"") << -30.0f << true << true;\n-    QTest::newRow(\""part-vis-neg20\"") << -20.0f << false << true;\n-    QTest::newRow(\""part-vis-neg10\"") << -10.0f << false << false;\n-    QTest::newRow(\""all-vis-00\"") << 0.0f << false << false;\n-    QTest::newRow(\""part-vis-pos10\"") << 10.0f << false << false;\n-    QTest::newRow(\""part-vis-pos20\"") << 20.0f << false << true;\n-    QTest::newRow(\""culled-pos30\"") << 30.0f << true << true;\n-    QTest::newRow(\""culled-pos40\"") << 40.0f << true << true;\n+    QTest::newRow(\""culled-neg40\"") << -40.0f << -8.0f << true << true;\n+    QTest::newRow(\""culled-neg30\"") << -30.0f << -8.0f << true << true;\n+    QTest::newRow(\""part-vis-neg20\"") << -20.0f << -8.0f << false << false;\n+    QTest::newRow(\""part-vis-neg10\"") << -10.0f << -8.0f << false << false;\n+    QTest::newRow(\""all-vis-00\"") << 0.0f << -8.0f << false << false;\n+    QTest::newRow(\""part-vis-pos10\"") << 10.0f << -8.0f << false << false;\n+    QTest::newRow(\""part-vis-pos20\"") << 20.0f << -8.0f << false << false;\n+    QTest::newRow(\""culled-pos30\"") << 30.0f << -8.0f << true << true;\n+    QTest::newRow(\""culled-pos40\"") << 40.0f << -8.0f << true << true;\n+\n+    // Check when the eye is at varying distances from the box, with\n+    // (in one case with an angle for good measure) so that it needs\n+    // testing against the near and far planes.\n+\n+    QTest::newRow(\""culled-eye-z+2\"") << 0.0f << 2.0f << true << true;\n+    QTest::newRow(\""culled-eye-z+0\"") << 0.0f << 0.0f << true << true;\n+    QTest::newRow(\""part-vis-eye-z-2-around-np\"") << 0.0f << -2.0f << false << true;\n+    QTest::newRow(\""part-vis-eye-z-3-around-np\"") << 0.0f << -3.0f << false << false;\n+    QTest::newRow(\""part-vis-eye-z-4-close-np\"") << 0.0f << -4.0f << false << false;\n+    QTest::newRow(\""part-vis-eye-z-14.5\"") << 0.0f << -14.5f << false << true;\n+    QTest::newRow(\""part-vis-eye-z-14-angle-20\"") << 20.0f << -14.0f << false << false;\n+    QTest::newRow(\""culled-eye-z-20\"") << 0.0f << -20.0f << true << true;\n }\n \n void tst_QGLPainter::isCullable()\n@@ -659,13 +678,16 @@ void tst_QGLPainter::isCullable()\n     painter.modelViewMatrix().setToIdentity();\n \n     QGLCamera camera;\n-    setupTestCamera(camera);\n \n     QFETCH(float, angle);\n+    QFETCH(float, distance);\n     QFETCH(bool, culled);\n     QFETCH(bool, center_culled);\n \n-    camera.rotateEye(camera.pan(angle));\n+    setupTestCamera(camera, distance);\n+    if (angle != 0.0f)\n+        camera.rotateEye(camera.pan(angle));\n+\n     painter.setCamera(&camera);\n \n     QBox3D box(QVector3D(-1, -1, -1), QVector3D(1, 1, 1));\n@@ -675,28 +697,57 @@ void tst_QGLPainter::isCullable()\n \n void tst_QGLPainter::isCullableVert_data()\n {\n-    isCullable_data();\n+    QTest::addColumn<float>(\""angle\"");\n+    QTest::addColumn<float>(\""distance\"");\n+    QTest::addColumn<bool>(\""culled\"");\n+    QTest::addColumn<bool>(\""center_culled\"");\n+\n+    // Check the cullability of a box at 10 degree increments of rotation.\n+    // It should be visible between -20 and 20 degrees but otherwise not.\n+    // Also check the point at the center of the box.\n+\n+    QTest::newRow(\""culled-neg40\"") << -40.0f << -8.0f << true << true;\n+    QTest::newRow(\""culled-neg30\"") << -30.0f << -8.0f << true << true;\n+    QTest::newRow(\""part-vis-neg20\"") << -20.0f << -8.0f << false << true;\n+    QTest::newRow(\""part-vis-neg10\"") << -10.0f << -8.0f << false << false;\n+    QTest::newRow(\""all-vis-00\"") << 0.0f << -8.0f << false << false;\n+    QTest::newRow(\""part-vis-pos10\"") << 10.0f << -8.0f << false << false;\n+    QTest::newRow(\""part-vis-pos20\"") << 20.0f << -8.0f << false << true;\n+    QTest::newRow(\""culled-pos30\"") << 30.0f << -8.0f << true << true;\n+    QTest::newRow(\""culled-pos40\"") << 40.0f << -8.0f << true << true;\n+\n+    QTest::newRow(\""culled-eye-z+2\"") << 0.0f << 2.0f << true << true;\n+    QTest::newRow(\""culled-eye-z+0\"") << 0.0f << 0.0f << true << true;\n+    QTest::newRow(\""part-vis-eye-z-2-around-np\"") << 0.0f << -2.0f << false << true;\n+    QTest::newRow(\""part-vis-eye-z-3-around-np\"") << 0.0f << -3.0f << false << false;\n+    QTest::newRow(\""part-vis-eye-z-4-close-np\"") << 0.0f << -4.0f << false << false;\n+    QTest::newRow(\""part-vis-eye-z-14.2\"") << 0.0f << -14.2f << false << true;\n+    QTest::newRow(\""part-vis-eye-z-14-angle-20\"") << 20.0f << -14.0f << false << true;\n+    QTest::newRow(\""culled-eye-z-20\"") << 0.0f << -20.0f << true << true;\n }\n \n void tst_QGLPainter::isCullableVert()\n {\n-    QSKIP(\""isCullableVert not passing currently\"", SkipAll);\n+    //QSKIP(\""isCullableVert not passing currently\"", SkipAll);\n     // same test as isCullable, except we tilt the camera forward\n     // and back instead of rotating it from side to side\n-    // since the view frustum, and the box are square in section\n-    // they must produce the same results\n+    // since the view frustum is typically not square in section\n+    // as it depends on the surface, this will give different results.\n     QGLWidget w;\n     QGLPainter painter(&w);\n     painter.modelViewMatrix().setToIdentity();\n \n     QGLCamera camera;\n-    setupTestCamera(camera);\n \n     QFETCH(float, angle);\n+    QFETCH(float, distance);\n     QFETCH(bool, culled);\n     QFETCH(bool, center_culled);\n \n-    camera.rotateEye(camera.tilt(angle));\n+    setupTestCamera(camera, distance);\n+    if (angle != 0.0f)\n+        camera.rotateEye(camera.tilt(angle));\n+\n     painter.setCamera(&camera);\n \n     QBox3D box(QVector3D(-1, -1, -1), QVector3D(1, 1, 1));\n""}","bug; test,resource","bug, test, resource 
",bug;feature;test;
2485.0,2485.0,"test,bug",Bea Lam,Fix broken GridView moved() test,"Fix broken GridView moved() test

Test values for moving multiple items were incorrect.

Change-Id: I184afee6c44df240ef39450c530ff5991cd591e5",['tests/auto/declarative/qsggridview/tst_qsggridview.cpp'],"{""tst_qsggridview.cpp"": ""@@ -641,8 +641,8 @@ void tst_QSGGridView::moved()\n         QSGItem *item = findItem<QSGItem>(contentItem, \""wrapper\"", i);\n         QVERIFY2(item, QTest::toString(QString(\""Item %1 not found\"").arg(i)));\n \n-        QTRY_VERIFY(item->x() == (i%3)*80);\n-        QTRY_VERIFY(item->y() == (i/3)*60 + itemsOffsetAfterMove);\n+        QTRY_COMPARE(item->x(), (i%3)*80.0);\n+        QTRY_COMPARE(item->y(), (i/3)*60.0 + itemsOffsetAfterMove);\n \n         name = findItem<QSGText>(contentItem, \""textName\"", i);\n         QVERIFY(name != 0);\n@@ -725,17 +725,17 @@ void tst_QSGGridView::moved_data()\n     QTest::newRow(\""move multiple forwards, within visible items\"")\n             << 0.0\n             << 0 << 5 << 3\n-            << 0.0;\n+            << 60.0;    // moved 3 items (i.e. 1 row) down\n \n     QTest::newRow(\""move multiple forwards, from non-visible -> visible\"")\n             << 120.0     // show 6-23\n             << 1 << 6 << 3\n-            << 0.0;\n+            << 60.0;    // top row moved, all items should shift down by 1 row\n \n     QTest::newRow(\""move multiple forwards, from non-visible -> visible (move first item)\"")\n             << 120.0     // show 6-23\n             << 0 << 6 << 3\n-            << 0.0;\n+            << 60.0;    // top row moved, all items should shift down by 1 row\n \n     QTest::newRow(\""move multiple forwards, from visible -> non-visible\"")\n             << 0.0\n@@ -745,7 +745,7 @@ void tst_QSGGridView::moved_data()\n     QTest::newRow(\""move multiple forwards, from visible -> non-visible (move first item)\"")\n             << 0.0\n             << 0 << 16 << 3\n-            << 0.0;\n+            << 60.0;\n \n \n     QTest::newRow(\""move multiple backwards, within visible items\"")\n""}","test,bug","bug, test 
",bug;test;
6269.0,6269.0,"feature,bug",Jani Uusi-Rantala,Easier shader debugging,"Easier shader debugging

- Dumps out also the source code of the failed shader if available

Change-Id: I9ae80e6a6749446c5ff54db1bc324cc7411a81a7
Signed-off-by: Jani Uusi-Rantala <jani.uusi-rantala@nokia.com>",['src/gui/opengl/qopenglshaderprogram.cpp'],"{""qopenglshaderprogram.cpp"": ""@@ -213,17 +213,17 @@ bool QOpenGLShaderPrivate::compile(QOpenGLShader *q)\n     GLuint shader = shaderGuard ? shaderGuard->id() : 0;\n     if (!shader)\n         return false;\n+\n+    // Try to compile shader\n     glfuncs->glCompileShader(shader);\n     GLint value = 0;\n+\n+    // Get compilation status\n     glfuncs->glGetShaderiv(shader, GL_COMPILE_STATUS, &value);\n     compiled = (value != 0);\n-    value = 0;\n-    glfuncs->glGetShaderiv(shader, GL_INFO_LOG_LENGTH, &value);\n-    if (!compiled && value > 1) {\n-        char *logbuf = new char [value];\n-        GLint len;\n-        glfuncs->glGetShaderInfoLog(shader, value, &len, logbuf);\n-        log = QString::fromLatin1(logbuf);\n+\n+    if (!compiled) {\n+        // Compilation failed, try to provide some information about the failure\n         QString name = q->objectName();\n \n         const char *types[] = {\n@@ -241,13 +241,53 @@ bool QOpenGLShaderPrivate::compile(QOpenGLShader *q)\n         else if (shaderType == QOpenGLShader::Geometry)\n             type = types[2];\n \n+        // Get info and source code lengths\n+        GLint infoLogLength = 0;\n+        GLint sourceCodeLength = 0;\n+        char *logBuffer = 0;\n+        char *sourceCodeBuffer = 0;\n+\n+        // Get the compilation info log\n+        glfuncs->glGetShaderiv(shader, GL_INFO_LOG_LENGTH, &infoLogLength);\n+\n+        if (infoLogLength > 0) {\n+            GLint temp;\n+            logBuffer = new char [infoLogLength];\n+            glfuncs->glGetShaderInfoLog(shader, infoLogLength, &temp, logBuffer);\n+        }\n+\n+        // Get the source code\n+        glfuncs->glGetShaderiv(shader, GL_SHADER_SOURCE_LENGTH, &sourceCodeLength);\n+\n+        if (sourceCodeLength > 0) {\n+            GLint temp;\n+            sourceCodeBuffer = new char [sourceCodeLength];\n+            glfuncs->glGetShaderSource(shader, sourceCodeLength, &temp, sourceCodeBuffer);\n+        }\n+\n+        QString log;\n+        if (logBuffer)\n+            log = QString::fromLatin1(logBuffer);\n+        else\n+            log = QLatin1String(\""failed\"");\n+\n         if (name.isEmpty())\n             qWarning(\""QOpenGLShader::compile(%s): %s\"", type, qPrintable(log));\n         else\n             qWarning(\""QOpenGLShader::compile(%s)[%s]: %s\"", type, qPrintable(name), qPrintable(log));\n \n-        delete [] logbuf;\n+        // Dump the source code if we got it\n+        if (sourceCodeBuffer) {\n+            qWarning(\""*** Problematic %s shader source code ***\"", type);\n+            qWarning() << qPrintable(QString::fromLatin1(sourceCodeBuffer));\n+            qWarning(\""***\"");\n+        }\n+\n+        // Cleanup\n+        delete [] logBuffer;\n+        delete [] sourceCodeBuffer;\n     }\n+\n     return compiled;\n }\n \n""}","feature,bug","feature, bug 
",bug;
24593.0,24593.0,bug,Sean Harmer,[V8] Update QNX platform port so that it builds once again,"[V8] Update QNX platform port so that it builds once again

Change-Id: I3e1709eb9560e1016533af9e7889c764782ba7fb",['src/3rdparty/v8/src/platform-qnx.cc'],"{""platform-qnx.cc"": ""@@ -77,7 +77,7 @@ double ceiling(double x) {\n static Mutex* limit_mutex = NULL;\n \n \n-void OS::Setup() {\n+void OS::SetUp() {\n   // Seed the random number generator. We preserve microsecond resolution.\n   uint64_t seed = Ticks() ^ (getpid() << 16);\n   srandom(static_cast<unsigned int>(seed));\n@@ -625,14 +625,8 @@ class Thread::PlatformData : public Malloced {\n \n Thread::Thread(const Options& options)\n     : data_(new PlatformData()),\n-      stack_size_(options.stack_size) {\n-  set_name(options.name);\n-}\n-\n-Thread::Thread(const char* name)\n-    : data_(new PlatformData()),\n-      stack_size_(0) {\n-  set_name(name);\n+      stack_size_(options.stack_size()) {\n+  set_name(options.name());\n }\n \n \n""}",bug,"bug 
",feature;
19210.0,19210.0,test; resource,Rohan McGovern [inactive],QtBase api_changes: restore win32-msvc2010 tests to insignificant,"QtBase api_changes: restore win32-msvc2010 tests to insignificant

The tests are all passing on qtbase master, but not yet api_changes.
Allow some time for all the fixes to be merged into api_changes,
otherwise we arbitrarily block the api_changes CI.

Change-Id: I21b9cd7365fde6e67ee2dfc2d92b4ca15c8d8f74",['projects/QtBase_api_changes_Integration/stages/win32-msvc2010_Windows_7/properties/qt.tests.insignificant'],"{""qt.tests.insignificant"": ""@@ -0,0 +1 @@\n+1\n""}",test; resource,"Categories: test 
",bug;resource;test;
17655.0,17655.0,"test,bug",Jonathan Liu,Specify global mouse position for QDeclarativeMouseArea auto test,"Do not use global mouse position for QDeclarativeMouseArea auto test

The preventContextMenu QDeclarativeMouseArea auto test creates
QContextMenuEvent without specifying the global mouse position. As a
result, the event's global mouse position is incorrectly set to
QCursor::pos().

Change-Id: Ib67fbcf3acf968eb2748426ad0db0e900826b232",['tests/auto/declarative/qdeclarativemousearea/tst_qdeclarativemousearea.cpp'],"{""tst_qdeclarativemousearea.cpp"": ""@@ -681,20 +681,21 @@ void tst_QDeclarativeMouseArea::preventContextMenu()\n     QCOMPARE(eventsReceived.read().toInt(), 0);\n \n     QPoint targetPoint = view->mapFromScene(QPoint(80, 80));\n+    QPoint targetGlobalPoint = view->viewport()->mapToGlobal(targetPoint);\n \n-    QContextMenuEvent fakeEvent1(QContextMenuEvent::Mouse, targetPoint);\n+    QContextMenuEvent fakeEvent1(QContextMenuEvent::Mouse, targetPoint, targetGlobalPoint);\n     QApplication::sendEvent(view->viewport(), &fakeEvent1);\n     QCOMPARE(eventsReceived.read().toInt(), 0);\n \n     mouseAreaEnabled.write(false);\n     QVERIFY(!mouseAreaEnabled.read().toBool());\n-    QContextMenuEvent fakeEvent2(QContextMenuEvent::Mouse, targetPoint);\n+    QContextMenuEvent fakeEvent2(QContextMenuEvent::Mouse, targetPoint, targetGlobalPoint);\n     QApplication::sendEvent(view->viewport(), &fakeEvent2);\n     QCOMPARE(eventsReceived.read().toInt(), 1);\n \n     mouseAreaEnabled.write(true);\n     QVERIFY(mouseAreaEnabled.read().toBool());\n-    QContextMenuEvent fakeEvent3(QContextMenuEvent::Mouse, targetPoint);\n+    QContextMenuEvent fakeEvent3(QContextMenuEvent::Mouse, targetPoint, targetGlobalPoint);\n     QApplication::sendEvent(view->viewport(), &fakeEvent3);\n     QCOMPARE(eventsReceived.read().toInt(), 1);\n }\n""}","test,bug","test,bug 
",test;
24970.0,24970.0,test,Natalia Shubina,removing urls from routing tests,"removing urls from routing tests

Task-number: QTBUG-25497
Change-Id: Id09ff1766dcf7d40ea058431d2c4131bb7e5c31d",['tests/system/routing/sys_routing.qtt'],"{""sys_routing.qtt"": ""@@ -43,14 +43,48 @@\n \n testcase = {\n \n+    qml_no_route_data: {\n+        distant_points:[\""-27.575\"", \""153.088\"", \""56\"", \""44\""]\n+    },\n+\n+    qml_no_route: function(lat1, long1, lat2, long2)\n+    {\n+        // Test meta data\n+        testTitle = \""QML: Maps and Navigation - no available route\"";\n+        testBinary = \""qml_location_mapviewer\"";\n+        testSource = \""$QTDIR/qtlocation/examples/declarative/mapviewer\""\n+        testGoal = \""Verify that route can not be calculated.\"";\n+        testPreconditions = \""Internet connection is required for this test case\"";\n+        testGroups = \""BAT, 5.0\"";\n+        testRequirements = \""MTMW-235: QML Routing\"";\n+\n+        // Test steps\n+        prompt(twiki(\""---+++ \"" + testTitle + \""<br><br>\n+        *Goal:* \"" + testGoal + \""<br>\n+        *Pre-Requisites:* \"" + testPreconditions + \""<br>\n+        *Tested Binary:* \"" + testBinary + \""<br>\n+        *Requirements:* \"" + testRequirements + \""<br>\n+\n+        | *Step* | *Verification* |\n+        | Launch [\"" + testBinary + \""] | App launches normally |\n+        | Select [Tools] button | |\n+        | Select [Route] menu item | |\n+        | Select [Clear] button | |\n+        | Fill in [\"" + lat1 + \""] in From Latitude field | |\n+        | Fill in [\"" + long1 + \""] in From Longitude field | |\n+        | Fill in [\"" + lat2 + \""] in To Latitude field | |\n+        | Fill in [\"" + long2 + \""] in To Longitude field | |\n+        | Select [Go!] button | Verify that route cannot be calculated |\""\n+        ));\n+    },\n+\n     qml_route_for_two_points_data: {\n-        close_points:[\""-27.575\"", \""153.088\"", \""-27.465\"", \""153.023\"", \""http://prd.lbsp.navteq.com/routing/6.2/calculateroute.xml?referer=qtlocationapi&token=152022572f0e44e07489c35cd46fa246&waypoint0=-27.575,153.088&waypoint1=-27.465,153.023&mode0=fastestNow;car&alternatives=0&linkattributes=sh,le&maneuverattributes=po,tt,le,di,li&routeattributes=sm,sh,bb,lg&legattributes=links,maneuvers&departure=2011-12-28T21:51:25Z&instructionformat=text&language=en_AU\""],\n-        medium_distant_points:[\""-27.4709\"", \""153.0235\"", \""-33.8689\"", \""151.2071\"", \""http://prd.lbsp.navteq.com/routing/6.2/calculateroute.xml?referer=qtlocationapi&token=152022572f0e44e07489c35cd46fa246&waypoint0=-27.4709,153.0235&waypoint1=-33.8689,151.2071&mode0=fastestNow;car&alternatives=0&linkattributes=sh,le&maneuverattributes=po,tt,le,di,li&routeattributes=sm,sh,bb,lg&legattributes=links,maneuvers&departure=2011-12-28T21:52:33Z&instructionformat=text&language=en_AU\""],\n-        distant_points:[\""-27.4709\"", \""153.0235\"", \""56\"", \""44\"", \""http://prd.lbsp.navteq.com/routing/6.2/calculateroute.xml?referer=qtlocationapi&token=152022572f0e44e07489c35cd46fa246&waypoint0=-27.4709,153.0235&waypoint1=56,44&mode0=fastestNow;car&alternatives=0&linkattributes=sh,le&maneuverattributes=po,tt,le,di,li&routeattributes=sm,sh,bb,lg&legattributes=links,maneuvers&departure=2011-12-28T21:54:35Z&instructionformat=text&language=en_AU\""],\n-        loop_test_points:[\""51.5\"", \""-0.11\"", \""51.2207\"", \""0.1\"", \""http://prd.lbsp.navteq.com/routing/6.2/calculateroute.xml?referer=qtlocationapi&token=152022572f0e44e07489c35cd46fa246&waypoint0=51.5,-0.11&waypoint1=51.2207,0.1&mode0=fastestNow;car&alternatives=0&linkattributes=sh,le&maneuverattributes=po,tt,le,di,li&routeattributes=sm,sh,bb,lg&legattributes=links,maneuvers&departure=2012-02-19T23:11:52Z&instructionformat=text&language=en_AU\""]      //test for QTBUG-20869\n+        close_points:[\""-27.575\"", \""153.088\"", \""-27.465\"", \""153.023\"", \""15.9km\"", \""8\""],\n+        distant_points:[\""-27.4709\"", \""153.0235\"", \""-33.8689\"", \""151.2071\"", \""930km\"", \""36\""],\n+        loop_test_points:[\""51.5\"", \""-0.11\"", \""51.2207\"", \""0.1\"", \""50.9km\"", \""19\""]      //test for QTBUG-20869\n     },\n \n-    qml_route_for_two_points: function(lat1, long1, lat2, long2, url)\n+    qml_route_for_two_points: function(lat1, long1, lat2, long2, distance, steps)\n     {\n         // Test meta data\n         testTitle = \""QML: Maps and Navigation - Route for two points\"";\n@@ -69,27 +103,25 @@ testcase = {\n         *Requirements:* \"" + testRequirements + \""<br>\n \n         | *Step* | *Verification* |\n-        | Open \"" + url + \"" url in a desktop browser | |\n-        | Launch \"" + testBinary + \"" | App launches normally |\n-        | Select Tools button | |\n-        | Select Route menu item | |\n-        | Select Clear button | |\n-        | Fill in \"" + lat1 + \"" in From Latitude field | |\n-        | Fill in \"" + long1 + \"" in From Longitude field | |\n-        | Fill in \"" + lat2 + \"" in To Latitude field | |\n-        | Fill in \"" + long2 + \"" in To Longitude field | |\n-        | Select Go! button | |\n-        | Wait for the route to be calculated. Expand route info if there were no errors | Verify route information corresponds to the open web page, route has no loops. |\""\n+        | Launch [\"" + testBinary + \""] | App launches normally |\n+        | Select [Tools] button | |\n+        | Select [Route] menu item | |\n+        | Select [Clear] button | |\n+        | Fill in [\"" + lat1 + \""] in From Latitude field | |\n+        | Fill in [\"" + long1 + \""] in From Longitude field | |\n+        | Fill in [\"" + lat2 + \""] in To Latitude field | |\n+        | Fill in [\"" + long2 + \""] in To Longitude field | |\n+        | Select [Go!] button | |\n+        | Wait for the route to be calculated. | Verify that distance is [\"" + distance + \""], there are [\"" + steps + \""] steps. All steps are not empty. |\""\n         ));\n     },\n \n-\n     qml_route_for_two_addresses_data: {\n-        points:[\""Brandle st\"",\""Eight Mile Plains\"", \""Australia\"", \""Heal st\"", \""New Farm\"", \""Australia\"", \""http://prd.lbsp.navteq.com/routing/6.2/calculateroute.xml?referer=qtlocationapi&token=152022572f0e44e07489c35cd46fa246&waypoint0=-27.58157,153.09726&waypoint1=-27.45983,153.04543&mode0=fastestNow;car&alternatives=0&linkattributes=sh,le&maneuverattributes=po,tt,le,di,li&routeattributes=sm,sh,bb,lg&legattributes=links,maneuvers&departure=2012-02-19T23:23:44Z&instructionformat=text&language=en_AU\""],\n+        points:[\""Brandle st\"",\""Eight Mile Plains\"", \""Australia\"", \""Heal st\"", \""New Farm\"", \""Australia\"", \""18.5km\"", \""12\""],\n     },\n \n \n-    qml_route_for_two_addresses: function(street1, city1, country1, street2, city2, country2, url) {\n+    qml_route_for_two_addresses: function(street1, city1, country1, street2, city2, country2, distance, steps) {\n         // Test meta data\n         testTitle = \""QML: Maps and Navigation - Route for two addresses\"";\n         testBinary = \""qml_location_mapviewer\"";\n@@ -107,28 +139,27 @@ testcase = {\n         *Requirements:* \"" + testRequirements + \""<br>\n \n         | *Step* | *Verification* |\n-        | Open \"" + url + \"" url in a desktop browser | |\n-        | Launch \"" + testBinary + \"" | App launches normally |\n-        | Select Tools button | |\n-        | Select Route menu item | |\n+        | Launch [\"" + testBinary + \""] | App launches normally |\n+        | Select [Tools] button | |\n+        | Select [Route] menu item | |\n         | Select second option group to enter start and end points as address | |\n-        | Select Clear button | |\n-        | Fill in \"" + street1 + \"" in From Street field | |\n-        | Fill in \"" + city1 + \"" in From City field | |\n-        | Fill in \"" + country1 + \"" in From Country field | |\n-        | Fill in \"" + city2 + \"" in To City field | |\n-        | Fill in \"" + country2 + \"" in To Country field | |\n-        | Fill in \"" + street2 + \"" in From Street field | |\n-        | Select Go! button | |\n-        | Wait for the route to be calculated. Expand route info if there were no errors | Verify route information corresponds to the open web page |\""\n+        | Select [Clear] button | |\n+        | Fill in [\"" + street1 + \""] in From Street field | |\n+        | Fill in [\"" + city1 + \""] in From City field | |\n+        | Fill in [\"" + country1 + \""] in From Country field | |\n+        | Fill in [\"" + city2 + \""] in To City field | |\n+        | Fill in [\"" + country2 + \""] in To Country field | |\n+        | Fill in [\"" + street2 + \""] in From Street field | |\n+        | Select [Go!] button | |\n+        | Wait for the route to be calculated. | Verify that distance is [\"" + distance + \""], there are [\"" + steps + \""] steps. All steps are not empty. |\""\n         ));\n     },\n \n     qml_route_for_three_points_data:{\n-        points:[\""-27.575\"", \""153.088\"", \""-27.465\"", \""153.023\"", \""-27.3614\"", \""153.0043\"", \""http://prd.lbsp.navteq.com/routing/6.2/calculateroute.xml?referer=qtlocationapi&token=152022572f0e44e07489c35cd46fa246&waypoint0=-27.575,153.088&waypoint1=-27.465,153.023&waypoint2=-27.3614,153.0043&mode0=shortest;car&alternatives=0&linkattributes=sh,le&maneuverattributes=po,tt,le,di,li&routeattributes=sm,sh,bb,lg&legattributes=links,maneuvers&departure=2012-02-19T23:40:18Z&instructionformat=text&language=en_AU\""]\n+        points:[\""-27.575\"", \""153.088\"", \""-27.465\"", \""153.023\"", \""-27.3614\"", \""153.0043\"", \""29.4km\"", \""19\""]\n     },\n \n-    qml_route_for_three_points: function(lat1, long1, lat2, long2, lat3, long3, url)\n+    qml_route_for_three_points: function(lat1, long1, lat2, long2, lat3, long3, distance, steps)\n     {\n         // Test meta data\n         testTitle = \""QML: Maps and Navigation - Route for several waypoints\"";\n@@ -147,41 +178,38 @@ testcase = {\n         *Requirements:* \"" + testRequirements + \""<br>\n \n         | *Step* | *Verification* |\n-        | Open \"" + url + \"" url in a desktop browser | |\n-        | Launch \"" + testBinary + \"" | App launches normally |\n+        | Launch [\"" + testBinary + \""] | App launches normally |\n         | Long press on the map | |\n-        | Select 'Add Marker' menu item | |\n+        | Select [Add Marker] menu item | |\n         | Long Press on the marker | |\n-        | Select 'Move to' menu item | |\n-        | Fill in \"" + lat1 + \"" in Latitude field | |\n-        | Fill in \"" + long1 + \"" in Longitude | |\n-        | Select Go! button | |\n+        | Select [Move to] menu item | |\n+        | Fill in [\"" + lat1 + \""] in Latitude field | |\n+        | Fill in [\"" + long1 + \""] in Longitude | |\n+        | Select [Go!] button | |\n         | Create another Marker via Long Press | |\n         | Long Press on the second marker | |\n-        | Select 'Move to' menu item | |\n-        | Fill in \"" + lat2 + \"" in Latitude field | |\n-        | Fill in \"" + long2 + \"" in Longitude | |\n-        | Select Go! button | |\n+        | Select [Move to] menu item | |\n+        | Fill in [\"" + lat2 + \""] in Latitude field | |\n+        | Fill in [\"" + long2 + \""] in Longitude | |\n+        | Select [Go!] button | |\n         | Create third Marker | |\n         | Long Press on the third marker | |\n-        | Select 'Move to' menu item | |\n-        | Fill in \"" + lat3 + \"" in Latitude field | |\n-        | Fill in \"" + long3 + \"" in Longitude | |\n-        | Press Go! button | |\n+        | Select [Move to] menu item | |\n+        | Fill in [\"" + lat3 + \""] in Latitude field | |\n+        | Fill in [\"" + long3 + \""] in Longitude | |\n+        | Press [Go!] button | |\n         | Long press on the map | |\n-        | Select 'Route to next points' | |\n-        | Wait for the route to be calculated. Expand route info if there were no errors | Verify route information corresponds to the open web page |\""\n+        | Select [Route to next points] | |\n+        | Wait for the route to be calculated. | Verify that distance is [\"" + distance + \""], there are [\"" + steps + \""] steps. All steps are not empty. |\""\n         ));\n     },\n \n     qml_travel_mode_data: {\n-        car:[\""-27.5789\"", \""153.0919\"", \""-27.5792\"", \""153.096\"", \""Vehicle\"",\n-               \""http://prd.lbsp.navteq.com/routing/6.2/calculateroute.xml?referer=qtlocationapi&token=152022572f0e44e07489c35cd46fa246&waypoint0=-27.5789,153.0919&waypoint1=-27.5792,153.096&mode0=fastestNow;car&alternatives=0&linkattributes=sh,le&maneuverattributes=po,tt,le,di,li&routeattributes=sm,sh,bb,lg&legattributes=links,maneuvers&departure=2011-12-28T22:07:16Z&instructionformat=text&language=en_AU\""],\n-        pedestrian:[\""-27.5789\"", \""153.0919\"", \""-27.5792\"", \""153.096\"", \""Pedestrian\"",\n-               \""http://prd.lbsp.navteq.com/routing/6.2/calculateroute.xml?referer=qtlocationapi&token=152022572f0e44e07489c35cd46fa246&waypoint0=-27.5789,153.0919&waypoint1=-27.5792,153.096&mode0=fastestNow;pedestrian&alternatives=0&linkattributes=sh,le&maneuverattributes=po,tt,le,di,li&routeattributes=sm,sh,bb,lg&legattributes=links,maneuvers&departure=2011-12-28T22:07:51Z&instructionformat=text&language=en_AU\""]\n+        car:[\""-27.5789\"", \""153.0919\"", \""-27.5792\"", \""153.096\"", \""Vehicle\"", \""2.2km\"", \""7\""],\n+        pedestrian:[\""-27.5789\"", \""153.0919\"", \""-27.5792\"", \""153.096\"", \""Pedestrian\"", \""1.7km\"", \""16\""]\n     },\n \n-    qml_travel_mode: function(lat1, long1, lat2, long2, mode, url)\n+    qml_travel_mode: function(lat1, long1, lat2, long2, mode, distance, steps)\n     {\n         // Test meta data\n         testTitle = \""QML: Maps and Navigation - Travel mode (Car and Pedestrian)\"";\n@@ -200,30 +228,27 @@ testcase = {\n         *Requirements:* \"" + testRequirements + \""<br>\n \n         | *Step* | *Verification* |\n-        | Open \"" + url + \"" url in a desktop browser | |\n-        | Launch \"" + testBinary + \"" | App launches normally |\n-        | Select Tools button | |\n-        | Select Route menu item | |\n+        | Launch [\"" + testBinary + \""] | App launches normally |\n+        | Select [Tools] button | |\n+        | Select [Route] menu item | |\n         | Selec first option group | |\n-        | Select Clear button | |\n-        | Fill in \"" + lat1 + \"" in From Latitude field | |\n-        | Fill in \"" + long1 + \"" in From Longitude field | |\n-        | Fill in \"" + lat2 + \"" in To Latitude field | |\n-        | Fill in \"" + long2 + \"" in To Longitude field | |\n-        | Select \"" + mode + \"" option button | |\n-        | Select Go! button | |\n-        | Wait for the route to be calculated. Expand route info if there were no errors | Verify route information corresponds to the open web page |\""\n+        | Select [Clear] button | |\n+        | Fill in [\"" + lat1 + \""] in From Latitude field | |\n+        | Fill in [\"" + long1 + \""] in From Longitude field | |\n+        | Fill in [\"" + lat2 + \""] in To Latitude field | |\n+        | Fill in [\"" + long2 + \""] in To Longitude field | |\n+        | Select [\"" + mode + \""] option button | |\n+        | Select [Go!] button | |\n+        | Wait for the route to be calculated. | Verify that distance is [\"" + distance + \""], there are [\"" + steps + \""] steps. All steps are not empty. |\""\n         ));\n     },\n \n     qml_route_feature_type_data: {\n-        tolls:[\""-27.5299\"", \""153.0713\"", \""-27.4395\"", \""153.0504\"", \""Avoid toll roads\"",\n-                \""http://prd.lbsp.navteq.com/routing/6.2/calculateroute.xml?referer=qtlocationapi&token=152022572f0e44e07489c35cd46fa246&waypoint0=-27.5299,153.0713&waypoint1=-27.4395,153.0504&mode0=fastestNow;car;tollroad:-1&alternatives=0&linkattributes=sh,le&maneuverattributes=po,tt,le,di,li&routeattributes=sm,sh,bb,lg&legattributes=links,maneuvers&departure=2011-12-28T22:16:14Z&instructionformat=text&language=en_AU\""],\n-        highways:[\""-27.5299\"", \""153.0713\"", \""-27.4395\"", \""153.0504\"", \""Avoid highways\"",\n-                \""http://prd.lbsp.navteq.com/routing/6.2/calculateroute.xml?referer=qtlocationapi&token=152022572f0e44e07489c35cd46fa246&waypoint0=-27.5299,153.0713&waypoint1=-27.4395,153.0504&mode0=fastestNow;car;motorway:-1&alternatives=0&linkattributes=sh,le&maneuverattributes=po,tt,le,di,li&routeattributes=sm,sh,bb,lg&legattributes=links,maneuvers&departure=2011-12-28T22:16:37Z&instructionformat=text&language=en_AU\""]\n+        tolls:[\""-27.5299\"", \""153.0713\"", \""-27.4395\"", \""153.0504\"", \""Avoid toll roads\"", \""16.8km\"", \""11\""],\n+        highways:[\""-27.5299\"", \""153.0713\"", \""-27.4395\"", \""153.0504\"", \""Avoid highways\"", \""12.6km\"", \""14\""]\n     },\n \n-    qml_route_feature_type: function(lat1, long1, lat2, long2, feature, url)\n+    qml_route_feature_type: function(lat1, long1, lat2, long2, feature, distance, steps)\n     {\n         // Test meta data\n         testTitle = \""QML: Maps and Navigation - Route features (Avoid Highways and Avoid Tool Road)\"";\n@@ -242,30 +267,27 @@ testcase = {\n         *Requirements:* \"" + testRequirements + \""<br>\n \n         | *Step* | *Verification* |\n-        | Open \"" + url + \"" url in a desktop browser | |\n-        | Launch \"" + testBinary + \"" | App launches normally |\n-        | Select Tools button | |\n-        | Select Route menu item | |\n+        | Launch [\"" + testBinary + \""] | App launches normally |\n+        | Select [Tools] button | |\n+        | Select [Route] menu item | |\n         | Selec first option group | |\n-        | Select Clear button | |\n-        | Fill in \"" + lat1 + \"" in From Latitude field | |\n-        | Fill in \"" + long1 + \"" in From Longitude field | |\n-        | Fill in \"" + lat2 + \"" in To Latitude field | |\n-        | Fill in \"" + long2 + \"" in To Longitude field | |\n-        | Select '\"" +feature + \""' checkbox | |\n-        | Select Go! button | |\n-        | Wait for the route to be calculated. Expand route info if there were no errors | Verify route information corresponds to the open web page |\""\n+        | Select [Clear] button | |\n+        | Fill in [\"" + lat1 + \""] in From Latitude field | |\n+        | Fill in [\"" + long1 + \""] in From Longitude field | |\n+        | Fill in [\"" + lat2 + \""] in To Latitude field | |\n+        | Fill in [\"" + long2 + \""] in To Longitude field | |\n+        | Select [\"" +feature + \""] checkbox | |\n+        | Select [Go!] button | |\n+        | Wait for the route to be calculated. | Verify that distance is [\"" + distance + \""], there are [\"" + steps + \""] steps. All steps are not empty. |\""\n         ));\n     },\n \n     qml_route_optimization_data: {\n-        fastest:[\""-27.5374\"", \""153.084\"", \""-27.4391\"", \""153.0488\"", \""Fastest\"",\n-                \""http://prd.lbsp.navteq.com/routing/6.2/calculateroute.xml?referer=qtlocationapi&token=152022572f0e44e07489c35cd46fa246&waypoint0=-27.5374,153.084&waypoint1=-27.4391,153.0488&mode0=fastestNow;car&alternatives=0&linkattributes=sh,le&maneuverattributes=po,tt,le,di,li&routeattributes=sm,sh,bb,lg&legattributes=links,maneuvers&departure=2012-02-20T00:28:38Z&instructionformat=text&language=en_AU\""],\n-        shortest:[\""-27.5374\"", \""153.084\"", \""-27.4391\"", \""153.0488\"", \""Shortest\"",\n-                \""http://prd.lbsp.navteq.com/routing/6.2/calculateroute.xml?referer=qtlocationapi&token=152022572f0e44e07489c35cd46fa246&waypoint0=-27.5374,153.084&waypoint1=-27.4391,153.0488&mode0=shortest;car&alternatives=0&linkattributes=sh,le&maneuverattributes=po,tt,le,di,li&routeattributes=sm,sh,bb,lg&legattributes=links,maneuvers&departure=2012-02-20T00:28:45Z&instructionformat=text&language=en_AU\""]\n+        fastest:[\""-27.5374\"", \""153.084\"", \""-27.4391\"", \""153.0488\"", \""Fastest\"", \""16.4km\"", \""10\""],\n+        shortest:[\""-27.5374\"", \""153.084\"", \""-27.4391\"", \""153.0488\"", \""Shortest\"", \""14.4km\"", \""15\""]\n     },\n \n-    qml_route_optimization: function(lat1, long1, lat2, long2, optimization, url)\n+    qml_route_optimization: function(lat1, long1, lat2, long2, optimization, distance, steps)\n     {\n         // Test meta data\n         testTitle = \""QML: Maps and Navigation - Route optimization (Shortest and Fastest)\"";\n@@ -284,19 +306,18 @@ testcase = {\n         *Requirements:* \"" + testRequirements + \""<br>\n \n         | *Step* | *Verification* |\n-        | Open \"" + url + \"" url in a desktop browser | |\n-        | Launch \"" + testBinary + \"" | App launches normally |\n-        | Select Tools button | |\n-        | Select Route menu item | |\n+        | Launch [\"" + testBinary + \""] | App launches normally |\n+        | Select [Tools] button | |\n+        | Select [Route] menu item | |\n         | Selec first option group | |\n-        | Select Clear button | |\n-        | Fill in \"" + lat1 + \"" in From Latitude field | |\n-        | Fill in \"" + long1 + \"" in From Longitude field | |\n-        | Fill in \"" + lat2 + \"" in To Latitude field | |\n-        | Fill in \"" + long2 + \"" in To Longitude field | |\n-        | Select '\"" + optimization + \""' option button | |\n-        | Select Go! button | |\n-        | Wait for the route to be calculated. Expand route info if there were no errors | Verify route information corresponds to the open web page |\""\n+        | Select [Clear] button | |\n+        | Fill in [\"" + lat1 + \""] in From Latitude field | |\n+        | Fill in [\"" + long1 + \""] in From Longitude field | |\n+        | Fill in [\"" + lat2 + \""] in To Latitude field | |\n+        | Fill in [\"" + long2 + \""] in To Longitude field | |\n+        | Select [\"" + optimization + \""] option button | |\n+        | Select [Go!] button | |\n+        | Wait for the route to be calculated. | Verify that distance is [\"" + distance + \""], there are [\"" + steps + \""] steps. All steps are not empty. |\""\n         ));\n     },\n \n@@ -324,15 +345,15 @@ testcase = {\n         *Requirements:* \"" + testRequirements + \""<br>\n \n         | *Step* | *Verification* |\n-        | Launch \"" + testBinary + \"" | App launches normally |\n+        | Launch [\"" + testBinary + \""] | App launches normally |\n         | Select Language button | |\n-        | Select Other | |\n-        | Fill in \"" +  locale + \"" in Language field | |\n-        | Select Go! button | |\n-        | Select Tools | |\n-        | Select Route | |\n-        | Select Go! | |\n-        | Expand information about the route | Verify that instructions are in \"" + language + \""  and uses \"" + system_type + \"" system |\""\n+        | Select [Other] | |\n+        | Fill in [\"" +  locale + \""] in Language field | |\n+        | Select [Go!] button | |\n+        | Select [Tools] button | |\n+        | Select [Route] menu item | |\n+        | Select [Go!] | |\n+        | Expand information about the route | Verify that instructions are in [\"" + language + \""]  and uses [\"" + system_type + \""] system |\""\n         ));\n     }\n \n""}",test,"test, refactor 
",bug;resource;test;
12965.0,12965.0,"test,bug",Friedemann Kleint,Fix compilation of tests on Windows.,"Fix compilation of tests on Windows.

Change-Id: I9956f5b86a5f7068de5b461e7b42fe2803685e06","['tests/auto/threed/qglindexbuffer/qglindexbuffer.pro', 'tests/auto/threed/qglindexbuffer/tst_qglindexbuffer.cpp']","{""qglindexbuffer.pro"": ""@@ -1,7 +1,7 @@\n TARGET = tst_qglindexbuffer\n CONFIG += testcase\n TEMPLATE=app\n-QT += testlib qt3d\n+QT += testlib qt3d opengl\n CONFIG += warn_on\n \n SOURCES += tst_qglindexbuffer.cpp\n"", ""tst_qglindexbuffer.cpp"": ""@@ -42,7 +42,8 @@\n #include <QtTest/QtTest>\n #include \""qglindexbuffer.h\""\n \n-#include <QOpenGLFunctions>\n+#include <QtGui/QOpenGLBuffer>\n+#include <QtGui/QOpenGLFunctions>\n \n class tst_QGLIndexBuffer : public QObject\n {\n""}","test,bug","bug,test 
",bug;test;
24657.0,24657.0,bug,Alex Wilson,Call deleteLater() on disconnected Service-type EndPoints,"Call deleteLater() on disconnected Service-type EndPoints

This happens _after_ removeObjectInstance() so that private services
get an opportunity to clean up first (hopefully). Client services are
cleaned up by their proxies' destroyed() signals, so the only remaining
case is for non-private server-side services -- which previously sat
around and continued to have writes scheduled against them.

Change-Id: I8ac3b408a69d5d038d173d34e9de83fc7904495a",['src/serviceframework/ipc/objectendpoint.cpp'],"{""objectendpoint.cpp"": ""@@ -219,6 +219,7 @@ void ObjectEndPoint::disconnected()\n {\n     if (d->endPointType == Service) {\n         InstanceManager::instance()->removeObjectInstance(d->entry, d->serviceInstanceId);\n+        deleteLater();\n     }\n     foreach (Response *r, openRequests) {\n         r->error = QLatin1Literal(\""end point disconnected\"");\n""}",bug,"bug 
",others;
19690.0,19690.0,resource,[BB] Sergio Ahumada,Remove pin of qtbase for qtgraphicaleffects.,"Remove pin of qtbase for qtgraphicaleffects.

Change-Id: I5b217fb50d14db237126fba6d6ce95017dfd8912",['sync.profile'],"{""sync.profile"": ""@@ -17,7 +17,7 @@\n #   - any git symbolic ref resolvable from the module's repository (e.g. \""refs/heads/master\"" to track master branch)\n #\n %dependencies = (\n-        \""qtbase\"" => \""refs/heads/api_changes\"",\n+        \""qtbase\"" => \""refs/heads/master\"",\n         \""qtdeclarative\"" => \""refs/heads/master\"",\n         \""qtjsbackend\"" => \""refs/heads/master\"",\n         \""qtsvg\"" => \""refs/heads/master\"",\n""}",resource,"refactor 
",deprecat;resource;
11665.0,11665.0,bug,Michael Goddard,Fix namespace compilation.,"Fix namespace compilation.

By removing unnamespaced forward decls.

Change-Id: Icccb34092ef7451d29f52db08811a2152c50e4b8","['examples/video/qmlvideofx/qmlapplicationviewer/qmlapplicationviewer.h', 'examples/video/qmlvideo/qmlapplicationviewer/qmlapplicationviewer.h', 'examples/video/snippets/performancemonitor/performancemonitor.h', 'examples/video/snippets/performancemonitor/performancemonitor.cpp']","{""qmlapplicationviewer.h"": ""@@ -43,8 +43,7 @@\n #define QMLAPPLICATIONVIEWER_H\n \n #include <QtQuick/QQuickView>\n-\n-class QGuiApplication;\n+#include <QtGui/QGuiApplication>\n \n class QmlApplicationViewer : public QQuickView\n {\n"", ""performancemonitor.cpp"": ""@@ -40,7 +40,6 @@\n ****************************************************************************/\n \n #include \""performancemonitor.h\""\n-#include <QtCore/QString>\n \n namespace PerformanceMonitor {\n \n"", ""performancemonitor.h"": ""@@ -42,7 +42,7 @@\n #ifndef PERFORMANCEMONITOR_H\n #define PERFORMANCEMONITOR_H\n \n-class QString;\n+#include <QtCore/QString>\n \n namespace PerformanceMonitor {\n     struct State {\n""}",bug,"bug 
",bug;
18629.0,18629.0,feature; resource; test,Damir Tatalovic,MIPS DSP configure detection and initial blend optimizations.,"MIPS DSP configure detection and initial blend optimizations.

Adds new MIPS configure test and -no-mips_dsp and -no-mips_dspr2
configure options.

List of optimized implementations:

- comp_func_SourceOver
- comp_func_Source
- qt_memfill32
- qt_destFetchARGB32
- qt_destStoreARGB32
- blend [RGB32][RGB32]
- blend [ARGB32_Pre][RGB32]
- blend [RGB32][ARGB32_Pre]
- blend [ARGB32_Pre][ARGB32_Pre]

Change-Id: I35411858295b7b3f4895eb56e3b93397528903cc","['config.tests/unix/mips_dsp/mips_dsp.pro', 'configure', 'src/gui/painting/painting.pri', 'config.tests/unix/mips_dspr2/mips_dspr2.pro', 'src/gui/painting/qdrawhelper_mips_dsp.cpp', 'src/gui/painting/qdrawhelper_mips_dsp_p.h', 'config.tests/unix/mips_dsp/mips_dsp.cpp', 'src/gui/painting/qt_mips_asm_dsp.h', 'src/gui/painting/qdrawhelper_mips_dsp_asm.S', 'src/gui/painting/qdrawhelper.cpp', 'src/gui/painting/qdrawhelper_mips_dspr2_asm.S', 'config.tests/unix/mips_dspr2/mips_dspr2.cpp']","{""mips_dsp.cpp"": ""@@ -0,0 +1,10 @@\n+int main () {\n+\n+  int c = 0, a = 0, b = 0;\n+  __asm__ __volatile__ (\n+      \""packrl.ph %[c], %[a], %[b]          \\n\\t\""\n+      : [c] \""=r\"" (c)\n+      : [a] \""r\"" (a), [b] \""r\"" (b)\n+  );\n+  return c;\n+}\n\\ No newline at end of file\n"", ""mips_dsp.pro"": ""@@ -0,0 +1,2 @@\n+SOURCES = mips_dsp.cpp\n+CONFIG -= x11 qt\n\\ No newline at end of file\n"", ""mips_dspr2.cpp"": ""@@ -0,0 +1,11 @@\n+\n+int main () {\n+\n+  int c = 0, a = 0, b = 0;\n+  __asm__ __volatile__ (\n+      \""precr.qb.ph %[c], %[a], %[b]          \\n\\t\""\n+      : [c] \""=r\"" (c)\n+      : [a] \""r\"" (a), [b] \""r\"" (b)\n+  );\n+  return c;\n+}\n\\ No newline at end of file\n"", ""mips_dspr2.pro"": ""@@ -0,0 +1,2 @@\n+SOURCES = mips_dspr2.cpp\n+CONFIG -= x11 qt\n\\ No newline at end of file\n"", ""configure"": ""@@ -770,6 +770,8 @@ CFG_DOUBLEFORMAT=auto\n CFG_ARMFPA=auto\n CFG_IWMMXT=no\n CFG_NEON=auto\n+CFG_MIPS_DSP=auto\n+CFG_MIPS_DSPR2=auto\n CFG_CLOCK_GETTIME=auto\n CFG_CLOCK_MONOTONIC=auto\n CFG_MREMAP=auto\n@@ -1675,6 +1677,20 @@ while [ \""$#\"" -gt 0 ]; do\n             UNKNOWN_OPT=yes\n         fi\n         ;;\n+    mips_dsp)\n+        if [ \""$VAL\"" = \""no\"" ]; then\n+            CFG_MIPS_DSP=\""$VAL\""\n+        else\n+            UNKNOWN_OPT=yes\n+        fi\n+        ;;\n+    mips_dspr2)\n+        if [ \""$VAL\"" = \""no\"" ]; then\n+            CFG_MIPS_DSPR2=\""$VAL\""\n+        else\n+            UNKNOWN_OPT=yes\n+        fi\n+        ;;\n     reduce-relocations)\n         if [ \""$VAL\"" = \""yes\"" ] || [ \""$VAL\"" = \""no\"" ]; then\n             CFG_REDUCE_RELOCATIONS=\""$VAL\""\n@@ -3374,6 +3390,8 @@ cat << EOF\n     -no-sse4.2.......... Do not compile with use of SSE4.2 instructions.\n     -no-avx ............ Do not compile with use of AVX instructions.\n     -no-neon ........... Do not compile with use of NEON instructions.\n+    -no-mips_dsp ....... Do not compile with use of MIPS DSP instructions.\n+    -no-mips_dspr2 ..... Do not compile with use of MIPS DSP rev2 instructions.\n \n     -qtnamespace <name>  Wraps all Qt library code in 'namespace <name> {...}'.\n     -qtlibinfix <infix>  Renames all libQt*.so to libQt*<infix>.so.\n@@ -4383,6 +4401,24 @@ if [ \""$CFG_ARCH\"" = \""arm\"" ] && [ \""${CFG_NEON}\"" = \""auto\"" ]; then\n     fi\n fi\n \n+# detect mips_dsp support\n+if [ \""${CFG_ARCH}\"" = \""mips\"" ] && [ \""${CFG_MIPS_DSP}\"" = \""auto\"" ]; then\n+    if \""$unixtests/compile.test\"" \""$XQMAKESPEC\"" \""$QMAKE_CONFIG\"" $OPT_VERBOSE \""$relpath\"" \""$outpath\"" config.tests/unix/mips_dsp \""mips_dsp\"" $L_FLAGS $I_FLAGS $l_FLAGS \""-mips32r2 -mdsp\""; then\n+  CFG_MIPS_DSP=yes\n+    else\n+  CFG_MIPS_DSP=no\n+    fi\n+fi\n+\n+# detect mips_dspr2 support\n+if [ \""${CFG_ARCH}\"" = \""mips\"" ] && [ \""${CFG_MIPS_DSPR2}\"" = \""auto\"" ]; then\n+    if \""$unixtests/compile.test\"" \""$XQMAKESPEC\"" \""$QMAKE_CONFIG\"" $OPT_VERBOSE \""$relpath\"" \""$outpath\"" config.tests/unix/mips_dspr2 \""mips_dspr2\"" $L_FLAGS $I_FLAGS $l_FLAGS \""-mips32r2 -mdspr2\""; then\n+  CFG_MIPS_DSPR2=yes\n+    else\n+  CFG_MIPS_DSPR2=no\n+    fi\n+fi\n+\n [ \""$XPLATFORM_MINGW\"" = \""yes\"" ] && QMakeVar add styles \""windowsxp windowsvista\""\n \n # detect zlib\n@@ -6025,6 +6061,8 @@ fi\n [ \""$CFG_SSSE3\"" = \""yes\"" ] && QMAKE_CONFIG=\""$QMAKE_CONFIG ssse3\""\n [ \""$CFG_SSE4_1\"" = \""yes\"" ] && QMAKE_CONFIG=\""$QMAKE_CONFIG sse4_1\""\n [ \""$CFG_SSE4_2\"" = \""yes\"" ] && QMAKE_CONFIG=\""$QMAKE_CONFIG sse4_2\""\n+[ \""$CFG_MIPS_DSP\"" = \""yes\"" ] && QMAKE_CONFIG=\""$QMAKE_CONFIG mips_dsp\""\n+[ \""$CFG_MIPS_DSPR2\"" = \""yes\"" ] && QMAKE_CONFIG=\""$QMAKE_CONFIG mips_dspr2\""\n [ \""$CFG_AVX\"" = \""yes\"" ] && QMAKE_CONFIG=\""$QMAKE_CONFIG avx\""\n [ \""$CFG_IWMMXT\"" = \""yes\"" ] && QMAKE_CONFIG=\""$QMAKE_CONFIG iwmmxt\""\n [ \""$CFG_NEON\"" = \""yes\"" ] && QMAKE_CONFIG=\""$QMAKE_CONFIG neon\""\n@@ -7064,6 +7102,7 @@ echo \""STL support ............ $CFG_STL\""\n echo \""PCH support ............ $CFG_PRECOMPILE\""\n echo \""MMX/3DNOW/SSE/SSE2/SSE3. ${CFG_MMX}/${CFG_3DNOW}/${CFG_SSE}/${CFG_SSE2}/${CFG_SSE3}\""\n echo \""SSSE3/SSE4.1/SSE4.2..... ${CFG_SSSE3}/${CFG_SSE4_1}/${CFG_SSE4_2}\""\n+echo \""MIPS_DSP/MIPS_DSPR2..... ${CFG_MIPS_DSP}/${CFG_MIPS_DSPR2}\""\n echo \""AVX..................... ${CFG_AVX}\""\n if [ \""$CFG_ARCH\"" = \""arm\"" ] || [ \""$CFG_ARCH\"" = \""armv6\"" ]; then\n     echo \""iWMMXt support ......... ${CFG_IWMMXT}\""\n"", ""painting.pri"": ""@@ -109,4 +109,21 @@ NEON_SOURCES += painting/qdrawhelper_neon.cpp\n NEON_HEADERS += painting/qdrawhelper_neon_p.h\n NEON_ASM += ../3rdparty/pixman/pixman-arm-neon-asm.S painting/qdrawhelper_neon_asm.S\n \n+mips_dsp:!mips_dspr2 {\n+  DEFINES += QT_HAVE_MIPS_DSP\n+  QMAKE_CFLAGS_USE_PRECOMPILE = \""\""\n+  SOURCES += painting/qdrawhelper_mips_dsp.cpp /\n+             painting/qdrawhelper_mips_dsp_asm.S\n+  HEADERS += painting/qdrawhelper_mips_dsp_p.h\n+}\n+\n+mips_dspr2 {\n+  DEFINES += QT_HAVE_MIPS_DSP\n+  DEFINES += QT_HAVE_MIPS_DSPR2\n+  QMAKE_CFLAGS_USE_PRECOMPILE = \""\""\n+  HEADERS += painting/qdrawhelper_mips_dsp_p.h\n+  SOURCES += painting/qdrawhelper_mips_dsp.cpp \\\n+             painting/qdrawhelper_mips_dsp_asm.S \\\n+             painting/qdrawhelper_mips_dspr2_asm.S\n+}\n include($$PWD/../../3rdparty/zlib_dependency.pri)\n"", ""qdrawhelper.cpp"": ""@@ -47,6 +47,9 @@\n #include <private/qdrawhelper_arm_simd_p.h>\n #endif\n #include <private/qdrawhelper_neon_p.h>\n+#ifdef QT_HAVE_MIPS_DSP\n+#include <private/qdrawhelper_mips_dsp_p.h>\n+#endif\n #include <private/qmath_p.h>\n #include <qmath.h>\n \n@@ -6057,6 +6060,22 @@ void qInitDrawhelperAsm()\n     }\n #endif\n \n+#if defined(QT_HAVE_MIPS_DSP)\n+        functionForMode_C[QPainter::CompositionMode_SourceOver] = comp_func_SourceOver_asm_mips_dsp;\n+        functionForMode_C[QPainter::CompositionMode_Source] = comp_func_Source_mips_dsp;\n+\n+        qt_memfill32 = qt_memfill32_asm_mips_dsp;\n+\n+        qBlendFunctions[QImage::Format_RGB32][QImage::Format_RGB32] = qt_blend_rgb32_on_rgb32_mips_dsp;\n+        qBlendFunctions[QImage::Format_ARGB32_Premultiplied][QImage::Format_RGB32] = qt_blend_rgb32_on_rgb32_mips_dsp;\n+        qBlendFunctions[QImage::Format_RGB32][QImage::Format_ARGB32_Premultiplied] = qt_blend_argb32_on_argb32_mips_dsp;\n+        qBlendFunctions[QImage::Format_ARGB32_Premultiplied][QImage::Format_ARGB32_Premultiplied] = qt_blend_argb32_on_argb32_mips_dsp;\n+\n+        destFetchProc[QImage::Format_ARGB32] = qt_destFetchARGB32_mips_dsp;\n+\n+        destStoreProc[QImage::Format_ARGB32] = qt_destStoreARGB32_mips_dsp;\n+\n+#endif // QT_HAVE_MIPS_DSP\n     if (functionForModeSolidAsm) {\n         const int destinationMode = QPainter::CompositionMode_Destination;\n         functionForModeSolidAsm[destinationMode] = functionForModeSolid_C[destinationMode];\n"", ""qdrawhelper_mips_dsp.cpp"": ""@@ -0,0 +1,178 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the QtGui module of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#include <private/qdrawhelper_p.h>\n+#include <private/qblendfunctions_p.h>\n+#include <private/qmath_p.h>\n+#include <private/qdrawhelper_mips_dsp_p.h>\n+#include <private/qpaintengine_raster_p.h>\n+\n+QT_BEGIN_NAMESPACE\n+\n+#if defined(QT_HAVE_MIPS_DSP)\n+\n+extern \""C\"" uint INTERPOLATE_PIXEL_255_asm_mips_dsp(uint x, uint a, uint y, uint b);\n+\n+extern \""C\"" uint INTERPOLATE_PIXEL_256_asm_mips_dsp(uint x, uint a, uint y, uint b);\n+\n+extern \""C\""  uint BYTE_MUL_asm_mips_dsp(uint x, uint a);\n+\n+#if defined(QT_HAVE_MIPS_DSPR2)\n+\n+extern \""C\"" uint INTERPOLATE_PIXEL_255_asm_mips_dspr2(uint x, uint a, uint y, uint b);\n+\n+extern \""C\"" uint INTERPOLATE_PIXEL_256_asm_mips_dspr2(uint x, uint a, uint y, uint b);\n+\n+extern \""C\"" uint BYTE_MUL_asm_mips_dspr2(uint x, uint a);\n+\n+#endif // QT_HAVE_MIPS_DSPR2\n+\n+void qt_blend_argb32_on_argb32_mips_dsp(uchar *destPixels, int dbpl,\n+                                      const uchar *srcPixels, int sbpl,\n+                                      int w, int h,\n+                                      int const_alpha)\n+\n+{\n+#ifdef QT_DEBUG_DRAW\n+    fprintf(stdout,\n+            \""qt_blend_argb32_on_argb32: dst=(%p, %d), src=(%p, %d), dim=(%d, %d) alpha=%d\\n\"",\n+            destPixels, dbpl, srcPixels, sbpl, w, h, const_alpha);\n+    fflush(stdout);\n+#endif\n+\n+    const uint *src = (const uint *) srcPixels;\n+    uint *dst = (uint *) destPixels;\n+    if (const_alpha == 256) {\n+        for (int y=0; y<h; ++y) {\n+            for (int x=0; x<w; ++x) {\n+                uint s = src[x];\n+                if (s >= 0xff000000)\n+                    dst[x] = s;\n+                else if (s != 0)\n+#if !defined(QT_HAVE_MIPS_DSPR2)\n+                    dst[x] = s + BYTE_MUL_asm_mips_dsp(dst[x], qAlpha(~s));\n+#else\n+                    dst[x] = s + BYTE_MUL_asm_mips_dspr2(dst[x], qAlpha(~s));\n+#endif\n+            }\n+            dst = (quint32 *)(((uchar *) dst) + dbpl);\n+            src = (const quint32 *)(((const uchar *) src) + sbpl);\n+        }\n+    } else if (const_alpha != 0) {\n+        const_alpha = (const_alpha * 255) >> 8;\n+        for (int y=0; y<h; ++y) {\n+            for (int x=0; x<w; ++x) {\n+#if !defined(QT_HAVE_MIPS_DSPR2)\n+                uint s = BYTE_MUL_asm_mips_dsp(src[x], const_alpha);\n+                dst[x] = s + BYTE_MUL_asm_mips_dsp(dst[x], qAlpha(~s));\n+#else\n+                uint s = BYTE_MUL_asm_mips_dspr2(src[x], const_alpha);\n+                dst[x] = s + BYTE_MUL_asm_mips_dspr2(dst[x], qAlpha(~s));\n+#endif\n+            }\n+            dst = (quint32 *)(((uchar *) dst) + dbpl);\n+            src = (const quint32 *)(((const uchar *) src) + sbpl);\n+        }\n+    }\n+}\n+\n+void qt_blend_rgb32_on_rgb32_mips_dsp(uchar *destPixels, int dbpl,\n+                                    const uchar *srcPixels, int sbpl,\n+                                    int w, int h,\n+                                    int const_alpha)\n+{\n+#ifdef QT_DEBUG_DRAW\n+    fprintf(stdout,\n+            \""qt_blend_rgb32_on_rgb32: dst=(%p, %d), src=(%p, %d), dim=(%d, %d) alpha=%d\\n\"",\n+            destPixels, dbpl, srcPixels, sbpl, w, h, const_alpha);\n+    fflush(stdout);\n+#endif\n+\n+    if (const_alpha != 256) {\n+        qt_blend_argb32_on_argb32_mips_dsp(destPixels, dbpl, srcPixels, sbpl, w, h, const_alpha);\n+        return;\n+    }\n+\n+    const uint *src = (const uint *) srcPixels;\n+    uint *dst = (uint *) destPixels;\n+    int len = w * 4;\n+    for (int y=0; y<h; ++y) {\n+        memcpy(dst, src, len);\n+        dst = (quint32 *)(((uchar *) dst) + dbpl);\n+        src = (const quint32 *)(((const uchar *) src) + sbpl);\n+    }\n+}\n+\n+void comp_func_Source_mips_dsp(uint *dest, const uint *src, int length, uint const_alpha)\n+{\n+    if (const_alpha == 255) {\n+        ::memcpy(dest, src, length * sizeof(uint));\n+    } else {\n+        int ialpha = 255 - const_alpha;\n+        for (int i = 0; i < length; ++i) {\n+#if !defined(QT_HAVE_MIPS_DSPR2)\n+            dest[i] = INTERPOLATE_PIXEL_255_asm_mips_dsp(src[i], const_alpha, dest[i], ialpha);\n+#else\n+            dest[i] = INTERPOLATE_PIXEL_255_asm_mips_dspr2(src[i], const_alpha, dest[i], ialpha);\n+#endif\n+        }\n+    }\n+}\n+\n+uint * QT_FASTCALL qt_destFetchARGB32_mips_dsp(uint *buffer,\n+                                          QRasterBuffer *rasterBuffer,\n+                                          int x, int y, int length)\n+{\n+    const uint *data = (const uint *)rasterBuffer->scanLine(y) + x;\n+    buffer = destfetchARGB32_asm_mips_dsp(buffer, data, length);\n+    return buffer;\n+}\n+\n+void QT_FASTCALL qt_destStoreARGB32_mips_dsp(QRasterBuffer *rasterBuffer, int x, int y,\n+                                             const uint *buffer, int length)\n+{\n+    uint *data = (uint *)rasterBuffer->scanLine(y) + x;\n+    qt_destStoreARGB32_asm_mips_dsp(data, buffer, length);\n+}\n+\n+#endif // QT_HAVE_MIPS_DSP\n+\n+QT_END_NAMESPACE\n"", ""qdrawhelper_mips_dsp_asm.S"": ""@@ -0,0 +1,483 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the QtGui module of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#include \""qt_mips_asm_dsp.h\""\n+\n+LEAF_MIPS_DSP(INTERPOLATE_PIXEL_256_asm_mips_dsp)\n+/*\n+ * a0 - uint x (First value to multiply)\n+ * a1 - uint a (Multiplicator byte for first value)\n+ * a2 - uint y (Second value to multiply)\n+ * a3 - uint b (Multiplicator byte for second value)\n+ */\n+\n+    .set reorder\n+    preceu.ph.qbra    t0, a0    /* (x & 0xff00ff) */\n+    preceu.ph.qbra    t1, a2    /* (y & 0xff00ff) */\n+    multu             t1, a3    /* AClo = (y & 0xff00ff)*b */\n+    madd              t0, a1    /* AClo = (x & 0xff00ff)*a + (y & 0xff00ff)*b */\n+    mflo              t2\n+    preceu.ph.qbla    t2, t2    /* (t >> 8) & 0xff00ff */\n+    preceu.ph.qbla    t3, a0    /* ((x>>8) & 0xff00ff) */\n+    preceu.ph.qbla    t4, a2    /* ((y>>8) & 0xff00ff) */\n+    multu             t4, a3\n+    madd              t3, a1\n+    mflo              t5\n+    and               t5, t5, 0xff00ff00\n+    or                t0, t2, t5\n+    move              v0, t0\n+    j                 ra\n+\n+END(INTERPOLATE_PIXEL_256_asm_mips_dsp)\n+\n+LEAF_MIPS_DSP(INTERPOLATE_PIXEL_255_asm_mips_dsp)\n+/*\n+ * a0 - uint x (First value to multiply)\n+ * a1 - uint a (Multiplicator byte for first value)\n+ * a2 - uint y (Second value to multiply)\n+ * a3 - uint b (Multiplicator byte for second value)\n+ */\n+\n+    .set reorder\n+    li                t4, 8388736\n+    preceu.ph.qbra    t0, a0        /* (x & 0xff00ff) */\n+    mul               t0, t0, a1    /* (x & 0xff00ff) * a */\n+    preceu.ph.qbra    t1, a2        /* (y & 0xff00ff) */\n+    mul               t1, t1, a3    /* (y & 0xff00ff) * b */\n+    addu              t0, t0, t1    /* (x & 0xff00ff) * a +\n+                                     * (y & 0xff00ff) * b\n+                                     */\n+    preceu.ph.qbla    t1, t0        /* (t >> 8) & 0xff00ff */\n+    addu              t0, t0, t1    /* t + ((t >> 8) & 0xff00ff */\n+    addu              t0, t0, t4    /* t + ((t >> 8) & 0xff00ff) + 0x800080 */\n+    preceu.ph.qbla    t0, t0        /* t >> 8 and t&=0xff00ff */\n+    preceu.ph.qbla    t2, a0        /* (x>>8) & 0xff00ff */\n+    mul               t2, t2, a1    /* ((x>>8) & 0xff00ff) * a */\n+    preceu.ph.qbla    t3, a2        /* ((y>>8) & 0xff00ff) */\n+    mul               t3, t3, a3    /* ((y>>8) & 0xff00ff) * b */\n+    addu              t2, t2, t3    /* ((x>>8) & 0xff00ff) * a +\n+                                     * ((y >> 8) & 0xff00ff) * b\n+                                     */\n+    preceu.ph.qbla    t3, t2        /* (x>>8) & 0xff00ff */\n+    addu              t2, t2, t3    /* (x>>8) & 0xff00ff) + 0x800080 */\n+    addu              t2, t2, t4    /* x + ((x>>8) & 0xff00ff) + 0x800080 */\n+    and               t2, t2, 0xff00ff00\n+    or                t1, t0, t2\n+    move              v0, t1\n+    j                 ra\n+\n+END(INTERPOLATE_PIXEL_255_asm_mips_dsp)\n+\n+LEAF_MIPS_DSP(BYTE_MUL_asm_mips_dsp)\n+/*\n+ * a0 - uint x (Value to multiply)\n+ * a1 - uint a (Multiplicator byte)\n+ */\n+\n+    .set reorder\n+    replv.ph          a1, a1         /* a1 = 0x00a00a */\n+    li                t4, 8388736    /* t4 = 0x800080 */\n+    muleu_s.ph.qbl    t0, a0, a1\n+    muleu_s.ph.qbr    t2, a0, a1\n+    preceu.ph.qbla    t1, t0\n+    addu              t0, t0, t1\n+    addu              t0, t0, t4\n+    preceu.ph.qbla    t3, t2\n+    addu              t2, t2, t3\n+    addu              t2, t2, t4\n+    precrq.qb.ph      t4, t0, t2\n+    move              v0, t4\n+    j                 ra\n+\n+END(BYTE_MUL_asm_mips_dsp)\n+\n+LEAF_MIPS_DSP(PREMUL)\n+/*\n+ * a0 - uint x\n+ */\n+\n+    srl               t6, a0, 24    /* t6 = alpha */\n+    preceu.ph.qbra    t0, a0\n+    mul               t1, t0, t6\n+    preceu.ph.qbla    t4, a0\n+    mul               t5, t4, t6\n+    li                t7, 388736    /* t7 = 0x800080 */\n+    preceu.ph.qbla    t2, t1\n+    addq.ph           t3, t1, t2\n+    addq.ph           t3, t3, t7\n+    preceu.ph.qbla    t1, t3        /* t1 holds R & B blended with alpha\n+                                     * | 0 | dRab | 0 | dBab |\n+                                     */\n+    preceu.ph.qbla    t2, t5\n+    addq.ph           t3, t2, t5\n+    addq.ph           t4, t3, t7\n+    preceu.ph.qbla    t2, t4        /* t2 holds A & G blended with alpha\n+                                     * | 0 | dAab | 0 | dGab |\n+                                     */\n+    andi              t2, t2, 255\n+    sll               t0, t6, 24\n+    sll               t3, t2, 8\n+    or                t4, t0, t3\n+    j                 ra\n+     or               v0, t1, t4\n+\n+END(PREMUL)\n+\n+LEAF_MIPS_DSP(destfetchARGB32_asm_mips_dsp)\n+/*\n+ * a0 - buffer address (dst)\n+ * a1 - data address (src)\n+ * a2 - length\n+ */\n+\n+    beqz              a2, 2f\n+     move             v0, a0         /* just return the address of buffer\n+                                      * for storing returning values */\n+    move              v0, a0\n+    andi              t1, a2, 0x1\n+    li                t7, 8388736    /* t7 = 0x800080 */\n+    beqz              t1, 1f\n+     nop\n+    lw                t8, 0(a1)\n+    addiu             a2, a2, -1\n+    srl               t6, t8, 24     /* t6 = alpha */\n+\n+    preceu.ph.qbra    t0, t8\n+    mul               t1, t0, t6\n+    preceu.ph.qbla    t4, t8\n+    mul               t5, t4, t6\n+\n+    preceu.ph.qbla    t2, t1\n+    addq.ph           t3, t1, t2\n+    addq.ph           t3, t3, t7\n+    preceu.ph.qbla    t1, t3         /* t1 holds R & B blended with alpha\n+                                      * | 0 | dRab | 0 | dBab | */\n+    preceu.ph.qbla    t2, t5\n+    addq.ph           t3, t2, t5\n+    addq.ph           t4, t3, t7\n+    preceu.ph.qbla    t2, t4         /* t2 holds A & G blended with alpha\n+                                      * | 0 | dAab | 0 | dGab | */\n+    andi              t2, t2, 255    /* t2 = 0xff */\n+\n+    sll               t0, t6, 24\n+    sll               t3, t2, 8\n+    or                t4, t0, t3\n+    or                t0, t1, t4\n+    sw                t0, 0(a0)\n+    addiu             a0, a0, 4\n+    addiu             a1, a1, 4\n+    beqz              a2, 2f         /* there was only one member */\n+     nop\n+1:\n+    lw                t0, 0(a1)      /* t0 = src1 */\n+    lw                t1, 4(a1)      /* t1 = src2 */\n+    precrq.qb.ph      t4, t0, t1     /* t4 = a1 G1 a2 G2 */\n+    preceu.ph.qbra    t3, t4         /* t3 = 0 G1 0 G2 */\n+    preceu.ph.qbla    t2, t4         /* t2 = | 0 | a1 | 0 | a2 | */\n+    srl               t5, t2, 8\n+    or                t8, t2, t5     /* t8 = 0 a1 a1 a2 */\n+    muleu_s.ph.qbr    t5, t8, t3\n+\n+    addiu             a2, a2, -2\n+    addiu             a1, a1, 8\n+    precrq.ph.w       t9, t0, t1\n+    preceu.ph.qbra    t9, t9\n+\n+    preceu.ph.qbla    t6, t5\n+    addq.ph           t5, t5, t6\n+    addq.ph           t2, t5, t7\n+    muleu_s.ph.qbr    t6, t8, t9\n+    sll               t3, t1, 16\n+    packrl.ph         t3, t0, t3\n+    preceu.ph.qbra    t3, t3\n+    muleu_s.ph.qbr    t8, t8, t3\n+    preceu.ph.qbla    t3, t6\n+    addq.ph           t3, t6, t3\n+    addq.ph           t3, t3, t7\n+    preceu.ph.qbla    t5, t8\n+    addq.ph           t5, t8, t5\n+    addq.ph           t5, t5, t7\n+\n+    precrq.ph.w       t0, t4, t3     /* t0 = | 0 |  a1 | 0 | dR1 | */\n+    precrq.ph.w       t1, t2, t5     /* t1 = | 0 | dG1 | 0 | dB1 | */\n+    precrq.qb.ph      t6, t0, t1     /* t6 = | a1 | dR1 | dG1 | dB1 | */\n+    sll               t3, t3, 16\n+    sll               t5, t5, 16\n+    packrl.ph         t0, t4, t3\n+    packrl.ph         t1, t2, t5\n+    precrq.qb.ph      t8, t0, t1     /* t8 = | a2 | dR2 | dG2 | dB2 | */\n+    sw                t6, 0(a0)\n+    sw                t8, 4(a0)\n+    bnez              a2, 1b\n+     addiu            a0, a0, 8\n+2:\n+    j                 ra\n+     nop\n+\n+END(destfetchARGB32_asm_mips_dsp)\n+\n+LEAF_MIPS_DSP(qt_memfill32_asm_mips_dsp)\n+/*\n+ * a0 - destination address (dst)\n+ * a1 - value\n+ * a2 - count\n+ */\n+\n+    beqz      a2, 5f\n+     nop\n+    li        t8, 8\n+    andi      t0, a2, 0x7    /* t0 holds how many counts exceeds 8 */\n+    beqzl     t0, 2f         /* count is multiple of 8 (8, 16, 24, ....) */\n+     addiu    a2, a2, -8\n+    subu      a2, a2, t0\n+1:\n+    sw        a1, 0(a0)\n+    addiu     t0, t0, -1\n+    bnez      t0, 1b\n+     addiu    a0, a0, 4\n+    bgeu      a2, t8, 2f\n+     addiu    a2, a2, -8\n+    b         5f\n+     nop\n+2:\n+    beqz      a2, 4f\n+     nop\n+3:\n+    pref      30, 32(a0)\n+    addiu     a2, a2, -8\n+    sw        a1, 0( a0)\n+    sw        a1, 4(a0)\n+    sw        a1, 8(a0)\n+    sw        a1, 12(a0)\n+    addiu     a0, a0, 32\n+    sw        a1, -16(a0)\n+    sw        a1, -12(a0)\n+    sw        a1, -8(a0)\n+    bnez      a2, 3b\n+     sw       a1, -4(a0)\n+4:\n+    sw        a1, 0(a0)\n+    sw        a1, 4(a0)\n+    sw        a1, 8(a0)\n+    sw        a1, 12(a0)\n+    addiu     a0, a0, 32\n+    sw        a1, -16(a0)\n+    sw        a1, -12(a0)\n+    sw        a1, -8(a0)\n+    sw        a1, -4(a0)\n+5:\n+    jr        ra\n+     nop\n+\n+END(qt_memfill32_asm_mips_dsp)\n+\n+LEAF_MIPS_DSP(comp_func_SourceOver_asm_mips_dsp)\n+/*\n+ * a0 - uint *dest\n+ * a1 - const uint *src\n+ * a2 - int length\n+ * a3 - uint const_alpha\n+ */\n+\n+    beqz              a2, 5f\n+     nop\n+    li                t8, 0xff\n+    li                t7, 8388736    /* t7 = 0x800080 */\n+    bne               a3, t8, 4f\n+     nop\n+\n+/* part where const_alpha = 255 */\n+    b                 2f\n+     nop\n+1:\n+    addiu             a0, a0, 4\n+    addiu             a2, a2, -1\n+    beqz              a2, 5f\n+     nop\n+2:\n+    lw                t0, 0(a1)      /* t0 = s = src[i] */\n+    addiu             a1, a1, 4\n+    nor               t1, t0, zero\n+    srl               t1, t1, 24     /* t1 = ~qAlpha(s) */\n+    bnez              t1, 3f\n+     nop\n+    sw                t0, 0(a0)      /* dst[i] = src[i] */\n+    addiu             a2, a2, -1\n+    bnez              a2, 2b\n+     addiu            a0, a0, 4\n+    b 5f\n+     nop\n+3:\n+    beqz              t0, 1b\n+     nop\n+\n+    lw                t4, 0(a0)\n+    replv.ph          t6, t1\n+    muleu_s.ph.qbl    t2, t4, t6\n+    muleu_s.ph.qbr    t3, t4, t6\n+    addiu             a2, a2, -1\n+    preceu.ph.qbla    t4, t2\n+    addq.ph           t4, t2, t4\n+    addq.ph           t4, t4, t7\n+    preceu.ph.qbla    t5, t3\n+    addq.ph           t5, t5, t3\n+    addq.ph           t5, t5, t7\n+    precrq.qb.ph      t8, t4, t5    /* t8 = | dsA | dsR | dsG | dsB | */\n+    addu              t8, t0, t8    /* dst[i] =\n+                                     * s + BYTE_MUL(dst[i],~qAlpha(s)) */\n+    sw                t8, 0(a0)\n+    bnez              a2, 2b\n+     addiu            a0, a0, 4\n+    b                 5f\n+     nop\n+4:\n+    lw                t0, 0(a0)     /* t0 - dst[i] \""1\"" */\n+    lw                t1, 0(a1)     /* t1 - src[i] \""2\"" */\n+    addiu             a1, a1, 4\n+    addiu             a2, a2, -1\n+    replv.ph          t6, a3        /* a1 = 0x00a00a */\n+    muleu_s.ph.qbl    t2, t1, t6\n+    muleu_s.ph.qbr    t3, t1, t6\n+    preceu.ph.qbla    t4, t2\n+    addq.ph           t4, t2, t4\n+    addq.ph           t4, t4, t7\n+    preceu.ph.qbla    t5, t3\n+    addq.ph           t5, t5, t3\n+    addq.ph           t5, t5, t7\n+    precrq.qb.ph      t8, t4, t5    /* t8 = | dsA | dsR | dsG | dsB | */\n+\n+    nor               t6, t8, zero\n+    srl               t6, t6, 24\n+    replv.ph          t6, t6\n+\n+    muleu_s.ph.qbl    t2, t0, t6\n+    muleu_s.ph.qbr    t3, t0, t6\n+    preceu.ph.qbla    t4, t2\n+    addq.ph           t4, t2, t4\n+    addq.ph           t4, t4, t7\n+    preceu.ph.qbla    t5, t3\n+    addq.ph           t5, t5, t3\n+    addq.ph           t5, t5, t7\n+    precrq.qb.ph      t6, t4, t5    /* t6 = | ddA | ddR | ddG | ddB | */\n+\n+    addu              t0, t8, t6\n+    sw                t0, 0(a0)\n+    bnez              a2, 4b\n+     addiu            a0, a0, 4\n+5:\n+    jr                ra\n+     nop\n+\n+END(comp_func_SourceOver_asm_mips_dsp)\n+\n+LEAF_MIPS_DSP(qt_destStoreARGB32_asm_mips_dsp)\n+/*\n+ * a0 - uint * data\n+ * a1 - const uint *buffer\n+ * a2 - int length\n+ */\n+\n+    blez      a2, 6f\n+    move      v1, zero\n+    li        t0, 255\n+    lui       a3, 0xff\n+    j         2f\n+     lui      t2, 0xff00\n+1:\n+    addiu     v1, v1, 1\n+    sw        zero, 0(a0)\n+    addiu     a1, a1, 4\n+    beq       v1, a2, 6f\n+    addiu     a0, a0, 4\n+2:\n+    lw        v0, 0(a1)\n+    srl       t3, v0, 0x18\n+    beql      t3, t0, 5f\n+    addiu     v1, v1, 1\n+    beqz      t3, 1b\n+\n+    srl       t1, v0, 0x8\n+    andi      t1, t1, 0xff\n+\n+    teq       t3, zero, 0x7\n+    div       zero, a3, t3\n+    move      t8, t3\n+    andi      t6, v0, 0xff\n+\n+    srl       t3,v0,0x10\n+    andi      t3,t3,0xff\n+\n+    and       t5, v0, t2\n+    mflo      t4\n+\n+    mult      $ac0, t4, t6\n+    mult      $ac1, t1, t4\n+    mul       t4, t3, t4\n+\n+    sltiu     t8, t8, 2\n+    beqz      t8, 3f\n+     nop\n+    mflo      t6, $ac0\n+    mflo      t1, $ac1\n+    sra       t6, t6, 0x10\n+    sra       t1, t1, 0x8\n+    b         4f\n+     nop\n+3:\n+    extr.w    t6, $ac0, 0x10\n+    extr.w    t1, $ac1, 0x8\n+4:\n+    and       v0, t4, a3\n+    or        v0, v0, t6\n+    or        v0, v0, t5\n+    andi      t1, t1, 0xff00\n+    or        v0, v0, t1\n+    addiu     v1, v1, 1\n+5:\n+    sw        v0, 0(a0)\n+    addiu     a1, a1, 4\n+    bne       v1, a2, 2b\n+    addiu     a0, a0, 4\n+6:\n+    jr        ra\n+     nop\n+\n+END(qt_destStoreARGB32_asm_mips_dsp)\n"", ""qdrawhelper_mips_dsp_p.h"": ""@@ -0,0 +1,99 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the QtGui module of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#ifndef QDRAWHELPER_MIPS_P_H\n+#define QDRAWHELPER_MIPS_P_H\n+\n+#include <private/qdrawhelper_p.h>\n+#include <stdint.h>\n+\n+QT_BEGIN_NAMESPACE\n+\n+#if defined(QT_HAVE_MIPS_DSP)\n+\n+extern \""C\"" void qt_memfill32_asm_mips_dsp(quint32 *dest, quint32 value, int count);\n+\n+extern \""C\"" void comp_func_SourceOver_asm_mips_dsp(uint *dest, const uint *src, int length, uint const_alpha);\n+\n+extern \""C\"" uint * destfetchARGB32_asm_mips_dsp(uint *buffer, const uint *data, int length);\n+\n+extern \""C\"" uint * qt_destStoreARGB32_asm_mips_dsp(uint *buffer, const uint *data, int length);\n+\n+void qt_blend_argb32_on_argb32_mips_dsp(uchar *destPixels, int dbpl,\n+                                      const uchar *srcPixels, int sbpl,\n+                                      int w, int h,\n+                                      int const_alpha);\n+\n+void qt_blend_rgb32_on_rgb32_mips_dsp(uchar *destPixels, int dbpl,\n+                                    const uchar *srcPixels, int sbpl,\n+                                    int w, int h,\n+                                    int const_alpha);\n+\n+void comp_func_Source_mips_dsp(uint *dest, const uint *src, int length, uint const_alpha);\n+\n+uint * QT_FASTCALL qt_destFetchARGB32_mips_dsp(uint *buffer,\n+                                          QRasterBuffer *rasterBuffer,\n+                                          int x, int y, int length);\n+\n+void QT_FASTCALL qt_destStoreARGB32_mips_dsp(QRasterBuffer *rasterBuffer, int x, int y,\n+                                             const uint *buffer, int length);\n+\n+#if defined(QT_HAVE_MIPS_DSPR2)\n+\n+extern \""C\"" void qt_blend_argb32_on_argb32_mips_dspr2(uchar *destPixels, int dbpl,\n+                                      const uchar *srcPixels, int sbpl,\n+                                      int w, int h,\n+                                      int const_alpha);\n+\n+void qt_blend_rgb32_on_rgb32_mips_dspr2(uchar *destPixels, int dbpl,\n+                                    const uchar *srcPixels, int sbpl,\n+                                    int w, int h,\n+                                    int const_alpha);\n+\n+void comp_func_Source_mips_dspr2(uint *dest, const uint *src, int length, uint const_alpha);\n+\n+#endif // QT_HAVE_MIPS_DSPR2\n+\n+#endif // QT_HAVE_MIPS_DSP\n+\n+QT_END_NAMESPACE\n+\n+#endif // QDRAWHELPER_MIPS_P_H\n"", ""qdrawhelper_mips_dspr2_asm.S"": ""@@ -0,0 +1,118 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the QtGui module of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#include \""qt_mips_asm_dsp.h\""\n+\n+LEAF_MIPS_DSPR2(INTERPOLATE_PIXEL_256_asm_mips_dspr2)\n+/*\n+ * a0 - uint x (First value to multiply)\n+ * a1 - uint a (Multiplicator byte for first value)\n+ * a2 - uint y (Second value to multiply)\n+ * a3 - uint b (Multiplicator byte for second value)\n+ */\n+\n+    .set reorder\n+    replv.ph          a1, a1\n+    replv.ph          a3, a3\n+    muleu_s.ph.qbl    t0, a0, a1\n+    muleu_s.ph.qbl    t1, a2, a3\n+    muleu_s.ph.qbr    t2, a0, a1\n+    muleu_s.ph.qbr    t3, a2, a3\n+    addu.ph           t4, t0, t1\n+    addu.ph           t5, t2, t3\n+    precrq.qb.ph      t2, t4, t5\n+    move              v0, t2\n+    j                 ra\n+\n+END(INTERPOLATE_PIXEL_256_asm_mips_dspr2)\n+\n+LEAF_MIPS_DSPR2(INTERPOLATE_PIXEL_255_asm_mips_dspr2)\n+/*\n+ * a0 - uint x (First value to multiply)\n+ * a1 - uint a (Multiplicator byte for first value)\n+ * a2 - uint y (Second value to multiply)\n+ * a3 - uint b (Multiplicator byte for second value)\n+ */\n+\n+    .set reorder\n+    replv.ph          a1, a1\n+    replv.ph          a3, a3\n+    li                t8, 8388736\n+    muleu_s.ph.qbl    t0, a0, a1\n+    muleu_s.ph.qbl    t1, a2, a3\n+    muleu_s.ph.qbr    t2, a0, a1\n+    muleu_s.ph.qbr    t3, a2, a3\n+    addu.ph           t4, t0, t1\n+    addu.ph           t5, t2, t3\n+    preceu.ph.qbla    t0, t4\n+    addu              t1, t0, t8\n+    addu              t1, t4, t1\n+    preceu.ph.qbla    t6, t5\n+    addu              t7, t6, t8\n+    addu              t7, t5, t7\n+    precrq.qb.ph      t2, t1, t7\n+    move              v0, t2\n+    j                 ra\n+\n+END(INTERPOLATE_PIXEL_255_asm_mips_dspr2)\n+\n+LEAF_MIPS_DSPR2(BYTE_MUL_asm_mips_dspr2)\n+/*\n+ * a0 - uint x (Value to multiply)\n+ * a1 - uint a (Multiplicator byte)\n+ */\n+\n+    .set reorder\n+    replv.ph          a1, a1              /* a1 = 0x00a00a */\n+    li                t4, 8388736         /* t4 = 0x800080 */\n+    muleu_s.ph.qbl    t0, a0, a1\n+    muleu_s.ph.qbr    t2, a0, a1\n+    preceu.ph.qbla    t1, t0\n+    addu              t0, t0, t1\n+    addu              t0, t0, t4\n+    preceu.ph.qbla    t3, t2\n+    addu              t2, t2, t3\n+    addu              t2, t2, t4\n+    precrq.qb.ph      t4, t0, t2\n+    move              v0, t4\n+    j                 ra\n+\n+END(BYTE_MUL_asm_mips_dspr2)\n"", ""qt_mips_asm_dsp.h"": ""@@ -0,0 +1,113 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the QtGui module of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#ifndef QT_MIPS_DSP_H__\n+#define QT_MIPS_DSP_H__\n+\n+#define zero $0\n+#define AT   $1\n+#define v0   $2\n+#define v1   $3\n+#define a0   $4\n+#define a1   $5\n+#define a2   $6\n+#define a3   $7\n+#define t0   $8\n+#define t1   $9\n+#define t2   $10\n+#define t3   $11\n+#define t4   $12\n+#define t5   $13\n+#define t6   $14\n+#define t7   $15\n+#define s0   $16\n+#define s1   $17\n+#define s2   $18\n+#define s3   $19\n+#define s4   $20\n+#define s5   $21\n+#define s6   $22\n+#define s7   $23\n+#define t8   $24\n+#define t9   $25\n+#define k0   $26\n+#define k1   $27\n+#define gp   $28\n+#define sp   $29\n+#define fp   $30\n+#define s8   $30\n+#define ra   $31\n+\n+/*\n+ * LEAF_MIPS32R2 - declare leaf_mips32r2 routine\n+ */\n+#define LEAF_MIPS32R2(symbol)                           \\\n+                .globl  symbol;                         \\\n+                .align  2;                              \\\n+                .type   symbol,@function;               \\\n+                .ent    symbol,0;                       \\\n+symbol:         .frame  sp, 0, ra;                      \\\n+                .set    arch=mips32r2;                  \\\n+                .set    noreorder;\n+\n+/*\n+ * LEAF_MIPS_DSP - declare leaf_mips_dsp routine\n+ */\n+#define LEAF_MIPS_DSP(symbol)                           \\\n+LEAF_MIPS32R2(symbol)                                   \\\n+                .set    dsp;\n+\n+/*\n+ * LEAF_MIPS_DSPR2 - declare leaf_mips_dspr2 routine\n+ */\n+#define LEAF_MIPS_DSPR2(symbol)                         \\\n+LEAF_MIPS32R2(symbol)                                   \\\n+                .set   dspr2;\n+\n+/*\n+ * END - mark end of function\n+ */\n+#define END(function)                                   \\\n+                .set    reorder;                        \\\n+                .end    function;                       \\\n+                .size   function,.-function\n+\n+#endif //QT_MIPS_DSP_H__\n""}",feature; resource; test,"feature,test 
",feature;resource;test;
17983.0,17983.0,resource,Alan Alpert (Inactive),Examples guidelines have changes slightly,"Examples guidelines have changes slightly

Update docs to current thinking.

Change-Id: Ide00240f4d779549eebdc81592f3f2104dfd759a",['examples/HACKING'],"{""HACKING"": ""@@ -7,13 +7,13 @@ Snippets are snatches of QML code that won't even run on their own. They don't b\n Examples\n ---\n \n-Examples are large blocks of QML code that demonstrate a feature. You should be able to launch an example and visually see the feature take effect. Examples should be written in a small form, and should automatically activate any features. Ideally, when you run an example, you see the feature demonstrate itself over and over until you get bored and close the application using your platform's close window mechanism. Examples shouldn't contain their own close buttons or start screen, explanatory text should be kept to a minimum (show, not tell), and reserve interaction for demonstrating interactive elements). The code should be held to a high level of quality, and should be understandable by people new to QML.\n+Examples are large blocks of QML code that demonstrate a feature. You should be able to launch an example and visually see the feature take effect. Examples should be written in a small form, and should automatically activate any features. Ideally, when you run an example, you see the feature demonstrate itself over and over until you get bored and close the application using your platform's close window mechanism. Examples shouldn't contain their own close buttons or start screen, explanatory text should be kept to a minimum (show, not tell), and reserve interaction for demonstrating interactive elements. The code should be held to a high level of quality, and should be understandable by people new to QML.\n \n Unless the demonstrated feature uses it, assume no interface devices other than a screen that can show a 320x480 rectangle and a generic pointing device (with the shared subset of mouse/touch functionality).\n \n-Groups of similar examples should be placed in one folder with a single launcher application, which uses the QtQuick.Examples module for common components.\n+Groups of similar examples should be placed in one folder with a single launcher application, which uses the shared folder of common components.\n \n-The example, or launcher application in case of groups, should contain a qdoc comment explaining the example. The example or launcher should be buildable as a full C++ application and runnable with the standard qml file launcher.\n+The example, or launcher application in case of groups, should contain a qdoc comment explaining the example. The example or launcher should be buildable as a full C++ application and runnable with the standard qml file launcher. Usually this will consist primarily of using the macro found in shared.h.\n \n Demos\n ---\n""}",resource,"resource 
",resource;
24665.0,24665.0,resource,Yann Bodson,Fix typo in documentation,"Fix typo in documentation

Change-Id: Ia3cc61b2af7a68e15ad9668dc67275e8a2386a8c",['examples/quick/imageelements/imageelements.qml'],"{""imageelements.qml"": ""@@ -71,7 +71,7 @@ import \""../../shared\""\n     When the scene is clicked, an animation sets the sprite sequence to the\n     'falling' states and animates the bear's y property.\n     \\snippet examples/quick/imageelements/spritesequence.qml animation\n-    At the end of the amimation the bear is set back to its initial state.\n+    At the end of the animation the bear is set back to its initial state.\n */\n \n Item {\n""}",resource,"resource 
",bug;resource;
23674.0,23674.0,"resource,test",Thiago Macieira,Add missing private headers to testlib.pro,"Add missing private headers to testlib.pro

Change-Id: Id927b05374b9e82fbee029258f176223b8b32e90",['src/testlib/testlib.pro'],"{""testlib.pro"": ""@@ -14,6 +14,11 @@ unix:!embedded:QMAKE_PKGCONFIG_DESCRIPTION = Qt \\\n     Library\n \n HEADERS = qbenchmark.h \\\n+    qbenchmark_p.h \\\n+    qbenchmarkmeasurement_p.h \\\n+    qbenchmarkvalgrind_p.h \\\n+    qbenchmarkevent_p.h \\\n+    qbenchmarkmetric_p.h \\\n     qsignalspy.h \\\n     qtestaccessible.h \\\n     qtestassert.h \\\n""}","resource,test","test 
",resource;test;
14504.0,14504.0,deprecate,Xizhi Zhu,Remove Symbian specific code in 3rdparty.,"Remove Symbian specific code in 3rdparty.

Symbian specific code in libtiff was added by commit
6ddf09085f1e8a3cc83c4ee0c77c433d26819c35 in Qt4, code in libpng was
added by commit 66fb4038649cfd1d660204bf7c70f99a409ede4f in Qt4, so
they are removed.

Symbian specific code in freetype was copied from upstream, so kept
untouched.

Change-Id: I74f169d9283eefd91ec2e97cbd1b8f03dc449380","['src/3rdparty/libpng/pngpriv.h', 'src/3rdparty/zlib_dependency.pri', 'src/3rdparty/libtiff/libtiff/tif_config.h', 'src/3rdparty/libtiff/libtiff/tif_unix.c', 'src/3rdparty/libjpeg.pri', 'src/3rdparty/s60/eiksoftkeyimage.h', 'src/3rdparty/libtiff.pri']","{""libjpeg.pri"": ""@@ -5,10 +5,7 @@ wince*: {\n }\n \n #Disable warnings in 3rdparty code due to unused arguments\n-symbian: {\n-    QMAKE_CXXFLAGS.CW += -W nounusedarg\n-    TARGET.UID3=0x2001E61B\n-} else:contains(QMAKE_CC, gcc): {\n+contains(QMAKE_CC, gcc): {\n     QMAKE_CFLAGS_WARN_ON += -Wno-unused-parameter -Wno-main\n }\n \n"", ""pngpriv.h"": ""@@ -179,9 +179,7 @@ typedef PNG_CONST png_uint_16p FAR * png_const_uint_16pp;\n \n #if defined(WIN32) || defined(_Windows) || defined(_WINDOWS) || \\\n     defined(_WIN32) || defined(__WIN32__)\n-#  if !defined(__SYMBIAN32__)\n-#    include <windows.h>  /* defines _WINDOWS_ macro */\n-#  endif\n+#  include <windows.h>  /* defines _WINDOWS_ macro */\n #endif\n \n /* Moved here around 1.5.0beta36 from pngconf.h */\n"", ""libtiff.pri"": ""@@ -38,6 +38,5 @@ wince*:       SOURCES += $$PWD/../corelib/kernel/qfunctions_wince.cpp \\\n                          $$PWD/libtiff/libtiff/tif_wince.c\n win32:        SOURCES += $$PWD/libtiff/libtiff/tif_win32.c\n else:         SOURCES += $$PWD/libtiff/libtiff/tif_unix.c\n-symbian:      SOURCES += $$PWD/libtiff/port/lfind.c\n \n include($$PWD/zlib_dependency.pri)\n"", ""tif_config.h"": ""@@ -110,7 +110,7 @@\n /* #undef HAVE_PTHREAD */\n \n /* Define to 1 if you have the <search.h> header file. */\n-#if !defined(Q_OS_WINCE) && !defined(Q_OS_SYMBIAN) && !defined(Q_OS_VXWORKS)\n+#if !defined(Q_OS_WINCE) && !defined(Q_OS_VXWORKS)\n #define HAVE_SEARCH_H 1\n #endif\n \n@@ -319,12 +319,10 @@\n \n /* Define to `__inline__' or `__inline' if that's what the C compiler\n    calls it, or to nothing if 'inline' is not supported under any name.  */\n-#ifndef Q_OS_SYMBIAN\n #ifndef __cplusplus\n #undef inline\n #define inline\n #endif\n-#endif\n \n /* Define to `long int' if <sys/types.h> does not define. */\n /* #undef off_t */\n"", ""tif_unix.c"": ""@@ -181,7 +181,7 @@ TIFFOpen(const char* name, const char* mode)\n \treturn tif;\n }\n \n-#if defined (__WIN32__) && !defined(__SYMBIAN32__)\n+#if defined (__WIN32__)\n #include <windows.h>\n /*\n  * Open a TIFF file with a Unicode filename, for read/writing.\n"", ""eiksoftkeyimage.h"": ""@@ -1,95 +0,0 @@\n-/****************************************************************************\n-**\n-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n-** All rights reserved.\n-** Contact: http://www.qt-project.org/\n-**\n-** This file is part of the QtGui module of the Qt Toolkit.\n-**\n-** $QT_BEGIN_LICENSE:LGPL$\n-** GNU Lesser General Public License Usage\n-** This file may be used under the terms of the GNU Lesser General Public\n-** License version 2.1 as published by the Free Software Foundation and\n-** appearing in the file LICENSE.LGPL included in the packaging of this\n-** file. Please review the following information to ensure the GNU Lesser\n-** General Public License version 2.1 requirements will be met:\n-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n-**\n-** In addition, as a special exception, Nokia gives you certain additional\n-** rights. These rights are described in the Nokia Qt LGPL Exception\n-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n-**\n-** GNU General Public License Usage\n-** Alternatively, this file may be used under the terms of the GNU General\n-** Public License version 3.0 as published by the Free Software Foundation\n-** and appearing in the file LICENSE.GPL included in the packaging of this\n-** file. Please review the following information to ensure the GNU General\n-** Public License version 3.0 requirements will be met:\n-** http://www.gnu.org/copyleft/gpl.html.\n-**\n-** Other Usage\n-** Alternatively, this file may be used in accordance with the terms and\n-** conditions contained in a signed written agreement between you and Nokia.\n-**\n-**\n-**\n-**\n-**\n-** $QT_END_LICENSE$\n-**\n-****************************************************************************/\n-\n-#ifndef EIKSOFTKEYIMAGE_H\n-#define EIKSOFTKEYIMAGE_H\n-\n-// FORWARD DECLARATIONS\n-class CEikButtonGroupContainer;\n-\n-// CLASS DECLARATION\n-\n-/**\n-*  Changes cba button's label to image.\n-*\n-*  @lib EIKCOCTL\n-*  @since 2.0\n-*/\n-class EikSoftkeyImage\n-    {\n-    public:\n-\n-        /**\n-        * Set image to cba button by replacing label\n-        * @since 2.0\n-        * @param aButtonGroupContainer Button container\n-        * @param aImage Image to button,\n-        *               Takes Images ownership\n-        * @param aLeft  Boolean: left or right button.\n-        *                        If true, then change left,\n-        *                        if false, change right\n-        */\n-        IMPORT_C static void SetImage(CEikButtonGroupContainer* aButtonGroupContainer, CEikImage& aImage, TBool aLeft);\n-\n-        /**\n-        * Change to cba button image back to label\n-        * @since 2.0\n-        * @param aButtonGroupContainer Button container\n-        * @param aLeft Boolean: left or right button.\n-        *                        If true, then change left,\n-        *                        if false, change right\n-        */\n-        IMPORT_C static void SetLabel(CEikButtonGroupContainer* aButtonGroupContainer, TBool aLeft);\n-\n-    private:\n-\n-        /**\n-        * C++ default constructor.\n-        */\n-        EikSoftkeyImage() {};\n-\n-\n-    };\n-\n-#endif      // EIKSOFTKEYIMAGE_H\n-\n-// End of File\n-\n"", ""zlib_dependency.pri"": ""@@ -1,6 +1,5 @@\n # zlib dependency satisfied by bundled 3rd party zlib or system zlib\n contains(QT_CONFIG, system-zlib) {\n-    symbian:                 LIBS_PRIVATE += -llibz\n     else:if(unix|win32-g++*):LIBS_PRIVATE += -lz\n     else:                    LIBS += zdll.lib\n } else {\n""}",deprecate,"deprecate, refactor 
",deprecat;
6157.0,6157.0,bug,Friedemann Kleint,QtConnectivity: Fix compile on Windows.,"QtConnectivity: Fix compile on Windows.

Change-Id: I7b8bd2c120c9905a581eee66146378b9373d1cb2","['src/nfc/qtlv.cpp', 'src/bluetooth/qbluetoothlocaldevice.h', 'src/nfc/qnearfieldmanager.h', 'src/nfc/qdeclarativendefrecord.cpp', 'src/bluetooth/qbluetoothlocaldevice_p.h', 'src/nfc/qnfcglobal.h']","{""qbluetoothlocaldevice.h"": ""@@ -58,11 +58,11 @@ class QBluetoothLocalDevicePrivate;\n class Q_BLUETOOTH_EXPORT QBluetoothHostInfo\n {\n public:\n-    QBluetoothHostInfo() { };\n+    QBluetoothHostInfo() { }\n     QBluetoothHostInfo(const QBluetoothHostInfo &other) {\n         m_address = other.m_address;\n         m_name = other.m_name;\n-    };\n+    }\n \n     QBluetoothAddress getAddress() const { return m_address; }\n     void setAddress(const QBluetoothAddress &address) { m_address = address; }\n"", ""qbluetoothlocaldevice_p.h"": ""@@ -66,7 +66,7 @@ QT_BEGIN_HEADER\n \n class QBluetoothAddress;\n \n-#ifdef QT_BLUEZ_BLUETOOTH\n+#if defined(QT_BLUEZ_BLUETOOTH)\n class QBluetoothLocalDevicePrivate : public QObject,\n                                      protected QDBusContext\n {\n@@ -104,9 +104,9 @@ private:\n \n     QBluetoothLocalDevice *q_ptr;\n };\n-#endif\n \n-#ifdef QT_SYMBIAN_BLUETOOTH\n+#elif defined(QT_SYMBIAN_BLUETOOTH)\n+\n class QBluetoothLocalDevicePrivate\n         : public MBTEngSettingsObserver\n {\n@@ -143,6 +143,10 @@ private:\n protected:\n     QBluetoothLocalDevice *q_ptr;\n \n+};\n+#else\n+class QBluetoothLocalDevicePrivate : public QObject\n+{\n };\n #endif\n \n"", ""qdeclarativendefrecord.cpp"": ""@@ -144,11 +144,11 @@ static QString urnForRecordType(QNdefRecord::TypeNameFormat typeNameFormat, cons\n {\n     switch (typeNameFormat) {\n     case QNdefRecord::NfcRtd:\n-        return QLatin1String(\""urn:nfc:wkt:\"") + type;\n+        return QLatin1String(\""urn:nfc:wkt:\"") + QString::fromLatin1(type);\n     case QNdefRecord::ExternalRtd:\n-        return QLatin1String(\""urn:nfc:ext:\"") + type;\n+        return QLatin1String(\""urn:nfc:ext:\"") + QString::fromLatin1(type);\n     case QNdefRecord::Mime:\n-        return QLatin1String(\""urn:nfc:mime:\"") + type;\n+        return QLatin1String(\""urn:nfc:mime:\"") + QString::fromLatin1(type);\n     default:\n         return QString();\n     }\n"", ""qnearfieldmanager.h"": ""@@ -63,7 +63,7 @@ public:\n         NoTargetAccess = 0x00,\n         NdefReadTargetAccess = 0x01,\n         NdefWriteTargetAccess = 0x02,\n-        TagTypeSpecificTargetAccess = 0x04,\n+        TagTypeSpecificTargetAccess = 0x04\n     };\n     Q_DECLARE_FLAGS(TargetAccessModes, TargetAccessMode)\n \n"", ""qnfcglobal.h"": ""@@ -51,13 +51,13 @@\n #    if defined(QT_DLL)\n #      undef QT_DLL\n #    endif\n-#    if defined(QT_BUILD_BT_LIB)\n+#    if defined(QT_BUILD_NFC_LIB)\n #      define Q_NFC_EXPORT Q_DECL_EXPORT\n #    else\n #      define Q_NFC_EXPORT Q_DECL_IMPORT\n #    endif\n #  elif defined(QT_DLL)\n-#    define Q_NFC_EXPORT Q_DECL_EXPORT\n+#    define Q_NFC_EXPORT Q_DECL_IMPORT\n #  endif\n #endif\n \n"", ""qtlv.cpp"": ""@@ -345,7 +345,7 @@ void QTlvWriter::writeTlv(quint8 tagType, const QByteArray &data)\n         if (length < 0xff) {\n             m_buffer.append(quint8(length));\n         } else {\n-            m_buffer.append(0xff);\n+            m_buffer.append(char(0xff));\n             m_buffer.append(quint16(length) >> 8);\n             m_buffer.append(quint16(length) & 0x00ff);\n         }\n""}",bug,"bug 
",bug;
11524.0,11524.0,bug,Jarek Kobus,Take the old value from edit role when copying variable,"Take the old value from edit role when copying variable

Task-number: QTCREATORBUG-6669

Change-Id: Ife42d13289b924ce9a098b6828a8362808f27b3c",['src/libs/utils/environmentmodel.cpp'],"{""environmentmodel.cpp"": ""@@ -200,7 +200,7 @@ bool EnvironmentModel::setData(const QModelIndex &index, const QVariant &value,\n         return true;\n \n     const QString oldName = data(this->index(index.row(), 0, QModelIndex())).toString();\n-    const QString oldValue = data(this->index(index.row(), 1, QModelIndex())).toString();\n+    const QString oldValue = data(this->index(index.row(), 1, QModelIndex()), Qt::EditRole).toString();\n     int changesPos = d->findInChanges(oldName);\n \n     if (index.column() == 0) {\n""}",bug,"bug 
",bug;
7814.0,7814.0,deprecat;test,Jason McDonald,Remove obsolete code from qdbusmarshall test.,"Remove obsolete code from qdbusmarshall test.

The removed code had been disabled since 2007 and tested functionality
that was no longer supported.

Change-Id: I49dfe58601c1cc6d41590ab2980daba27eca6bfb",['tests/auto/dbus/qdbusmarshall/tst_qdbusmarshall.cpp'],"{""tst_qdbusmarshall.cpp"": ""@@ -726,12 +726,6 @@ void tst_QDBusMarshall::sendArgument_data()\n     arg << 1 << 2U << short(-3) << ushort(4) << 5.0 << false;\n     arg.endStructure();\n     QTest::newRow(\""structure\"") << qVariantFromValue(arg) << \""(iunqdb)\"" << int(QDBusArgument::StructureType);\n-\n-#if 0\n-    // this is now unsupported\n-    arg << 1 << 2U << short(-3) << ushort(4) << 5.0 << false;\n-    QTest::newRow(\""many-args\"") << qVariantFromValue(arg) << \""(iunqdb)iunqdb\"";\n-#endif\n }\n \n void tst_QDBusMarshall::sendBasic()\n""}",deprecat;test,"test, refactor 
",deprecat;test;
19266.0,19266.0,"test,bug",Miikka Heikkinen,Windows: Removing insignification from QTextEdit test,"Windows: Removing insignification from QTextEdit test

The commit 660af10dee503729025952ed2374b8a081f941a2 seems to have fixed
the test, so removing the insignification from it.

Task-number: QTBUG-24348
Change-Id: I564e90db53d10b54e22342a1cdbef6826929c63a",['tests/auto/widgets/widgets/qtextedit/qtextedit.pro'],"{""qtextedit.pro"": ""@@ -17,5 +17,3 @@ wince* {\n }\n \n contains(QT_CONFIG,xcb):CONFIG+=insignificant_test  # QTBUG-20756 crashes on xcb\n-\n-win32:CONFIG += insignificant_test # QTBUG-24348\n""}","test,bug","test, bug 
",bug;resource;test;
24611.0,24611.0,feature,Sean Harmer,[V8] Implement new parts of platform port for QNX,"[V8] Implement new parts of platform port for QNX

Change-Id: I9caea92e9c45511c2450f15dd6b22c8c48bafe52",['src/3rdparty/v8/src/platform-qnx.cc'],"{""platform-qnx.cc"": ""@@ -57,6 +57,7 @@\n #include \""v8.h\""\n \n #include \""platform.h\""\n+#include \""platform-posix.h\""\n #include \""v8threads.h\""\n #include \""vm-state-inl.h\""\n \n@@ -104,6 +105,11 @@ void OS::SetUp() {\n }\n \n \n+void OS::PostSetUp() {\n+  POSIXPostSetUp();\n+}\n+\n+\n uint64_t OS::CpuFeaturesImpliedByPlatform() {\n   return 0;  // QNX runs on anything.\n }\n@@ -571,6 +577,12 @@ bool VirtualMemory::Uncommit(void* address, size_t size) {\n }\n \n \n+bool VirtualMemory::Guard(void* address) {\n+  OS::Guard(address, OS::CommitPageSize());\n+  return true;\n+}\n+\n+\n void* VirtualMemory::ReserveRegion(size_t size) {\n   void* result = mmap(OS::GetRandomMmapAddr(),\n                       size,\n""}",feature,"feature 
",feature;
21932.0,21932.0,resource,Matthew Vogt (Inactive),Improve the documentation of clearComponentCache(),"Improve the documentation of clearComponentCache()

Change-Id: I842632a3173632b0fca521138caffe960b752da1",['src/qml/qml/qqmlengine.cpp'],"{""qqmlengine.cpp"": ""@@ -563,9 +563,16 @@ QQmlEngine::~QQmlEngine()\n /*!\n   Clears the engine's internal component cache.\n \n-  Normally the QQmlEngine caches components loaded from qml\n-  files.  This method clears this cache and forces the component to be\n-  reloaded.\n+  This function causes the properties and bindings of all components previously\n+  loaded by the engine to be destroyed.  All previously loaded components and\n+  all extant objects created from those components will cease to function.\n+\n+  This function returns the engine to a state where it does not contain any loaded\n+  component data.  This may be useful in order to reload a smaller subset of the\n+  previous component set, or to load a new version of a previously loaded component.\n+\n+  Once the component cache has been cleared, components must be loaded before\n+  any new objects can be created.\n  */\n void QQmlEngine::clearComponentCache()\n {\n""}",resource,"resource 
",feature;
15045.0,15045.0,bug,Friedemann Kleint,Zeroconf: Compile with MinGW.,"Zeroconf: Compile with MinGW.

Change-Id: I01a24619728adc8f6f8bad6a8b50693c381600b1",['src/libs/zeroconf/servicebrowser.cpp'],"{""servicebrowser.cpp"": ""@@ -30,9 +30,14 @@\n **\n **************************************************************************/\n \n-//disable min max macros from windows headers,\n-//because we want to use the template methods from std\n-#define NOMINMAX\n+#ifdef Q_OS_WIN\n+// Disable min max macros from windows headers,\n+// because we want to use the template methods from std.\n+#  ifndef NOMINMAX\n+#    define NOMINMAX\n+#  endif\n+#  include <winsock.h>\n+#endif // Q_OS_WIN\n \n #include \""mdnsderived.h\""\n #include \""servicebrowser_p.h\""\n""}",bug,"bug 
",resource;
15400.0,15400.0,bug,Laszlo Agocs (DO NOT ADD TO REVIEWS),Destroy the QWindow children in destroy() instead of close(),"Destroy the QWindow children in destroy() instead of close()

When closing a window, destroy() ensures a setVisible(false) call only
for the window itself, not for other windows parented to it. With the
new quit lock ref feature this breaks code that creates a fake root
window parented to the main, visible window. (for example the
xcomposite backends of qtwayland do this)

Such apps do not anymore exit after closing their window because the
children do not receive a deref due to setVisible not getting called.
(At that point. It would get called after exiting the event loop but
that never happens due to the refcounting)

Change-Id: I124737c80ad59600ddc79261100f3904af0f410d",['src/gui/kernel/qwindow.cpp'],"{""qwindow.cpp"": ""@@ -731,6 +731,15 @@ void QWindow::setWindowIcon(const QImage &icon) const\n void QWindow::destroy()\n {\n     Q_D(QWindow);\n+    QObjectList childrenWindows = children();\n+    for (int i = 0; i < childrenWindows.size(); i++) {\n+        QObject *object = childrenWindows.at(i);\n+        if (object->isWindowType()) {\n+            QWindow *w = static_cast<QWindow*>(object);\n+            QGuiApplicationPrivate::window_list.removeAll(w);\n+            w->destroy();\n+        }\n+    }\n     setVisible(false);\n     delete d->platformWindow;\n     d->platformWindow = 0;\n@@ -881,16 +890,6 @@ bool QWindow::close()\n     if (QGuiApplicationPrivate::focus_window == this)\n         QGuiApplicationPrivate::focus_window = 0;\n \n-    QObjectList childrenWindows = children();\n-    for (int i = 0; i < childrenWindows.size(); i++) {\n-        QObject *object = childrenWindows.at(i);\n-        if (object->isWindowType()) {\n-            QWindow *w = static_cast<QWindow*>(object);\n-            QGuiApplicationPrivate::window_list.removeAll(w);\n-            w->destroy();\n-        }\n-    }\n-\n     QGuiApplicationPrivate::window_list.removeAll(this);\n     destroy();\n     d->maybeQuitOnLastWindowClosed();\n""}",bug,"bug, refactor 
",feature;
16880.0,16880.0,"bug,test",Cristiano di Flora,Disable temporarily qcontactmanagerplugins test.,"Disable temporarily qcontactmanagerplugins test.

Quick workaround to bypass build break introduced after
http://codereview.qt-project.org/#change,15924
To be reverted when the qcontactmanagerplugins test has been adapted.

Change-Id: I2f04cc4f0a8470350fe7245f8726cfc49366730c",['tests/auto/auto.pro'],"{""auto.pro"": ""@@ -13,7 +13,9 @@ SUBDIRS += \\\n     qcontactfilter \\\n #    qcontactmanager \\\n     qcontactmanagerdetails \\\n-    qcontactmanagerplugins \\\n+#TODO: re-enable the manager plugins test\n+#when it has been adapted to new Qt plugin mechanism\n+#    qcontactmanagerplugins \\\n     qcontactrelationship \\\n #    qdeclarativecontact\n \n""}","bug,test","test, bug 
",deprecat;resource;test;
11067.0,11067.0,test,Jason McDonald,Add testlib selftest for QStringList comparison.,"Add testlib selftest for QStringList comparison.

The (disabled) alive selftest contained a test for the QStringList
specialization of the QTest::qCompare template.  This test is unrelated
to the rest of the alive selftest, so move it to the cmptest selftest,
where QCOMPARE is tested.

Change-Id: Ic6f0e491dd3b3ce8b4ca1d49666a099815575eaa","['tests/auto/testlib/selftests/expected_cmptest.xml', 'tests/auto/testlib/selftests/expected_alive.txt', 'tests/auto/testlib/selftests/expected_cmptest.lightxml', 'tests/auto/testlib/selftests/cmptest/tst_cmptest.cpp', 'tests/auto/testlib/selftests/expected_cmptest.txt', 'tests/auto/testlib/selftests/expected_cmptest.xunitxml', 'tests/auto/testlib/selftests/alive/tst_alive.cpp']","{""tst_alive.cpp"": ""@@ -52,8 +52,6 @@ class tst_Alive: public QObject\n private slots:\n     void alive();\n     void addMouseDClick() const;\n-    void compareQStringLists() const;\n-    void compareQStringLists_data() const;\n };\n \n void tst_Alive::alive()\n@@ -95,80 +93,5 @@ void tst_Alive::addMouseDClick() const\n     QVERIFY(listener.isTested);\n }\n \n-void tst_Alive::compareQStringLists() const\n-{\n-    QFETCH(QStringList, opA);\n-    QFETCH(QStringList, opB);\n-\n-    QCOMPARE(opA, opB);\n-}\n-\n-void tst_Alive::compareQStringLists_data() const\n-{\n-    QTest::addColumn<QStringList>(\""opA\"");\n-    QTest::addColumn<QStringList>(\""opB\"");\n-\n-    {\n-        QStringList opA;\n-        opA.append(QLatin1String(\""string1\""));\n-        opA.append(QLatin1String(\""string2\""));\n-\n-        QStringList opB(opA);\n-        opA.append(QLatin1String(\""string3\""));\n-        opB.append(QLatin1String(\""DIFFERS\""));\n-\n-        QTest::newRow(\""\"") << opA << opB;\n-    }\n-\n-    {\n-        QStringList opA;\n-        opA.append(QLatin1String(\""string1\""));\n-        opA.append(QLatin1String(\""string2\""));\n-\n-        QStringList opB(opA);\n-        opA.append(QLatin1String(\""string3\""));\n-        opA.append(QLatin1String(\""string4\""));\n-\n-        opB.append(QLatin1String(\""DIFFERS\""));\n-        opB.append(QLatin1String(\""string4\""));\n-\n-        QTest::newRow(\""\"") << opA << opB;\n-    }\n-\n-    {\n-        QStringList opA;\n-        opA.append(QLatin1String(\""string1\""));\n-        opA.append(QLatin1String(\""string2\""));\n-\n-        QStringList opB;\n-        opB.append(QLatin1String(\""string1\""));\n-\n-        QTest::newRow(\""\"") << opA << opB;\n-    }\n-\n-    {\n-        QStringList opA;\n-        opA.append(QLatin1String(\""openInNewWindow\""));\n-        opA.append(QLatin1String(\""openInNewTab\""));\n-        opA.append(QLatin1String(\""separator\""));\n-        opA.append(QLatin1String(\""bookmark_add\""));\n-        opA.append(QLatin1String(\""savelinkas\""));\n-        opA.append(QLatin1String(\""copylinklocation\""));\n-        opA.append(QLatin1String(\""separator\""));\n-        opA.append(QLatin1String(\""openWith_submenu\""));\n-        opA.append(QLatin1String(\""preview1\""));\n-        opA.append(QLatin1String(\""actions_submenu\""));\n-        opA.append(QLatin1String(\""separator\""));\n-        opA.append(QLatin1String(\""viewDocumentSource\""));\n-\n-        QStringList opB;\n-        opB.append(QLatin1String(\""viewDocumentSource\""));\n-\n-        QTest::newRow(\""\"") << opA << opB;\n-\n-        QTest::newRow(\""\"") << opB << opA;\n-    }\n-}\n-\n QTEST_MAIN(tst_Alive)\n #include \""tst_alive.moc\""\n"", ""tst_cmptest.cpp"": ""@@ -52,6 +52,8 @@ private slots:\n     void compare_pointerfuncs();\n     void compare_tostring();\n     void compare_tostring_data();\n+    void compareQStringLists();\n+    void compareQStringLists_data();\n };\n \n static bool boolfunc() { return true; }\n@@ -126,6 +128,80 @@ void tst_Cmptest::compare_tostring()\n     QCOMPARE(actual, expected);\n }\n \n-QTEST_MAIN(tst_Cmptest)\n+void tst_Cmptest::compareQStringLists_data()\n+{\n+    QTest::addColumn<QStringList>(\""opA\"");\n+    QTest::addColumn<QStringList>(\""opB\"");\n+\n+    {\n+        QStringList opA;\n+        opA.append(QLatin1String(\""string1\""));\n+        opA.append(QLatin1String(\""string2\""));\n+\n+        QStringList opB(opA);\n+        opA.append(QLatin1String(\""string3\""));\n+        opB.append(QLatin1String(\""DIFFERS\""));\n+\n+        QTest::newRow(\""\"") << opA << opB;\n+    }\n+\n+    {\n+        QStringList opA;\n+        opA.append(QLatin1String(\""string1\""));\n+        opA.append(QLatin1String(\""string2\""));\n+\n+        QStringList opB(opA);\n+        opA.append(QLatin1String(\""string3\""));\n+        opA.append(QLatin1String(\""string4\""));\n+\n+        opB.append(QLatin1String(\""DIFFERS\""));\n+        opB.append(QLatin1String(\""string4\""));\n+\n+        QTest::newRow(\""\"") << opA << opB;\n+    }\n+\n+    {\n+        QStringList opA;\n+        opA.append(QLatin1String(\""string1\""));\n+        opA.append(QLatin1String(\""string2\""));\n+\n+        QStringList opB;\n+        opB.append(QLatin1String(\""string1\""));\n+\n+        QTest::newRow(\""\"") << opA << opB;\n+    }\n+\n+    {\n+        QStringList opA;\n+        opA.append(QLatin1String(\""openInNewWindow\""));\n+        opA.append(QLatin1String(\""openInNewTab\""));\n+        opA.append(QLatin1String(\""separator\""));\n+        opA.append(QLatin1String(\""bookmark_add\""));\n+        opA.append(QLatin1String(\""savelinkas\""));\n+        opA.append(QLatin1String(\""copylinklocation\""));\n+        opA.append(QLatin1String(\""separator\""));\n+        opA.append(QLatin1String(\""openWith_submenu\""));\n+        opA.append(QLatin1String(\""preview1\""));\n+        opA.append(QLatin1String(\""actions_submenu\""));\n+        opA.append(QLatin1String(\""separator\""));\n+        opA.append(QLatin1String(\""viewDocumentSource\""));\n+\n+        QStringList opB;\n+        opB.append(QLatin1String(\""viewDocumentSource\""));\n+\n+        QTest::newRow(\""\"") << opA << opB;\n+\n+        QTest::newRow(\""\"") << opB << opA;\n+    }\n+}\n+\n+void tst_Cmptest::compareQStringLists()\n+{\n+    QFETCH(QStringList, opA);\n+    QFETCH(QStringList, opB);\n+\n+    QCOMPARE(opA, opB);\n+}\n \n+QTEST_MAIN(tst_Cmptest)\n #include \""tst_cmptest.moc\""\n"", ""expected_alive.txt"": ""@@ -8,26 +8,6 @@ QWARN  : tst_Alive::alive() TEST LAGS 3 PINGS behind!\n QWARN  : tst_Alive::alive() TEST LAGS 4 PINGS behind!\n PASS   : tst_Alive::alive()\n PASS   : tst_Alive::addMouseDClick()\n-FAIL!  : tst_Alive::compareQStringLists() Compared QStringLists differ at index 2.\n-   Actual (opA) : 'string3'\n-   Expected (opB) : 'DIFFERS'\n-   Loc: [/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/alive/tst_alive.cpp(68)]\n-FAIL!  : tst_Alive::compareQStringLists() Compared QStringLists differ at index 2.\n-   Actual (opA) : 'string3'\n-   Expected (opB) : 'DIFFERS'\n-   Loc: [/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/alive/tst_alive.cpp(68)]\n-FAIL!  : tst_Alive::compareQStringLists() Compared QStringLists have different sizes.\n-   Actual (opA) size  : '2'\n-   Expected (opB) size: '1'\n-   Loc: [/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/alive/tst_alive.cpp(68)]\n-FAIL!  : tst_Alive::compareQStringLists() Compared QStringLists have different sizes.\n-   Actual (opA) size  : '12'\n-   Expected (opB) size: '1'\n-   Loc: [/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/alive/tst_alive.cpp(68)]\n-FAIL!  : tst_Alive::compareQStringLists() Compared QStringLists have different sizes.\n-   Actual (opA) size  : '1'\n-   Expected (opB) size: '12'\n-   Loc: [/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/alive/tst_alive.cpp(68)]\n PASS   : tst_Alive::cleanupTestCase()\n-Totals: 4 passed, 5 failed, 0 skipped\n+Totals: 4 passed, 0 failed, 0 skipped\n ********* Finished testing of tst_Alive *********\n"", ""expected_cmptest.lightxml"": ""@@ -37,6 +37,33 @@\n    Expected (expected): QVariant(PhonyClass,<value not representable as string>)]]></Description>\n </Incident>\n </TestFunction>\n+<TestFunction name=\""compareQStringLists\"">\n+<Incident type=\""fail\"" file=\""/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/cmptest/tst_cmptest.cpp\"" line=\""203\"">\n+    <Description><![CDATA[Compared QStringLists differ at index 2.\n+   Actual (opA) : 'string3'\n+   Expected (opB) : 'DIFFERS']]></Description>\n+</Incident>\n+<Incident type=\""fail\"" file=\""/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/cmptest/tst_cmptest.cpp\"" line=\""203\"">\n+    <Description><![CDATA[Compared QStringLists differ at index 2.\n+   Actual (opA) : 'string3'\n+   Expected (opB) : 'DIFFERS']]></Description>\n+</Incident>\n+<Incident type=\""fail\"" file=\""/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/cmptest/tst_cmptest.cpp\"" line=\""203\"">\n+    <Description><![CDATA[Compared QStringLists have different sizes.\n+   Actual (opA) size  : '2'\n+   Expected (opB) size: '1']]></Description>\n+</Incident>\n+<Incident type=\""fail\"" file=\""/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/cmptest/tst_cmptest.cpp\"" line=\""203\"">\n+    <Description><![CDATA[Compared QStringLists have different sizes.\n+   Actual (opA) size  : '12'\n+   Expected (opB) size: '1']]></Description>\n+</Incident>\n+<Incident type=\""fail\"" file=\""/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/cmptest/tst_cmptest.cpp\"" line=\""203\"">\n+    <Description><![CDATA[Compared QStringLists have different sizes.\n+   Actual (opA) size  : '1'\n+   Expected (opB) size: '12']]></Description>\n+</Incident>\n+</TestFunction>\n <TestFunction name=\""cleanupTestCase\"">\n <Incident type=\""pass\"" file=\""\"" line=\""0\"" />\n </TestFunction>\n"", ""expected_cmptest.txt"": ""@@ -19,6 +19,26 @@ FAIL!  : tst_Cmptest::compare_tostring(both non-null user type) Compared values\n    Actual (actual): QVariant(PhonyClass,<value not representable as string>)\n    Expected (expected): QVariant(PhonyClass,<value not representable as string>)\n    Loc: [/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/cmptest/tst_cmptest.cpp(122)]\n+FAIL!  : tst_Cmptest::compareQStringLists() Compared QStringLists differ at index 2.\n+   Actual (opA) : 'string3'\n+   Expected (opB) : 'DIFFERS'\n+   Loc: [/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/alive/tst_alive.cpp(68)]\n+FAIL!  : tst_Cmptest::compareQStringLists() Compared QStringLists differ at index 2.\n+   Actual (opA) : 'string3'\n+   Expected (opB) : 'DIFFERS'\n+   Loc: [/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/alive/tst_alive.cpp(68)]\n+FAIL!  : tst_Cmptest::compareQStringLists() Compared QStringLists have different sizes.\n+   Actual (opA) size  : '2'\n+   Expected (opB) size: '1'\n+   Loc: [/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/alive/tst_alive.cpp(68)]\n+FAIL!  : tst_Cmptest::compareQStringLists() Compared QStringLists have different sizes.\n+   Actual (opA) size  : '12'\n+   Expected (opB) size: '1'\n+   Loc: [/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/alive/tst_alive.cpp(68)]\n+FAIL!  : tst_Cmptest::compareQStringLists() Compared QStringLists have different sizes.\n+   Actual (opA) size  : '1'\n+   Expected (opB) size: '12'\n+   Loc: [/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/alive/tst_alive.cpp(68)]\n PASS   : tst_Cmptest::cleanupTestCase()\n-Totals: 4 passed, 4 failed, 0 skipped\n+Totals: 4 passed, 9 failed, 0 skipped\n ********* Finished testing of tst_Cmptest *********\n"", ""expected_cmptest.xml"": ""@@ -39,6 +39,33 @@\n    Expected (expected): QVariant(PhonyClass,<value not representable as string>)]]></Description>\n </Incident>\n </TestFunction>\n+<TestFunction name=\""compareQStringLists\"">\n+<Incident type=\""fail\"" file=\""/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/cmptest/tst_cmptest.cpp\"" line=\""203\"">\n+    <Description><![CDATA[Compared QStringLists differ at index 2.\n+   Actual (opA) : 'string3'\n+   Expected (opB) : 'DIFFERS']]></Description>\n+</Incident>\n+<Incident type=\""fail\"" file=\""/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/cmptest/tst_cmptest.cpp\"" line=\""203\"">\n+    <Description><![CDATA[Compared QStringLists differ at index 2.\n+   Actual (opA) : 'string3'\n+   Expected (opB) : 'DIFFERS']]></Description>\n+</Incident>\n+<Incident type=\""fail\"" file=\""/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/cmptest/tst_cmptest.cpp\"" line=\""203\"">\n+    <Description><![CDATA[Compared QStringLists have different sizes.\n+   Actual (opA) size  : '2'\n+   Expected (opB) size: '1']]></Description>\n+</Incident>\n+<Incident type=\""fail\"" file=\""/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/cmptest/tst_cmptest.cpp\"" line=\""203\"">\n+    <Description><![CDATA[Compared QStringLists have different sizes.\n+   Actual (opA) size  : '12'\n+   Expected (opB) size: '1']]></Description>\n+</Incident>\n+<Incident type=\""fail\"" file=\""/home/user/dev/qt5/qtbase/tests/auto/testlib/selftests/cmptest/tst_cmptest.cpp\"" line=\""203\"">\n+    <Description><![CDATA[Compared QStringLists have different sizes.\n+   Actual (opA) size  : '1'\n+   Expected (opB) size: '12']]></Description>\n+</Incident>\n+</TestFunction>\n <TestFunction name=\""cleanupTestCase\"">\n <Incident type=\""pass\"" file=\""\"" line=\""0\"" />\n </TestFunction>\n"", ""expected_cmptest.xunitxml"": ""@@ -1,5 +1,5 @@\n <?xml version=\""1.0\"" encoding=\""UTF-8\"" ?>\n-<testsuite errors=\""0\"" failures=\""4\"" tests=\""5\"" name=\""tst_Cmptest\"">\n+<testsuite errors=\""0\"" failures=\""9\"" tests=\""6\"" name=\""tst_Cmptest\"">\n   <properties>\n     <property value=\""@INSERT_QT_VERSION_HERE@\"" name=\""QTestVersion\""/>\n     <property value=\""@INSERT_QT_VERSION_HERE@\"" name=\""QtVersion\""/>\n@@ -21,6 +21,23 @@\n    Actual (actual): QVariant(PhonyClass,&lt;value not representable as string&gt;)\n    Expected (expected): QVariant(PhonyClass,&lt;value not representable as string&gt;)\"" result=\""fail\""/>\n   </testcase>\n+  <testcase result=\""fail\"" name=\""compareQStringLists\"">\n+    <failure message=\""Compared QStringLists differ at index 2.\n+   Actual (opA) : &apos;string3&apos;\n+   Expected (opB) : &apos;DIFFERS&apos;\"" result=\""fail\""/>\n+    <failure message=\""Compared QStringLists differ at index 2.\n+   Actual (opA) : &apos;string3&apos;\n+   Expected (opB) : &apos;DIFFERS&apos;\"" result=\""fail\""/>\n+    <failure message=\""Compared QStringLists have different sizes.\n+   Actual (opA) size  : &apos;2&apos;\n+   Expected (opB) size: &apos;1&apos;\"" result=\""fail\""/>\n+    <failure message=\""Compared QStringLists have different sizes.\n+   Actual (opA) size  : &apos;12&apos;\n+   Expected (opB) size: &apos;1&apos;\"" result=\""fail\""/>\n+    <failure message=\""Compared QStringLists have different sizes.\n+   Actual (opA) size  : &apos;1&apos;\n+   Expected (opB) size: &apos;12&apos;\"" result=\""fail\""/>\n+  </testcase>\n   <testcase result=\""pass\"" name=\""cleanupTestCase\""/>\n   <system-err/>\n </testsuite>\n""}",test,"test 
",deprecat;test;
19041.0,19041.0,"test,refactor",Aurindam Jana,QmlDebuggingTests: Separate out public and private tests,"QmlDebuggingTests: Remove quick-private dependency

Remove dependencies on quick-private from all
possible auto tests related to debugging.

Change-Id: I688b5b36fdf3d6fbcb6cef2a975ecd1bf679af2b","['src/plugins/qmltooling/shared/qpacketprotocol.h', 'src/qml/qml/v8/qqmlbuiltinfunctions.cpp', 'tests/auto/qml/debugger/qv8profilerservice/qv8profilerservice.pro', 'tests/auto/qml/debugger/qpacketprotocol/qpacketprotocol.pro', 'tests/auto/qml/debugger/shared/qqmldebugtestservice.cpp', 'tests/auto/qml/debugger/qqmldebugclient/tst_qqmldebugclient.cpp', 'tests/auto/qml/debugger/shared/qqmldebugclient.cpp', 'tests/auto/qml/debugger/shared/qqmldebugclient_p.h', 'tests/auto/qml/debugger/qqmldebugservice/qqmldebugservice.pro', 'tools/qmlprofiler/qpacketprotocol.cpp', 'src/qml/debugger/debugger.pri', 'tests/auto/qml/debugger/shared/debugutil.pri', 'src/plugins/qmltooling/qmldbg_tcp/qmldbg_tcp.pro', 'tools/qmlprofiler/qpacketprotocol.h', 'tests/auto/qml/debugger/qqmlprofilerservice/tst_qqmlprofilerservice.cpp', 'tools/qmlprofiler/qqmldebugclient.cpp', 'tests/auto/qml/debugger/shared/debugutil_p.h', 'tests/auto/qml/debugger/qdebugmessageservice/qdebugmessageservice.pro', 'src/plugins/qmltooling/qmldbg_tcp/qtcpserverconnection.cpp', 'tests/auto/qml/debugger/qv8profilerservice/tst_qv8profilerservice.cpp', 'tools/qmlprofiler/qmlprofiler.pro', 'tests/auto/qml/debugger/shared/debugutil.cpp', 'tests/auto/qml/debugger/qqmlinspector/tst_qqmlinspector.pro', 'tests/auto/qml/debugger/shared/qqmldebugtestservice_p.h', 'tests/auto/qml/debugger/qqmlprofilerservice/qqmlprofilerservice.pro', 'tests/auto/qml/debugger/qqmldebugclient/qqmldebugclient.pro', 'tests/auto/qml/debugger/qqmldebugjs/qqmldebugjs.pro', 'tests/auto/qml/debugger/qqmldebugservice/tst_qqmldebugservice.cpp', 'src/plugins/qmltooling/shared/qpacketprotocol.cpp', 'tests/auto/qml/debugger/qpacketprotocol/tst_qpacketprotocol.cpp']","{""qmldbg_tcp.pro"": ""@@ -9,10 +9,12 @@ DESTDIR = $$QT.qml.plugins/qmltooling\n QTDIR_build:REQUIRES += \""contains(QT_CONFIG, qml)\""\n \n SOURCES += \\\n-    qtcpserverconnection.cpp\n+    qtcpserverconnection.cpp \\\n+    ../shared/qpacketprotocol.cpp\n \n HEADERS += \\\n-    qtcpserverconnection.h\n+    qtcpserverconnection.h \\\n+    ../shared/qpacketprotocol.h\n \n OTHER_FILES += qtcpserverconnection.json\n \n"", ""qtcpserverconnection.cpp"": ""@@ -40,13 +40,13 @@\n ****************************************************************************/\n \n #include \""qtcpserverconnection.h\""\n+#include \""qpacketprotocol.h\""\n \n #include <QtCore/qplugin.h>\n #include <QtNetwork/qtcpserver.h>\n #include <QtNetwork/qtcpsocket.h>\n \n #include <private/qqmldebugserver_p.h>\n-#include <private/qpacketprotocol_p.h>\n \n QT_BEGIN_NAMESPACE\n \n"", ""qpacketprotocol.cpp"": ""@@ -0,0 +1,546 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n+** Contact: http://www.qt-project.org/\n+**\n+** This file is part of the QtQml module of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#include \""qpacketprotocol.h\""\n+\n+#include <QtCore/QBuffer>\n+#include <QtCore/QElapsedTimer>\n+\n+static const unsigned int MAX_PACKET_SIZE = 0x7FFFFFFF;\n+\n+/*!\n+  \\class QPacketProtocol\n+  \\internal\n+\n+  \\brief The QPacketProtocol class encapsulates communicating discrete packets\n+  across fragmented IO channels, such as TCP sockets.\n+\n+  QPacketProtocol makes it simple to send arbitrary sized data \""packets\"" across\n+  fragmented transports such as TCP and UDP.\n+\n+  As transmission boundaries are not respected, sending packets over protocols\n+  like TCP frequently involves \""stitching\"" them back together at the receiver.\n+  QPacketProtocol makes this easier by performing this task for you.  Packet\n+  data sent using QPacketProtocol is prepended with a 4-byte size header\n+  allowing the receiving QPacketProtocol to buffer the packet internally until\n+  it has all been received.  QPacketProtocol does not perform any sanity\n+  checking on the size or on the data, so this class should only be used in\n+  prototyping or trusted situations where DOS attacks are unlikely.\n+\n+  QPacketProtocol does not perform any communications itself.  Instead it can\n+  operate on any QIODevice that supports the QIODevice::readyRead() signal.  A\n+  logical \""packet\"" is encapsulated by the companion QPacket class.  The\n+  following example shows two ways to send data using QPacketProtocol.  The\n+  transmitted data is equivalent in both.\n+\n+  \\code\n+  QTcpSocket socket;\n+  // ... connect socket ...\n+\n+  QPacketProtocol protocol(&socket);\n+\n+  // Send packet the quick way\n+  protocol.send() << \""Hello world\"" << 123;\n+\n+  // Send packet the longer way\n+  QPacket packet;\n+  packet << \""Hello world\"" << 123;\n+  protocol.send(packet);\n+  \\endcode\n+\n+  Likewise, the following shows how to read data from QPacketProtocol, assuming\n+  that the QPacketProtocol::readyRead() signal has been emitted.\n+\n+  \\code\n+  // ... QPacketProtocol::readyRead() is emitted ...\n+\n+  int a;\n+  QByteArray b;\n+\n+  // Receive packet the quick way\n+  protocol.read() >> a >> b;\n+\n+  // Receive packet the longer way\n+  QPacket packet = protocol.read();\n+  p >> a >> b;\n+  \\endcode\n+\n+  \\ingroup io\n+  \\sa QPacket\n+*/\n+\n+class QPacketProtocolPrivate : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    QPacketProtocolPrivate(QPacketProtocol *parent, QIODevice *_dev)\n+        : QObject(parent), inProgressSize(-1), maxPacketSize(MAX_PACKET_SIZE),\n+          waitingForPacket(false), dev(_dev)\n+    {\n+        Q_ASSERT(4 == sizeof(qint32));\n+\n+        QObject::connect(this, SIGNAL(readyRead()),\n+                         parent, SIGNAL(readyRead()));\n+        QObject::connect(this, SIGNAL(packetWritten()),\n+                         parent, SIGNAL(packetWritten()));\n+        QObject::connect(this, SIGNAL(invalidPacket()),\n+                         parent, SIGNAL(invalidPacket()));\n+        QObject::connect(dev, SIGNAL(readyRead()),\n+                         this, SLOT(readyToRead()));\n+        QObject::connect(dev, SIGNAL(aboutToClose()),\n+                         this, SLOT(aboutToClose()));\n+        QObject::connect(dev, SIGNAL(bytesWritten(qint64)),\n+                         this, SLOT(bytesWritten(qint64)));\n+    }\n+\n+Q_SIGNALS:\n+    void readyRead();\n+    void packetWritten();\n+    void invalidPacket();\n+\n+public Q_SLOTS:\n+    void aboutToClose()\n+    {\n+        inProgress.clear();\n+        sendingPackets.clear();\n+        inProgressSize = -1;\n+    }\n+\n+    void bytesWritten(qint64 bytes)\n+    {\n+        Q_ASSERT(!sendingPackets.isEmpty());\n+\n+        while (bytes) {\n+            if (sendingPackets.at(0) > bytes) {\n+                sendingPackets[0] -= bytes;\n+                bytes = 0;\n+            } else {\n+                bytes -= sendingPackets.at(0);\n+                sendingPackets.removeFirst();\n+                emit packetWritten();\n+            }\n+        }\n+    }\n+\n+    void readyToRead()\n+    {\n+        while (true) {\n+            // Need to get trailing data\n+            if (-1 == inProgressSize) {\n+                // We need a size header of sizeof(qint32)\n+                if (sizeof(qint32) > (uint)dev->bytesAvailable())\n+                    return;\n+\n+                // Read size header\n+                int read = dev->read((char *)&inProgressSize, sizeof(qint32));\n+                Q_ASSERT(read == sizeof(qint32));\n+                Q_UNUSED(read);\n+\n+                // Check sizing constraints\n+                if (inProgressSize > maxPacketSize) {\n+                    QObject::disconnect(dev, SIGNAL(readyRead()),\n+                                        this, SLOT(readyToRead()));\n+                    QObject::disconnect(dev, SIGNAL(aboutToClose()),\n+                                        this, SLOT(aboutToClose()));\n+                    QObject::disconnect(dev, SIGNAL(bytesWritten(qint64)),\n+                                        this, SLOT(bytesWritten(qint64)));\n+                    dev = 0;\n+                    emit invalidPacket();\n+                    return;\n+                }\n+\n+                inProgressSize -= sizeof(qint32);\n+            } else {\n+                inProgress.append(dev->read(inProgressSize - inProgress.size()));\n+\n+                if (inProgressSize == inProgress.size()) {\n+                    // Packet has arrived!\n+                    packets.append(inProgress);\n+                    inProgressSize = -1;\n+                    inProgress.clear();\n+\n+                    waitingForPacket = false;\n+                    emit readyRead();\n+                } else\n+                    return;\n+            }\n+        }\n+    }\n+\n+public:\n+    QList<qint64> sendingPackets;\n+    QList<QByteArray> packets;\n+    QByteArray inProgress;\n+    qint32 inProgressSize;\n+    qint32 maxPacketSize;\n+    bool waitingForPacket;\n+    QIODevice *dev;\n+};\n+\n+/*!\n+  Construct a QPacketProtocol instance that works on \\a dev with the\n+  specified \\a parent.\n+ */\n+QPacketProtocol::QPacketProtocol(QIODevice *dev, QObject *parent)\n+    : QObject(parent), d(new QPacketProtocolPrivate(this, dev))\n+{\n+    Q_ASSERT(dev);\n+}\n+\n+/*!\n+  Destroys the QPacketProtocol instance.\n+ */\n+QPacketProtocol::~QPacketProtocol()\n+{\n+}\n+\n+/*!\n+  Returns the maximum packet size allowed.  By default this is\n+  2,147,483,647 bytes.\n+  \n+  If a packet claiming to be larger than the maximum packet size is received,\n+  the QPacketProtocol::invalidPacket() signal is emitted.\n+\n+  \\sa QPacketProtocol::setMaximumPacketSize()\n+ */\n+qint32 QPacketProtocol::maximumPacketSize() const\n+{\n+    return d->maxPacketSize;\n+}\n+\n+/*!\n+  Sets the maximum allowable packet size to \\a max.\n+\n+  \\sa QPacketProtocol::maximumPacketSize()\n+ */\n+qint32 QPacketProtocol::setMaximumPacketSize(qint32 max)\n+{\n+    if (max > (signed)sizeof(qint32))\n+        d->maxPacketSize = max;\n+    return d->maxPacketSize;\n+}\n+\n+/*!\n+  Returns a streamable object that is transmitted on destruction.  For example\n+\n+  \\code\n+  protocol.send() << \""Hello world\"" << 123;\n+  \\endcode\n+\n+  will send a packet containing \""Hello world\"" and 123.  To construct more\n+  complex packets, explicitly construct a QPacket instance.\n+ */\n+QPacketAutoSend QPacketProtocol::send()\n+{\n+    return QPacketAutoSend(this);\n+}\n+\n+/*!\n+  \\fn void QPacketProtocol::send(const QPacket & packet)\n+\n+  Transmit the \\a packet.\n+ */\n+void QPacketProtocol::send(const QPacket & p)\n+{\n+    if (p.b.isEmpty())\n+        return; // We don't send empty packets\n+\n+    qint64 sendSize = p.b.size() + sizeof(qint32);\n+\n+    d->sendingPackets.append(sendSize);\n+    qint32 sendSize32 = sendSize;\n+    qint64 writeBytes = d->dev->write((char *)&sendSize32, sizeof(qint32));\n+    Q_ASSERT(writeBytes == sizeof(qint32));\n+    writeBytes = d->dev->write(p.b);\n+    Q_ASSERT(writeBytes == p.b.size());\n+}\n+\n+/*!\n+  Returns the number of received packets yet to be read.\n+  */\n+qint64 QPacketProtocol::packetsAvailable() const\n+{\n+    return d->packets.count();\n+}\n+\n+/*!\n+  Discard any unread packets.\n+  */\n+void QPacketProtocol::clear()\n+{\n+    d->packets.clear();\n+}\n+\n+/*!\n+  Return the next unread packet, or an invalid QPacket instance if no packets\n+  are available.  This method does NOT block.\n+  */\n+QPacket QPacketProtocol::read()\n+{\n+    if (0 == d->packets.count())\n+        return QPacket();\n+\n+    QPacket rv(d->packets.at(0));\n+    d->packets.removeFirst();\n+    return rv;\n+}\n+\n+/*\n+   Returns the difference between msecs and elapsed. If msecs is -1,\n+   however, -1 is returned.\n+*/\n+static int qt_timeout_value(int msecs, int elapsed)\n+{\n+    if (msecs == -1)\n+        return -1;\n+\n+    int timeout = msecs - elapsed;\n+    return timeout < 0 ? 0 : timeout;\n+}\n+\n+/*!\n+  This function locks until a new packet is available for reading and the\n+  \\l{QIODevice::}{readyRead()} signal has been emitted. The function\n+  will timeout after \\a msecs milliseconds; the default timeout is\n+  30000 milliseconds.\n+\n+  The function returns true if the readyRead() signal is emitted and\n+  there is new data available for reading; otherwise it returns false\n+  (if an error occurred or the operation timed out).\n+  */\n+\n+bool QPacketProtocol::waitForReadyRead(int msecs)\n+{\n+    if (!d->packets.isEmpty())\n+        return true;\n+\n+    QElapsedTimer stopWatch;\n+    stopWatch.start();\n+\n+    d->waitingForPacket = true;\n+    do {\n+        if (!d->dev->waitForReadyRead(msecs))\n+            return false;\n+        if (!d->waitingForPacket)\n+            return true;\n+        msecs = qt_timeout_value(msecs, stopWatch.elapsed());\n+    } while (true);\n+}\n+\n+/*!\n+  Return the QIODevice passed to the QPacketProtocol constructor.\n+*/\n+QIODevice *QPacketProtocol::device()\n+{\n+    return d->dev;\n+}\n+\n+/*!\n+  \\fn void QPacketProtocol::readyRead()\n+\n+  Emitted whenever a new packet is received.  Applications may use\n+  QPacketProtocol::read() to retrieve this packet.\n+ */\n+\n+/*!\n+  \\fn void QPacketProtocol::invalidPacket()\n+\n+  A packet larger than the maximum allowable packet size was received.  The\n+  packet will be discarded and, as it indicates corruption in the protocol, no\n+  further packets will be received.\n+ */\n+\n+/*!\n+  \\fn void QPacketProtocol::packetWritten()\n+\n+  Emitted each time a packet is completing written to the device.  This signal\n+  may be used for communications flow control.\n+ */\n+\n+/*!\n+  \\class QPacket\n+  \\internal\n+\n+  \\brief The QPacket class encapsulates an unfragmentable packet of data to be\n+  transmitted by QPacketProtocol.\n+\n+  The QPacket class works together with QPacketProtocol to make it simple to\n+  send arbitrary sized data \""packets\"" across fragmented transports such as TCP\n+  and UDP.\n+\n+  QPacket provides a QDataStream interface to an unfragmentable packet.\n+  Applications should construct a QPacket, propagate it with data and then\n+  transmit it over a QPacketProtocol instance.  For example:\n+  \\code\n+  QPacketProtocol protocol(...);\n+\n+  QPacket myPacket;\n+  myPacket << \""Hello world!\"" << 123;\n+  protocol.send(myPacket);\n+  \\endcode\n+\n+  As long as both ends of the connection are using the QPacketProtocol class,\n+  the data within this packet will be delivered unfragmented at the other end,\n+  ready for extraction.\n+\n+  \\code\n+  QByteArray greeting;\n+  int count;\n+\n+  QPacket myPacket = protocol.read();\n+\n+  myPacket >> greeting >> count;\n+  \\endcode\n+\n+  Only packets returned from QPacketProtocol::read() may be read from.  QPacket\n+  instances constructed by directly by applications are for transmission only\n+  and are considered \""write only\"".  Attempting to read data from them will\n+  result in undefined behavior.\n+\n+  \\ingroup io\n+  \\sa QPacketProtocol\n+ */\n+\n+/*!\n+  Constructs an empty write-only packet.\n+  */\n+QPacket::QPacket()\n+    : QDataStream(), buf(0)\n+{\n+    buf = new QBuffer(&b);\n+    buf->open(QIODevice::WriteOnly);\n+    setDevice(buf);\n+    setVersion(QDataStream::Qt_4_7);\n+}\n+\n+/*!\n+  Destroys the QPacket instance.\n+  */\n+QPacket::~QPacket()\n+{\n+    if (buf) {\n+        delete buf;\n+        buf = 0;\n+    }\n+}\n+\n+/*!\n+  Creates a copy of \\a other.  The initial stream positions are shared, but the\n+  two packets are otherwise independent.\n+ */\n+QPacket::QPacket(const QPacket & other)\n+    : QDataStream(), b(other.b), buf(0)\n+{\n+    buf = new QBuffer(&b);\n+    buf->open(other.buf->openMode());\n+    setDevice(buf);\n+}\n+\n+/*!\n+  \\internal\n+  */\n+QPacket::QPacket(const QByteArray & ba)\n+    : QDataStream(), b(ba), buf(0)\n+{\n+    buf = new QBuffer(&b);\n+    buf->open(QIODevice::ReadOnly);\n+    setDevice(buf);\n+}\n+\n+/*!\n+  Returns true if this packet is empty - that is, contains no data.\n+  */\n+bool QPacket::isEmpty() const\n+{\n+    return b.isEmpty();\n+}\n+\n+/*!\n+  Returns raw packet data.\n+  */\n+QByteArray QPacket::data() const\n+{\n+    return b;\n+}\n+\n+/*!\n+  Clears data in the packet.  This is useful for reusing one writable packet.\n+  For example\n+  \\code\n+  QPacketProtocol protocol(...);\n+\n+  QPacket packet;\n+\n+  packet << \""Hello world!\"" << 123;\n+  protocol.send(packet);\n+\n+  packet.clear();\n+  packet << \""Goodbyte world!\"" << 789;\n+  protocol.send(packet);\n+  \\endcode\n+ */\n+void QPacket::clear()\n+{\n+    QBuffer::OpenMode oldMode = buf->openMode();\n+    buf->close();\n+    b.clear();\n+    buf->setBuffer(&b); // reset QBuffer internals with new size of b.\n+    buf->open(oldMode);\n+}\n+\n+/*!\n+  \\class QPacketAutoSend\n+  \\internal\n+\n+  \\internal\n+  */\n+QPacketAutoSend::QPacketAutoSend(QPacketProtocol *_p)\n+    : QPacket(), p(_p)\n+{\n+}\n+\n+QPacketAutoSend::~QPacketAutoSend()\n+{\n+    if (!b.isEmpty())\n+        p->send(*this);\n+}\n+\n+#include <qpacketprotocol.moc>\n"", ""qpacketprotocol.h"": ""@@ -0,0 +1,126 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n+** Contact: http://www.qt-project.org/\n+**\n+** This file is part of the QtQml module of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#ifndef QPACKETPROTOCOL_H\n+#define QPACKETPROTOCOL_H\n+\n+//\n+//  W A R N I N G\n+//  -------------\n+//\n+// This file is not part of the Qt API.  It exists purely as an\n+// implementation detail.  This header file may change from version to\n+// version without notice, or even be removed.\n+//\n+// We mean it.\n+//\n+\n+#include <QtCore/qobject.h>\n+#include <QtCore/qdatastream.h>\n+\n+class QIODevice;\n+class QBuffer;\n+class QPacket;\n+class QPacketAutoSend;\n+class QPacketProtocolPrivate;\n+\n+class QPacketProtocol : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    explicit QPacketProtocol(QIODevice *dev, QObject *parent = 0);\n+    virtual ~QPacketProtocol();\n+\n+    qint32 maximumPacketSize() const;\n+    qint32 setMaximumPacketSize(qint32);\n+\n+    QPacketAutoSend send();\n+    void send(const QPacket &);\n+\n+    qint64 packetsAvailable() const;\n+    QPacket read();\n+\n+    bool waitForReadyRead(int msecs = 3000);\n+\n+    void clear();\n+\n+    QIODevice *device();\n+\n+Q_SIGNALS:\n+    void readyRead();\n+    void invalidPacket();\n+    void packetWritten();\n+\n+private:\n+    QPacketProtocolPrivate *d;\n+};\n+\n+\n+class QPacket : public QDataStream\n+{\n+public:\n+    QPacket();\n+    QPacket(const QPacket &);\n+    virtual ~QPacket();\n+\n+    void clear();\n+    bool isEmpty() const;\n+    QByteArray data() const;\n+\n+protected:\n+    friend class QPacketProtocol;\n+    QPacket(const QByteArray &ba);\n+    QByteArray b;\n+    QBuffer *buf;\n+};\n+\n+class QPacketAutoSend : public QPacket\n+{\n+public:\n+    virtual ~QPacketAutoSend();\n+\n+private:\n+    friend class QPacketProtocol;\n+    QPacketAutoSend(QPacketProtocol *);\n+    QPacketProtocol *p;\n+};\n+\n+#endif\n"", ""debugger.pri"": ""@@ -1,5 +1,4 @@\n SOURCES += \\\n-    $$PWD/qpacketprotocol.cpp \\\n     $$PWD/qqmldebugservice.cpp \\\n     $$PWD/qqmlprofilerservice.cpp \\\n     $$PWD/qqmldebughelper.cpp \\\n@@ -11,7 +10,6 @@ SOURCES += \\\n     $$PWD/qdebugmessageservice.cpp\n \n HEADERS += \\\n-    $$PWD/qpacketprotocol_p.h \\\n     $$PWD/qqmldebugservice_p.h \\\n     $$PWD/qqmldebugservice_p_p.h \\\n     $$PWD/qqmlprofilerservice_p.h \\\n"", ""qqmlbuiltinfunctions.cpp"": ""@@ -1188,8 +1188,8 @@ v8::Handle<v8::Value> qsTranslate(const v8::Arguments &args)\n     QCoreApplication::Encoding encoding = QCoreApplication::UnicodeUTF8;\n     if (args.Length() > 3) {\n         QString encStr = v8engine->toString(args[3]);\n-        if (encStr == QLatin1String(\""CodecForTr\"")) {\n-            encoding = QCoreApplication::CodecForTr;\n+        if (encStr == QLatin1String(\""DefaultCodec\"")) {\n+            encoding = QCoreApplication::DefaultCodec;\n         } else if (encStr == QLatin1String(\""UnicodeUTF8\"")) {\n             encoding = QCoreApplication::UnicodeUTF8;\n         } else {\n"", ""qdebugmessageservice.pro"": ""@@ -1,6 +1,6 @@\n CONFIG += testcase\n TARGET = tst_qdebugmessageservice\n-QT += network qml-private testlib\n+QT += qml network testlib\n macx:CONFIG -= app_bundle\n \n SOURCES +=     tst_qdebugmessageservice.cpp\n"", ""qpacketprotocol.pro"": ""@@ -8,4 +8,4 @@ INCLUDEPATH += ../shared\n include(../shared/debugutil.pri)\n \n CONFIG += parallel_test\n-QT += qml-private network testlib\n+QT += qml network testlib\n"", ""tst_qpacketprotocol.cpp"": ""@@ -46,7 +46,7 @@\n #include <QDebug>\n #include <QBuffer>\n \n-#include <private/qpacketprotocol_p.h>\n+#include \""qpacketprotocol_p.h\""\n \n #include \""debugutil_p.h\""\n \n"", ""qqmldebugclient.pro"": ""@@ -2,7 +2,10 @@ CONFIG += testcase\n TARGET = tst_qqmldebugclient\n macx:CONFIG -= app_bundle\n \n-SOURCES += tst_qqmldebugclient.cpp\n+HEADERS += ../shared/qqmldebugtestservice_p.h\n+\n+SOURCES += tst_qqmldebugclient.cpp \\\n+           ../shared/qqmldebugtestservice.cpp\n \n INCLUDEPATH += ../shared\n include(../shared/debugutil.pri)\n"", ""tst_qqmldebugclient.cpp"": ""@@ -48,6 +48,7 @@\n #include <QtQml/qqmlengine.h>\n \n #include \""debugutil_p.h\""\n+#include \""qqmldebugtestservice_p.h\""\n \n #define PORT 13770\n #define STR_PORT \""13770\""\n"", ""qqmldebugjs.pro"": ""@@ -1,6 +1,6 @@\n CONFIG += testcase\n TARGET = tst_qqmldebugjs\n-QT += qml-private testlib\n+QT += qml testlib\n macx:CONFIG -= app_bundle\n \n SOURCES +=     tst_qqmldebugjs.cpp\n"", ""qqmldebugservice.pro"": ""@@ -2,7 +2,11 @@ CONFIG += testcase\n TARGET = tst_qqmldebugservice\n macx:CONFIG -= app_bundle\n \n-SOURCES += tst_qqmldebugservice.cpp\n+HEADERS += ../shared/qqmldebugtestservice_p.h\n+\n+SOURCES += tst_qqmldebugservice.cpp \\\n+           ../shared/qqmldebugtestservice.cpp\n+\n INCLUDEPATH += ../shared\n include(../../../shared/util.pri)\n include(../shared/debugutil.pri)\n"", ""tst_qqmldebugservice.cpp"": ""@@ -47,11 +47,10 @@\n \n #include <QtQml/qqmlengine.h>\n \n-#include <private/qqmldebugservice_p.h>\n-\n #include \""../../../shared/util.h\""\n #include \""debugutil_p.h\""\n #include \""qqmldebugclient_p.h\""\n+#include \""qqmldebugtestservice_p.h\""\n \n #define PORT 13769\n #define STR_PORT \""13769\""\n"", ""tst_qqmlinspector.pro"": ""@@ -10,4 +10,4 @@ include(../shared/debugutil.pri)\n DEFINES += SRCDIR=\\\\\\\""$$PWD\\\\\\\""\n CONFIG += parallel_test declarative_debug\n \n-QT += qml-private testlib\n+QT += qml testlib\n"", ""qqmlprofilerservice.pro"": ""@@ -12,4 +12,4 @@ OTHER_FILES += data/test.qml\n \n CONFIG += parallel_test declarative_debug\n \n-QT += core-private v8-private qml-private testlib\n+QT += core qml testlib\n"", ""tst_qqmlprofilerservice.cpp"": ""@@ -42,7 +42,6 @@\n #include <qtest.h>\n #include <QLibraryInfo>\n \n-#include \""QtQml/private/qqmlprofilerservice_p.h\""\n #include \""debugutil_p.h\""\n #include \""qqmldebugclient_p.h\""\n #include \""../../../shared/util.h\""\n@@ -50,11 +49,59 @@\n #define PORT 13773\n #define STR_PORT \""13773\""\n \n+struct QQmlProfilerData\n+{\n+    qint64 time;\n+    int messageType;\n+    int detailType;\n+\n+    //###\n+    QString detailData; //used by RangeData and RangeLocation\n+    int line;           //used by RangeLocation\n+    int column;         //used by RangeLocation\n+    int framerate;      //used by animation events\n+    int animationcount; //used by animation events\n+\n+    QByteArray toByteArray() const;\n+};\n+\n class QQmlProfilerClient : public QQmlDebugClient\n {\n     Q_OBJECT\n \n public:\n+    enum Message {\n+        Event,\n+        RangeStart,\n+        RangeData,\n+        RangeLocation,\n+        RangeEnd,\n+        Complete, // end of transmission\n+\n+        MaximumMessage\n+    };\n+\n+    enum EventType {\n+        FramePaint,\n+        Mouse,\n+        Key,\n+        AnimationFrame,\n+        EndTrace,\n+        StartTrace,\n+\n+        MaximumEventType\n+    };\n+\n+    enum RangeType {\n+        Painting,\n+        Compiling,\n+        Creating,\n+        Binding,            //running a binding\n+        HandlingSignal,     //running a signal handler\n+\n+        MaximumRangeType\n+    };\n+\n     QQmlProfilerClient(QQmlDebugConnection *connection)\n         : QQmlDebugClient(QLatin1String(\""CanvasFrameRate\""), connection)\n     {\n@@ -123,21 +170,21 @@ void QQmlProfilerClient::messageReceived(const QByteArray &message)\n     QVERIFY(data.time >= -1);\n \n     switch (data.messageType) {\n-    case (QQmlProfilerService::Event): {\n+    case (QQmlProfilerClient::Event): {\n         stream >> data.detailType;\n \n         switch (data.detailType) {\n-        case QQmlProfilerService::AnimationFrame: {\n+        case QQmlProfilerClient::AnimationFrame: {\n             stream >> data.framerate >> data.animationcount;\n             QVERIFY(data.framerate != -1);\n             QVERIFY(data.animationcount != -1);\n             break;\n         }\n-        case QQmlProfilerService::FramePaint:\n-        case QQmlProfilerService::Mouse:\n-        case QQmlProfilerService::Key:\n-        case QQmlProfilerService::StartTrace:\n-        case QQmlProfilerService::EndTrace:\n+        case QQmlProfilerClient::FramePaint:\n+        case QQmlProfilerClient::Mouse:\n+        case QQmlProfilerClient::Key:\n+        case QQmlProfilerClient::StartTrace:\n+        case QQmlProfilerClient::EndTrace:\n             break;\n         default: {\n             QString failMsg = QString(\""Unknown event type:\"") + data.detailType;\n@@ -147,28 +194,28 @@ void QQmlProfilerClient::messageReceived(const QByteArray &message)\n         }\n         break;\n     }\n-    case QQmlProfilerService::Complete: {\n+    case QQmlProfilerClient::Complete: {\n         emit complete();\n         return;\n     }\n-    case QQmlProfilerService::RangeStart: {\n+    case QQmlProfilerClient::RangeStart: {\n         stream >> data.detailType;\n-        QVERIFY(data.detailType >= 0 && data.detailType < QQmlProfilerService::MaximumRangeType);\n+        QVERIFY(data.detailType >= 0 && data.detailType < QQmlProfilerClient::MaximumRangeType);\n         break;\n     }\n-    case QQmlProfilerService::RangeEnd: {\n+    case QQmlProfilerClient::RangeEnd: {\n         stream >> data.detailType;\n-        QVERIFY(data.detailType >= 0 && data.detailType < QQmlProfilerService::MaximumRangeType);\n+        QVERIFY(data.detailType >= 0 && data.detailType < QQmlProfilerClient::MaximumRangeType);\n         break;\n     }\n-    case QQmlProfilerService::RangeData: {\n+    case QQmlProfilerClient::RangeData: {\n         stream >> data.detailType >> data.detailData;\n-        QVERIFY(data.detailType >= 0 && data.detailType < QQmlProfilerService::MaximumRangeType);\n+        QVERIFY(data.detailType >= 0 && data.detailType < QQmlProfilerClient::MaximumRangeType);\n         break;\n     }\n-    case QQmlProfilerService::RangeLocation: {\n+    case QQmlProfilerClient::RangeLocation: {\n         stream >> data.detailType >> data.detailData >> data.line >> data.column;\n-        QVERIFY(data.detailType >= 0 && data.detailType < QQmlProfilerService::MaximumRangeType);\n+        QVERIFY(data.detailType >= 0 && data.detailType < QQmlProfilerClient::MaximumRangeType);\n         QVERIFY(data.line >= -2);\n         break;\n     }\n@@ -229,12 +276,12 @@ void tst_QQmlProfilerService::blockingConnectWithTraceEnabled()\n \n     QVERIFY(m_client->traceMessages.count());\n     // must start with \""StartTrace\""\n-    QCOMPARE(m_client->traceMessages.first().messageType, (int)QQmlProfilerService::Event);\n-    QCOMPARE(m_client->traceMessages.first().detailType, (int)QQmlProfilerService::StartTrace);\n+    QCOMPARE(m_client->traceMessages.first().messageType, (int)QQmlProfilerClient::Event);\n+    QCOMPARE(m_client->traceMessages.first().detailType, (int)QQmlProfilerClient::StartTrace);\n \n     // must end with \""EndTrace\""\n-    QCOMPARE(m_client->traceMessages.last().messageType, (int)QQmlProfilerService::Event);\n-    QCOMPARE(m_client->traceMessages.last().detailType, (int)QQmlProfilerService::EndTrace);\n+    QCOMPARE(m_client->traceMessages.last().messageType, (int)QQmlProfilerClient::Event);\n+    QCOMPARE(m_client->traceMessages.last().detailType, (int)QQmlProfilerClient::EndTrace);\n }\n \n void tst_QQmlProfilerService::blockingConnectWithTraceDisabled()\n@@ -254,12 +301,12 @@ void tst_QQmlProfilerService::blockingConnectWithTraceDisabled()\n     QVERIFY(m_client->traceMessages.count());\n \n     // must start with \""StartTrace\""\n-    QCOMPARE(m_client->traceMessages.first().messageType, (int)QQmlProfilerService::Event);\n-    QCOMPARE(m_client->traceMessages.first().detailType, (int)QQmlProfilerService::StartTrace);\n+    QCOMPARE(m_client->traceMessages.first().messageType, (int)QQmlProfilerClient::Event);\n+    QCOMPARE(m_client->traceMessages.first().detailType, (int)QQmlProfilerClient::StartTrace);\n \n     // must end with \""EndTrace\""\n-    QCOMPARE(m_client->traceMessages.last().messageType, (int)QQmlProfilerService::Event);\n-    QCOMPARE(m_client->traceMessages.last().detailType, (int)QQmlProfilerService::EndTrace);\n+    QCOMPARE(m_client->traceMessages.last().messageType, (int)QQmlProfilerClient::Event);\n+    QCOMPARE(m_client->traceMessages.last().detailType, (int)QQmlProfilerClient::EndTrace);\n }\n \n void tst_QQmlProfilerService::nonBlockingConnect()\n@@ -276,12 +323,12 @@ void tst_QQmlProfilerService::nonBlockingConnect()\n     }\n \n     // must start with \""StartTrace\""\n-    QCOMPARE(m_client->traceMessages.first().messageType, (int)QQmlProfilerService::Event);\n-    QCOMPARE(m_client->traceMessages.first().detailType, (int)QQmlProfilerService::StartTrace);\n+    QCOMPARE(m_client->traceMessages.first().messageType, (int)QQmlProfilerClient::Event);\n+    QCOMPARE(m_client->traceMessages.first().detailType, (int)QQmlProfilerClient::StartTrace);\n \n     // must end with \""EndTrace\""\n-    QCOMPARE(m_client->traceMessages.last().messageType, (int)QQmlProfilerService::Event);\n-    QCOMPARE(m_client->traceMessages.last().detailType, (int)QQmlProfilerService::EndTrace);\n+    QCOMPARE(m_client->traceMessages.last().messageType, (int)QQmlProfilerClient::Event);\n+    QCOMPARE(m_client->traceMessages.last().detailType, (int)QQmlProfilerClient::EndTrace);\n }\n \n void tst_QQmlProfilerService::profileOnExit()\n@@ -298,12 +345,12 @@ void tst_QQmlProfilerService::profileOnExit()\n     }\n \n     // must start with \""StartTrace\""\n-    QCOMPARE(m_client->traceMessages.first().messageType, (int)QQmlProfilerService::Event);\n-    QCOMPARE(m_client->traceMessages.first().detailType, (int)QQmlProfilerService::StartTrace);\n+    QCOMPARE(m_client->traceMessages.first().messageType, (int)QQmlProfilerClient::Event);\n+    QCOMPARE(m_client->traceMessages.first().detailType, (int)QQmlProfilerClient::StartTrace);\n \n     // must end with \""EndTrace\""\n-    QCOMPARE(m_client->traceMessages.last().messageType, (int)QQmlProfilerService::Event);\n-    QCOMPARE(m_client->traceMessages.last().detailType, (int)QQmlProfilerService::EndTrace);\n+    QCOMPARE(m_client->traceMessages.last().messageType, (int)QQmlProfilerClient::Event);\n+    QCOMPARE(m_client->traceMessages.last().detailType, (int)QQmlProfilerClient::EndTrace);\n }\n \n QTEST_MAIN(tst_QQmlProfilerService)\n"", ""qv8profilerservice.pro"": ""@@ -12,4 +12,4 @@ OTHER_FILES += data/test.qml\n \n CONFIG += parallel_test declarative_debug\n \n-QT += qml-private testlib\n+QT += qml testlib\n"", ""tst_qv8profilerservice.cpp"": ""@@ -42,7 +42,6 @@\n #include <qtest.h>\n #include <QLibraryInfo>\n \n-#include \""QtQml/private/qv8profilerservice_p.h\""\n #include \""debugutil_p.h\""\n #include \""qqmldebugclient_p.h\""\n #include \""../../../shared/util.h\""\n@@ -50,11 +49,34 @@\n #define PORT 13774\n #define STR_PORT \""13774\""\n \n+struct QV8ProfilerData\n+{\n+    int messageType;\n+    QString filename;\n+    QString functionname;\n+    int lineNumber;\n+    double totalTime;\n+    double selfTime;\n+    int treeLevel;\n+\n+    QByteArray toByteArray() const;\n+};\n+\n class QV8ProfilerClient : public QQmlDebugClient\n {\n     Q_OBJECT\n \n public:\n+    enum MessageType {\n+        V8Entry,\n+        V8Complete,\n+        V8SnapshotChunk,\n+        V8SnapshotComplete,\n+        V8Started,\n+\n+        V8MaximumMessage\n+    };\n+\n     QV8ProfilerClient(QQmlDebugConnection *connection)\n         : QQmlDebugClient(QLatin1String(\""V8Profiler\""), connection)\n     {\n@@ -139,28 +161,28 @@ void QV8ProfilerClient::messageReceived(const QByteArray &message)\n     stream >> messageType;\n \n     QVERIFY(messageType >= 0);\n-    QVERIFY(messageType < QV8ProfilerService::V8MaximumMessage);\n+    QVERIFY(messageType < QV8ProfilerClient::V8MaximumMessage);\n \n     switch (messageType) {\n-    case QV8ProfilerService::V8Entry: {\n+    case QV8ProfilerClient::V8Entry: {\n         QV8ProfilerData entry;\n         stream >> entry.filename >> entry.functionname >> entry.lineNumber >> entry.totalTime >> entry.selfTime >> entry.treeLevel;\n         traceMessages.append(entry);\n         break;\n     }\n-    case QV8ProfilerService::V8Complete:\n+    case QV8ProfilerClient::V8Complete:\n         emit complete();\n         break;\n-    case QV8ProfilerService::V8SnapshotChunk: {\n+    case QV8ProfilerClient::V8SnapshotChunk: {\n         QByteArray json;\n         stream >> json;\n         snapshotMessages.append(json);\n         break;\n     }\n-    case QV8ProfilerService::V8SnapshotComplete:\n+    case QV8ProfilerClient::V8SnapshotComplete:\n         emit snapshot();\n         break;\n-    case QV8ProfilerService::V8Started:\n+    case QV8ProfilerClient::V8Started:\n         emit started();\n         break;\n     default:\n"", ""debugutil.cpp"": ""@@ -55,23 +55,6 @@ bool QQmlDebugTest::waitForSignal(QObject *receiver, const char *member, int tim\n     return timer.isActive();\n }\n \n-QQmlDebugTestService::QQmlDebugTestService(const QString &s, float version, QObject *parent)\n-    : QQmlDebugService(s, version, parent)\n-{\n-    registerService();\n-}\n-\n-void QQmlDebugTestService::messageReceived(const QByteArray &ba)\n-{\n-    sendMessage(ba);\n-}\n-\n-void QQmlDebugTestService::stateChanged(State)\n-{\n-    emit stateHasChanged();\n-}\n-\n-\n QQmlDebugTestClient::QQmlDebugTestClient(const QString &s, QQmlDebugConnection *c)\n     : QQmlDebugClient(s, c)\n {\n"", ""debugutil.pri"": ""@@ -1,8 +1,8 @@\n-QT += core-private\n-\n HEADERS += $$PWD/debugutil_p.h \\\n-           $$PWD/qqmldebugclient_p.h\n+           $$PWD/qqmldebugclient_p.h \\\n+           $$PWD/../../../../../src/plugins/qmltooling/shared/qpacketprotocol.h\n \n SOURCES += $$PWD/debugutil.cpp \\\n-           $$PWD/qqmldebugclient.cpp\n+           $$PWD/qqmldebugclient.cpp \\\n+           $$PWD/../../../../../src/plugins/qmltooling/shared/qpacketprotocol.cpp\n \n"", ""debugutil_p.h"": ""@@ -52,7 +52,6 @@\n #include <QtQml/qqmlengine.h>\n \n #include \""qqmldebugclient_p.h\""\n-#include <private/qqmldebugservice_p.h>\n \n class QQmlDebugTest\n {\n@@ -60,20 +59,6 @@ public:\n     static bool waitForSignal(QObject *receiver, const char *member, int timeout = 5000);\n };\n \n-class QQmlDebugTestService : public QQmlDebugService\n-{\n-    Q_OBJECT\n-public:\n-    QQmlDebugTestService(const QString &s, float version = 1, QObject *parent = 0);\n-\n-signals:\n-    void stateHasChanged();\n-\n-protected:\n-    virtual void messageReceived(const QByteArray &ba);\n-    virtual void stateChanged(State state);\n-};\n-\n class QQmlDebugTestClient : public QQmlDebugClient\n {\n     Q_OBJECT\n"", ""qqmldebugclient.cpp"": ""@@ -40,8 +40,7 @@\n ****************************************************************************/\n \n #include \""qqmldebugclient.h\""\n-\n-#include <private/qpacketprotocol_p.h>\n+#include \""qpacketprotocol.h\""\n \n #include <QtCore/qdebug.h>\n #include <QtCore/qstringlist.h>\n"", ""qqmldebugclient_p.h"": ""@@ -55,10 +55,8 @@\n \n #include <QtNetwork/qtcpsocket.h>\n \n-#include <private/qtqmlglobal_p.h>\n-\n class QQmlDebugConnectionPrivate;\n-class Q_QML_PRIVATE_EXPORT QQmlDebugConnection : public QIODevice\n+class QQmlDebugConnection : public QIODevice\n {\n     Q_OBJECT\n     Q_DISABLE_COPY(QQmlDebugConnection)\n@@ -92,10 +90,9 @@ private:\n };\n \n class QQmlDebugClientPrivate;\n-class Q_QML_PRIVATE_EXPORT QQmlDebugClient : public QObject\n+class QQmlDebugClient : public QObject\n {\n     Q_OBJECT\n-    Q_DECLARE_PRIVATE(QQmlDebugClient)\n     Q_DISABLE_COPY(QQmlDebugClient)\n \n public:\n@@ -115,6 +112,7 @@ protected:\n     virtual void messageReceived(const QByteArray &);\n \n private:\n+    QQmlDebugClientPrivate *d;\n     friend class QQmlDebugConnection;\n     friend class QQmlDebugConnectionPrivate;\n };\n"", ""qqmldebugtestservice.cpp"": ""@@ -0,0 +1,58 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n+** Contact: http://www.qt-project.org/\n+**\n+** This file is part of the test suite of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#include \""qqmldebugtestservice_p.h\""\n+\n+QQmlDebugTestService::QQmlDebugTestService(const QString &s, float version, QObject *parent)\n+    : QQmlDebugService(s, version, parent)\n+{\n+    registerService();\n+}\n+\n+void QQmlDebugTestService::messageReceived(const QByteArray &ba)\n+{\n+    sendMessage(ba);\n+}\n+\n+void QQmlDebugTestService::stateChanged(State)\n+{\n+    emit stateHasChanged();\n+}\n"", ""qqmldebugtestservice_p.h"": ""@@ -0,0 +1,62 @@\n+\n+/****************************************************************************\n+**\n+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n+** Contact: http://www.qt-project.org/\n+**\n+** This file is part of the test suite of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#ifndef QQMLDEBUGTESTSERVICE_H\n+#define QQMLDEBUGTESTSERVICE_H\n+\n+#include <private/qqmldebugservice_p.h>\n+\n+class QQmlDebugTestService : public QQmlDebugService\n+{\n+    Q_OBJECT\n+public:\n+    QQmlDebugTestService(const QString &s, float version = 1, QObject *parent = 0);\n+\n+signals:\n+    void stateHasChanged();\n+\n+protected:\n+    virtual void messageReceived(const QByteArray &ba);\n+    virtual void stateChanged(State state);\n+};\n+\n+#endif // QQMLDEBUGTESTSERVICE_H\n"", ""qmlprofiler.pro"": ""@@ -16,7 +16,8 @@ SOURCES += main.cpp \\\n     commandlistener.cpp \\\n     profileclient.cpp \\\n     profiledata.cpp \\\n-    qqmldebugclient.cpp\n+    qqmldebugclient.cpp \\\n+    qpacketprotocol.cpp\n \n HEADERS += \\\n     qmlprofilerapplication.h \\\n@@ -24,4 +25,5 @@ HEADERS += \\\n     constants.h \\\n     profileclient.h \\\n     profiledata.h \\\n-    qqmldebugclient.h\n+    qqmldebugclient.h \\\n+    qpacketprotocol.h\n""}","test,refactor","test,refactor 
",bug;deprecat;test;
15514.0,15514.0,refactor,Daniel Teske,Remove forward declaration of a no more existing class,"Remove forward declaration of a no more existing class

Change-Id: I6572080cd1d5aa4a82f548ea2eddfbbbf693ec35",['src/plugins/projectexplorer/session.h'],"{""session.h"": ""@@ -59,10 +59,6 @@ class Node;\n class SessionNode;\n class SessionManager;\n \n-namespace Internal {\n-class SessionNodeImpl;\n-} // namespace Internal\n-\n class PROJECTEXPLORER_EXPORT SessionManager : public QObject\n {\n     Q_OBJECT\n""}",refactor,"refactor 
",deprecat;
20883.0,20883.0,test,João Abecasis,Improve output on test failures,"Improve output on test failures

This adds checks to ensure Q_ALIGNOF is returning the desired alignment
for explicitly-aligned types.

The alignment check is now inlined in the test inside QCOMPARE so we get
slightly more informative errors:

FAIL!  : tst_Collections::alignment() Compared values are not the same
   Actual   (quintptr(&it.value()) % Value::PreferredAlignment): 64
   Expected (quintptr(0)): 0
   Loc: [tst_collections.cpp(3384)]

In this case, this is enough to notice ""non-native"" alignments are being
requested. Having test parameters otherwise hidden in template arguments
doesn't help the situation.

Change-Id: I05267fd25b71f183cfb98fb5b0a7dfd6c28da816",['tests/auto/other/collections/tst_collections.cpp'],"{""tst_collections.cpp"": ""@@ -3318,30 +3318,28 @@ class Q_DECL_ALIGN(4) Aligned4\n     char i;\n public:\n     Aligned4(int i = 0) : i(i) {}\n-    bool checkAligned() const\n-    {\n-        return (quintptr(this) & 3) == 0;\n-    }\n+\n+    enum { PreferredAlignment = 4 };\n \n     inline bool operator==(const Aligned4 &other) const { return i == other.i; }\n     inline bool operator<(const Aligned4 &other) const { return i < other.i; }\n     friend inline int qHash(const Aligned4 &a) { return qHash(a.i); }\n };\n+Q_STATIC_ASSERT(Q_ALIGNOF(Aligned4) % 4 == 0);\n \n class Q_DECL_ALIGN(128) Aligned128\n {\n     char i;\n public:\n     Aligned128(int i = 0) : i(i) {}\n-    bool checkAligned() const\n-    {\n-        return (quintptr(this) & 127) == 0;\n-    }\n+\n+    enum { PreferredAlignment = 128 };\n \n     inline bool operator==(const Aligned128 &other) const { return i == other.i; }\n     inline bool operator<(const Aligned128 &other) const { return i < other.i; }\n     friend inline int qHash(const Aligned128 &a) { return qHash(a.i); }\n };\n+Q_STATIC_ASSERT(Q_ALIGNOF(Aligned128) % 128 == 0);\n \n template<typename C>\n void testVectorAlignment()\n@@ -3349,13 +3347,13 @@ void testVectorAlignment()\n     typedef typename C::value_type Aligned;\n     C container;\n     container.append(Aligned());\n-    QVERIFY(container[0].checkAligned());\n+    QCOMPARE(quintptr(&container[0]) % Aligned::PreferredAlignment, quintptr(0));\n \n     for (int i = 0; i < 200; ++i)\n         container.append(Aligned());\n     \n     for (int i = 0; i < container.size(); ++i)\n-        QVERIFY(container.at(i).checkAligned());\n+        QCOMPARE(quintptr(&container.at(i)) % Aligned::PreferredAlignment, quintptr(0));\n }\n \n template<typename C>\n@@ -3364,13 +3362,13 @@ void testContiguousCacheAlignment()\n     typedef typename C::value_type Aligned;\n     C container(150);\n     container.append(Aligned());\n-    QVERIFY(container[container.firstIndex()].checkAligned());\n+    QCOMPARE(quintptr(&container[container.firstIndex()]) % Aligned::PreferredAlignment, quintptr(0));\n \n     for (int i = 0; i < 200; ++i)\n         container.append(Aligned());\n \n     for (int i = container.firstIndex(); i < container.lastIndex(); ++i)\n-        QVERIFY(container.at(i).checkAligned());\n+        QCOMPARE(quintptr(&container.at(i)) % Aligned::PreferredAlignment, quintptr(0));\n }\n \n template<typename C>\n@@ -3382,8 +3380,8 @@ void testAssociativeContainerAlignment()\n     container.insert(Key(), Value());\n \n     typename C::const_iterator it = container.constBegin();\n-    QVERIFY(it.key().checkAligned());\n-    QVERIFY(it.value().checkAligned());\n+    QCOMPARE(quintptr(&it.key()) % Key::PreferredAlignment, quintptr(0));\n+    QCOMPARE(quintptr(&it.value()) % Value::PreferredAlignment, quintptr(0));\n \n     // add some more elements\n     for (int i = 0; i < 200; ++i)\n@@ -3391,8 +3389,8 @@ void testAssociativeContainerAlignment()\n \n     it = container.constBegin();\n     for ( ; it != container.constEnd(); ++it) {\n-        QVERIFY(it.key().checkAligned());\n-        QVERIFY(it.value().checkAligned());\n+        QCOMPARE(quintptr(&it.key()) % Key::PreferredAlignment, quintptr(0));\n+        QCOMPARE(quintptr(&it.value()) % Value::PreferredAlignment, quintptr(0));\n     }\n }\n \n""}",test,"test 
",test;
25199.0,25199.0,refactor,Tobias Hunger,Whitespace fixes,"Whitespace fixes

Change-Id: I2fc21aee84564e073dc4fcebd529e4ac27d80758","['src/plugins/projectexplorer/project.cpp', 'src/plugins/projectexplorer/target.cpp', 'src/plugins/qt4projectmanager/qt4target.cpp', 'src/plugins/qt4projectmanager/qt-s60/symbianideviceconfigwidget.cpp', 'src/plugins/qt4projectmanager/qt-s60/symbianideviceconfigwidget.h', 'src/plugins/madde/maemopublisherfremantlefree.cpp', 'src/plugins/madde/maemodeploystepfactory.cpp', 'src/plugins/madde/maemopublishingwizardfremantlefree.h']","{""maemodeploystepfactory.cpp"": ""@@ -135,7 +135,7 @@ BuildStep *MaemoDeployStepFactory::create(BuildStepList *parent, const Core::Id\n     } else if (id == MaemoMakeInstallToSysrootStep::Id) {\n         return new MaemoMakeInstallToSysrootStep(parent);\n     } else if (id == MaemoInstallPackageViaMountStep::stepId()\n-        || (id == Core::Id(OldMaemoDeployStepId) && qobject_cast< const Qt4Maemo5Target *>(t))) {\n+        || (id == Core::Id(OldMaemoDeployStepId) && qobject_cast<const Qt4Maemo5Target *>(t))) {\n         return new MaemoInstallPackageViaMountStep(parent);\n     } else if (id == MaemoCopyFilesViaMountStep::stepId()) {\n         return new MaemoCopyFilesViaMountStep(parent);\n"", ""maemopublisherfremantlefree.cpp"": ""@@ -542,7 +542,7 @@ void MaemoPublisherFremantleFree::finishWithFailure(const QString &progressMsg,\n bool MaemoPublisherFremantleFree::updateDesktopFiles(QString *error) const\n {\n     bool success = true;\n-    const Qt4MaemoDeployConfiguration * const deployConfig\n+    const Qt4MaemoDeployConfiguration *const deployConfig\n         = qobject_cast<Qt4MaemoDeployConfiguration *>(m_buildConfig->target()->activeDeployConfiguration());\n     QTC_ASSERT(deployConfig, return false);\n     const DeploymentInfo *const deploymentInfo = deployConfig->deploymentInfo();\n@@ -601,7 +601,7 @@ bool MaemoPublisherFremantleFree::addOrReplaceDesktopFileValue(QByteArray &fileC\n QStringList MaemoPublisherFremantleFree::findProblems() const\n {\n     QStringList problems;\n-    const Qt4Maemo5Target * const target\n+    const Qt4Maemo5Target *const target\n         = qobject_cast<Qt4Maemo5Target *>(m_buildConfig->target());\n     if (!target)\n         return QStringList();\n"", ""maemopublishingwizardfremantlefree.h"": ""@@ -50,7 +50,7 @@ class MaemoPublishingWizardFremantleFree : public Utils::Wizard\n     Q_OBJECT\n public:\n     explicit MaemoPublishingWizardFremantleFree(const ProjectExplorer::Project *project,\n-        QWidget *parent = 0);\n+                                                QWidget *parent = 0);\n \n private:\n     virtual int nextId() const;\n"", ""project.cpp"": ""@@ -220,7 +220,7 @@ void Project::setActiveTarget(Target *target)\n \n Target *Project::target(const Core::Id id) const\n {\n-    foreach (Target * target, d->m_targets) {\n+    foreach (Target *target, d->m_targets) {\n         if (target->id() == id)\n             return target;\n     }\n"", ""target.cpp"": ""@@ -370,7 +370,7 @@ QList<Core::Id> Target::availableDeployConfigurationIds()\n \n QString Target::displayNameForDeployConfigurationId(Core::Id &id)\n {\n-    foreach (const DeployConfigurationFactory * const factory, d->deployFactories()) {\n+    foreach (const DeployConfigurationFactory *const factory, d->deployFactories()) {\n         if (factory->availableCreationIds(this).contains(id))\n             return factory->displayNameForId(id);\n     }\n"", ""symbianideviceconfigwidget.cpp"": ""@@ -506,7 +506,7 @@ void SymbianIDeviceConfigurationWidget::getInstalledPackagesResult(const Coda::C\n         const QString uidKey = QLatin1String(\""uid\"");\n         const QString errorKey = QLatin1String(\""error\"");\n         const QString versionKey = QLatin1String(\""version\"");\n-        foreach (const QVariant& var, resultsList) {\n+        foreach (const QVariant &var, resultsList) {\n             QVariantHash obj = var.toHash();\n             bool ok = false;\n             uint uid = obj.value(uidKey).toString().toUInt(&ok, 16);\n@@ -567,7 +567,7 @@ void SymbianIDeviceConfigurationWidget::getHalResult(const Coda::CodaCommandResu\n         int y = 0;\n         const QString nameKey = QLatin1String(\""name\"");\n         const QString valueKey = QLatin1String(\""value\"");\n-        foreach (const QVariant& var, resultsList) {\n+        foreach (const QVariant &var, resultsList) {\n             QVariantHash obj = var.toHash();\n             const QString name = obj.value(nameKey).toString();\n             if (name == QLatin1String(\""EDisplayXPixels\""))\n"", ""symbianideviceconfigwidget.h"": ""@@ -103,7 +103,7 @@ private:\n \n     void setDeviceInfoLabel(const QString &message, bool isError = false);\n \n-    QWidget * createCommunicationChannel();\n+    QWidget *createCommunicationChannel();\n \n     void getQtVersionCommandResult(const Coda::CodaCommandResult &result);\n     void getRomInfoResult(const Coda::CodaCommandResult &result);\n"", ""qt4target.cpp"": ""@@ -280,7 +280,7 @@ QString Qt4BaseTargetFactory::msgBuildConfigurationName(const BuildConfiguration\n         //: Name of a debug build configuration to created by a project wizard, %1 being the Qt version name. We recommend not translating it.\n         tr(\""%1 Debug\"").arg(qtVersionName) :\n         //: Name of a release build configuration to be created by a project wizard, %1 being the Qt version name. We recommend not translating it.\n-        tr(\""%1 Release\"").arg(qtVersionName);\n+                tr(\""%1 Release\"").arg(qtVersionName);\n }\n \n QList<ProjectExplorer::Task> Qt4BaseTargetFactory::reportIssues(const QString &proFile)\n""}",refactor,"refactor 
",bug;
20901.0,20901.0,refactor,Natalia Shubina,disable mouse hovered events,"disable mouse hovered events

disable mouse hovered events for consistent behavior on desktop and device

Change-Id: If8a943b4d461d5b16f63f27575fab0d931910dd4","['examples/declarative/common/imports/QtLocation/examples/components/IconButton.qml', 'examples/declarative/common/imports/QtLocation/examples/components/Fader.qml', 'examples/declarative/common/imports/QtLocation/examples/components/Slider.qml', 'examples/declarative/mapviewer/content/map/MapComponent.qml', 'examples/declarative/common/imports/QtLocation/examples/components/Button.qml', 'examples/declarative/mapviewer/content/map/Marker.qml', 'examples/declarative/common/imports/QtLocation/examples/components/TitleBar.qml', 'examples/declarative/mapviewer/content/map/RectangleItem.qml']","{""Button.qml"": ""@@ -74,7 +74,7 @@ Item {\n     MouseArea {\n         id: mouseRegion\n         anchors.fill: buttonImage\n-        hoverEnabled: true\n+        hoverEnabled: false\n         onClicked: { container.clicked() }\n     }\n     Text {\n"", ""Fader.qml"": ""@@ -48,7 +48,7 @@ Rectangle {\n     MouseArea {\n         id: mouseArea\n         anchors.fill: parent\n-        hoverEnabled: true\n+        hoverEnabled: false\n     }\n \n     Component.onCompleted: {\n"", ""IconButton.qml"": ""@@ -60,7 +60,7 @@ Item {\n \n         MouseArea {\n             id: mouseRegion\n-            hoverEnabled: true\n+            hoverEnabled: false\n             anchors.fill: parent\n             onClicked: root.clicked()\n         }\n"", ""Slider.qml"": ""@@ -114,7 +114,7 @@ Item {\n \n         MouseArea {\n             id: mouseRegion\n-            hoverEnabled: true\n+            hoverEnabled: false\n             anchors.fill: parent; drag.target: parent\n             drag.axis: Drag.XAxis; drag.minimumX: 0; drag.maximumX: slider.length\n             onPositionChanged: { slider.value = (slider.maximum - slider.minimum) * handle.x / slider.length + slider.minimum; }\n"", ""TitleBar.qml"": ""@@ -57,7 +57,7 @@ Item {\n         source: \""../../../../resources/quit.png\""\n         MouseArea {\n             id: mouseRegion\n-            hoverEnabled: true\n+            hoverEnabled: false\n             anchors.fill: parent\n             onClicked: { titleBar.clicked(); }\n         }\n"", ""MapComponent.qml"": ""@@ -291,7 +291,7 @@ Map {\n             MapMouseArea {\n                 id: routeMouseArea\n                 anchors.fill: parent\n-                hoverEnabled: true\n+                hoverEnabled: false\n \n                 onPressed : {\n                     map.resetState();\n@@ -339,7 +339,7 @@ Map {\n             MapMouseArea {\n                 anchors.fill:parent\n                 id: circleMouseArea\n-                hoverEnabled: true\n+                hoverEnabled: false\n \n                 onPressed : {\n                     map.resetState();\n@@ -517,7 +517,7 @@ Map {\n             radius: 5\n             MouseArea {\n                 anchors.fill: parent\n-                hoverEnabled: true\n+                hoverEnabled: false\n             }\n             Item {\n                 id: textArea\n"", ""Marker.qml"": ""@@ -67,7 +67,7 @@ MapQuickItem {\n             property int lastX: -1\n             property int lastY: -1\n             anchors.fill: parent\n-            hoverEnabled : true\n+            hoverEnabled : false\n             drag.target: marker\n \n             onPressed : {\n"", ""RectangleItem.qml"": ""@@ -70,6 +70,6 @@ MapRectangle {\n     MapMouseArea {\n         anchors.fill:parent\n         id: mousearea\n-        hoverEnabled: true\n+        hoverEnabled: false\n     }\n }\n""}",refactor,"bug, refactor 
",deprecat;resource;
2721.0,2721.0,test,Rohan McGovern [inactive],"test: mark tst_qgraphicswidget as insignificant on qpa, xcb","test: mark tst_qgraphicswidget as insignificant on qpa, xcb

This autotest is unstable.

Task-number: QTBUG-20778
Change-Id: If862a64d2be2f3f66ea8435b0412bfb401f9aceb",['tests/auto/qgraphicswidget/qgraphicswidget.pro'],"{""qgraphicswidget.pro"": ""@@ -6,3 +6,4 @@ SOURCES  += tst_qgraphicswidget.cpp\n \n \n mac*:CONFIG+=insignificant_test\n+qpa:contains(QT_CONFIG,xcb):CONFIG+=insignificant_test  # QTBUG-20778 unstable on qpa, xcb\n""}",test,"test 
",bug;resource;test;
13370.0,13370.0,bug,Alan Alpert (Inactive),Remove unecessary asserts,"Remove unecessary asserts

They would also trigger when the user gives invalid input, which is not
an assert worthy circumstance.

Change-Id: Ifa5697d411793a55b6895945e751a73841b1ba3f",['src/quick/items/qquickspriteengine.cpp'],"{""qquickspriteengine.cpp"": ""@@ -273,7 +273,6 @@ QImage QQuickSpriteEngine::assembledImage()\n             while (framesLeft > 0){\n                 if (image.width() - x + curX <= img.width()){//finish a row in image (dest)\n                     int copied = image.width() - x;\n-                    Q_ASSERT(!(copied % frameWidth));//XXX: Just checking\n                     framesLeft -= copied/frameWidth;\n                     p.drawImage(x,y,img.copy(curX,curY,copied,frameHeight));\n                     y += frameHeight;\n@@ -285,7 +284,6 @@ QImage QQuickSpriteEngine::assembledImage()\n                     }\n                 }else{//finish a row in img (src)\n                     int copied = img.width() - curX;\n-                    Q_ASSERT(!(copied % frameWidth));//XXX: Just checking\n                     framesLeft -= copied/frameWidth;\n                     p.drawImage(x,y,img.copy(curX,curY,copied,frameHeight));\n                     curY += frameHeight;\n""}",bug,"bug, refactor 
",deprecat;
2830.0,2830.0,deprecat,Natalia Shubina,qml_mapviewer: removed Search dialog,"qml_mapviewer: removed Search dialog

Change-Id: I5deb1fc0fa5fc458da0392a681c2784efc0bd2e2","['examples/declarative/mapviewer/MapComponent.qml', 'examples/declarative/mapviewer/mapviewer.qml']","{""MapComponent.qml"": ""@@ -675,6 +675,9 @@ Map {\n         }\n         routeQuery.travelModes = RouteQuery.CarTravel\n         routeQuery.routeOptimizations = RouteQuery.ShortestRoute\n+        for (i=0; i<9; i++) {\n+            routeQuery.setFeatureWeight(i, 0)\n+        }\n         routeModel.update();\n     }\n \n"", ""mapviewer.qml"": ""@@ -88,8 +88,7 @@ Item {\n         orientation: ListView.Vertical\n         z: mainMenu.z - 1\n         Component.onCompleted: {\n-            setModel([\""Reverse geocode\"", \""Geocode\"",\""Search\"", \""Route\""])\n-            disableItem(2)\n+            setModel([\""Reverse geocode\"", \""Geocode\"", \""Route\""])\n         }\n         itemHeight: 30;\n         itemWidth: mainMenu.itemWidth\n@@ -107,10 +106,6 @@ Item {\n                     break;\n                 }\n                 case 2: {\n-                    page.state = \""Search\""\n-                    break;\n-                }\n-                case 3: {\n                     page.state = \""Route\""\n                     break;\n                 }\n@@ -386,26 +381,6 @@ Item {\n         }\n     }\n \n-//Search Dialog\n-    Dialog {\n-        id: searchDialog\n-        title: \""Search\""\n-        z: mainMenu.z + 1\n-\n-        onGoButtonClicked: {\n-            page.state = \""\""\n-//            searchModel.searchString = dialogModel.get(0).inputText\n-//            searchModel.update();\n-        }\n-        Component.onCompleted: {\n-            var obj = [[\""Please enter thing to search:\"",\""53 Brandl St, Eight Mile Plains, Australia\""]]\n-            setModel(obj)\n-        }\n-        onCancelButtonClicked: {\n-            page.state = \""\""\n-        }\n-    }\n-\n //Geocode Dialog\n     Dialog {\n         id: geocodeDialog\n@@ -585,10 +560,6 @@ Item {\n             name: \""Route\""\n             PropertyChanges { target: routeDialog; opacity: 1 }\n         },\n-        State {\n-            name: \""Search\""\n-            PropertyChanges { target: searchDialog; opacity: 1 }\n-        },\n         State {\n             name: \""Geocode\""\n             PropertyChanges { target: geocodeDialog; opacity: 1 }\n@@ -631,10 +602,6 @@ Item {\n             to: \""Route\""\n             NumberAnimation { properties: \""opacity\"" ; duration: 500; easing.type: Easing.Linear }\n         },\n-        Transition {\n-            to: \""Search\""\n-            NumberAnimation { properties: \""opacity\"" ; duration: 500; easing.type: Easing.Linear }\n-        },\n         Transition {\n             to: \""Geocode\""\n             NumberAnimation { properties: \""opacity\"" ; duration: 500; easing.type: Easing.Linear }\n""}",deprecat,"feature 
",deprecat;resource;
4674.0,4674.0,feature,Samuel Rødal,Implemented texture cache for GL paint engine in QtGui.,"Implemented texture cache for GL paint engine in QtGui.

This is simpler than the existing texture cache in QtOpenGL, as it only
serves the GL paint engine. There's one per context group, to simplify
the design and to prevent performance degradations.

Change-Id: I61e3c9a444d8e246a8b38da019a56f2c0a533c0c","['src/gui/kernel/qopenglcontext.cpp', 'src/gui/opengl/qopengltexturecache.cpp', 'src/gui/opengl/qopengltexturecache_p.h', 'src/gui/opengl/qopengl_p.h', 'src/gui/kernel/qopenglcontext_p.h', 'src/gui/opengl/qopenglpaintengine.cpp', 'tests/auto/qopengl/tst_qopengl.cpp', 'src/gui/opengl/opengl.pri']","{""qopenglcontext.cpp"": ""@@ -566,6 +566,17 @@ QOpenGLSharedResource *QOpenGLMultiGroupSharedResource::value(QOpenGLContext *co\n     return group->d_func()->m_resources.value(this, 0);\n }\n \n+QList<QOpenGLSharedResource *> QOpenGLMultiGroupSharedResource::resources() const\n+{\n+    QList<QOpenGLSharedResource *> result;\n+    for (QList<QOpenGLContextGroup *>::const_iterator it = m_groups.constBegin(); it != m_groups.constEnd(); ++it) {\n+        QOpenGLSharedResource *resource = (*it)->d_func()->m_resources.value(const_cast<QOpenGLMultiGroupSharedResource *>(this), 0);\n+        if (resource)\n+            result << resource;\n+    }\n+    return result;\n+}\n+\n void QOpenGLMultiGroupSharedResource::cleanup(QOpenGLContext *ctx)\n {\n     QOpenGLSharedResource *resource = value(ctx);\n"", ""qopenglcontext_p.h"": ""@@ -154,6 +154,8 @@ public:\n \n     QOpenGLSharedResource *value(QOpenGLContext *context);\n \n+    QList<QOpenGLSharedResource *> resources() const;\n+\n     template <typename T>\n     T *value(QOpenGLContext *context) {\n         QOpenGLContextGroup *group = context->shareGroup();\n"", ""opengl.pri"": ""@@ -14,6 +14,7 @@ HEADERS += opengl/qopengl.h \\\n            opengl/qopenglshaderprogram.h \\\n            opengl/qopenglextensions_p.h \\\n            opengl/qopenglgradientcache_p.h \\\n+           opengl/qopengltexturecache_p.h \\\n            opengl/qopenglengineshadermanager_p.h \\\n            opengl/qopengl2pexvertexarray_p.h \\\n            opengl/qopenglpaintengine_p.h \\\n@@ -34,6 +35,7 @@ SOURCES += opengl/qopengl.cpp \\\n            opengl/qopenglbuffer.cpp \\\n            opengl/qopenglshaderprogram.cpp \\\n            opengl/qopenglgradientcache.cpp \\\n+           opengl/qopengltexturecache.cpp \\\n            opengl/qopenglengineshadermanager.cpp \\\n            opengl/qopengl2pexvertexarray.cpp \\\n            opengl/qopenglpaintengine.cpp \\\n"", ""qopengl_p.h"": ""@@ -80,99 +80,6 @@ private:\n     QVector<int> m_offsets;\n };\n \n-class QOpenGLTexture : public QOpenGLSharedResource {\n-public:\n-    QOpenGLTexture(QOpenGLContext *ctx, GLuint id, bool inverted)\n-        : QOpenGLSharedResource(ctx->shareGroup())\n-        , m_id(id)\n-        , m_inverted(inverted)\n-    {\n-    }\n-\n-    GLuint id() const { return m_id; }\n-    bool invertedY() const { return m_inverted; }\n-\n-protected:\n-    void invalidateResource()\n-    {\n-        m_id = 0;\n-    }\n-\n-    void freeResource(QOpenGLContext *)\n-    {\n-        glDeleteTextures(1, &m_id);\n-    }\n-\n-private:\n-    GLuint m_id;\n-    bool m_inverted;\n-};\n-\n-struct QOpenGLTextureCacheKey {\n-    qint64 key;\n-    QOpenGLContextGroup *group;\n-};\n-\n-inline bool operator==(const QOpenGLTextureCacheKey &a, const QOpenGLTextureCacheKey &b)\n-{\n-    return a.key == b.key && a.group == b.group;\n-}\n-\n-inline uint qHash(const QOpenGLTextureCacheKey &key)\n-{\n-    return qHash(key.key) ^ qHash(key.group);\n-}\n-\n-class QPlatformPixmap;\n-\n-class QOpenGLTextureCache {\n-public:\n-    QOpenGLTextureCache();\n-    ~QOpenGLTextureCache();\n-\n-    void insert(QOpenGLContext *ctx, qint64 key, QOpenGLTexture *texture, int cost);\n-    void remove(qint64 key);\n-    inline int size();\n-    inline void setMaxCost(int newMax);\n-    inline int maxCost();\n-    inline QOpenGLTexture* getTexture(QOpenGLContext *ctx, qint64 key);\n-\n-    bool remove(QOpenGLContext *ctx, GLuint textureId);\n-    void removeContextTextures(QOpenGLContext *ctx);\n-    static QOpenGLTextureCache *instance();\n-    static void cleanupTexturesForCacheKey(qint64 cacheKey);\n-    static void cleanupTexturesForPixampData(QPlatformPixmap* pixmap);\n-    static void cleanupBeforePixmapDestruction(QPlatformPixmap* pixmap);\n-\n-private:\n-    QCache<QOpenGLTextureCacheKey, QOpenGLTexture> m_cache;\n-    QReadWriteLock m_lock;\n-};\n-\n-int QOpenGLTextureCache::size() {\n-    QReadLocker locker(&m_lock);\n-    return m_cache.size();\n-}\n-\n-void QOpenGLTextureCache::setMaxCost(int newMax)\n-{\n-    QWriteLocker locker(&m_lock);\n-    m_cache.setMaxCost(newMax);\n-}\n-\n-int QOpenGLTextureCache::maxCost()\n-{\n-    QReadLocker locker(&m_lock);\n-    return m_cache.maxCost();\n-}\n-\n-QOpenGLTexture* QOpenGLTextureCache::getTexture(QOpenGLContext *ctx, qint64 key)\n-{\n-    QReadLocker locker(&m_lock);\n-    const QOpenGLTextureCacheKey cacheKey = { key, ctx->shareGroup() };\n-    return m_cache.object(cacheKey);\n-}\n-\n QT_END_NAMESPACE\n \n QT_END_HEADER\n"", ""qopenglpaintengine.cpp"": ""@@ -65,6 +65,7 @@\n // #define QT_OPENGL_CACHE_AS_VBOS\n \n #include \""qopenglgradientcache_p.h\""\n+#include \""qopengltexturecache_p.h\""\n #include \""qopenglpaintengine_p.h\""\n \n #include <string.h> //for memcpy\n@@ -197,7 +198,7 @@ void QOpenGL2PaintEngineExPrivate::updateBrushTexture()\n         QImage texImage = qt_imageForBrush(style, false);\n \n         funcs.glActiveTexture(GL_TEXTURE0 + QT_BRUSH_TEXTURE_UNIT);\n-        //ctx->d_func()->bindTexture(texImage, GL_TEXTURE_2D, GL_RGBA, QOpenGLContext::InternalBindOption);\n+        QOpenGLTextureCache::cacheForContext(ctx)->bindTexture(ctx, texImage);\n         updateTextureFilter(GL_TEXTURE_2D, GL_REPEAT, q->state()->renderHints & QPainter::SmoothPixmapTransform);\n     }\n     else if (style >= Qt::LinearGradientPattern && style <= Qt::ConicalGradientPattern) {\n@@ -227,11 +228,9 @@ void QOpenGL2PaintEngineExPrivate::updateBrushTexture()\n             currentBrushPixmap = currentBrushPixmap.scaled(max_texture_size, max_texture_size, Qt::KeepAspectRatio);\n \n         funcs.glActiveTexture(GL_TEXTURE0 + QT_BRUSH_TEXTURE_UNIT);\n-        QOpenGLTexture *tex = 0;//ctx->d_func()->bindTexture(currentBrushPixmap, GL_TEXTURE_2D, GL_RGBA,\n-                                //                     QOpenGLContext::InternalBindOption |\n-                                //                     QOpenGLContext::CanFlipNativePixmapBindOption);\n+        QOpenGLTextureCache::cacheForContext(ctx)->bindTexture(ctx, currentBrushPixmap);\n         updateTextureFilter(GL_TEXTURE_2D, GL_REPEAT, q->state()->renderHints & QPainter::SmoothPixmapTransform);\n-        textureInvertedY = tex->invertedY();\n+        textureInvertedY = false;\n     }\n     brushTextureDirty = false;\n }\n@@ -1360,18 +1359,17 @@ void QOpenGL2PaintEngineEx::drawPixmap(const QRectF& dest, const QPixmap & pixma\n     d->transferMode(ImageDrawingMode);\n \n     d->funcs.glActiveTexture(GL_TEXTURE0 + QT_IMAGE_TEXTURE_UNIT);\n-    QOpenGLTexture *texture = 0;\n-//        ctx->d_func()->bindTexture(pixmap, GL_TEXTURE_2D, GL_RGBA, bindOptions);\n+    GLuint id = QOpenGLTextureCache::cacheForContext(ctx)->bindTexture(ctx, pixmap);\n \n-    GLfloat top = texture->invertedY() ? (pixmap.height() - src.top()) : src.top();\n-    GLfloat bottom = texture->invertedY() ? (pixmap.height() - src.bottom()) : src.bottom();\n+    GLfloat top = false ? (pixmap.height() - src.top()) : src.top();\n+    GLfloat bottom = false ? (pixmap.height() - src.bottom()) : src.bottom();\n     QOpenGLRect srcRect(src.left(), top, src.right(), bottom);\n \n     bool isBitmap = pixmap.isQBitmap();\n     bool isOpaque = !isBitmap && !pixmap.hasAlpha();\n \n     d->updateTextureFilter(GL_TEXTURE_2D, GL_CLAMP_TO_EDGE,\n-                           state()->renderHints & QPainter::SmoothPixmapTransform, texture->id());\n+                           state()->renderHints & QPainter::SmoothPixmapTransform, id);\n     d->drawTexture(dest, srcRect, pixmap.size(), isOpaque, isBitmap);\n }\n \n@@ -1397,8 +1395,7 @@ void QOpenGL2PaintEngineEx::drawImage(const QRectF& dest, const QImage& image, c\n \n     d->funcs.glActiveTexture(GL_TEXTURE0 + QT_IMAGE_TEXTURE_UNIT);\n \n-    QOpenGLTexture *texture = 0;//ctx->d_func()->bindTexture(image, GL_TEXTURE_2D, GL_RGBA, bindOptions);\n-    GLuint id = texture->id();\n+    GLuint id = QOpenGLTextureCache::cacheForContext(ctx)->bindTexture(ctx, image);\n \n     d->updateTextureFilter(GL_TEXTURE_2D, GL_CLAMP_TO_EDGE,\n                            state()->renderHints & QPainter::SmoothPixmapTransform, id);\n@@ -1907,11 +1904,8 @@ void QOpenGL2PaintEngineExPrivate::drawPixmapFragments(const QPainter::PixmapFra\n     }\n \n     funcs.glActiveTexture(GL_TEXTURE0 + QT_IMAGE_TEXTURE_UNIT);\n-    QOpenGLTexture *texture = 0;//ctx->d_func()->bindTexture(pixmap, GL_TEXTURE_2D, GL_RGBA,\n-                                //                     QOpenGLContext::InternalBindOption\n-                                //                     | QOpenGLContext::CanFlipNativePixmapBindOption);\n-\n-    if (texture->invertedY()) {\n+    GLuint id = QOpenGLTextureCache::cacheForContext(ctx)->bindTexture(ctx, pixmap);\n+    if (false) {\n         // Flip texture y-coordinate.\n         QOpenGLPoint *data = textureCoordinateArray.data();\n         for (int i = 0; i < 6 * fragmentCount; ++i)\n@@ -1924,7 +1918,7 @@ void QOpenGL2PaintEngineExPrivate::drawPixmapFragments(const QPainter::PixmapFra\n     bool isOpaque = !isBitmap && (!pixmap.hasAlpha() || (hints & QPainter::OpaqueHint)) && allOpaque;\n \n     updateTextureFilter(GL_TEXTURE_2D, GL_CLAMP_TO_EDGE,\n-                           q->state()->renderHints & QPainter::SmoothPixmapTransform, texture->id());\n+                           q->state()->renderHints & QPainter::SmoothPixmapTransform, id);\n \n     // Setup for texture drawing\n     currentBrush = noBrush;\n"", ""qopengltexturecache.cpp"": ""@@ -0,0 +1,213 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the QtGui module of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#include \""qopengltexturecache_p.h\""\n+#include <private/qopenglcontext_p.h>\n+#include <private/qimagepixmapcleanuphooks_p.h>\n+#include <qplatformpixmap_qpa.h>\n+\n+QT_BEGIN_NAMESPACE\n+\n+class QOpenGLTextureCacheWrapper\n+{\n+public:\n+    QOpenGLTextureCacheWrapper()\n+    {\n+        QImagePixmapCleanupHooks::instance()->addPlatformPixmapModificationHook(cleanupTexturesForPixmapData);\n+        QImagePixmapCleanupHooks::instance()->addPlatformPixmapDestructionHook(cleanupTexturesForPixmapData);\n+        QImagePixmapCleanupHooks::instance()->addImageHook(cleanupTexturesForCacheKey);\n+    }\n+\n+    ~QOpenGLTextureCacheWrapper()\n+    {\n+        QImagePixmapCleanupHooks::instance()->removePlatformPixmapModificationHook(cleanupTexturesForPixmapData);\n+        QImagePixmapCleanupHooks::instance()->removePlatformPixmapDestructionHook(cleanupTexturesForPixmapData);\n+        QImagePixmapCleanupHooks::instance()->removeImageHook(cleanupTexturesForCacheKey);\n+    }\n+\n+    QOpenGLTextureCache *cacheForContext(QOpenGLContext *context) {\n+        QMutexLocker lock(&m_mutex);\n+        return m_resource.value<QOpenGLTextureCache>(context);\n+    }\n+\n+    static void cleanupTexturesForCacheKey(qint64 key);\n+    static void cleanupTexturesForPixmapData(QPlatformPixmap *pmd);\n+\n+private:\n+    QOpenGLMultiGroupSharedResource m_resource;\n+    QMutex m_mutex;\n+};\n+\n+Q_GLOBAL_STATIC(QOpenGLTextureCacheWrapper, qt_texture_caches)\n+\n+QOpenGLTextureCache *QOpenGLTextureCache::cacheForContext(QOpenGLContext *context)\n+{\n+    return qt_texture_caches()->cacheForContext(context);\n+}\n+\n+void QOpenGLTextureCacheWrapper::cleanupTexturesForCacheKey(qint64 key)\n+{\n+    QList<QOpenGLSharedResource *> resources = qt_texture_caches()->m_resource.resources();\n+    for (QList<QOpenGLSharedResource *>::iterator it = resources.begin(); it != resources.end(); ++it)\n+        static_cast<QOpenGLTextureCache *>(*it)->invalidate(key);\n+}\n+\n+void QOpenGLTextureCacheWrapper::cleanupTexturesForPixmapData(QPlatformPixmap *pmd)\n+{\n+    cleanupTexturesForCacheKey(pmd->cacheKey());\n+}\n+\n+QOpenGLTextureCache::QOpenGLTextureCache(QOpenGLContext *ctx)\n+    : QOpenGLSharedResource(ctx->shareGroup())\n+    , m_cache(64 * 1024) // 64 MB cache\n+{\n+}\n+\n+QOpenGLTextureCache::~QOpenGLTextureCache()\n+{\n+}\n+\n+GLuint QOpenGLTextureCache::bindTexture(QOpenGLContext *context, const QPixmap &pixmap)\n+{\n+    QMutexLocker locker(&m_mutex);\n+    qint64 key = pixmap.cacheKey();\n+\n+    if (!pixmap.paintingActive()) {\n+        QOpenGLCachedTexture *entry = m_cache.object(key);\n+        if (entry) {\n+            glBindTexture(GL_TEXTURE_2D, entry->id());\n+            return entry->id();\n+        }\n+    }\n+\n+    GLuint id = bindTexture(context, key, pixmap.toImage());\n+    if (id > 0)\n+        QImagePixmapCleanupHooks::enableCleanupHooks(pixmap);\n+\n+    return id;\n+}\n+\n+GLuint QOpenGLTextureCache::bindTexture(QOpenGLContext *context, const QImage &image)\n+{\n+    QMutexLocker locker(&m_mutex);\n+    qint64 key = image.cacheKey();\n+\n+    if (!image.paintingActive()) {\n+        QOpenGLCachedTexture *entry = m_cache.object(key);\n+        if (entry) {\n+            glBindTexture(GL_TEXTURE_2D, entry->id());\n+            return entry->id();\n+        }\n+    }\n+\n+    GLuint id = bindTexture(context, key, image);\n+    if (id > 0)\n+        QImagePixmapCleanupHooks::enableCleanupHooks(image);\n+\n+    return id;\n+}\n+\n+static inline void qgl_byteSwapImage(QImage &img)\n+{\n+    const int width = img.width();\n+    const int height = img.height();\n+\n+    if (QSysInfo::ByteOrder == QSysInfo::LittleEndian)\n+    {\n+        for (int i = 0; i < height; ++i) {\n+            uint *p = (uint *) img.scanLine(i);\n+            for (int x = 0; x < width; ++x)\n+                p[x] = ((p[x] << 16) & 0xff0000) | ((p[x] >> 16) & 0xff) | (p[x] & 0xff00ff00);\n+        }\n+    } else {\n+        for (int i = 0; i < height; ++i) {\n+            uint *p = (uint *) img.scanLine(i);\n+            for (int x = 0; x < width; ++x)\n+                p[x] = (p[x] << 8) | ((p[x] >> 24) & 0xff);\n+        }\n+    }\n+}\n+\n+GLuint QOpenGLTextureCache::bindTexture(QOpenGLContext *context, qint64 key, const QImage &image)\n+{\n+    GLuint id;\n+    glGenTextures(1, &id);\n+    glBindTexture(GL_TEXTURE_2D, id);\n+\n+    QImage tx = image.convertToFormat(QImage::Format_ARGB32_Premultiplied);\n+\n+    qgl_byteSwapImage(tx);\n+\n+    glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, tx.width(), tx.height(), 0, GL_RGBA, GL_UNSIGNED_BYTE, const_cast<QImage &>(tx).bits());\n+\n+    int cost = tx.width() * tx.height() * 4 / 1024;\n+    m_cache.insert(key, new QOpenGLCachedTexture(id, context), cost);\n+\n+    return id;\n+}\n+\n+void QOpenGLTextureCache::invalidate(qint64 key)\n+{\n+    QMutexLocker locker(&m_mutex);\n+    m_cache.remove(key);\n+}\n+\n+void QOpenGLTextureCache::invalidateResource()\n+{\n+    m_cache.clear();\n+}\n+\n+void QOpenGLTextureCache::freeResource(QOpenGLContext *)\n+{\n+    Q_ASSERT(false); // the texture cache lives until the context group disappears\n+}\n+\n+static void freeTexture(QOpenGLFunctions *, GLuint id)\n+{\n+    glDeleteTextures(1, &id);\n+}\n+\n+QOpenGLCachedTexture::QOpenGLCachedTexture(GLuint id, QOpenGLContext *context)\n+{\n+    m_resource = new QOpenGLSharedResourceGuard(context, id, freeTexture);\n+}\n+\n+QT_END_NAMESPACE\n"", ""qopengltexturecache_p.h"": ""@@ -0,0 +1,102 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the QtGui module of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+//\n+//  W A R N I N G\n+//  -------------\n+//\n+// This file is not part of the Qt API.  It exists purely as an\n+// implementation detail.  This header file may change from version to\n+// version without notice, or even be removed.\n+//\n+// We mean it.\n+//\n+\n+#ifndef QOPENGLTEXTURECACHE_P_H\n+#define QOPENGLTEXTURECACHE_P_H\n+\n+#include <QHash>\n+#include <QObject>\n+#include <QtGui/QtGui>\n+#include <private/qopenglcontext_p.h>\n+#include <QtCore/qmutex.h>\n+\n+QT_BEGIN_NAMESPACE\n+\n+class QOpenGLCachedTexture\n+{\n+public:\n+    QOpenGLCachedTexture(GLuint id, QOpenGLContext *context);\n+    ~QOpenGLCachedTexture() { m_resource->free(); }\n+\n+    GLuint id() const { return m_resource->id(); }\n+\n+private:\n+    QOpenGLSharedResourceGuard *m_resource;\n+};\n+\n+class QOpenGLTextureCache : public QOpenGLSharedResource\n+{\n+public:\n+    static QOpenGLTextureCache *cacheForContext(QOpenGLContext *context);\n+\n+    QOpenGLTextureCache(QOpenGLContext *);\n+    ~QOpenGLTextureCache();\n+\n+    GLuint bindTexture(QOpenGLContext *context, const QPixmap &pixmap);\n+    GLuint bindTexture(QOpenGLContext *context, const QImage &image);\n+\n+    void invalidate(qint64 key);\n+\n+    void invalidateResource();\n+    void freeResource(QOpenGLContext *ctx);\n+\n+private:\n+    GLuint bindTexture(QOpenGLContext *context, qint64 key, const QImage &image);\n+\n+    QMutex m_mutex;\n+    QCache<quint64, QOpenGLCachedTexture> m_cache;\n+};\n+\n+QT_END_NAMESPACE\n+\n+#endif\n+\n"", ""tst_qopengl.cpp"": ""@@ -418,14 +418,20 @@ void tst_QOpenGL::openGLPaintDevice()\n \n     QCOMPARE(image, fbo.toImage().convertToFormat(QImage::Format_RGB32));\n \n-    QSKIP(\""Image / pixmap painting needs to be implemented\"", SkipSingle);\n     p.begin(&device);\n+    p.fillRect(0, 0, image.width(), image.height(), Qt::black);\n     p.drawImage(0, 0, image);\n     p.end();\n \n     QCOMPARE(image, fbo.toImage().convertToFormat(QImage::Format_RGB32));\n-}\n \n+    p.begin(&device);\n+    p.fillRect(0, 0, image.width(), image.height(), Qt::black);\n+    p.fillRect(0, 0, image.width(), image.height(), QBrush(image));\n+    p.end();\n+\n+    QCOMPARE(image, fbo.toImage().convertToFormat(QImage::Format_RGB32));\n+}\n \n QTEST_MAIN(tst_QOpenGL)\n #include \""tst_qopengl.moc\""\n""}",feature,"feature, refactor 
",feature;
21212.0,21212.0,bug,Alex Wilson,Fix for teapot's identity crisis,"Fix for teapot's identity crisis

It thought it was still a cube.

Change-Id: I64f21500a2342088f233d958b584774bdcc70218",['src/quick3d/teapot.h'],"{""teapot.h"": ""@@ -39,8 +39,8 @@\n **\n ****************************************************************************/\n \n-#ifndef CUBE_H\n-#define CUBE_H\n+#ifndef TEAPOT_H\n+#define TEAPOT_H\n \n // This is a dummy header for defining the interface of \""Teapot.qml\"" to qdoc.\n \n""}",bug,"bug 
",bug;
1127.0,1127.0,test; bug,Rohan McGovern [inactive],Fixed opengldesktop configure test for mac.,"Fixed opengldesktop configure test for mac.

This configure test has never worked for mac.

In a non-qpa configuration, this didn't matter, as the configure script
would skip this configure test on mac.  The configure script could also
be modified to skip the configure test in the qpa case, but it seems
cleaner to make the test actually work.

Change-Id: I0402c490fc4c2401f6363ba2215b261f74ee5d75","['config.tests/unix/opengldesktop/opengldesktop.cpp', 'config.tests/unix/opengldesktop/opengldesktop.pro']","{""opengldesktop.cpp"": ""@@ -39,7 +39,11 @@\n **\n ****************************************************************************/\n \n-#include <GL/gl.h>\n+#if defined(Q_OS_MAC)\n+# include <OpenGL/gl.h>\n+#else\n+# include <GL/gl.h>\n+#endif\n \n int main(int, char **)\n {\n"", ""opengldesktop.pro"": ""@@ -7,3 +7,6 @@ for(p, QMAKE_LIBDIR_OPENGL) {\n \n CONFIG -= qt\n LIBS += $$QMAKE_LIBS_OPENGL\n+\n+mac:DEFINES += Q_OS_MAC\n+CONFIG -= app_bundle\n""}",test; bug,"bug,test 
",bug;resource;test;
19526.0,19526.0,bug,Ali Akhtarzada,Move node bug from rebalance,"Move node bug from rebalance

Change-Id: I4067c1bd3d940dad3bcd2b4ca2f8d3ee582a42bb",['src/hbtree/hbtree.cpp'],"{""hbtree.cpp"": ""@@ -2037,7 +2037,6 @@ bool HBtreePrivate::rebalance(HBtreePrivate::NodePage *page)\n             // TODO: add lonely page to its own history.\n             HBTREE_DEBUG(\""making root invalid, btree empty\"");\n             writeTransaction_->rootPage_ = PageInfo::INVALID_PAGE;\n-            q->stats_.depth--;\n         } else if (page->info.type == PageInfo::Branch && page->nodes.size() == 1) {\n             // TODO: add branch page to history of leaf.\n             // Will there be enough space?\n@@ -2131,6 +2130,7 @@ bool HBtreePrivate::rebalance(HBtreePrivate::NodePage *page)\n     return true;\n }\n \n+// TODO: turn in to transferNode(src, dst) // only with same parents.\n bool HBtreePrivate::moveNode(HBtreePrivate::NodePage *src, HBtreePrivate::NodePage *dst, HBtreePrivate::Node node)\n {\n     Q_ASSERT(src->parent);\n@@ -2149,10 +2149,7 @@ bool HBtreePrivate::moveNode(HBtreePrivate::NodePage *src, HBtreePrivate::NodePa\n     if (!src || !dst)\n         return false;\n \n-//    bool rightToLeft = node == src->nodes.constBegin();\n-//    bool leftToRight = node == (src->nodes.constEnd() - 1);\n-\n-//    Q_ASSERT(rightToLeft || leftToRight);\n+    bool decending = src->parentKey > dst->parentKey;\n \n     NodeKey nkey = node.key();\n \n@@ -2168,7 +2165,8 @@ bool HBtreePrivate::moveNode(HBtreePrivate::NodePage *src, HBtreePrivate::NodePa\n         insertNode(dst->parent, dst->parentKey, NodeValue(dst->info.number));\n     }\n \n-    if (src->parentKey == nkey) {\n+    if (src->parentKey <= nkey && decending) {\n+        Q_ASSERT(!src->parentKey.data.isEmpty());\n         // must change source parent key\n         NodePage *lowest;\n         searchPageRoot(NULL, src, NodeKey(compareFunction_), SearchFirst, false, &lowest);\n""}",bug,"bug 
",bug;
369.0,369.0,bug,Tobias Hunger,Tasks: Only report warning tasks in build progress,"Tasks: Only report warning tasks in build progress

Task-number: QTCREATORBUG-5020
Change-Id: Iead3d76509dd7b6d6c04d0ef64b7b3d2cad316d0","['src/plugins/projectexplorer/taskwindow.h', 'src/plugins/projectexplorer/buildprogress.cpp', 'src/plugins/projectexplorer/taskwindow.cpp']","{""buildprogress.cpp"": ""@@ -93,7 +93,7 @@ void BuildProgress::updateState()\n     m_errorIcon->setEnabled(haveErrors);\n     m_errorLabel->setEnabled(haveErrors);\n     m_errorLabel->setText(QString(\""%1\"").arg(errors));\n-    int warnings = m_taskWindow->taskCount()-errors;\n+    int warnings = m_taskWindow->warningTaskCount();\n     bool haveWarnings = (warnings > 0);\n     m_warningIcon->setEnabled(haveWarnings);\n     m_warningLabel->setEnabled(haveWarnings);\n"", ""taskwindow.cpp"": ""@@ -109,6 +109,7 @@ public:\n \n     int taskCount();\n     int errorTaskCount();\n+    int warningTaskCount();\n \n     bool hasFile(const QModelIndex &index) const;\n \n@@ -124,6 +125,7 @@ private:\n     const QIcon m_warningIcon;\n     int m_taskCount;\n     int m_errorTaskCount;\n+    int m_warningTaskCount;\n     int m_sizeOfLineNumber;\n     QString m_lineMeasurementFont;\n };\n@@ -292,6 +294,7 @@ TaskModel::TaskModel() :\n     m_warningIcon(QLatin1String(\"":/projectexplorer/images/compile_warning.png\"")),\n     m_taskCount(0),\n     m_errorTaskCount(0),\n+    m_warningTaskCount(0),\n     m_sizeOfLineNumber(0)\n {\n }\n@@ -306,6 +309,11 @@ int TaskModel::errorTaskCount()\n     return m_errorTaskCount;\n }\n \n+int TaskModel::warningTaskCount()\n+{\n+    return m_warningTaskCount;\n+}\n+\n bool TaskModel::hasFile(const QModelIndex &index) const\n {\n     int row = index.row();\n@@ -362,6 +370,8 @@ void TaskModel::addTask(const Task &task)\n     ++m_taskCount;\n     if (task.type == Task::Error)\n         ++m_errorTaskCount;\n+    if (task.type == Task::Warning)\n+        ++m_warningTaskCount;\n }\n \n void TaskModel::removeTask(const Task &task)\n@@ -373,6 +383,8 @@ void TaskModel::removeTask(const Task &task)\n         --m_taskCount;\n         if (task.type == Task::Error)\n             --m_errorTaskCount;\n+        if (task.type == Task::Warning)\n+            --m_warningTaskCount;\n         endRemoveRows();\n     }\n }\n@@ -387,12 +399,14 @@ void TaskModel::clearTasks(const QString &categoryId)\n         m_tasksInCategory.clear();\n         m_taskCount = 0;\n         m_errorTaskCount = 0;\n+        m_warningTaskCount = 0;\n         endRemoveRows();\n         m_maxSizeOfFileName = 0;\n     } else {\n         int index = 0;\n         int start = 0;\n         int subErrorTaskCount = 0;\n+        int subWarningTaskCount = 0;\n         while (index < m_tasks.size()) {\n             while (index < m_tasks.size() && m_tasks.at(index).category != categoryId) {\n                 ++start;\n@@ -403,6 +417,8 @@ void TaskModel::clearTasks(const QString &categoryId)\n             while (index < m_tasks.size() && m_tasks.at(index).category == categoryId) {\n                 if (m_tasks.at(index).type == Task::Error)\n                     ++subErrorTaskCount;\n+                if (m_tasks.at(index).type == Task::Warning)\n+                    ++subWarningTaskCount;\n                 ++index;\n             }\n             // Index is now on the first non category\n@@ -416,6 +432,7 @@ void TaskModel::clearTasks(const QString &categoryId)\n \n             m_taskCount -= index - start;\n             m_errorTaskCount -= subErrorTaskCount;\n+            m_warningTaskCount -= subWarningTaskCount;\n \n             endRemoveRows();\n             index = start;\n@@ -853,6 +870,11 @@ int TaskWindow::errorTaskCount() const\n     return d->m_model->errorTaskCount();\n }\n \n+int TaskWindow::warningTaskCount() const\n+{\n+    return d->m_model->warningTaskCount();\n+}\n+\n int TaskWindow::priorityInStatusBar() const\n {\n     return 90;\n"", ""taskwindow.h"": ""@@ -58,6 +58,7 @@ public:\n     virtual ~TaskWindow();\n \n     int taskCount() const;\n+    int warningTaskCount() const;\n     int errorTaskCount() const;\n \n     // IOutputPane\n""}",bug,"bug, feature 
",bug;
19247.0,19247.0,test,hjk,debugger: fix manual test,"debugger: fix manual test

Change-Id: I7e3517d69957e7d2c7d3b14f76f260762ff980e9",['tests/manual/debugger/simple/simple_test_app.cpp'],"{""simple_test_app.cpp"": ""@@ -4318,18 +4318,18 @@ namespace basic {\n         s[0] = 0;\n         BREAK_HERE;\n         // Expand s.\n-        // CheckType s char [5].\n+        // CheckType s char [6].\n         // Check s.0 0 '\\0' char.\n         // Continue.\n \n         // Manual: Open pinnable tooltip.\n         // Manual: Step over.\n         // Manual: Check that display and tooltip look sane.\n-        strcat(s,\""\\\""\"");\n-        strcat(s,\""\\\""\"");\n-        strcat(s,\""a\"");\n-        strcat(s,\""b\"");\n-        strcat(s,\""\\\""\"");\n+        strcat(s, \""\\\""\"");\n+        strcat(s, \""\\\""\"");\n+        strcat(s, \""a\"");\n+        strcat(s, \""b\"");\n+        strcat(s, \""\\\""\"");\n         // Manual: Close tooltip.\n         dummyStatement(&s);\n     }\n""}",test,"bug, test 
",bug;test;
2125.0,2125.0, bug,Tobias Hunger,Fix layout in project mode,"Fix layout in project mode

Fix broken layout in project mode:
 * Code style settings were indented too much
 * Editor settings were indented too much

Change-Id: Id56f45566a87807588ac265db76a718d936dc4a5","['src/plugins/projectexplorer/codestylesettingspropertiespage.ui', 'src/plugins/projectexplorer/editorsettingspropertiespage.ui']","{""codestylesettingspropertiespage.ui"": ""@@ -14,6 +14,12 @@\n    <string>Form</string>\n   </property>\n   <layout class=\""QGridLayout\"" name=\""gridLayout\"">\n+   <property name=\""leftMargin\"">\n+    <number>0</number>\n+   </property>\n+   <property name=\""rightMargin\"">\n+    <number>0</number>\n+   </property>\n    <item row=\""0\"" column=\""0\"">\n     <widget class=\""QLabel\"" name=\""languageLabel\"">\n      <property name=\""text\"">\n"", ""editorsettingspropertiespage.ui"": ""@@ -11,6 +11,12 @@\n    </rect>\n   </property>\n   <layout class=\""QGridLayout\"" name=\""gridLayout\"">\n+   <property name=\""leftMargin\"">\n+    <number>0</number>\n+   </property>\n+   <property name=\""rightMargin\"">\n+    <number>0</number>\n+   </property>\n    <item row=\""0\"" column=\""0\"">\n     <widget class=\""QLabel\"" name=\""label\"">\n      <property name=\""text\"">\n""}",bug,"bug, resource 
",bug;refactor;resource;
17591.0,17591.0,test,Mikko Suonio,Enable qcontactjsondb tests in builds.,"Enable qcontactjsondb tests in builds.

Change-Id: I775296f7e5986030d338eaad097a860ba08cab60","['tests/auto/contacts/qcontactjsondb/tst_qcontactjsondbengine.cpp', 'tests/auto/contacts/contacts.pro', 'tests/auto/contacts/qcontactjsondb/qcontactjsondb.pro']","{""contacts.pro"": ""@@ -19,8 +19,8 @@ SUBDIRS += \\\n     qcontactrelationship \\\n #    qdeclarativecontact\n \n-#contains(QT_CONFIG, jsondb) {\n-#    SUBDIRS += qcontactjsondb \\\n+contains(QT_CONFIG, jsondb) {\n+    SUBDIRS += qcontactjsondb\n #               qcontactjsondbconverter\n-#}\n+}\n \n"", ""qcontactjsondb.pro"": ""@@ -22,6 +22,7 @@ SOURCES += tst_qcontactjsondbengine.cpp \\\n DEFINES += SRCDIR=\\\\\\\""$$PWD/\\\\\\\""\n \n INCLUDEPATH += ../../../../src/plugins/contacts/jsondb\n+INCLUDEPATH += ../..\n \n HEADERS += qcontactjsondbbackup.h \\\n            ../../../../src/plugins/contacts/jsondb/qcontactjsondbenginefactory.h \\\n@@ -33,4 +34,5 @@ HEADERS += qcontactjsondbbackup.h \\\n            ../../../../src/plugins/contacts/jsondb/qcontactjsondbstring.h \\\n            ../../../../src/plugins/contacts/jsondb/qcontactjsondbid.h \\\n            synchronizedjsondbclient.h \\\n-           synchronizedworker.h\n+           synchronizedworker.h \\\n+           ../../jsondbprocess.h\n"", ""tst_qcontactjsondbengine.cpp"": ""@@ -47,6 +47,7 @@\n #include \""qcontactjsondbglobal.h\""\n #include \""qcontactjsondbconverter.h\""\n #include \""synchronizedjsondbclient.h\""\n+#include \""jsondbprocess.h\""\n \n Q_USE_JSONDB_NAMESPACE\n \n@@ -60,8 +61,11 @@ public:\n     tst_QContactJsondbEngine();\n     ~tst_QContactJsondbEngine();\n public slots:\n+    void initTestCase();\n     void init();\n     void cleanup();\n+    void cleanupTestCase();\n+\n private Q_SLOTS:\n     void testSelfContactId();\n     void testContactIds();\n@@ -85,8 +89,14 @@ private:\n     QContactJsonDbEngine* m_engine;\n     QContactJsonDbBackup* m_myBackup;\n     SynchronizedJsonDbClient* m_dbClient;\n+    JsonDbProcess m_jsondbProcess;\n };\n \n+void tst_QContactJsondbEngine::initTestCase()\n+{\n+    QVERIFY2(m_jsondbProcess.start(), \""Failed to start JsonDb process\"");\n+}\n+\n void tst_QContactJsondbEngine::init() {\n     // clears the database and loads desired test data\n \n@@ -98,6 +108,11 @@ void tst_QContactJsondbEngine::cleanup(){\n     delete(m_myBackup);\n }\n \n+void tst_QContactJsondbEngine::cleanupTestCase()\n+{\n+    m_jsondbProcess.terminate();\n+}\n+\n tst_QContactJsondbEngine::tst_QContactJsondbEngine()\n {\n     m_engine = new QContactJsonDbEngine();\n""}",test,"test 
",test;
9855.0,9855.0,"feature,refactor",João Abecasis,Use RefCount::setSharable feature in QVector,"Use RefCount::setSharable feature in QVector

Note: This constitutes a break in Binary Compatibility.

Change-Id: I050587901725b701f20dd46475ae48aec28aa54d","['src/corelib/tools/qvector.cpp', 'src/corelib/tools/qvector.h']","{""qvector.cpp"": ""@@ -52,7 +52,7 @@ static inline int alignmentThreshold()\n     return 2 * sizeof(void*);\n }\n \n-const QVectorData QVectorData::shared_null = { Q_REFCOUNT_INITIALIZER(-1), 0, 0, true, false, 0 };\n+const QVectorData QVectorData::shared_null = { Q_REFCOUNT_INITIALIZER(-1), 0, 0, false, 0 };\n \n QVectorData *QVectorData::malloc(int sizeofTypedData, int size, int sizeofT, QVectorData *init)\n {\n"", ""qvector.h"": ""@@ -70,13 +70,11 @@ struct Q_CORE_EXPORT QVectorData\n     int size;\n #if defined(QT_ARCH_SPARC) && defined(Q_CC_GNU) && defined(__LP64__) && defined(QT_BOOTSTRAPPED)\n     // workaround for bug in gcc 3.4.2\n-    uint sharable;\n     uint capacity;\n     uint reserved;\n #else\n-    uint sharable : 1;\n     uint capacity : 1;\n-    uint reserved : 30;\n+    uint reserved : 31;\n #endif\n \n     static const QVectorData shared_null;\n@@ -120,7 +118,19 @@ public:\n     inline QVector() : d(const_cast<QVectorData *>(&QVectorData::shared_null)) { }\n     explicit QVector(int size);\n     QVector(int size, const T &t);\n-    inline QVector(const QVector<T> &v) : d(v.d) { d->ref.ref(); if (!d->sharable) detach_helper(); }\n+    inline QVector(const QVector<T> &v)\n+    {\n+        if (v.d->ref.ref()) {\n+            d = v.d;\n+        } else {\n+            d = const_cast<QVectorData *>(&QVectorData::shared_null);\n+            realloc(0, v.d->alloc);\n+            qCopy(v.p->array, v.p->array + v.d->size, p->array);\n+            d->size = v.d->size;\n+            d->capacity = v.d->capacity;\n+        }\n+    }\n+\n     inline ~QVector() { if (!d) return; if (!d->ref.deref()) free(p); }\n     QVector<T> &operator=(const QVector<T> &v);\n #ifdef Q_COMPILER_RVALUE_REFS\n@@ -144,9 +154,18 @@ public:\n     void reserve(int size);\n     inline void squeeze() { realloc(d->size, d->size); d->capacity = 0; }\n \n-    inline void detach() { if (d->ref != 1) detach_helper(); }\n-    inline bool isDetached() const { return d->ref == 1; }\n-    inline void setSharable(bool sharable) { if (!sharable) detach(); if (d != &QVectorData::shared_null) d->sharable = sharable; }\n+    inline void detach() { if (!isDetached()) detach_helper(); }\n+    inline bool isDetached() const { return !d->ref.isShared(); }\n+    inline void setSharable(bool sharable)\n+    {\n+        if (sharable == d->ref.isSharable())\n+            return;\n+        if (!sharable)\n+            detach();\n+        if (d != &QVectorData::shared_null)\n+            d->ref.setSharable(sharable);\n+    }\n+\n     inline bool isSharedWith(const QVector<T> &other) const { return d == other.d; }\n \n     inline T *data() { detach(); return p->array; }\n@@ -337,7 +356,7 @@ void QVector<T>::detach_helper()\n { realloc(d->size, d->alloc); }\n template <typename T>\n void QVector<T>::reserve(int asize)\n-{ if (asize > d->alloc) realloc(d->size, asize); if (d->ref == 1) d->capacity = 1; }\n+{ if (asize > d->alloc) realloc(d->size, asize); if (isDetached()) d->capacity = 1; }\n template <typename T>\n void QVector<T>::resize(int asize)\n { realloc(asize, (asize > d->alloc || (!d->capacity && asize < d->size && asize < (d->alloc >> 1))) ?\n@@ -389,13 +408,10 @@ inline void QVector<T>::replace(int i, const T &t)\n template <typename T>\n QVector<T> &QVector<T>::operator=(const QVector<T> &v)\n {\n-    QVectorData *o = v.d;\n-    o->ref.ref();\n-    if (!d->ref.deref())\n-        free(p);\n-    d = o;\n-    if (!d->sharable)\n-        detach_helper();\n+    if (v.d != d) {\n+        QVector<T> tmp(v);\n+        tmp.swap(*this);\n+    }\n     return *this;\n }\n \n@@ -413,7 +429,6 @@ QVector<T>::QVector(int asize)\n     d = malloc(asize);\n     d->ref = 1;\n     d->alloc = d->size = asize;\n-    d->sharable = true;\n     d->capacity = false;\n     if (QTypeInfo<T>::isComplex) {\n         T* b = p->array;\n@@ -431,7 +446,6 @@ QVector<T>::QVector(int asize, const T &t)\n     d = malloc(asize);\n     d->ref = 1;\n     d->alloc = d->size = asize;\n-    d->sharable = true;\n     d->capacity = false;\n     T* i = p->array + d->size;\n     while (i != p->array)\n@@ -445,7 +459,6 @@ QVector<T>::QVector(std::initializer_list<T> args)\n     d = malloc(int(args.size()));\n     d->ref = 1;\n     d->alloc = d->size = int(args.size());\n-    d->sharable = true;\n     d->capacity = false;\n     T* i = p->array + d->size;\n     auto it = args.end();\n@@ -477,7 +490,7 @@ void QVector<T>::realloc(int asize, int aalloc)\n     union { QVectorData *d; Data *p; } x;\n     x.d = d;\n \n-    if (QTypeInfo<T>::isComplex && asize < d->size && d->ref == 1 ) {\n+    if (QTypeInfo<T>::isComplex && asize < d->size && isDetached()) {\n         // call the destructor on all objects that need to be\n         // destroyed when shrinking\n         pOld = p->array + d->size;\n@@ -488,13 +501,13 @@ void QVector<T>::realloc(int asize, int aalloc)\n         }\n     }\n \n-    if (aalloc != d->alloc || d->ref != 1) {\n+    if (aalloc != d->alloc || !isDetached()) {\n         // (re)allocate memory\n         if (QTypeInfo<T>::isStatic) {\n             x.d = malloc(aalloc);\n             Q_CHECK_PTR(x.p);\n             x.d->size = 0;\n-        } else if (d->ref != 1) {\n+        } else if (!isDetached()) {\n             x.d = malloc(aalloc);\n             Q_CHECK_PTR(x.p);\n             if (QTypeInfo<T>::isComplex) {\n@@ -517,7 +530,6 @@ void QVector<T>::realloc(int asize, int aalloc)\n         }\n         x.d->ref = 1;\n         x.d->alloc = aalloc;\n-        x.d->sharable = true;\n         x.d->capacity = d->capacity;\n         x.d->reserved = 0;\n     }\n@@ -572,7 +584,7 @@ Q_OUTOFLINE_TEMPLATE T QVector<T>::value(int i, const T &defaultValue) const\n template <typename T>\n void QVector<T>::append(const T &t)\n {\n-    if (d->ref != 1 || d->size + 1 > d->alloc) {\n+    if (!isDetached() || d->size + 1 > d->alloc) {\n         const T copy(t);\n         realloc(d->size, (d->size + 1 > d->alloc) ?\n                     QVectorData::grow(sizeOfTypedData(), d->size + 1, sizeof(T), QTypeInfo<T>::isStatic)\n@@ -596,7 +608,7 @@ Q_TYPENAME QVector<T>::iterator QVector<T>::insert(iterator before, size_type n,\n     int offset = int(before - p->array);\n     if (n != 0) {\n         const T copy(t);\n-        if (d->ref != 1 || d->size + n > d->alloc)\n+        if (!isDetached() || d->size + n > d->alloc)\n             realloc(d->size, QVectorData::grow(sizeOfTypedData(), d->size + n, sizeof(T),\n                                                QTypeInfo<T>::isStatic));\n         if (QTypeInfo<T>::isStatic) {\n""}","feature,refactor","refactor 
",others;
11406.0,11406.0,refactor,acseqt,Rename (private fn) reloadCategories() to updateLayout(),"Fix behaviour of CategoryModel::update

Previously 'update' was really just a layout change so rename
it to updateLayout and keep it private.

The correct behaviour of update is to re-initialize the categories,
which was previously accomplished by 'updateCategories'.  It
is now renamed to CategoryModel::update().

Change-Id: I95c41356ec0b35f8f0746e5b703b8b357fa82acc","['src/imports/location/declarativeplaces/qdeclarativesupportedcategoriesmodel.cpp', 'src/imports/location/declarativeplaces/qdeclarativesupportedcategoriesmodel_p.h']","{""qdeclarativesupportedcategoriesmodel.cpp"": ""@@ -214,14 +214,14 @@ void QDeclarativeSupportedCategoriesModel::setPlugin(QDeclarativeGeoServiceProvi\n \n     // handle plugin name changes -> update categories\n     connect(m_plugin, SIGNAL(nameChanged(QString)), this, SLOT(connectNotificationSignals()));\n-    connect(m_plugin, SIGNAL(nameChanged(QString)), this, SLOT(updateCategories()));\n+    connect(m_plugin, SIGNAL(nameChanged(QString)), this, SLOT(update()));\n \n     connectNotificationSignals();\n \n     if (m_complete)\n         emit pluginChanged();\n \n-    updateCategories();\n+    update();\n }\n \n QDeclarativeGeoServiceProvider* QDeclarativeSupportedCategoriesModel::plugin() const\n@@ -237,7 +237,7 @@ void QDeclarativeSupportedCategoriesModel::setHierarchical(bool hierarchical)\n     m_hierarchical = hierarchical;\n     emit hierarchicalChanged();\n \n-    update();\n+    updateLayout();\n }\n \n bool QDeclarativeSupportedCategoriesModel::hierarchical() const\n@@ -256,7 +256,7 @@ void QDeclarativeSupportedCategoriesModel::replyFinished()\n         m_response->deleteLater();\n         m_response = 0;\n \n-        update();\n+        updateLayout();\n         setStatus(QDeclarativeSupportedCategoriesModel::Ready);\n     } else {\n         m_errorString = m_response->errorString();\n@@ -399,7 +399,7 @@ void QDeclarativeSupportedCategoriesModel::connectNotificationSignals()\n             this, SLOT(removedCategory(QString, QString)));\n }\n \n-void QDeclarativeSupportedCategoriesModel::updateCategories()\n+void QDeclarativeSupportedCategoriesModel::update()\n {\n     if (!m_plugin)\n         return;\n@@ -426,7 +426,7 @@ void QDeclarativeSupportedCategoriesModel::updateCategories()\n     }\n }\n \n-void QDeclarativeSupportedCategoriesModel::update()\n+void QDeclarativeSupportedCategoriesModel::updateLayout()\n {\n     if (!m_plugin)\n         return;\n"", ""qdeclarativesupportedcategoriesmodel_p.h"": ""@@ -126,7 +126,7 @@ private slots:\n     void updatedCategory(const QPlaceCategory &category, const QString &parentId);\n     void removedCategory(const QString &categoryId, const QString &parentId);\n     void connectNotificationSignals();\n-    void updateCategories();\n+    void updateLayout();\n \n private:\n     QStringList populateCategories(QPlaceManager *, const QPlaceCategory &parent);\n""}",refactor,"refactor 
",feature;
26184.0,26184.0,refactor,Aurindam Jana,QmlJSInspectorAgent: Refactor code,"QmlJSInspectorAgent: Refactor code

Try to use the watchHandler for referring to the object tree
instead of caching the object tree locally.

Change-Id: I68624771ef49d50f2cf0d6d580b1b34d57483178","['src/libs/qmldebug/baseenginedebugclient.h', 'src/plugins/debugger/qml/qmlinspectoradapter.cpp', 'src/plugins/debugger/qml/qmlinspectoragent.h', 'src/libs/qmldebug/baseenginedebugclient.cpp', 'src/plugins/debugger/qml/qmlinspectoradapter.h', 'src/plugins/debugger/qml/qmlinspectoragent.cpp']","{""baseenginedebugclient.cpp"": ""@@ -285,14 +285,14 @@ quint32 BaseEngineDebugClient::addWatch(const ObjectReference &object,\n     return id;\n }\n \n-quint32 BaseEngineDebugClient::addWatch(const ObjectReference &object)\n+quint32 BaseEngineDebugClient::addWatch(int objectId)\n {\n     quint32 id = 0;\n     if (status() == Enabled) {\n         id = getId();\n         QByteArray message;\n         QDataStream ds(&message, QIODevice::WriteOnly);\n-        ds << QByteArray(\""WATCH_OBJECT\"") << id << object.m_debugId;\n+        ds << QByteArray(\""WATCH_OBJECT\"") << id << objectId;\n         sendMessage(message);\n     }\n     return id;\n"", ""baseenginedebugclient.h"": ""@@ -56,7 +56,7 @@ public:\n     quint32 addWatch(const PropertyReference &property);\n     quint32 addWatch(const ContextReference &context, const QString &id);\n     quint32 addWatch(const ObjectReference &object, const QString &expr);\n-    quint32 addWatch(const ObjectReference &object);\n+    quint32 addWatch(int objectId);\n     quint32 addWatch(const FileReference &file);\n \n     void removeWatch(quint32 watch);\n"", ""qmlinspectoradapter.cpp"": ""@@ -269,27 +269,14 @@ void QmlInspectorAdapter::engineClientStatusChanged(QmlDebug::ClientStatus statu\n \n void QmlInspectorAdapter::selectObjectsFromEditor(const QList<int> &debugIds)\n {\n-    int debugId = debugIds.first();\n-\n     if (m_selectionCallbackExpected) {\n         m_selectionCallbackExpected = false;\n         return;\n     }\n     m_cursorPositionChangedExternally = true;\n-\n-    ObjectReference clientRef\n-            = agent()->objectForId(debugId);\n-\n-    // if children haven't been loaded yet do so first, the editor\n-    // might actually be interested in the children!\n-    if (clientRef.debugId() != debugId\n-            || clientRef.needsMoreData()) {\n-        m_targetToSync = ToolTarget;\n-        m_debugIdToSelect = debugId;\n-        agent()->fetchObject(debugId);\n-    } else {\n-        selectObject(clientRef, ToolTarget);\n-    }\n+    m_targetToSync = ToolTarget;\n+    m_debugIdToSelect = debugIds.first();\n+    selectObject(ObjectReference(m_debugIdToSelect), ToolTarget);\n }\n \n void QmlInspectorAdapter::selectObjectsFromToolsClient(const QList<int> &debugIds)\n@@ -297,18 +284,9 @@ void QmlInspectorAdapter::selectObjectsFromToolsClient(const QList<int> &debugId\n     if (debugIds.isEmpty())\n         return;\n \n-    int debugId = debugIds.first();\n-\n-    ObjectReference clientRef\n-            = agent()->objectForId(debugId);\n-\n-    if (clientRef.debugId() != debugId) {\n-        m_targetToSync = EditorTarget;\n-        m_debugIdToSelect = debugId;\n-        agent()->fetchObject(debugId);\n-    } else {\n-        selectObject(clientRef, EditorTarget);\n-    }\n+    m_targetToSync = EditorTarget;\n+    m_debugIdToSelect = debugIds.first();\n+    selectObject(ObjectReference(m_debugIdToSelect), EditorTarget);\n }\n \n void QmlInspectorAdapter::onObjectFetched(const ObjectReference &ref)\n@@ -510,8 +488,7 @@ void QmlInspectorAdapter::gotoObjectReferenceDefinition(\n         m_selectionCallbackExpected = true;\n \n     if (textEditor) {\n-        ObjectReference ref = objectReferenceForLocation(fileName);\n-        if (ref.debugId() != obj.debugId()) {\n+        if (objectIdForLocation(fileName) != obj.debugId()) {\n             m_selectionCallbackExpected = true;\n             editorManager->addCurrentPositionToNavigationHistory();\n             textEditor->gotoLine(source.lineNumber());\n@@ -520,7 +497,7 @@ void QmlInspectorAdapter::gotoObjectReferenceDefinition(\n     }\n }\n \n-ObjectReference QmlInspectorAdapter::objectReferenceForLocation(\n+int QmlInspectorAdapter::objectIdForLocation(\n         const QString &fileName, int cursorPosition) const\n {\n     Core::EditorManager *editorManager = Core::EditorManager::instance();\n@@ -543,13 +520,13 @@ ObjectReference QmlInspectorAdapter::objectReferenceForLocation(\n                 = semanticInfo.declaringMemberNoProperties(cursorPosition)) {\n             if (QmlJS::AST::UiObjectMember *objMember\n                     = node->uiObjectMemberCast()) {\n-                return agent()->objectForLocation(\n+                return agent()->objectIdForLocation(\n                             objMember->firstSourceLocation().startLine,\n                             objMember->firstSourceLocation().startColumn);\n             }\n         }\n     }\n-    return ObjectReference();\n+    return -1;\n }\n \n inline QString displayName(const ObjectReference &obj)\n@@ -593,7 +570,7 @@ void QmlInspectorAdapter::selectObject(const ObjectReference &obj,\n     agent()->selectObjectInTree(obj.debugId());\n \n     m_currentSelectedDebugId = obj.debugId();\n-    m_currentSelectedDebugName = displayName(obj);\n+    m_currentSelectedDebugName = agent()->displayName(obj.debugId());\n     emit selectionChanged();\n }\n \n"", ""qmlinspectoradapter.h"": ""@@ -104,7 +104,7 @@ private:\n     void showConnectionStatusMessage(const QString &message);\n \n     void gotoObjectReferenceDefinition(const QmlDebug::ObjectReference &obj);\n-    QmlDebug::ObjectReference objectReferenceForLocation(\n+    int objectIdForLocation(\n             const QString &fileName, int cursorPosition = -1) const;\n \n     enum SelectionTarget { NoTarget, ToolTarget, EditorTarget };\n"", ""qmlinspectoragent.cpp"": ""@@ -56,7 +56,7 @@ enum {\n  */\n QmlInspectorAgent::QmlInspectorAgent(DebuggerEngine *engine, QObject *parent)\n     : QObject(parent)\n-    , m_engine(engine)\n+    , m_debuggerEngine(engine)\n     , m_engineClient(0)\n     , m_engineQueryId(0)\n     , m_rootContextQueryId(0)\n@@ -73,7 +73,7 @@ void QmlInspectorAgent::refreshObjectTree()\n \n     if (!m_rootContextQueryId) {\n         m_objectTreeQueryIds.clear();\n-        queryEngineContext(m_engines.value(0).debugId());\n+        queryEngineContext();\n     }\n }\n \n@@ -83,7 +83,7 @@ void QmlInspectorAgent::fetchObject(int debugId)\n         qDebug() << __FUNCTION__ << \""(\"" << debugId << \"")\"";\n \n     m_fetchCurrentObjectsQueryIds\n-            << fetchContextObject(ObjectReference(debugId));\n+            << fetchObject(ObjectReference(debugId));\n }\n \n quint32 QmlInspectorAgent::queryExpressionResult(int debugId,\n@@ -91,10 +91,10 @@ quint32 QmlInspectorAgent::queryExpressionResult(int debugId,\n {\n     if (debug)\n         qDebug() << __FUNCTION__ << \""(\"" << debugId << expression\n-                 << m_engines.value(0).debugId() << \"")\"";\n+                 << m_engine.debugId() << \"")\"";\n \n     return m_engineClient->queryExpressionResult(debugId, expression,\n-                                                 m_engines.value(0).debugId());\n+                                                 m_engine.debugId());\n }\n \n void QmlInspectorAgent::updateWatchData(const WatchData &data)\n@@ -105,12 +105,12 @@ void QmlInspectorAgent::updateWatchData(const WatchData &data)\n     if (data.id) {\n         // objects\n         ObjectReference ref(data.id);\n-        m_fetchCurrentObjectsQueryIds << fetchContextObject(ref);\n+        m_fetchCurrentObjectsQueryIds << fetchObject(ref);\n         WatchData d = data;\n         d.setAllUnneeded();\n-        m_engine->watchHandler()->beginCycle(InspectWatch, false);\n-        m_engine->watchHandler()->insertData(d);\n-        m_engine->watchHandler()->endCycle(InspectWatch);\n+        m_debuggerEngine->watchHandler()->beginCycle(InspectWatch, false);\n+        m_debuggerEngine->watchHandler()->insertData(d);\n+        m_debuggerEngine->watchHandler()->endCycle(InspectWatch);\n     }\n }\n \n@@ -125,18 +125,18 @@ void QmlInspectorAgent::selectObjectInTree(int debugId)\n     if (m_debugIdToIname.contains(debugId)) {\n         QByteArray iname = m_debugIdToIname.value(debugId);\n         QTC_ASSERT(iname.startsWith(\""inspect.\""), qDebug() << iname);\n-        QModelIndex itemIndex = m_engine->watchHandler()->itemIndex(iname);\n+        QModelIndex itemIndex = m_debuggerEngine->watchHandler()->itemIndex(iname);\n         QTC_ASSERT(itemIndex.isValid(),\n                    qDebug() << \""No  for \"" << debugId << \"", iname \"" << iname; return;);\n         if (debug)\n             qDebug() << \""  selecting\"" << iname << \""in tree\"";\n-        m_engine->watchHandler()->setCurrentModelIndex(InspectWatch, itemIndex);\n+        m_debuggerEngine->watchHandler()->setCurrentModelIndex(InspectWatch, itemIndex);\n         m_objectToSelect = 0;\n     } else {\n         // we've to fetch it\n         m_objectToSelect = debugId;\n         m_fetchCurrentObjectsQueryIds\n-                << fetchContextObject(ObjectReference(debugId));\n+                << fetchObject(ObjectReference(debugId));\n     }\n }\n \n@@ -228,49 +228,33 @@ quint32 QmlInspectorAgent::resetBindingForObject(int objectDebugId,\n     return queryId;\n }\n \n-\n-QList<ObjectReference> QmlInspectorAgent::objects() const\n-{\n-    QList<ObjectReference> result;\n-    foreach (const ObjectReference &it, m_rootObjects)\n-        result.append(objects(it));\n-    return result;\n-}\n-\n-ObjectReference QmlInspectorAgent::objectForId(int debugId) const\n-{\n-    foreach (const ObjectReference &it, m_rootObjects) {\n-        ObjectReference result = objectForId(debugId, it);\n-        if (result.debugId() == debugId)\n-            return result;\n-    }\n-    return ObjectReference();\n-}\n-\n ObjectReference QmlInspectorAgent::objectForId(\n         const QString &objectId) const\n {\n     if (!objectId.isEmpty() && objectId[0].isLower()) {\n-        const QList<ObjectReference> refs = objects();\n-        foreach (const ObjectReference &ref, refs) {\n-            if (ref.idString() == objectId)\n-                return ref;\n+        QHashIterator<int, QByteArray> iter(m_debugIdToIname);\n+        while (iter.hasNext()) {\n+            iter.next();\n+            if (m_debuggerEngine->watchHandler()->findItem(iter.value())->name == objectId)\n+                return ObjectReference(iter.key());\n         }\n     }\n     return ObjectReference();\n }\n \n-ObjectReference QmlInspectorAgent::objectForLocation(\n+int QmlInspectorAgent::objectIdForLocation(\n         int line, int column) const\n {\n-    const QList<ObjectReference> refs = objects();\n-    foreach (const ObjectReference &ref, refs) {\n-        if (ref.source().lineNumber() == line\n-                && ref.source().columnNumber() == column)\n-            return ref;\n+    QHashIterator<int, FileReference> iter(m_debugIdLocations);\n+    while (iter.hasNext()) {\n+        iter.next();\n+        const FileReference &ref = iter.value();\n+        if (ref.lineNumber() == line\n+                && ref.columnNumber() == column)\n+            return iter.key();\n     }\n \n-    return ObjectReference();\n+    return -1;\n }\n \n bool QmlInspectorAgent::addObjectWatch(int objectDebugId)\n@@ -289,14 +273,13 @@ bool QmlInspectorAgent::addObjectWatch(int objectDebugId)\n     if (m_objectWatches.contains(objectDebugId))\n         return true;\n \n-    ObjectReference ref = objectForId(objectDebugId);\n-    if (ref.debugId() != objectDebugId)\n+    if (!m_debugIdToIname.contains(objectDebugId))\n         return false;\n \n     // is flooding the debugging output log!\n     // log(LogSend, QString(\""WATCH_PROPERTY %1\"").arg(objectDebugId));\n \n-    if (m_engineClient->addWatch(ref))\n+    if (m_engineClient->addWatch(objectDebugId))\n         m_objectWatches.append(objectDebugId);\n \n     return false;\n@@ -362,6 +345,18 @@ void QmlInspectorAgent::setEngineClient(BaseEngineDebugClient *client)\n     updateStatus();\n }\n \n+QString QmlInspectorAgent::displayName(int debugId)\n+{\n+    if (!isConnected()\n+            || !debuggerCore()->boolSetting(ShowQmlObjectTree))\n+        return QString();\n+\n+    if (m_debugIdToIname.contains(debugId))\n+        return m_debuggerEngine->watchHandler()->findItem(m_debugIdToIname.value(debugId))->name;\n+    else\n+        return QString();\n+}\n+\n void QmlInspectorAgent::updateStatus()\n {\n     if (m_engineClient\n@@ -369,9 +364,7 @@ void QmlInspectorAgent::updateStatus()\n             && debuggerCore()->boolSetting(ShowQmlObjectTree)) {\n         reloadEngines();\n     } else {\n-        // clear view\n-        m_engine->watchHandler()->beginCycle(InspectWatch, true);\n-        m_engine->watchHandler()->endCycle(InspectWatch);\n+        clearObjectTree();\n     }\n }\n \n@@ -393,10 +386,15 @@ void QmlInspectorAgent::onResult(quint32 queryId, const QVariant &value,\n         objectTreeFetched(qvariant_cast<ObjectReference>(value));\n     } else if (queryId == m_engineQueryId) {\n         m_engineQueryId = 0;\n-        updateEngineList(qvariant_cast<QList<EngineReference> >(value));\n+        QList<EngineReference> engines = qvariant_cast<QList<EngineReference> >(value);\n+        QTC_ASSERT(engines.count(), return);\n+        // only care about first engine atm\n+        m_engine = engines.at(0);\n+        queryEngineContext();\n     } else if (queryId == m_rootContextQueryId) {\n         m_rootContextQueryId = 0;\n-        rootContextChanged(qvariant_cast<ContextReference>(value));\n+        clearObjectTree();\n+        fetchObjectsInContextRecursive(qvariant_cast<ContextReference>(value));\n     } else if (m_fetchCurrentObjectsQueryIds.contains(queryId)) {\n         m_fetchCurrentObjectsQueryIds.removeOne(queryId);\n         if (value.type() == QVariant::List) {\n@@ -446,25 +444,22 @@ void QmlInspectorAgent::reloadEngines()\n     m_engineQueryId = m_engineClient->queryAvailableEngines();\n }\n \n-void QmlInspectorAgent::queryEngineContext(int id)\n+void QmlInspectorAgent::queryEngineContext()\n {\n     if (debug)\n-        qDebug() << __FUNCTION__ << \""(\"" << id << \"")\"";\n-\n-    if (id < 0)\n-        return;\n+        qDebug() << __FUNCTION__;\n \n     if (!isConnected()\n             || !debuggerCore()->boolSetting(ShowQmlObjectTree))\n         return;\n \n-    log(LogSend, QString(\""LIST_OBJECTS %1\"").arg(QString::number(id)));\n+    log(LogSend, QString(\""LIST_OBJECTS\""));\n \n     m_rootContextQueryId\n-            = m_engineClient->queryRootContexts(EngineReference(id));\n+            = m_engineClient->queryRootContexts(m_engine);\n }\n \n-quint32 QmlInspectorAgent::fetchContextObject(const ObjectReference &obj)\n+quint32 QmlInspectorAgent::fetchObject(const ObjectReference &obj)\n {\n     if (debug)\n         qDebug() << __FUNCTION__ << \""(\"" << obj << \"")\"";\n@@ -506,56 +501,28 @@ void QmlInspectorAgent::fetchContextObjectsForLocation(const QString &file,\n }\n \n // fetch the root objects from the context + any child contexts\n-void QmlInspectorAgent::fetchRootObjects(const ContextReference &context,\n-                                         bool clear)\n+void QmlInspectorAgent::fetchObjectsInContextRecursive(const ContextReference &context)\n {\n     if (debug)\n-        qDebug() << __FUNCTION__ << \""(\"" << context << clear << \"")\"";\n+        qDebug() << __FUNCTION__ << \""(\"" << context << \"")\"";\n \n     if (!isConnected()\n             || !debuggerCore()->boolSetting(ShowQmlObjectTree))\n         return;\n \n-    if (clear) {\n-        m_rootObjects.clear();\n-        m_objectTreeQueryIds.clear();\n-    }\n     foreach (const ObjectReference & obj, context.objects()) {\n-        quint32 queryId = 0;\n         using namespace QmlDebug::Constants;\n         if (m_engineClient->objectName() == QML_DEBUGGER &&\n                 m_engineClient->serviceVersion() >= CURRENT_SUPPORTED_VERSION) {\n             //Fetch only root objects\n             if (obj.isRootObject())\n-                queryId = fetchContextObject(obj);\n+                m_objectTreeQueryIds << fetchObject(obj);\n         } else {\n-            queryId = m_engineClient->queryObjectRecursive(obj);\n+            m_objectTreeQueryIds << m_engineClient->queryObjectRecursive(obj);\n         }\n-\n-        if (queryId)\n-            m_objectTreeQueryIds << queryId;\n     }\n     foreach (const ContextReference &child, context.contexts())\n-        fetchRootObjects(child, false);\n-}\n-\n-void QmlInspectorAgent::updateEngineList(const QList<EngineReference> &engines)\n-{\n-    if (debug)\n-        qDebug() << __FUNCTION__ << \""(\"" << engines << \"")\"";\n-\n-    m_engines = engines;\n-\n-    // only care about first engine atm\n-    queryEngineContext(engines.first().debugId());\n-}\n-\n-void QmlInspectorAgent::rootContextChanged(const ContextReference &context)\n-{\n-    if (debug)\n-        qDebug() << __FUNCTION__ << \""(\"" << context << \"")\"";\n-\n-    fetchRootObjects(context, true);\n+        fetchObjectsInContextRecursive(child);\n }\n \n void QmlInspectorAgent::objectTreeFetched(const ObjectReference &object)\n@@ -578,9 +545,9 @@ void QmlInspectorAgent::objectTreeFetched(const ObjectReference &object)\n         // sync tree with watchhandler\n         QList<WatchData> watchData;\n         foreach (const ObjectReference &obj, m_rootObjects)\n-            watchData.append(buildWatchData(obj, WatchData()));\n+            watchData.append(buildWatchData(obj, QByteArray()));\n \n-        WatchHandler *watchHandler = m_engine->watchHandler();\n+        WatchHandler *watchHandler = m_debuggerEngine->watchHandler();\n         watchHandler->beginCycle(InspectWatch, true);\n         watchHandler->insertBulkData(watchData);\n         watchHandler->endCycle(InspectWatch);\n@@ -608,11 +575,11 @@ void QmlInspectorAgent::onCurrentObjectsFetched(const ObjectReference &obj)\n     if (m_objectToSelect == last.debugId()) {\n         // select item in view\n         QByteArray iname = m_debugIdToIname.value(last.debugId());\n-        QModelIndex itemIndex = m_engine->watchHandler()->itemIndex(iname);\n+        QModelIndex itemIndex = m_debuggerEngine->watchHandler()->itemIndex(iname);\n         QTC_ASSERT(itemIndex.isValid(), return);\n         if (debug)\n             qDebug() << \""  selecting\"" << iname << \""in tree\"";\n-        m_engine->watchHandler()->setCurrentModelIndex(InspectWatch, itemIndex);\n+        m_debuggerEngine->watchHandler()->setCurrentModelIndex(InspectWatch, itemIndex);\n         m_objectToSelect = -1;\n     }\n \n@@ -626,19 +593,17 @@ bool QmlInspectorAgent::getObjectHierarchy(const ObjectReference &obj)\n     if (debug)\n         qDebug() << __FUNCTION__ << \""(\"" << obj << \"")\"";\n \n-    ObjectReference parent = objectForId(obj.parentId());\n     //for root object\n     if (obj.isRootObject())\n         return true;\n \n     //for other objects\n-    if (parent.debugId() == -1 || parent.needsMoreData()) {\n+    if (!m_debugIdToIname.contains(obj.parentId())) {\n         m_fetchCurrentObjectsQueryIds\n-                << fetchContextObject(ObjectReference(obj.parentId()));\n-    } else {\n-        return getObjectHierarchy(parent);\n+                << fetchObject(ObjectReference(obj.parentId()));\n+        return false;\n     }\n-    return false;\n+    return true;\n }\n \n void QmlInspectorAgent::buildDebugIdHashRecursive(const ObjectReference &ref)\n@@ -661,34 +626,34 @@ void QmlInspectorAgent::buildDebugIdHashRecursive(const ObjectReference &ref)\n     }\n \n     const QString filePath\n-            = m_engine->toFileInProject(fileUrl);\n+            = m_debuggerEngine->toFileInProject(fileUrl);\n \n     // append the debug ids in the hash\n     QPair<QString, int> file = qMakePair<QString, int>(filePath, rev);\n     QPair<int, int> location = qMakePair<int, int>(lineNum, colNum);\n     m_debugIdHash[file][location] = ref.debugId();\n-\n+    m_debugIdLocations.insert(ref.debugId(), ref.source());\n     foreach (const ObjectReference &it, ref.children())\n         buildDebugIdHashRecursive(it);\n }\n \n-static QByteArray buildIName(const WatchData &parent, int debugId)\n+static QByteArray buildIName(const QByteArray &parentIname, int debugId)\n {\n-    if (!parent.isValid())\n+    if (parentIname.isEmpty())\n         return \""inspect.\"" + QByteArray::number(debugId);\n-    return parent.iname + \"".\"" + QByteArray::number(debugId);\n+    return parentIname + \"".\"" + QByteArray::number(debugId);\n }\n \n-static QByteArray buildIName(const WatchData &parent, const QString &name)\n+static QByteArray buildIName(const QByteArray &parentIname, const QString &name)\n {\n-    return parent.iname + \"".\"" + name.toLatin1();\n+    return parentIname + \"".\"" + name.toLatin1();\n }\n \n QList<WatchData> QmlInspectorAgent::buildWatchData(const ObjectReference &obj,\n-                                       const WatchData &parent)\n+                                       const QByteArray &parentIname)\n {\n     if (debug)\n-        qDebug() << __FUNCTION__ << \""(\"" << obj << parent.iname << \"")\"";\n+        qDebug() << __FUNCTION__ << \""(\"" << obj << parentIname << \"")\"";\n \n     QList<WatchData> list;\n \n@@ -701,7 +666,7 @@ QList<WatchData> QmlInspectorAgent::buildWatchData(const ObjectReference &obj,\n     objWatch.id = obj.debugId();\n     objWatch.exp = name.toLatin1();\n     objWatch.name = name;\n-    objWatch.iname = buildIName(parent, obj.debugId());\n+    objWatch.iname = buildIName(parentIname, obj.debugId());\n     objWatch.type = obj.className().toLatin1();\n     objWatch.value = _(\""object\"");\n     objWatch.setHasChildren(true);\n@@ -710,7 +675,7 @@ QList<WatchData> QmlInspectorAgent::buildWatchData(const ObjectReference &obj,\n     list.append(objWatch);\n     m_debugIdToIname.insert(objWatch.id, objWatch.iname);\n \n-    if (!m_engine->watchHandler()->isExpandedIName(objWatch.iname)\n+    if (!m_debuggerEngine->watchHandler()->isExpandedIName(objWatch.iname)\n             && obj.needsMoreData()) {\n         // we don't know the children yet. Not adding the 'properties'\n         // element makes sure we're queried on expansion.\n@@ -718,93 +683,49 @@ QList<WatchData> QmlInspectorAgent::buildWatchData(const ObjectReference &obj,\n     }\n \n     // properties\n-    WatchData propertiesWatch;\n-    propertiesWatch.id = objWatch.id;\n-    propertiesWatch.exp = \""\"";\n-    propertiesWatch.name = tr(\""properties\"");\n-    propertiesWatch.iname = objWatch.iname + \"".[properties]\"";\n-    propertiesWatch.type = \""\"";\n-    propertiesWatch.value = _(\""list\"");\n-    propertiesWatch.setHasChildren(true);\n-    propertiesWatch.setAllUnneeded();\n-\n-    list.append(propertiesWatch);\n-\n-    foreach (const PropertyReference &property, obj.properties()) {\n-        WatchData propertyWatch;\n-        propertyWatch.exp = property.name().toLatin1();\n-        propertyWatch.name = property.name();\n-        propertyWatch.iname = buildIName(propertiesWatch, property.name());\n-        propertyWatch.type = property.valueTypeName().toLatin1();\n-        propertyWatch.value = property.value().toString();\n-        propertyWatch.setAllUnneeded();\n-        propertyWatch.setHasChildren(false);\n-        list.append(propertyWatch);\n+    if (obj.properties().count()) {\n+        WatchData propertiesWatch;\n+        propertiesWatch.id = objWatch.id;\n+        propertiesWatch.exp = \""\"";\n+        propertiesWatch.name = tr(\""properties\"");\n+        propertiesWatch.iname = objWatch.iname + \"".[properties]\"";\n+        propertiesWatch.type = \""\"";\n+        propertiesWatch.value = _(\""list\"");\n+        propertiesWatch.setHasChildren(true);\n+        propertiesWatch.setAllUnneeded();\n+\n+        list.append(propertiesWatch);\n+\n+        foreach (const PropertyReference &property, obj.properties()) {\n+            WatchData propertyWatch;\n+            propertyWatch.exp = property.name().toLatin1();\n+            propertyWatch.name = property.name();\n+            propertyWatch.iname = buildIName(propertiesWatch.iname, property.name());\n+            propertyWatch.type = property.valueTypeName().toLatin1();\n+            propertyWatch.value = property.value().toString();\n+            propertyWatch.setAllUnneeded();\n+            propertyWatch.setHasChildren(false);\n+            list.append(propertyWatch);\n+        }\n     }\n \n     // recurse\n     foreach (const ObjectReference &child, obj.children())\n-        list.append(buildWatchData(child, objWatch));\n+        list.append(buildWatchData(child, objWatch.iname));\n     return list;\n }\n \n void QmlInspectorAgent::addObjectToTree(const ObjectReference &obj,\n                                         bool notify)\n {\n-    int count = m_rootObjects.count();\n-    for (int i = 0; i < count; i++) {\n-        int parentId = obj.parentId();\n-        if (m_engineClient->serviceVersion() < 2\n-                && !m_rootObjects.contains(obj)) {\n-            // we don't get parentId in qt 4.x\n-            parentId = m_rootObjects[i].insertObjectInTree(obj);\n-        }\n-\n-        if (parentId >= 0) {\n-            buildDebugIdHashRecursive(obj);\n-            if (notify)\n-                emit objectTreeUpdated();\n-\n-            // find parent\n-            QTC_ASSERT(m_debugIdToIname.contains(parentId), break);\n-            QByteArray iname = m_debugIdToIname.value(parentId);\n-            const WatchData *parent = m_engine->watchHandler()->findItem(iname);\n-            if (parent) {\n-                QList<WatchData> watches = buildWatchData(obj, *parent);\n-                m_engine->watchHandler()->beginCycle(false);\n-                m_engine->watchHandler()->insertBulkData(watches);\n-                m_engine->watchHandler()->endCycle();\n-                break;\n-            }\n-        }\n-    }\n-}\n-\n-ObjectReference QmlInspectorAgent::objectForId(int debugId,\n-        const ObjectReference &objectRef) const\n-{\n-    if (objectRef.debugId() == debugId)\n-        return objectRef;\n-\n-    foreach (const ObjectReference &child, objectRef.children()) {\n-        ObjectReference result = objectForId(debugId, child);\n-        if (result.debugId() == debugId)\n-            return result;\n-    }\n-\n-    return ObjectReference();\n-}\n-\n-QList<ObjectReference> QmlInspectorAgent::objects(\n-        const ObjectReference &objectRef) const\n-{\n-    QList<ObjectReference> result;\n-    result.append(objectRef);\n-\n-    foreach (const ObjectReference &child, objectRef.children())\n-        result.append(objects(child));\n-\n-    return result;\n+    QTC_ASSERT(m_debugIdToIname.contains(obj.parentId()), return);\n+    QList<WatchData> watches = buildWatchData(obj, m_debugIdToIname.value(obj.parentId()));\n+    m_debuggerEngine->watchHandler()->beginCycle(false);\n+    m_debuggerEngine->watchHandler()->insertBulkData(watches);\n+    m_debuggerEngine->watchHandler()->endCycle();\n+    buildDebugIdHashRecursive(obj);\n+    if (notify)\n+        emit objectTreeUpdated();\n }\n \n void QmlInspectorAgent::log(QmlInspectorAgent::LogDirection direction,\n@@ -817,8 +738,8 @@ void QmlInspectorAgent::log(QmlInspectorAgent::LogDirection direction,\n         msg += _(\"" receiving \"");\n     msg += message;\n \n-    if (m_engine)\n-        m_engine->showMessage(msg, LogDebug);\n+    if (m_debuggerEngine)\n+        m_debuggerEngine->showMessage(msg, LogDebug);\n }\n \n bool QmlInspectorAgent::isConnected()\n@@ -827,5 +748,18 @@ bool QmlInspectorAgent::isConnected()\n             && (m_engineClient->status() == QmlDebug::Enabled);\n }\n \n+void QmlInspectorAgent::clearObjectTree()\n+{\n+    // clear view\n+    m_debuggerEngine->watchHandler()->beginCycle(InspectWatch, true);\n+    m_debuggerEngine->watchHandler()->endCycle(InspectWatch);\n+\n+    m_objectTreeQueryIds.clear();\n+\n+    int old_count = m_debugIdHash.count();\n+    m_debugIdHash.clear();\n+    m_debugIdHash.reserve(old_count + 1);\n+    m_debugIdToIname.clear();\n+}\n } // Internal\n } // Debugger\n"", ""qmlinspectoragent.h"": ""@@ -75,10 +75,8 @@ public:\n     quint32 resetBindingForObject(int objectDebugId,\n                                   const QString &propertyName);\n \n-    QList<QmlDebug::ObjectReference> objects() const;\n-    QmlDebug::ObjectReference objectForId(int debugId) const;\n     QmlDebug::ObjectReference objectForId(const QString &objectId) const;\n-    QmlDebug::ObjectReference objectForLocation(int line, int column) const;\n+    int objectIdForLocation(int line, int column) const;\n     QList<QmlDebug::ObjectReference> rootObjects() const { return m_rootObjects; }\n     DebugIdHash debugIdHash() const { return m_debugIdHash; }\n \n@@ -88,6 +86,7 @@ public:\n     void removeAllObjectWatches();\n \n     void setEngineClient(QmlDebug::BaseEngineDebugClient *client);\n+    QString displayName(int debugId);\n \n public slots:\n     void fetchContextObjectsForLocation(const QString &file,\n@@ -106,12 +105,10 @@ private slots:\n \n private:\n     void reloadEngines();\n-    void queryEngineContext(int id);\n-    quint32 fetchContextObject(const QmlDebug::ObjectReference &obj);\n-    void fetchRootObjects(const QmlDebug::ContextReference &context, bool clear);\n+    void queryEngineContext();\n+    quint32 fetchObject(const QmlDebug::ObjectReference &obj);\n+    void fetchObjectsInContextRecursive(const QmlDebug::ContextReference &context);\n \n-    void updateEngineList(const QList<QmlDebug::EngineReference> &engines);\n-    void rootContextChanged(const QmlDebug::ContextReference &context);\n     void objectTreeFetched(const QmlDebug::ObjectReference &result);\n     void onCurrentObjectsFetched(const QmlDebug::ObjectReference &result);\n     bool getObjectHierarchy(const QmlDebug::ObjectReference &object);\n@@ -119,15 +116,9 @@ private:\n \n     void buildDebugIdHashRecursive(const QmlDebug::ObjectReference &ref);\n     QList<WatchData> buildWatchData(const QmlDebug::ObjectReference &obj,\n-                                           const WatchData &parent);\n+                                           const QByteArray &parentIname);\n     void addObjectToTree(const QmlDebug::ObjectReference &obj, bool notify);\n \n-    QmlDebug::ObjectReference objectForId(\n-            int debugId,\n-            const QmlDebug::ObjectReference &ref) const;\n-    QList<QmlDebug::ObjectReference> objects(\n-            const QmlDebug::ObjectReference &objectRef) const;\n-\n \n     enum LogDirection {\n         LogSend,\n@@ -136,9 +127,10 @@ private:\n     void log(LogDirection direction, const QString &message);\n \n     bool isConnected();\n+    void clearObjectTree();\n \n private:\n-    DebuggerEngine *m_engine;\n+    DebuggerEngine *m_debuggerEngine;\n     QmlDebug::BaseEngineDebugClient *m_engineClient;\n \n     quint32 m_engineQueryId;\n@@ -148,8 +140,9 @@ private:\n     QList<QmlDebug::ObjectReference> m_rootObjects;\n     QList<quint32> m_fetchCurrentObjectsQueryIds;\n     QList<QmlDebug::ObjectReference> m_fetchCurrentObjects;\n-    QList<QmlDebug::EngineReference> m_engines;\n+    QmlDebug::EngineReference m_engine;\n     QHash<int, QByteArray> m_debugIdToIname;\n+    QHash<int, QmlDebug::FileReference> m_debugIdLocations;\n     DebugIdHash m_debugIdHash;\n \n     QList<int> m_objectWatches;\n""}",refactor,"refactor 
",refactor;
5056.0,5056.0,bug,Caroline Chao,Add missing naming for libraries built statically.,"Add missing naming for libraries built statically.

Extension .a instead of .so.

Change-Id: I1e979b2a6b29eeab35620aa0bbabb27f10cdda68",['mkspecs/features/resolve_target.prf'],"{""resolve_target.prf"": ""@@ -38,7 +38,9 @@ win32 {\n         }\n     } else {\n         equals(TEMPLATE, lib) {\n-            plugin {\n+            static {\n+                QMAKE_RESOLVED_TARGET = $${QMAKE_RESOLVED_TARGET}$${LIBPREFIX}$${TARGET}.a\n+            } else:plugin {\n                 QMAKE_RESOLVED_TARGET = $${QMAKE_RESOLVED_TARGET}$${LIBPREFIX}$${TARGET}.so\n             } else {\n                 TEMP_VERSION = $$VERSION\n""}",bug,"bug
",resource;
10937.0,10937.0,bug,Aaron McCarthy,Disable NPE positioning backend when building for simulator.,"Disable NPE positioning backend when building for simulator.

Change-Id: I0e4239ddf26861e42401925aa8294e767bcb5410",['src/location/location.pro'],"{""location.pro"": ""@@ -91,7 +91,7 @@ meego {\n     }\n }\n \n-contains(config_test_jsondb, yes): contains(config_test_mtcore, yes) {\n+contains(config_test_jsondb, yes):contains(config_test_mtcore, yes):!simulator {\n     DEFINES += NPE_BACKEND\n     QT += jsondb-private\n     SOURCES += qgeopositioninfosource_npe_backend.cpp\\\n""}",bug,"bug 
",deprecat;resource;
2177.0,2177.0,bug,Samuel Rødal,Compile fix for QImage autotest.,"Compile fix for QImage autotest.

QImage::numBytes() is deprecated, QImage::byteCount() should be used
instead.

Change-Id: I0f885b91a49de59eb371da931bb64d2d57fcc0d0",['tests/auto/qimage/tst_qimage.cpp'],"{""tst_qimage.cpp"": ""@@ -1986,7 +1986,7 @@ void tst_QImage::rgbSwapped()\n \n     QCOMPARE(image, imageSwappedTwice);\n \n-    QCOMPARE(memcmp(image.constBits(), imageSwappedTwice.constBits(), image.numBytes()), 0);\n+    QCOMPARE(memcmp(image.constBits(), imageSwappedTwice.constBits(), image.byteCount()), 0);\n }\n \n void tst_QImage::deepCopyWhenPaintingActive()\n""}",bug,"bug, deprecate, test 
",bug;deprecat;test;
15541.0,15541.0,bug,Kim M. Kalland,Fixed source composition with opacity in the raster paint engine.,"Fixed source composition with opacity in the raster paint engine.

Task-number: QTBUG-24075

Change-Id: I2b9263364bf30fb8c914823e80e7ea4a8af26035",['src/gui/painting/qdrawhelper.cpp'],"{""qdrawhelper.cpp"": ""@@ -3247,6 +3247,8 @@ static inline Operator getOperator(const QSpanData *data, const QSpan *spans, in\n             // don't clear dest_fetch as it sets up the pointer correctly to save one copy\n             break;\n         default: {\n+            if (data->type == QSpanData::Texture && data->texture.const_alpha != 255)\n+                break;\n             const QSpan *lastSpan = spans + spanCount;\n             bool alphaSpans = false;\n             while (spans < lastSpan) {\n""}",bug,"bug 
",bug;
13205.0,13205.0,"feature,resource",Aaron McCarthy,Add plugins.qmltypes for QtLocation 5.0.,"Add plugins.qmltypes for QtLocation 5.0.

Ideally this should be generated at build time.  However this is not
possible for some configurations.

Change-Id: I80713319f3650b74aa02893926950b1f97c31505","['src/imports/location/location.pro', 'src/imports/location/plugins.qmltypes']",,"feature,resource","feature 
",resource;
6820.0,6820.0,"test,resource",Jason McDonald,Sanitize paths in selftest data.,"Sanitize paths in selftest data.

Use a standard path for filenames that appear in the selftest's expected
test data.  This will make future patches smaller.

Change-Id: I04b2e739d261f80d20b834e5b33c5b6e88d26379","['tests/auto/testlib/selftests/expected_cmptest.xml', 'tests/auto/testlib/selftests/expected_datatable.lightxml', 'tests/auto/testlib/selftests/expected_cmptest.lightxml', 'tests/auto/testlib/selftests/expected_failinit.xml', 'tests/auto/testlib/selftests/expected_datetime.xml', 'tests/auto/testlib/selftests/expected_skipinitdata.lightxml', 'tests/auto/testlib/selftests/expected_expectfail.txt', 'tests/auto/testlib/selftests/expected_skipinit.txt', 'tests/auto/testlib/selftests/expected_singleskip.txt', 'tests/auto/testlib/selftests/expected_skipinitdata.xml', 'tests/auto/testlib/selftests/expected_datatable.xml', 'tests/auto/testlib/selftests/expected_skip.lightxml', 'tests/auto/testlib/selftests/expected_alive.txt', 'tests/auto/testlib/selftests/expected_longstring.xml', 'tests/auto/testlib/selftests/expected_skipinitdata.txt', 'tests/auto/testlib/selftests/expected_xunit.xml', 'tests/auto/testlib/selftests/expected_badxml.txt', 'tests/auto/testlib/selftests/expected_strcmp.lightxml', 'tests/auto/testlib/selftests/expected_exceptionthrow.lightxml', 'tests/auto/testlib/selftests/expected_cmptest.txt', 'tests/auto/testlib/selftests/expected_exceptionthrow.txt', 'tests/auto/testlib/selftests/expected_datetime.txt', 'tests/auto/testlib/selftests/expected_skip.xml', 'tests/auto/testlib/selftests/expected_strcmp.xml', 'tests/auto/testlib/selftests/expected_xunit.lightxml', 'tests/auto/testlib/selftests/expected_datatable.txt', 'tests/auto/testlib/selftests/expected_failinitdata.xml', 'tests/auto/testlib/selftests/expected_singleskip.lightxml', 'tests/auto/testlib/selftests/expected_failinit.lightxml', 'tests/auto/testlib/selftests/expected_failinitdata.lightxml', 'tests/auto/testlib/selftests/expected_longstring.txt', 'tests/auto/testlib/selftests/expected_singleskip.xml', 'tests/auto/testlib/selftests/expected_commandlinedata.lightxml', 'tests/auto/testlib/selftests/expected_expectfail.xml', 'tests/auto/testlib/selftests/expected_longstring.lightxml', 'tests/auto/testlib/selftests/expected_skipinit.xml', 'tests/auto/testlib/selftests/expected_badxml.lightxml', 'tests/auto/testlib/selftests/expected_datetime.lightxml', 'tests/auto/testlib/selftests/expected_skipinit.lightxml', 'tests/auto/testlib/selftests/expected_commandlinedata.xml', 'tests/auto/testlib/selftests/expected_expectfail.lightxml', 'tests/auto/testlib/selftests/expected_skip.txt', 'tests/auto/testlib/selftests/expected_badxml.xml', 'tests/auto/testlib/selftests/expected_failinitdata.txt', 'tests/auto/testlib/selftests/expected_exceptionthrow.xml']",,"test,resource","Categories: test
",resource;test;
19545.0,19545.0,bug; test,Andrew den Exter (Closed Account),Make TextEdit word selection behaviour consistent.,"Make TextEdit word selection behaviour consistent.

Word selection initiated by a double click in QTextEdit only selects
a word if the drag point is closer to the end than the start
(assuming ltr selection) which can make it difficult to select small
words with touch input, as such the SelectWords mouseSelectionMode of
TextEdit selected a word if the drag point intersected any part of the
word.  Since we no longer have to retain compability for QTextEdit we
can settle on a single behaviour for word selection.

Change-Id: Iaabb7938a2b61b84a290a9ee41e407c83144b96f","['src/quick/items/qquicktextcontrol.cpp', 'tests/auto/quick/qquicktextedit/tst_qquicktextedit.cpp', 'tests/auto/quick/qquicktextedit/data/mouseselection_true.qml']","{""qquicktextcontrol.cpp"": ""@@ -531,29 +531,12 @@ void QQuickTextControlPrivate::extendWordwiseSelection(int suggestedNewPosition,\n     if (!wordSelectionEnabled && (mouseXPosition < wordStartX || mouseXPosition > wordEndX))\n         return;\n \n-    if (wordSelectionEnabled) {\n-        if (suggestedNewPosition < selectedWordOnDoubleClick.position()) {\n-            cursor.setPosition(selectedWordOnDoubleClick.selectionEnd());\n-            setCursorPosition(wordStartPos, QTextCursor::KeepAnchor);\n-        } else {\n-            cursor.setPosition(selectedWordOnDoubleClick.selectionStart());\n-            setCursorPosition(wordEndPos, QTextCursor::KeepAnchor);\n-        }\n+    if (suggestedNewPosition < selectedWordOnDoubleClick.position()) {\n+        cursor.setPosition(selectedWordOnDoubleClick.selectionEnd());\n+        setCursorPosition(wordStartPos, QTextCursor::KeepAnchor);\n     } else {\n-        // keep the already selected word even when moving to the left\n-        // (#39164)\n-        if (suggestedNewPosition < selectedWordOnDoubleClick.position())\n-            cursor.setPosition(selectedWordOnDoubleClick.selectionEnd());\n-        else\n-            cursor.setPosition(selectedWordOnDoubleClick.selectionStart());\n-\n-        const qreal differenceToStart = mouseXPosition - wordStartX;\n-        const qreal differenceToEnd = wordEndX - mouseXPosition;\n-\n-        if (differenceToStart < differenceToEnd)\n-            setCursorPosition(wordStartPos, QTextCursor::KeepAnchor);\n-        else\n-            setCursorPosition(wordEndPos, QTextCursor::KeepAnchor);\n+        cursor.setPosition(selectedWordOnDoubleClick.selectionStart());\n+        setCursorPosition(wordEndPos, QTextCursor::KeepAnchor);\n     }\n \n     if (interactionFlags & Qt::TextSelectableByMouse) {\n"", ""mouseselection_true.qml"": ""@@ -2,6 +2,6 @@ import QtQuick 2.0\n \n TextEdit {\n     focus: true\n-    text: \""0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\""\n+    text: \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\""\n     selectByMouse: true\n }\n"", ""tst_qquicktextedit.cpp"": ""@@ -1564,21 +1564,32 @@ void tst_qquicktextedit::mouseSelection_data()\n     QTest::addColumn<int>(\""from\"");\n     QTest::addColumn<int>(\""to\"");\n     QTest::addColumn<QString>(\""selectedText\"");\n+    QTest::addColumn<bool>(\""doubleClick\"");\n \n     // import installed\n-    QTest::newRow(\""on\"") << testFile(\""mouseselection_true.qml\"") << 4 << 9 << \""45678\"";\n-    QTest::newRow(\""off\"") << testFile(\""mouseselection_false.qml\"") << 4 << 9 << QString();\n-    QTest::newRow(\""default\"") << testFile(\""mouseselection_default.qml\"") << 4 << 9 << QString();\n-    QTest::newRow(\""off word selection\"") << testFile(\""mouseselection_false_words.qml\"") << 4 << 9 << QString();\n-    QTest::newRow(\""on word selection (4,9)\"") << testFile(\""mouseselection_true_words.qml\"") << 4 << 9 << \""0123456789\"";\n-    QTest::newRow(\""on word selection (2,13)\"") << testFile(\""mouseselection_true_words.qml\"") << 2 << 13 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"";\n-    QTest::newRow(\""on word selection (2,30)\"") << testFile(\""mouseselection_true_words.qml\"") << 2 << 30 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"";\n-    QTest::newRow(\""on word selection (9,13)\"") << testFile(\""mouseselection_true_words.qml\"") << 9 << 13 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"";\n-    QTest::newRow(\""on word selection (9,30)\"") << testFile(\""mouseselection_true_words.qml\"") << 9 << 30 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"";\n-    QTest::newRow(\""on word selection (13,2)\"") << testFile(\""mouseselection_true_words.qml\"") << 13 << 2 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"";\n-    QTest::newRow(\""on word selection (20,2)\"") << testFile(\""mouseselection_true_words.qml\"") << 20 << 2 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"";\n-    QTest::newRow(\""on word selection (12,9)\"") << testFile(\""mouseselection_true_words.qml\"") << 12 << 9 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"";\n-    QTest::newRow(\""on word selection (30,9)\"") << testFile(\""mouseselection_true_words.qml\"") << 30 << 9 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"";\n+    QTest::newRow(\""on\"") << testFile(\""mouseselection_true.qml\"") << 4 << 9 << \""45678\"" << false;\n+    QTest::newRow(\""off\"") << testFile(\""mouseselection_false.qml\"") << 4 << 9 << QString() << false;\n+    QTest::newRow(\""default\"") << testFile(\""mouseselection_default.qml\"") << 4 << 9 << QString() << false;\n+    QTest::newRow(\""off word selection\"") << testFile(\""mouseselection_false_words.qml\"") << 4 << 9 << QString() << false;\n+    QTest::newRow(\""on word selection (4,9)\"") << testFile(\""mouseselection_true_words.qml\"") << 4 << 9 << \""0123456789\"" << false;\n+    QTest::newRow(\""on word selection (2,13)\"") << testFile(\""mouseselection_true_words.qml\"") << 2 << 13 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"" << false;\n+    QTest::newRow(\""on word selection (2,30)\"") << testFile(\""mouseselection_true_words.qml\"") << 2 << 30 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"" << false;\n+    QTest::newRow(\""on word selection (9,13)\"") << testFile(\""mouseselection_true_words.qml\"") << 9 << 13 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"" << false;\n+    QTest::newRow(\""on word selection (9,30)\"") << testFile(\""mouseselection_true_words.qml\"") << 9 << 30 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"" << false;\n+    QTest::newRow(\""on word selection (13,2)\"") << testFile(\""mouseselection_true_words.qml\"") << 13 << 2 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"" << false;\n+    QTest::newRow(\""on word selection (20,2)\"") << testFile(\""mouseselection_true_words.qml\"") << 20 << 2 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"" << false;\n+    QTest::newRow(\""on word selection (12,9)\"") << testFile(\""mouseselection_true_words.qml\"") << 12 << 9 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"" << false;\n+    QTest::newRow(\""on word selection (30,9)\"") << testFile(\""mouseselection_true_words.qml\"") << 30 << 9 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"" << false;\n+\n+    QTest::newRow(\""off double click (4,9)\"") << testFile(\""mouseselection_true.qml\"") << 4 << 9 << \""0123456789\"" << true;\n+    QTest::newRow(\""off double click (2,13)\"") << testFile(\""mouseselection_true.qml\"") << 2 << 13 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"" << true;\n+    QTest::newRow(\""off double click (2,30)\"") << testFile(\""mouseselection_true.qml\"") << 2 << 30 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"" << true;\n+    QTest::newRow(\""off double click (9,13)\"") << testFile(\""mouseselection_true.qml\"") << 9 << 13 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"" << true;\n+    QTest::newRow(\""off double click (9,30)\"") << testFile(\""mouseselection_true.qml\"") << 9 << 30 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"" << true;\n+    QTest::newRow(\""off double click (13,2)\"") << testFile(\""mouseselection_true.qml\"") << 13 << 2 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"" << true;\n+    QTest::newRow(\""off double click (20,2)\"") << testFile(\""mouseselection_true.qml\"") << 20 << 2 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"" << true;\n+    QTest::newRow(\""off double click (12,9)\"") << testFile(\""mouseselection_true.qml\"") << 12 << 9 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"" << true;\n+    QTest::newRow(\""off double click (30,9)\"") << testFile(\""mouseselection_true.qml\"") << 30 << 9 << \""0123456789 ABCDEFGHIJKLMNOPQRSTUVWXYZ\"" << true;\n }\n \n void tst_qquicktextedit::mouseSelection()\n@@ -1587,6 +1598,7 @@ void tst_qquicktextedit::mouseSelection()\n     QFETCH(int, from);\n     QFETCH(int, to);\n     QFETCH(QString, selectedText);\n+    QFETCH(bool, doubleClick);\n \n     QQuickView canvas(QUrl::fromLocalFile(qmlfile));\n \n@@ -1602,6 +1614,8 @@ void tst_qquicktextedit::mouseSelection()\n     // press-and-drag-and-release from x1 to x2\n     QPoint p1 = textEditObject->positionToRectangle(from).center().toPoint();\n     QPoint p2 = textEditObject->positionToRectangle(to).center().toPoint();\n+    if (doubleClick)\n+        QTest::mouseClick(&canvas, Qt::LeftButton, 0, p1);\n     QTest::mousePress(&canvas, Qt::LeftButton, 0, p1);\n     QTest::mouseMove(&canvas, p2);\n     QTest::mouseRelease(&canvas, Qt::LeftButton, 0, p2);\n@@ -1610,7 +1624,10 @@ void tst_qquicktextedit::mouseSelection()\n \n     // Clicking and shift to clicking between the same points should select the same text.\n     textEditObject->setCursorPosition(0);\n-    QTest::mouseClick(&canvas, Qt::LeftButton, Qt::NoModifier, p1);\n+    if (doubleClick)\n+        QTest::mouseDClick(&canvas, Qt::LeftButton, 0, p1);\n+    else\n+        QTest::mouseClick(&canvas, Qt::LeftButton, Qt::NoModifier, p1);\n     QTest::mouseClick(&canvas, Qt::LeftButton, Qt::ShiftModifier, p2);\n     QTest::qWait(50);\n     QTRY_COMPARE(textEditObject->selectedText(), selectedText);\n""}",bug; test,"bug,test 
",others;
2419.0,2419.0,test,Rohan McGovern [inactive],test: remove CONFIG+=insignificant_test for tst_qgraphicstransform,"test: remove CONFIG+=insignificant_test for tst_qgraphicstransform

This autotest failure is stable, so it should be marked with
QEXPECT_FAIL, not CONFIG+=insignificant_test.

Note that the test row naming had to be changed, as the test previously
created many rows of testdata with the same name, making it impossible
to skip only the broken rows.

Task-number: QTBUG-20661
Change-Id: Ie38f5dddafe7686e30eaa8ff3445310935d2cd9a","['tests/auto/qgraphicstransform/tst_qgraphicstransform.cpp', 'tests/auto/qgraphicstransform/qgraphicstransform.pro']","{""qgraphicstransform.pro"": ""@@ -1,5 +1,3 @@\n load(qttest_p4)\n SOURCES  += tst_qgraphicstransform.cpp\n CONFIG += parallel_test\n-\n-CONFIG+=insignificant_test\n"", ""tst_qgraphicstransform.cpp"": ""@@ -61,6 +61,9 @@ private slots:\n     void rotation3d();\n     void rotation3dArbitraryAxis_data();\n     void rotation3dArbitraryAxis();\n+\n+private:\n+    QString toString(QTransform const&);\n };\n \n \n@@ -305,6 +308,15 @@ void tst_QGraphicsTransform::rotation3d()\n     QVERIFY(transform2D(rotation).isIdentity());\n }\n \n+QByteArray labelForTest(QVector3D const& axis, int angle) {\n+    return QString(\""rotation of %1 on (%2, %3, %4)\"")\n+        .arg(angle)\n+        .arg(axis.x())\n+        .arg(axis.y())\n+        .arg(axis.z())\n+        .toLatin1();\n+}\n+\n void tst_QGraphicsTransform::rotation3dArbitraryAxis_data()\n {\n     QTest::addColumn<QVector3D>(\""axis\"");\n@@ -317,11 +329,11 @@ void tst_QGraphicsTransform::rotation3dArbitraryAxis_data()\n     QVector3D axis5 = QVector3D(0.01f, 0.01f, 0.01f);\n \n     for (int angle = 0; angle <= 360; angle++) {\n-        QTest::newRow(\""test rotation on (1, 1, 1)\"") << axis1 << qreal(angle);\n-        QTest::newRow(\""test rotation on (2, -3, .5)\"") << axis2 << qreal(angle);\n-        QTest::newRow(\""test rotation on (-2, 0, -.5)\"") << axis3 << qreal(angle);\n-        QTest::newRow(\""test rotation on (.0001, .0001, .0001)\"") << axis4 << qreal(angle);\n-        QTest::newRow(\""test rotation on (.01, .01, .01)\"") << axis5 << qreal(angle);\n+        QTest::newRow(labelForTest(axis1, angle).constData()) << axis1 << qreal(angle);\n+        QTest::newRow(labelForTest(axis2, angle).constData()) << axis2 << qreal(angle);\n+        QTest::newRow(labelForTest(axis3, angle).constData()) << axis3 << qreal(angle);\n+        QTest::newRow(labelForTest(axis4, angle).constData()) << axis4 << qreal(angle);\n+        QTest::newRow(labelForTest(axis5, angle).constData()) << axis5 << qreal(angle);\n     }\n }\n \n@@ -347,7 +359,26 @@ void tst_QGraphicsTransform::rotation3dArbitraryAxis()\n     exp.rotate(angle, axis);\n     QTransform expected = exp.toTransform(1024.0f);\n \n-    QVERIFY(fuzzyCompare(transform2D(rotation), expected));\n+#ifdef Q_OS_LINUX\n+    // These failures possibly relate to the float vs qreal issue mentioned\n+    // in the comment above fuzzyCompare().\n+    if (sizeof(qreal) == sizeof(double)) {\n+        QEXPECT_FAIL(\""rotation of 120 on (1, 1, 1)\"",                \""QTBUG-20661\"", Abort);\n+        QEXPECT_FAIL(\""rotation of 240 on (1, 1, 1)\"",                \""QTBUG-20661\"", Abort);\n+        QEXPECT_FAIL(\""rotation of 120 on (0.01, 0.01, 0.01)\"",       \""QTBUG-20661\"", Abort);\n+        QEXPECT_FAIL(\""rotation of 240 on (0.01, 0.01, 0.01)\"",       \""QTBUG-20661\"", Abort);\n+        QEXPECT_FAIL(\""rotation of 120 on (0.0001, 0.0001, 0.0001)\"", \""QTBUG-20661\"", Abort);\n+        QEXPECT_FAIL(\""rotation of 240 on (0.0001, 0.0001, 0.0001)\"", \""QTBUG-20661\"", Abort);\n+    }\n+#endif\n+\n+    QTransform actual = transform2D(rotation);\n+    QVERIFY2(fuzzyCompare(actual, expected), qPrintable(\n+        QString(\""\\nactual:   %1\\n\""\n+                  \""expected: %2\"")\n+        .arg(toString(actual))\n+        .arg(toString(expected))\n+    ));\n \n     // Check that \""rotation\"" produces the 4x4 form of the 3x3 matrix.\n     // i.e. third row and column are 0 0 1 0.\n@@ -357,6 +388,21 @@ void tst_QGraphicsTransform::rotation3dArbitraryAxis()\n     QVERIFY(qFuzzyCompare(t, r));\n }\n \n+QString tst_QGraphicsTransform::toString(QTransform const& t)\n+{\n+    return QString(\""[ [ %1  %2   %3 ]; [ %4  %5  %6 ]; [ %7  %8  %9 ] ]\"")\n+        .arg(t.m11())\n+        .arg(t.m12())\n+        .arg(t.m13())\n+        .arg(t.m21())\n+        .arg(t.m22())\n+        .arg(t.m23())\n+        .arg(t.m31())\n+        .arg(t.m32())\n+        .arg(t.m33())\n+    ;\n+}\n+\n \n QTEST_MAIN(tst_QGraphicsTransform)\n #include \""tst_qgraphicstransform.moc\""\n""}",test,"test, bug 
",bug;deprecat;resource;test;
17620.0,17620.0,bug,Aapo Haapanen,Fix backspace on empty lines with custom QML editors,"Fix backspace on empty lines with custom QML editors

Symbian AknFEP doesn't return backspace keypresses to the editor if
the editor is empty. This causes problems for multiline editors,
because AknFEP can only see one line at a time. This issue has been
previously fixed by change a2709ef3f4410a1d1755e00353e6f969f8bb5613 so
that QCoeFepInputContext::DocumentLengthForFep returns lenght as 1
for empty lines. The fix was then refined by change
0ffd7fcc78e27f9184a6f1ee5a8a9cc5e6266998 so that the length is altered
only when the editor has multiple lines.

After the latest change, if a custom QML editor didn't have a lineCount
property, the code assumed it has only one line. This caused problems
for some custom multiline editors. This change alters the behaviour so
that if the code can't get the linecount from the editor, it assumes it
has multiple lines. This reverts the code to behave like before change
0ffd7fcc78e27f9184a6f1ee5a8a9cc5e6266998 for such custom QML editors.

Task-number: ou1cimx1#981078
Change-Id: I3551d1d3ca1984957465f894c8bc237544224468",['src/gui/inputmethod/qcoefepinputcontext_s60.cpp'],"{""qcoefepinputcontext_s60.cpp"": ""@@ -1551,7 +1551,10 @@ TInt QCoeFepInputContext::DocumentLengthForFep() const\n                 if (lineVariant.isValid()) {\n                     lineCount = lineVariant.toInt();\n                 } else {\n-                    lineCount = 1;\n+                    // If we can't get linecount from a custom QML editor, assume that it\n+                    // has multiple lines, so that it can receive backspaces also when\n+                    // the current line is empty.\n+                    lineCount = 2;\n                 }\n             }\n             // To fix an issue with backspaces not being generated if document size is zero,\n""}",bug,"bug
",bug;test;
9918.0,9918.0,test,Jason McDonald,Remove needless include from xmlpatternsvalidator test.,"Remove needless include from xmlpatternsvalidator test.

Nothing from network-settings.h is used in this test.

Change-Id: I78454610cf1289658ec370234ee3eefa5720ae82",['tests/auto/xmlpatternsvalidator/tst_xmlpatternsvalidator.cpp'],"{""tst_xmlpatternsvalidator.cpp"": ""@@ -44,7 +44,6 @@\n #include <QLibraryInfo>\n \n #include \""../qxmlquery/TestFundament.h\""\n-#include \""../network-settings.h\""\n \n /*!\n  \\class tst_XmlPatterns\n""}",test,"test, refactor 
",deprecat;test;
19849.0,19849.0,"resource,bug",Hugo Parente Lima,Fix PySide compilation.,"Fix PySide compilation.

Change-Id: Ie7a30961232526af59cbc21dbf1b58ab9a4e3e7b","['cmake/Macros/PySideModules.cmake', 'doc/CMakeLists.txt', 'tests/pysidetest/CMakeLists.txt', 'CMakeLists.txt']","{""CMakeLists.txt"": ""@@ -34,7 +34,7 @@ ${CMAKE_CURRENT_BINARY_DIR}/testbinding/testbinding_module_wrapper.cpp\n )\n \n add_custom_command(OUTPUT ${testbinding_SRC}\n-COMMAND ${GENERATORRUNNER_BINARY} ${GENERATOR_EXTRA_FLAGS}\n+COMMAND ${SHIBOKEN_BINARY} ${GENERATOR_EXTRA_FLAGS}\n         ${CMAKE_CURRENT_SOURCE_DIR}/pysidetest_global.h\n         --include-paths=${pyside_BINARY_DIR}${PATH_SEP}${CMAKE_CURRENT_SOURCE_DIR}${PATH_SEP}${QT_INCLUDE_DIR}${PATH_SEP}${QT_QTCORE_INCLUDE_DIR}${PATH_SEP}${QT_QTGUI_INCLUDE_DIR}\n         --typesystem-paths=${CMAKE_CURRENT_SOURCE_DIR}${PATH_SEP}${pyside_SOURCE_DIR}${PATH_SEP}${QtCore_SOURCE_DIR}${PATH_SEP}${QtCore_BINARY_DIR}${PATH_SEP}${QtGui_SOURCE_DIR}${PATH_SEP}${QtGui_BINARY_DIR}\n"", ""PySideModules.cmake"": ""@@ -20,7 +20,7 @@ macro(create_pyside_module module_name module_include_dir module_libraries modul\n     endif()\n \n     add_custom_command(OUTPUT ${${module_sources}}\n-                        COMMAND ${GENERATORRUNNER_BINARY} ${GENERATOR_EXTRA_FLAGS}\n+                        COMMAND ${SHIBOKEN_BINARY} ${GENERATOR_EXTRA_FLAGS}\n                         ${pyside_BINARY_DIR}/pyside_global.h\n                         --include-paths=${pyside_SOURCE_DIR}${PATH_SEP}${QT_INCLUDE_DIR}\n                         --typesystem-paths=${pyside_SOURCE_DIR}${PATH_SEP}${${module_typesystem_path}}\n""}","resource,bug","bug 
",bug;resource;
3936.0,3936.0,test,Kai Köhne,Debugger: Also fix the name of the qdeclarativedebug autotest,"Debugger: Also fix the name of the qdeclarativedebug autotest

Change-Id: Ia9d31f9228b9d9e63eccaf2577bf24b3929e5fad","['tests/auto/declarative/qdeclarativeenginedebug/qdeclarativeenginedebug.pro', 'tests/auto/declarative/qdeclarativeenginedebug/tst_qdeclarativeenginedebug.cpp', 'tests/auto/declarative/declarative.pro']","{""declarative.pro"": ""@@ -31,7 +31,7 @@ PRIVATETESTS += \\\n     qdeclarativebehaviors \\\n     qdeclarativebinding \\\n     qdeclarativeconnection \\\n-    qdeclarativedebug \\\n+    qdeclarativeenginedebug \\\n     qdeclarativedebugclient \\\n     qdeclarativedebugservice \\\n     qdeclarativeecmascript \\\n"", ""qdeclarativeenginedebug.pro"": ""@@ -3,7 +3,7 @@ contains(QT_CONFIG,declarative): QT += network declarative\n macx:CONFIG -= app_bundle\n \n HEADERS += ../shared/debugutil_p.h\n-SOURCES += tst_qdeclarativedebug.cpp \\\n+SOURCES += tst_qdeclarativeenginedebug.cpp \\\n            ../shared/debugutil.cpp\n \n CONFIG += parallel_test declarative_debug\n"", ""tst_qdeclarativeenginedebug.cpp"": ""@@ -63,7 +63,7 @@\n \n Q_DECLARE_METATYPE(QDeclarativeDebugWatch::State)\n \n-class tst_QDeclarativeDebug : public QObject\n+class tst_QDeclarativeEngineDebug : public QObject\n {\n     Q_OBJECT\n \n@@ -127,7 +127,7 @@ signals:\n QML_DECLARE_TYPE(NonScriptProperty)\n \n \n-QDeclarativeDebugObjectReference tst_QDeclarativeDebug::findRootObject(int context, bool recursive)\n+QDeclarativeDebugObjectReference tst_QDeclarativeEngineDebug::findRootObject(int context, bool recursive)\n {\n     QDeclarativeDebugEnginesQuery *q_engines = m_dbg->queryAvailableEngines(this);\n     waitForQuery(q_engines);\n@@ -153,7 +153,7 @@ QDeclarativeDebugObjectReference tst_QDeclarativeDebug::findRootObject(int conte\n     return result;\n }\n \n-QDeclarativeDebugPropertyReference tst_QDeclarativeDebug::findProperty(const QList<QDeclarativeDebugPropertyReference> &props, const QString &name) const\n+QDeclarativeDebugPropertyReference tst_QDeclarativeEngineDebug::findProperty(const QList<QDeclarativeDebugPropertyReference> &props, const QString &name) const\n {\n     foreach(const QDeclarativeDebugPropertyReference &p, props) {\n         if (p.name() == name)\n@@ -162,7 +162,7 @@ QDeclarativeDebugPropertyReference tst_QDeclarativeDebug::findProperty(const QLi\n     return QDeclarativeDebugPropertyReference();\n }\n \n-void tst_QDeclarativeDebug::waitForQuery(QDeclarativeDebugQuery *query)\n+void tst_QDeclarativeEngineDebug::waitForQuery(QDeclarativeDebugQuery *query)\n {\n     QVERIFY(query);\n     QCOMPARE(query->parent(), qobject_cast<QObject*>(this));\n@@ -171,7 +171,7 @@ void tst_QDeclarativeDebug::waitForQuery(QDeclarativeDebugQuery *query)\n         QFAIL(\""query timed out\"");\n }\n \n-void tst_QDeclarativeDebug::recursiveObjectTest(QObject *o, const QDeclarativeDebugObjectReference &oref, bool recursive) const\n+void tst_QDeclarativeEngineDebug::recursiveObjectTest(QObject *o, const QDeclarativeDebugObjectReference &oref, bool recursive) const\n {\n     const QMetaObject *meta = o->metaObject();\n \n@@ -240,7 +240,7 @@ void tst_QDeclarativeDebug::recursiveObjectTest(QObject *o, const QDeclarativeDe\n     }\n }\n \n-void tst_QDeclarativeDebug::recursiveCompareObjects(const QDeclarativeDebugObjectReference &a, const QDeclarativeDebugObjectReference &b) const\n+void tst_QDeclarativeEngineDebug::recursiveCompareObjects(const QDeclarativeDebugObjectReference &a, const QDeclarativeDebugObjectReference &b) const\n {\n     QCOMPARE(a.debugId(), b.debugId());\n     QCOMPARE(a.className(), b.className());\n@@ -264,7 +264,7 @@ void tst_QDeclarativeDebug::recursiveCompareObjects(const QDeclarativeDebugObjec\n         recursiveCompareObjects(a.children()[i], b.children()[i]);\n }\n \n-void tst_QDeclarativeDebug::recursiveCompareContexts(const QDeclarativeDebugContextReference &a, const QDeclarativeDebugContextReference &b) const\n+void tst_QDeclarativeEngineDebug::recursiveCompareContexts(const QDeclarativeDebugContextReference &a, const QDeclarativeDebugContextReference &b) const\n {\n     QCOMPARE(a.debugId(), b.debugId());\n     QCOMPARE(a.name(), b.name());\n@@ -278,7 +278,7 @@ void tst_QDeclarativeDebug::recursiveCompareContexts(const QDeclarativeDebugCont\n         recursiveCompareContexts(a.contexts()[i], b.contexts()[i]);\n }\n \n-void tst_QDeclarativeDebug::compareProperties(const QDeclarativeDebugPropertyReference &a, const QDeclarativeDebugPropertyReference &b) const\n+void tst_QDeclarativeEngineDebug::compareProperties(const QDeclarativeDebugPropertyReference &a, const QDeclarativeDebugPropertyReference &b) const\n {\n     QCOMPARE(a.objectDebugId(), b.objectDebugId());\n     QCOMPARE(a.name(), b.name());\n@@ -288,7 +288,7 @@ void tst_QDeclarativeDebug::compareProperties(const QDeclarativeDebugPropertyRef\n     QCOMPARE(a.hasNotifySignal(), b.hasNotifySignal());\n }\n \n-void tst_QDeclarativeDebug::initTestCase()\n+void tst_QDeclarativeEngineDebug::initTestCase()\n {\n     qRegisterMetaType<QDeclarativeDebugWatch::State>();\n     qmlRegisterType<NonScriptProperty>(\""Test\"", 1, 0, \""NonScriptPropertyElement\"");\n@@ -382,7 +382,7 @@ void tst_QDeclarativeDebug::initTestCase()\n     QTRY_VERIFY(m_dbg->status() == QDeclarativeEngineDebug::Enabled);\n }\n \n-void tst_QDeclarativeDebug::cleanupTestCase()\n+void tst_QDeclarativeEngineDebug::cleanupTestCase()\n {\n     delete m_dbg;\n     delete m_conn;\n@@ -390,7 +390,7 @@ void tst_QDeclarativeDebug::cleanupTestCase()\n     delete m_engine;\n }\n \n-void tst_QDeclarativeDebug::setMethodBody()\n+void tst_QDeclarativeEngineDebug::setMethodBody()\n {\n     QDeclarativeDebugObjectReference obj = findRootObject(2);\n \n@@ -427,7 +427,7 @@ void tst_QDeclarativeDebug::setMethodBody()\n     }\n }\n \n-void tst_QDeclarativeDebug::watch_property()\n+void tst_QDeclarativeEngineDebug::watch_property()\n {\n     QDeclarativeDebugObjectReference obj = findRootObject();\n     QDeclarativeDebugPropertyReference prop = findProperty(obj.properties(), \""width\"");\n@@ -472,7 +472,7 @@ void tst_QDeclarativeDebug::watch_property()\n     QCOMPARE(spy.at(0).at(1).value<QVariant>(), qVariantFromValue(origWidth*2));\n }\n \n-void tst_QDeclarativeDebug::watch_object()\n+void tst_QDeclarativeEngineDebug::watch_object()\n {\n     QDeclarativeDebugEnginesQuery *q_engines = m_dbg->queryAvailableEngines(this);\n     waitForQuery(q_engines);\n@@ -545,7 +545,7 @@ void tst_QDeclarativeDebug::watch_object()\n     QCOMPARE(newHeight, origHeight * 2);\n }\n \n-void tst_QDeclarativeDebug::watch_expression()\n+void tst_QDeclarativeEngineDebug::watch_expression()\n {\n     QFETCH(QString, expr);\n     QFETCH(int, increment);\n@@ -608,7 +608,7 @@ void tst_QDeclarativeDebug::watch_expression()\n     }\n }\n \n-void tst_QDeclarativeDebug::watch_expression_data()\n+void tst_QDeclarativeEngineDebug::watch_expression_data()\n {\n     QTest::addColumn<QString>(\""expr\"");\n     QTest::addColumn<int>(\""increment\"");\n@@ -618,21 +618,21 @@ void tst_QDeclarativeDebug::watch_expression_data()\n     QTest::newRow(\""width+10\"") << \""width + 10\"" << 10 << 5;\n }\n \n-void tst_QDeclarativeDebug::watch_context()\n+void tst_QDeclarativeEngineDebug::watch_context()\n {\n     QDeclarativeDebugContextReference c;\n     QTest::ignoreMessage(QtWarningMsg, \""QDeclarativeEngineDebug::addWatch(): Not implemented\"");\n     QVERIFY(!m_dbg->addWatch(c, QString(), this));\n }\n \n-void tst_QDeclarativeDebug::watch_file()\n+void tst_QDeclarativeEngineDebug::watch_file()\n {\n     QDeclarativeDebugFileReference f;\n     QTest::ignoreMessage(QtWarningMsg, \""QDeclarativeEngineDebug::addWatch(): Not implemented\"");\n     QVERIFY(!m_dbg->addWatch(f, this));\n }\n \n-void tst_QDeclarativeDebug::queryAvailableEngines()\n+void tst_QDeclarativeEngineDebug::queryAvailableEngines()\n {\n     QDeclarativeDebugEnginesQuery *q_engines;\n \n@@ -667,7 +667,7 @@ void tst_QDeclarativeDebug::queryAvailableEngines()\n     m_dbg = new QDeclarativeEngineDebug(m_conn, this);\n }\n \n-void tst_QDeclarativeDebug::queryRootContexts()\n+void tst_QDeclarativeEngineDebug::queryRootContexts()\n {\n     QDeclarativeDebugEnginesQuery *q_engines = m_dbg->queryAvailableEngines(this);\n     waitForQuery(q_engines);\n@@ -713,7 +713,7 @@ void tst_QDeclarativeDebug::queryRootContexts()\n     m_dbg = new QDeclarativeEngineDebug(m_conn, this);\n }\n \n-void tst_QDeclarativeDebug::queryObject()\n+void tst_QDeclarativeEngineDebug::queryObject()\n {\n     QFETCH(bool, recursive);\n \n@@ -785,7 +785,7 @@ void tst_QDeclarativeDebug::queryObject()\n     }\n }\n \n-void tst_QDeclarativeDebug::queryObject_data()\n+void tst_QDeclarativeEngineDebug::queryObject_data()\n {\n     QTest::addColumn<bool>(\""recursive\"");\n \n@@ -793,7 +793,7 @@ void tst_QDeclarativeDebug::queryObject_data()\n     QTest::newRow(\""recursive\"") << true;\n }\n \n-void tst_QDeclarativeDebug::queryExpressionResult()\n+void tst_QDeclarativeEngineDebug::queryExpressionResult()\n {\n     QFETCH(QString, expr);\n     QFETCH(QVariant, result);\n@@ -834,7 +834,7 @@ void tst_QDeclarativeDebug::queryExpressionResult()\n     m_dbg = new QDeclarativeEngineDebug(m_conn, this);\n }\n \n-void tst_QDeclarativeDebug::queryExpressionResult_data()\n+void tst_QDeclarativeEngineDebug::queryExpressionResult_data()\n {\n     QTest::addColumn<QString>(\""expr\"");\n     QTest::addColumn<QVariant>(\""result\"");\n@@ -846,7 +846,7 @@ void tst_QDeclarativeDebug::queryExpressionResult_data()\n     QTest::newRow(\""list of QObject*\"") << \""varObjList\"" << qVariantFromValue(QString(\""<unknown value>\""));\n }\n \n-void tst_QDeclarativeDebug::tst_QDeclarativeDebugFileReference()\n+void tst_QDeclarativeEngineDebug::tst_QDeclarativeDebugFileReference()\n {\n     QDeclarativeDebugFileReference ref;\n     QVERIFY(ref.url().isEmpty());\n@@ -870,7 +870,7 @@ void tst_QDeclarativeDebug::tst_QDeclarativeDebugFileReference()\n     }\n }\n \n-void tst_QDeclarativeDebug::tst_QDeclarativeDebugEngineReference()\n+void tst_QDeclarativeEngineDebug::tst_QDeclarativeDebugEngineReference()\n {\n     QDeclarativeDebugEngineReference ref;\n     QCOMPARE(ref.debugId(), -1);\n@@ -894,7 +894,7 @@ void tst_QDeclarativeDebug::tst_QDeclarativeDebugEngineReference()\n     }\n }\n \n-void tst_QDeclarativeDebug::tst_QDeclarativeDebugObjectReference()\n+void tst_QDeclarativeEngineDebug::tst_QDeclarativeDebugObjectReference()\n {\n     QDeclarativeDebugObjectReference ref;\n     QCOMPARE(ref.debugId(), -1);\n@@ -927,7 +927,7 @@ void tst_QDeclarativeDebug::tst_QDeclarativeDebugObjectReference()\n         recursiveCompareObjects(r, ref);\n }\n \n-void tst_QDeclarativeDebug::tst_QDeclarativeDebugContextReference()\n+void tst_QDeclarativeEngineDebug::tst_QDeclarativeDebugContextReference()\n {\n     QDeclarativeDebugContextReference ref;\n     QCOMPARE(ref.debugId(), -1);\n@@ -952,7 +952,7 @@ void tst_QDeclarativeDebug::tst_QDeclarativeDebugContextReference()\n         recursiveCompareContexts(r, ref);\n }\n \n-void tst_QDeclarativeDebug::tst_QDeclarativeDebugPropertyReference()\n+void tst_QDeclarativeEngineDebug::tst_QDeclarativeDebugPropertyReference()\n {\n     QDeclarativeDebugObjectReference rootObject = findRootObject();\n     QDeclarativeDebugObjectQuery *query = m_dbg->queryObject(rootObject, this);\n@@ -975,7 +975,7 @@ void tst_QDeclarativeDebug::tst_QDeclarativeDebugPropertyReference()\n         compareProperties(r, ref);\n }\n \n-void tst_QDeclarativeDebug::setBindingForObject()\n+void tst_QDeclarativeEngineDebug::setBindingForObject()\n {\n     QDeclarativeDebugObjectReference rootObject = findRootObject();\n     QVERIFY(rootObject.debugId() != -1);\n@@ -1046,7 +1046,7 @@ void tst_QDeclarativeDebug::setBindingForObject()\n     QCOMPARE(onEnteredRef.value(),  QVariant(\""{console.log('hello, world') }\""));\n }\n \n-void tst_QDeclarativeDebug::setBindingInStates()\n+void tst_QDeclarativeEngineDebug::setBindingInStates()\n {\n     // Check if changing bindings of propertychanges works\n \n@@ -1138,7 +1138,7 @@ void tst_QDeclarativeDebug::setBindingInStates()\n     QCOMPARE(findProperty(obj.properties(),\""width\"").value().toInt(), 300);\n }\n \n-void tst_QDeclarativeDebug::queryObjectTree()\n+void tst_QDeclarativeEngineDebug::queryObjectTree()\n {\n     const int sourceIndex = 3;\n \n@@ -1212,9 +1212,9 @@ int main(int argc, char *argv[])\n     _argv[_argc - 1] = arg;\n \n     QApplication app(_argc, _argv);\n-    tst_QDeclarativeDebug tc;\n+    tst_QDeclarativeEngineDebug tc;\n     return QTest::qExec(&tc, _argc, _argv);\n     delete _argv;\n }\n \n-#include \""tst_qdeclarativedebug.moc\""\n+#include \""tst_qdeclarativeenginedebug.moc\""\n""}",test,"test
",bug;test;
532.0,532.0,"test,bug",Rohan McGovern [inactive],"Fixed compile of tst_qsettings in debug-only mode on Mac, Windows","Fixed compile of tst_qsettings in debug-only mode on Mac, Windows

This test was forcing on release mode, which does not work if the user
requested to build Qt in debug mode only, and this affects the library
name (as on Mac and Windows).

Change-Id: I11111c0ffee11111111111111111111111111111",['tests/auto/qsettings/qsettings.pro'],"{""qsettings.pro"": ""@@ -5,8 +5,6 @@ QT += core-private\n SOURCES  += tst_qsettings.cpp\n RESOURCES += qsettings.qrc\n \n-CONFIG -= debug\n-CONFIG += release\n win32-msvc*:LIBS += advapi32.lib\n \n CONFIG += parallel_test\n""}","test,bug","bug,test 
",bug;resource;test;
15329.0,15329.0,test,Kranthi Kuntala,Adapt qml contacts tests to behavioral change in fetch contacts.,"Adapt qml contacts tests to behavioral change in fetch contacts.

Declarative contact model's fetchContacts method behaviour
has changed recently.
This commit adapts the qml contacts tests to such a change,
by replacing calls to fetchContacts([]) with calls to update()
and by cleaning up / refactoring tests that where using the
fetchContacts method with a non empty list of contact IDs.

Change-Id: I36f5911079e43b7eb990c4d6963785e04ec927af","['tests/auto/qmlcontacts/testcases/tst_contacts_fetch_contacts_e2e.qml', 'tests/auto/qmlcontacts/testcases/tst_contact_extended_detail_e2e.qml', 'tests/auto/qmlcontacts/testcases/ContactsSavingTestCase.qml', 'tests/auto/qmlcontacts/testcases/tst_contacts_filtering_e2e.qml']","{""ContactsSavingTestCase.qml"": ""@@ -80,7 +80,7 @@ TestCase {\n \n     function emptyContacts(model) {\n         logDebug(\""emptyContacts\"");\n-        model.fetchContacts([]);\n+        model.update();\n         spy.wait();\n         var count = model.contacts.length;\n         for (var i = 0; i < count; i++) {\n"", ""tst_contact_extended_detail_e2e.qml"": ""@@ -47,7 +47,7 @@ ContactsSavingTestCase {\n     name: \""ContactsExtendedDetailE2ETests\""\n \n     ContactModel {\n-        id: modelForSaveAndFetch\n+        id: modelForSaveAndUpdate\n         autoUpdate:true\n     }\n \n@@ -64,7 +64,7 @@ ContactsSavingTestCase {\n \n     function test_withBoolean()\n     {\n-        var fetchedExtendedDetail = saveAndFetch(contactForBoolean);\n+        var fetchedExtendedDetail = saveAndUpdate(contactForBoolean);\n         compare(fetchedExtendedDetail.name, \""boolean\"", \""extendDetail.name\"");\n         compare(fetchedExtendedDetail.data, myBoolean, \""extendDetail.data\"");\n     }\n@@ -82,7 +82,7 @@ ContactsSavingTestCase {\n \n     function test_withColor()\n     {\n-        var fetchedExtendedDetail = saveAndFetch(contactForColor);\n+        var fetchedExtendedDetail = saveAndUpdate(contactForColor);\n         compare(fetchedExtendedDetail.name, \""color\"", \""extendDetail.name\"");\n         compare(fetchedExtendedDetail.data, myColor, \""extendDetail.data\"");\n     }\n@@ -100,9 +100,9 @@ ContactsSavingTestCase {\n \n     function test_withDate()\n     {\n-        var fetchedExtendedDetail = saveAndFetch(contactForDate);\n+        var fetchedExtendedDetail = saveAndUpdate(contactForDate);\n         compare(fetchedExtendedDetail.name, \""date\"", \""extendDetail.name\"");\n-        if (modelForSaveAndFetch.manager == \""jsondb\"") {\n+        if (modelForSaveAndUpdate.manager == \""jsondb\"") {\n             // In jsondb date is a bit tricky as UTC format with trailing Zulu is used.\n             // Also backend does not convert it back but returns a string in the zulu format.\n             compare(fetchedExtendedDetail.data, \""2001-08-14T00:00:00Z\"", \""extendDetail.data\"");\n@@ -124,7 +124,7 @@ ContactsSavingTestCase {\n \n     function test_withDouble()\n     {\n-        var fetchedExtendedDetail = saveAndFetch(contactForDouble);\n+        var fetchedExtendedDetail = saveAndUpdate(contactForDouble);\n         compare(fetchedExtendedDetail.name, \""double\"", \""extendDetail.name\"");\n         compare(fetchedExtendedDetail.data, myDouble, \""extendDetail.data\"");\n     }\n@@ -142,7 +142,7 @@ ContactsSavingTestCase {\n \n     function test_withInt()\n     {\n-        var fetchedExtendedDetail = saveAndFetch(contactForInt);\n+        var fetchedExtendedDetail = saveAndUpdate(contactForInt);\n         compare(fetchedExtendedDetail.name, \""int\"", \""extendDetail.name\"");\n         compare(fetchedExtendedDetail.data, myInt, \""extendDetail.data\"");\n     }\n@@ -160,7 +160,7 @@ ContactsSavingTestCase {\n \n     function test_withNegativeInt()\n     {\n-        var fetchedExtendedDetail = saveAndFetch(contactForNegativeInt);\n+        var fetchedExtendedDetail = saveAndUpdate(contactForNegativeInt);\n         compare(fetchedExtendedDetail.name, \""negativeInt\"", \""extendDetail.name\"");\n         compare(fetchedExtendedDetail.data, myNegativeInt, \""extendDetail.data\"");\n     }\n@@ -178,7 +178,7 @@ ContactsSavingTestCase {\n \n     function test_withReal()\n     {\n-        var fetchedExtendedDetail = saveAndFetch(contactForReal );\n+        var fetchedExtendedDetail = saveAndUpdate(contactForReal );\n         compare(fetchedExtendedDetail.name, \""real\"", \""extendDetail.name\"");\n         compare(fetchedExtendedDetail.data, myReal, \""extendDetail.data\"");\n     }\n@@ -196,7 +196,7 @@ ContactsSavingTestCase {\n \n     function test_withNegReal()\n     {\n-        var fetchedExtendedDetail = saveAndFetch(contactForNegativeReal);\n+        var fetchedExtendedDetail = saveAndUpdate(contactForNegativeReal);\n         compare(fetchedExtendedDetail.name, \""negativeReal\"", \""extendDetail.name\"");\n         compare(fetchedExtendedDetail.data, myNegativeReal, \""extendDetail.data\"");\n     }\n@@ -214,7 +214,7 @@ ContactsSavingTestCase {\n \n     function test_withString()\n     {\n-        var fetchedExtendedDetail = saveAndFetch(contactForString);\n+        var fetchedExtendedDetail = saveAndUpdate(contactForString);\n         compare(fetchedExtendedDetail.name, \""string\"", \""extendDetail.name\"");\n         compare(fetchedExtendedDetail.data, myString, \""extendDetail.data\"");\n     }\n@@ -232,7 +232,7 @@ ContactsSavingTestCase {\n \n     function test_withUrl()\n     {\n-        var fetchedExtendedDetail = saveAndFetch(contactForUrl);\n+        var fetchedExtendedDetail = saveAndUpdate(contactForUrl);\n         compare(fetchedExtendedDetail.name, \""url\"", \""extendDetail.name\"");\n         compare(fetchedExtendedDetail.data, myUrl, \""extendDetail.data\"");\n     }\n@@ -251,7 +251,7 @@ ContactsSavingTestCase {\n \n     function test_withVariant()\n     {\n-        var fetchedExtendedDetail = saveAndFetch(contactForVariant);\n+        var fetchedExtendedDetail = saveAndUpdate(contactForVariant);\n         compare(fetchedExtendedDetail.name, \""stringInVariant\"", \""extendDetail.name\"");\n         compare(fetchedExtendedDetail.data, myVariant, \""extendDetail.data Variant\"");\n         compare(fetchedExtendedDetail.data, stringForVariant, \""extendDetail.data String\"");\n@@ -271,7 +271,7 @@ ContactsSavingTestCase {\n \n     function test_withIntList()\n     {\n-        var fetchedExtendedDetail = saveAndFetch(contactForIntList);\n+        var fetchedExtendedDetail = saveAndUpdate(contactForIntList);\n         compare(fetchedExtendedDetail.name, \""intList\"", \""extendDetail.name\"");\n         compare(fetchedExtendedDetail.data, myIntList, \""extendDetail.data\"");\n     }\n@@ -289,7 +289,7 @@ ContactsSavingTestCase {\n \n     function test_withStringList()\n     {\n-        var fetchedExtendedDetail = saveAndFetch(contactForStringList);\n+        var fetchedExtendedDetail = saveAndUpdate(contactForStringList);\n         compare(fetchedExtendedDetail.name, \""stringList\"", \""extendDetail.name\"");\n         compare(fetchedExtendedDetail.data, myStringList, \""extendDetail.data\"");\n     }\n@@ -307,7 +307,7 @@ ContactsSavingTestCase {\n \n     function test_withVariantList()\n     {\n-        var fetchedExtendedDetail = saveAndFetch(contactForVariantList);\n+        var fetchedExtendedDetail = saveAndUpdate(contactForVariantList);\n         compare(fetchedExtendedDetail.name, \""variantList\"", \""extendDetail.name\"");\n         compare(fetchedExtendedDetail.data, myVariantList, \""extendDetail.data\"");\n     }\n@@ -325,7 +325,7 @@ ContactsSavingTestCase {\n \n     function test_withEmbeddedVariantsList()\n     {\n-        var fetchedExtendedDetail = saveAndFetch(contactForEmbeddedVariantLists);\n+        var fetchedExtendedDetail = saveAndUpdate(contactForEmbeddedVariantLists);\n         compare(fetchedExtendedDetail.name, \""embeddedVariantLists\"", \""extendDetail.name\"");\n         compare(fetchedExtendedDetail.data, myEmbeddedVariantLists, \""extendDetail.data\"");\n \n@@ -344,7 +344,7 @@ ContactsSavingTestCase {\n \n     function test_withDeeblyEmbeddedVariantLists()\n     {\n-        var fetchedExtendedDetail = saveAndFetch(contactForDeeblyEmbeddedVariantLists);\n+        var fetchedExtendedDetail = saveAndUpdate(contactForDeeblyEmbeddedVariantLists);\n         compare(fetchedExtendedDetail.name, \""deeblyEmbeddedVariantLists\"", \""extendDetail.name\"");\n         compare(fetchedExtendedDetail.data, myDeeblyEmbeddedVariantLists, \""extendDetail.data\"");\n     }\n@@ -360,7 +360,7 @@ ContactsSavingTestCase {\n     {\n         var myMapData = { key1: 1, key2: 2, key3: 3}\n         contactForMap.extendedDetail.data = myMapData;\n-        var fetchedExtendedDetail = saveAndFetch(contactForMap);\n+        var fetchedExtendedDetail = saveAndUpdate(contactForMap);\n         compare(fetchedExtendedDetail.name, \""mapData\"", \""extendDetail.name\"");\n         compare(fetchedExtendedDetail.data, myMapData, \""extendDetail.data\"");\n     }\n@@ -383,7 +383,7 @@ ContactsSavingTestCase {\n \n     function test_extendedDetailsListProperty_multipleDetails()\n     {\n-        var fetchedContact = saveAndFetchContact(contactWithThreeExtendedDetails);\n+        var fetchedContact = saveAndUpdateContact(contactWithThreeExtendedDetails);\n         var fetchedExtendedDetails = fetchedContact.extendedDetails;\n         compare(fetchedExtendedDetails.length, 3, \""extendedDetails.length\"");\n         compare(fetchedExtendedDetails[0], fetchedContact.extendedDetail, \""extendedDetail == extendedDetails[0]\"");\n@@ -402,7 +402,7 @@ ContactsSavingTestCase {\n \n     function test_extendedDetailsListProperty_oneDetail()\n     {\n-        var fetchedContact = saveAndFetchContact(contactWithOneExtendedDetail);\n+        var fetchedContact = saveAndUpdateContact(contactWithOneExtendedDetail);\n         var fetchedExtendedDetails = fetchedContact.extendedDetails;\n         compare(fetchedExtendedDetails.length, 1, \""extendedDetails.length\"");\n         compare(fetchedExtendedDetails[0], fetchedContact.extendedDetail, \""extendedDetail == extendedDetails[0]\"");\n@@ -415,7 +415,7 @@ ContactsSavingTestCase {\n \n     function test_extendedDetailsListProperty_noDetails()\n     {\n-        var fetchedExtendedDetails = saveAndFetchContact(contactWithoutExtendedDetails).extendedDetails;\n+        var fetchedExtendedDetails = saveAndUpdateContact(contactWithoutExtendedDetails).extendedDetails;\n         compare(fetchedExtendedDetails.length, 0, \""extendedDetails.length\"");\n         verify(!fetchedExtendedDetails[0], \""extendedDetails[0] is undefined\"");\n     }\n@@ -434,7 +434,7 @@ ContactsSavingTestCase {\n \n     function test_extendedDetailsListProperty_removing_one_detail()\n     {\n-        var fetchedExtendedDetails = saveAndFetchContact(contactWithTwoExtendedDetails).extendedDetails;\n+        var fetchedExtendedDetails = saveAndUpdateContact(contactWithTwoExtendedDetails).extendedDetails;\n         compare(fetchedExtendedDetails.length, 2, \""extendedDetails.length\"");\n         contactWithTwoExtendedDetails.removeDetail(contactWithTwoExtendedDetails.extendedDetails[1])\n         compare(contactWithTwoExtendedDetails.extendedDetails.length, 1, \""extendedDetails.length\"");\n@@ -442,24 +442,24 @@ ContactsSavingTestCase {\n \n     // TODO: Test more QML and Javascript types.\n \n-    function saveAndFetch(contact)\n+    function saveAndUpdate(contact)\n     {\n-        modelForSaveAndFetch.saveContact(contact);\n+        modelForSaveAndUpdate.saveContact(contact);\n         waitForContactsChanged();\n \n-        modelForSaveAndFetch.fetchContacts([]);\n+        modelForSaveAndUpdate.update();\n         waitForContactsChanged();\n-        return modelForSaveAndFetch.contacts[0].extendedDetail;\n+        return modelForSaveAndUpdate.contacts[0].extendedDetail;\n     }\n \n-    function saveAndFetchContact(contact)\n+    function saveAndUpdateContact(contact)\n     {\n-        modelForSaveAndFetch.saveContact(contact);\n+        modelForSaveAndUpdate.saveContact(contact);\n         waitForContactsChanged();\n \n-        modelForSaveAndFetch.fetchContacts([]);\n+        modelForSaveAndUpdate.update();\n         waitForContactsChanged();\n-        return modelForSaveAndFetch.contacts[0];\n+        return modelForSaveAndUpdate.contacts[0];\n     }\n \n     function compareExtendedDetails(actual, expected)\n@@ -471,20 +471,20 @@ ContactsSavingTestCase {\n     // Init & teardown\n \n     function initTestCase() {\n-        initTestForModel(modelForSaveAndFetch);\n+        initTestForModel(modelForSaveAndUpdate);\n         waitForContactsChanged();\n         // The wait is needed so the model is populated\n         // (e.g. with garbage left from previous test runs)\n         // before cleanup() is called.\n-        emptyContacts(modelForSaveAndFetch);\n+        emptyContacts(modelForSaveAndUpdate);\n     }\n \n     function init() {\n-        initTestForModel(modelForSaveAndFetch);\n+        initTestForModel(modelForSaveAndUpdate);\n     }\n \n     function cleanup() {\n-        emptyContacts(modelForSaveAndFetch);\n+        emptyContacts(modelForSaveAndUpdate);\n     }\n \n     function cleanupTestCase() {\n"", ""tst_contacts_fetch_contacts_e2e.qml"": ""@@ -63,35 +63,30 @@ ContactsSavingTestCase {\n         id: contact3\n     }\n \n+    SignalSpy {\n+        id: contactsFetchedSpy\n+        signalName: \""contactsFetched\""\n+        target: model\n+    }\n+\n     // Tests\n \n     function test_fetchOnlySomeIdsLeavesContactsUnchanged() {\n         var id = model.contacts[0].contactId;\n \n-        model.fetchContacts([id]);\n-        waitForContactsChanged();\n-\n+        var trid = model.fetchContacts([id]);\n+        contactsFetchedSpy.wait();\n+        verify(trid >= 0, \""valid fetch transaction id\"")\n         compare(model.contacts.length, 3);\n     }\n \n-    function test_fetchOnlySomeIdsLeavesOriginalContactStillValid() {\n-        var contact = model.contacts[0];\n-        var id = contact.contactId;\n-\n-        model.fetchContacts([id]);\n-        waitForContactsChanged();\n-\n-        verify(contact, \""contact is defined\"");\n-        verify(contact.contactId, \""contact id is defined\"");\n-    }\n-\n     function test_fetchOnlySomeIdsLeavesOriginalContactInTheModel() {\n         var contact = model.contacts[0];\n         var id = contact.contactId;\n \n-        model.fetchContacts([id]);\n-        waitForContactsChanged();\n-\n+        var trid = model.fetchContacts([id]);\n+        contactsFetchedSpy.wait();\n+        verify(trid >= 0, \""valid fetch transaction id\"")\n         verify(contact === model.contacts[0], \""still contains the contact\"");\n     }\n \n@@ -109,37 +104,11 @@ ContactsSavingTestCase {\n         compare(model.contacts[2], contact3, \""contact3\"");\n     }\n \n-    function test_fetchEmptyWillFetchAllContacts() {\n-        var id1 = model.contacts[0].contactId;\n-        var id2 = model.contacts[1].contactId;\n-        var id3 = model.contacts[2].contactId;\n-\n-        model.fetchContacts([]);\n-        waitForContactsChanged();\n-\n-        compare(model.contacts.length, 3);\n-        compare(model.contacts[0].contactId, id1, \""id1\"");\n-        compare(model.contacts[1].contactId, id2, \""id2\"");\n-        compare(model.contacts[2].contactId, id3, \""id3\"");\n-    }\n-\n-    function test_fetchEmptyLeavesOriginalContactStillValid() {\n-        var contact = model.contacts[0];\n-\n-        model.fetchContacts([]);\n-        waitForContactsChanged();\n-\n-        verifyIsDefined(contact);\n-        verifyIsDefined(contact.contactId);\n-    }\n-\n-    function test_fetchEmptyLeavesOriginalContactInTheModel() {\n-        var contact = model.contacts[0];\n-\n-        model.fetchContacts([]);\n-        waitForContactsChanged();\n-\n-        verify(contact === model.contacts[0], \""still contains the contact\"")\n+    function test_fetchEmptyReturnsInvalidTrid() {\n+        var trid = model.fetchContacts([]);\n+        expectFail(\""\"", \""invalid transaction should not emit any signal\"")\n+        contactsFetchedSpy.wait();\n+        compare(trid, -1, \""transaction id for invalid fetch is equal to -1\"");\n     }\n \n     // Init & teardown\n"", ""tst_contacts_filtering_e2e.qml"": ""@@ -58,6 +58,12 @@ ContactsSavingTestCase {\n         filter: filter\n     }\n \n+    SignalSpy {\n+        id: contactsFetchedSpy\n+        signalName: \""contactsFetched\""\n+        target: model\n+    }\n+\n     Contact {\n         id: contact1;\n     }\n@@ -273,14 +279,15 @@ ContactsSavingTestCase {\n         filter.ids = [id];\n         model.filter = filter;\n         waitForContactsChanged();\n+        var trid = model.fetchContacts([id]);\n+        contactsFetchedSpy.wait();\n+        verify(trid >= 0, \""valid fetch transaction id\"")\n \n-        model.fetchContacts([id]);\n-        waitForContactsChanged();\n-\n-        compare(model.contacts[0].contactId, id);\n+        compare(model.contacts.length, 1, \""contacts length\"");\n+        compare(model.contacts[0].contactId, id, \""contact is still present\"");\n     }\n \n-    function test_filterAndFetchSomeNonMatchingIds() {\n+    function test_filterAndFetchNonMatchingIdsDoesNotChangeModel() {\n         var contact = model.contacts[0];\n         var id = contact.contactId;\n         var idOfAnotherContact = model.contacts[1].contactId;\n@@ -290,8 +297,9 @@ ContactsSavingTestCase {\n         model.filter = filter;\n         waitForContactsChanged();\n \n-        model.fetchContacts([idOfAnotherContact]);\n-        waitForContactsChanged();\n+        var trid = model.fetchContacts([idOfAnotherContact]);\n+        contactsFetchedSpy.wait();\n+        verify(trid >= 0, \""valid fetch transaction id\"")\n \n         compare(model.contacts.length, 1, \""contacts length\"");\n         compare(model.contacts[0].contactId, id, \""contact is still present\"");\n""}",test,"test 
",refactor;resource;test;
17096.0,17096.0,bug,Joerg Bornemann,fix .ui scanner,"fix .ui scanner

Header file dependencies are in <header> tags, not <include>.

Change-Id: I669653c3e1ab3fb4c2c41f469caa2349a753569f",['src/plugins/scanner/qt/qt.cpp'],"{""qt.cpp"": ""@@ -145,12 +145,12 @@ static void closeScanner(void *ptr)\n \n static const char *nextUi(void *opaq, int *size, int *flags)\n {\n-    Opaq *o= static_cast<Opaq *>(opaq);\n+    Opaq *o = static_cast<Opaq *>(opaq);\n     while (!o->xml->atEnd()) {\n         o->xml->readNext();\n         switch (o->xml->tokenType()) {\n             case QXmlStreamReader::StartElement:\n-                if ( o->xml->name() == \""include\"") {\n+                if (o->xml->name() == \""header\"") {\n                     o->current = o->xml->readElementText(QXmlStreamReader::ErrorOnUnexpectedElement).toUtf8();\n                     *flags = SC_GLOBAL_INCLUDE_FLAG;\n                     *size = o->current.size();\n""}",bug,"bug 
",bug;
1303.0,1303.0,resource,Leena Miettinen,Doc: the SSH port field in Maemo and MeeGo device configurations,"Doc: the SSH port field in Maemo and MeeGo device configurations

Change-Id: I70066f084e4b873d9f26cb927650c5ad7d7cde58","['doc/images/qtcreator-maemo-emulator-connection.png', 'doc/maemodev.qdoc', 'doc/images/qtcreator-maemo-device-configurations.png']","{""qtcreator-maemo-device-configurations.png"": ""Binary files a/doc/images/qtcreator-maemo-device-configurations.png and b/doc/images/qtcreator-maemo-device-configurations.png differ\n"", ""qtcreator-maemo-emulator-connection.png"": ""Binary files a/doc/images/qtcreator-maemo-emulator-connection.png and b/doc/images/qtcreator-maemo-emulator-connection.png differ\n"", ""maemodev.qdoc"": ""@@ -29,7 +29,7 @@\n     \\endif\n     \\page creator-developing-maemo.html\n     \\if defined(qcmanual)\n-    \\nextpage creator-developing-symbian.html\n+    \\nextpage creator-developing-generic-linux.html\n     \\else\n     \\nextpage smartinstaller.html\n     \\endif\n@@ -345,6 +345,9 @@\n             \\o In the \\gui {The device's host name or IP address} field, enter\n             the IP address from the connectivity tool on the device.\n \n+            \\o In the \\gui {The SSH port} field, enter the port number to use\n+            for SSH connections.\n+\n             \\o Click \\gui Next.\n \n             \\o Follow the instructions of the wizard to create the connection.\n""}",resource,"resource 
",resource;
1257.0,1257.0,bug,Alex,Revert accidentally committed debug flag for SFW library,"Revert accidentally committed debug flag for SFW library

Change-Id: I29defc39838b717128ef4e9fb482c622d546d884",['src/serviceframework/ipc/ipc.pri'],"{""ipc.pri"": ""@@ -6,7 +6,7 @@ symbian {\n         ipc/objectendpoint.cpp\n }\n else {\n-    contains(QT_CONFIG,dbus3) {\n+    contains(QT_CONFIG,dbus) {\n         DEFINES += SFW_USE_DBUS_BACKEND\n         QT += dbus \\\n             network\n""}",bug,"bug 
",bug;resource;
19779.0,19779.0,refactor,"Daniel Molkentin (CLOSED NOKIA IDENTITY, DO NOT USE ANYMORE!)","deployqt: Proposed for for Windows deployment, some cleanups.","WIP: deployqt: Proposed for for Windows deployment, some cleanups.

Change-Id: I16583d70371e69bf6729a4b028a7dbf49b3b02df",['scripts/deployqt.py'],"{""deployqt.py"": ""@@ -37,10 +37,10 @@ import shutil\n from glob import glob\n \n ignoreErrors = False\n-is_debug_build = False\n+debug_build = False\n \n def usage():\n-    print \""Usage: %s <creator_install_dir> [qmake_path]\"" %  os.path.basename(sys.argv[0])\n+    print \""Usage: %s <creator_install_dir> [qmake_path]\"" % os.path.basename(sys.argv[0])\n \n def which(program):\n     def is_exe(fpath):\n@@ -64,15 +64,15 @@ def which(program):\n \n     return None\n \n-def check_debug(fpath):\n+def is_debug(fpath):\n     # bootstrap exception\n     if fpath.endswith('QtCore4d.dll'):\n         return True\n     output = subprocess.check_output(['dumpbin', '/imports', fpath])\n     return output.find('QtCored4.dll') != -1\n \n-def check_debug_build(install_dir):\n-    return check_debug(os.path.join(install_dir, 'bin', 'qtcreator.exe'))\n+def is_debug_build(install_dir):\n+    return is_debug(os.path.join(install_dir, 'bin', 'qtcreator.exe'))\n \n def op_failed(details = None):\n     if details != None:\n@@ -117,24 +117,23 @@ def fix_rpaths(chrpath_bin, install_dir):\n         filenames = [filename for filename in filenames if check_unix_library_helper(dirpath, filename)]\n         fix_rpaths_helper(chrpath_bin, install_dir, dirpath, filenames)\n \n-def ignore_pattern_helper(filename):\n-    ignore_patterns = ['.lib', '.pdb', '.exp', '.ilk', '.dll']\n+def windows_debug_files_filter(filename):\n+    ignore_patterns = ['.lib', '.pdb', '.exp', '.ilk']\n     for ip in ignore_patterns:\n         if filename.endswith(ip):\n-            return False\n-    return True\n+            return True\n+    return False\n \n def copy_ignore_patterns_helper(dir, filenames):\n     if not sys.platform.startswith('win'):\n         return filenames\n \n-    useful =  filter(ignore_pattern_helper, filenames)\n-    if is_debug_build:\n-        dlls = filter(lambda filename: filename.endswith('.dll') and check_debug(os.path.join(dir, filename)), filenames)\n+    if debug_build:\n+        wrong_dlls = filter(lambda filename: filename.endswith('.dll') and not is_debug(os.path.join(dir, filename)), filenames)\n     else:\n-        dlls = filter(lambda filename:  filename.endswith('.dll') and not check_debug(os.path.join(dir, filename)), filenames)\n+        wrong_dlls = filter(lambda filename: filename.endswith('.dll') and is_debug(os.path.join(dir, filename)), filenames)\n \n-    filenames = useful + dlls\n+    filenames = wrong_dlls + filter(windows_debug_files_filter, filenames)\n     return filenames\n \n def copy_qt_libs(install_dir, qt_libs_dir, qt_plugin_dir, qt_import_dir, plugins, imports):\n@@ -151,10 +150,10 @@ def copy_qt_libs(install_dir, qt_libs_dir, qt_plugin_dir, qt_import_dir, plugins\n         dest = os.path.join(install_dir, 'lib', 'qtcreator')\n \n     if sys.platform.startswith('win'):\n-        if is_debug_build:\n-            libraries = filter(lambda library: check_debug(library), libraries)\n+        if debug_build:\n+            libraries = filter(lambda library: is_debug(library), libraries)\n         else:\n-            libraries = filter(lambda library: not check_debug(library), libraries)\n+            libraries = filter(lambda library: not is_debug(library), libraries)\n \n     for library in libraries:\n         print library, '->', dest\n@@ -186,7 +185,7 @@ def copy_qt_libs(install_dir, qt_libs_dir, qt_plugin_dir, qt_import_dir, plugins\n         shutil.copytree(os.path.join(qt_import_dir, qtimport), target, ignore=copy_ignore_func, symlinks=True)\n \n def copy_translations(install_dir, qt_tr_dir, tr_catalogs):\n-    langs=[]\n+    langs = []\n     tr_dir = os.path.join(install_dir, 'share', 'qtcreator', 'translations')\n     p = re.compile(r'_(.*).qm')\n     for dirpath, dirnames, filenames in os.walk(tr_dir):\n@@ -210,11 +209,9 @@ def readQmakeVar(qmake_bin, var):\n     return pipe.read().rstrip('\\n')\n \n def main():\n-    generateMode = False\n     try:\n         opts, args = getopt.gnu_getopt(sys.argv[1:], 'hi', ['help', 'ignore-errors'])\n     except:\n-        print str(err)\n         usage()\n         sys.exit(2)\n     for o, a in opts:\n@@ -227,10 +224,10 @@ def main():\n             print \""Note: Ignoring all errors\""\n \n     if len(args) < 1:\n-            usage()\n-            sys.exit(2)\n+        usage()\n+        sys.exit(2)\n \n-    install_dir=args[0]\n+    install_dir = args[0]\n \n     qmake_bin = 'qmake'\n     if len(args) > 1:\n@@ -238,8 +235,8 @@ def main():\n     qmake_bin = which(qmake_bin)\n \n     if qmake_bin == None:\n-            print \""Cannot find required binary 'qmake'.\""\n-            sys.exit(2)\n+        print \""Cannot find required binary 'qmake'.\""\n+        sys.exit(2)\n \n     if not sys.platform.startswith('win'):\n         chrpath_bin = which('chrpath')\n@@ -257,14 +254,14 @@ def main():\n     tr_catalogs = ['assistant', 'designer', 'qt', 'qt_help']\n \n     if sys.platform.startswith('win'):\n-        global is_debug_build\n-        is_debug_build = check_debug_build(install_dir)\n+        global debug_build\n+        debug_build = is_debug_build(install_dir)\n \n     copy_qt_libs(install_dir, QT_INSTALL_LIBS, QT_INSTALL_PLUGINS, QT_INSTALL_IMPORTS, plugins, imports)\n     copy_translations(install_dir, QT_INSTALL_TRANSLATIONS, tr_catalogs)\n \n     if not sys.platform.startswith('win'):\n-        fix_rpaths(chrpath_bin ,install_dir)\n+        fix_rpaths(chrpath_bin, install_dir)\n \n if __name__ == \""__main__\"":\n     if sys.platform == 'darwin':\n""}",refactor,"feature, refactor 
",others;
18598.0,18598.0,bug,hjk,debugger: reset AUTORUN explicitly for manual tests,"debugger: reset AUTORUN explicitly for manual tests

Change-Id: Ic71082ebd7779068886b68bce20d7d75c3055c17",['src/plugins/debugger/debuggerengine.cpp'],"{""debuggerengine.cpp"": ""@@ -1829,6 +1829,9 @@ void DebuggerEnginePrivate::handleAutoTests()\n                 } else if (s.startsWith(QLatin1String(\""#define USE_AUTORUN 2\""))) {\n                     m_testsPossible = true;\n                     m_breakOnError = true;\n+                } else {\n+                    m_testsPossible = false;\n+                    m_breakOnError = false;\n                 }\n                 break;\n             }\n""}",bug,"bug,test 
",bug;test;
3382.0,3382.0,resource,Jason McDonald,Remove obsolete testlib files from .gitignore,"Remove obsolete testlib files from .gitignore

Change-Id: I9764999c02b1220e6bdbc4b2bfadc0bc9f1feebf",['.gitignore'],"{"".gitignore"": ""@@ -112,8 +112,6 @@ tests/auto/qprocess/fileWriterProcess.txt\n .com.apple.timemachine.supported\n tests/auto/qlibrary/libmylib.so*\n tests/auto/qresourceengine/runtime_resource.rcc\n-tools/qtestlib/chart/chart*\n-tools/qtestlib/updater/updater*\n tools/activeqt/testcon/testcon.tlb\n translations/*.qm\n translations/*_untranslated.ts\n""}",resource,"resource
",deprecat;resource;test;
13592.0,13592.0,bug;test ,Ali Akhtarzada,marker bug fix + test,"marker bug fix

When a file is opened and written to and then killed,
the next open does not work because it expects a
marker is set since the file is bigger than just the
header.

Change-Id: Ifba6fa0305d72c69d0cf03659af47fc74d042791","['tests/auto/qbtree/main.cpp', 'src/3rdparty/btree/src/btree.h', 'src/3rdparty/btree/src/btree.cpp']","{""btree.cpp"": ""@@ -870,9 +870,9 @@ btree_read_header(struct btree *bt)\n                 errno = ENOENT;\n                 goto fail;\n         } else if ((size_t)rc != PAGESIZE) {\n+                EPRINTF(\""read: %s\"", strerror(errno));\n                 if (rc > 0)\n                         errno = EINVAL;\n-                EPRINTF(\""read: %s\"", strerror(errno));\n                 goto fail;\n         }\n \n@@ -1218,6 +1218,11 @@ btree_open_fd(const char *path, int fd, unsigned int flags)\n                 goto fail;\n         }\n \n+        if (btree_sync(bt) != BT_SUCCESS) {\n+                EPRINTF(\""failed to sync initial meta\"");\n+                goto fail;\n+        }\n+\n         DPRINTF(\""opened database version %u, pagesize %u\"",\n             bt->head.version, bt->head.psize);\n         DPRINTF(\""timestamp: %s\"", ctime((const time_t *)&bt->meta.created_at));\n@@ -1299,6 +1304,24 @@ btree_close(struct btree *bt)\n                 DPRINTF(\""ref is now %d on btree %p\"", bt->ref, bt);\n }\n \n+void\n+btree_close_nosync(struct btree *bt)\n+{\n+        if (bt == NULL)\n+                return;\n+\n+        if (--bt->ref == 0) {\n+                DPRINTF(\""ref is zero, closing btree %p:%s\"", bt, bt->path);\n+                close(bt->fd);\n+                mpage_flush(bt);\n+                free(bt->page_cache);\n+                free(bt->lru_queue);\n+                free(bt->path);\n+                free(bt);\n+        } else\n+                DPRINTF(\""ref is now %d on btree %p\"", bt->ref, bt);\n+}\n+\n struct btree_txn *\n btree_get_txn(struct btree *bt)\n {\n"", ""btree.h"": ""@@ -88,6 +88,7 @@ struct btree            *btree_open(const char *path, unsigned int flags,\n                             mode_t mode);\n int                      btree_get_fd(struct btree *bt);\n void                     btree_close(struct btree *bt);\n+void                     btree_close_nosync(struct btree *bt);\n const struct btree_stat *btree_stat(struct btree *bt);\n struct btree_txn        *btree_get_txn(struct btree *bt);\n \n"", ""main.cpp"": ""@@ -90,6 +90,7 @@ private slots:\n     void prefixSizes();\n     void prefixTest();\n     void managedBtree();\n+    void killProcess();\n \n private:\n     void corruptSinglePage(int psize, int pgno = -1, qint32 flag = -1);\n@@ -1257,5 +1258,32 @@ void TestQBtree::managedBtree()\n     QFile::remove(mdbname);\n }\n \n+#include <errno.h>\n+\n+void TestQBtree::killProcess()\n+{\n+    const char *filename = \""corruptor.db\"";\n+    QFile::remove(filename);\n+    QVERIFY(!QFile::remove(filename));\n+\n+    struct btree *bt = btree_open(filename, BT_NOSYNC | BT_USEMARKER, 0644);\n+    QVERIFY(bt);\n+    struct btree_txn *txn = btree_txn_begin(bt, 0);\n+    QVERIFY(txn);\n+    QByteArray ba(5, 'a');\n+    struct btval val;\n+    val.free_data = 0;\n+    val.mp = 0;\n+    val.size = ba.size();\n+    val.data = ba.data();\n+    QVERIFY(btree_txn_put(bt, txn, &val, &val, 0) == 0);\n+    QVERIFY(btree_txn_commit(txn, 1, 0) == 0);\n+\n+    btree_close_nosync(bt);\n+\n+    struct btree *bt2 = btree_open(filename, BT_NOSYNC | BT_USEMARKER, 0644);\n+    QVERIFY(bt2);\n+}\n+\n QTEST_MAIN(TestQBtree)\n #include \""main.moc\""\n""}",bug;test,"bug, test 
",bug;test;
17979.0,17979.0,bug;test ,Bea Lam,prepareTransition() must cancel current transition,"prepareTransition() must cancel current transition

If it does not, itemX() or itemY() will still return the current
transition's 'to' position instead of the nextTransitionTo pos that was
scheduled for the next transition (which the item now has moved to
using the direct setPos() method).

Also refactor prepareTransition() to always move the item directly to
the nextTransitionTo if transition is not going ahead.

Also fix some broken test code.

Task-number: QTBUG-24523
Change-Id: I2e536fbc0da2acbf96fdf2d177190a8968f7fdb1","['tests/auto/qtquick2/qquicklistview/data/multipleTransitions.qml', 'tests/auto/qtquick2/qquickgridview/tst_qquickgridview.cpp', 'src/quick/items/qquickitemviewtransition.cpp', 'tests/auto/qtquick2/qquickgridview/data/multipleTransitions.qml', 'tests/auto/qtquick2/qquicklistview/tst_qquicklistview.cpp']","{""qquickitemviewtransition.cpp"": ""@@ -364,14 +364,11 @@ bool QQuickViewItem::prepareTransition(const QRectF &viewBounds)\n             doTransition = (nextTransitionType == QQuickItemViewTransitioner::AddTransition)\n                     ? viewBounds.intersects(QRectF(nextTransitionTo.x(), nextTransitionTo.y(), item->width(), item->height()))\n                     : viewBounds.intersects(QRectF(item->x(), item->y(), item->width(), item->height()));\n-            if (!doTransition)\n-                item->setPos(nextTransitionTo);\n         } else {\n+            // do transition if moving from or into visible area\n             if (viewBounds.intersects(QRectF(item->x(), item->y(), item->width(), item->height()))\n                     || viewBounds.intersects(QRectF(nextTransitionTo.x(), nextTransitionTo.y(), item->width(), item->height()))) {\n                 doTransition = transitionWillChangePosition();\n-            } else {\n-                item->setPos(nextTransitionTo);\n             }\n         }\n         break;\n@@ -381,14 +378,16 @@ bool QQuickViewItem::prepareTransition(const QRectF &viewBounds)\n             doTransition = viewBounds.isNull()\n                     || viewBounds.intersects(QRectF(item->x(), item->y(), item->width(), item->height()))\n                     || viewBounds.intersects(QRectF(nextTransitionTo.x(), nextTransitionTo.y(), item->width(), item->height()));\n-            if (!doTransition)\n-                item->setPos(nextTransitionTo);\n         }\n         break;\n     }\n \n-    if (!doTransition)\n+    if (!doTransition) {\n+        if (transition)\n+            transition->cancel();\n+        item->setPos(nextTransitionTo);\n         resetTransitionData();\n+    }\n     return doTransition;\n }\n \n"", ""multipleTransitions.qml"": ""@@ -10,7 +10,7 @@ Rectangle {\n     // interrupting transitions will still produce the correct result)\n     property int timeBetweenActions: duration / 2\n \n-    property int duration: 300\n+    property int duration: 100\n \n     property int count: list.count\n \n"", ""tst_qquickgridview.cpp"": ""@@ -1274,8 +1274,6 @@ void tst_QQuickGridView::moved_data()\n \n void tst_QQuickGridView::multipleChanges()\n {\n-    QSKIP(\""QTBUG-24523\"");\n-\n     QFETCH(int, startCount);\n     QFETCH(QList<ListChange>, changes);\n     QFETCH(int, newCount);\n@@ -4817,17 +4815,15 @@ void tst_QQuickGridView::multipleTransitions()\n \n     int timeBetweenActions = canvas->rootObject()->property(\""timeBetweenActions\"").toInt();\n \n-    QList<QPair<QString, QString> > targetItems;\n     for (int i=0; i<changes.count(); i++) {\n         switch (changes[i].type) {\n             case ListChange::Inserted:\n             {\n+                QList<QPair<QString, QString> > targetItems;\n                 for (int j=changes[i].index; j<changes[i].index + changes[i].count; ++j)\n                     targetItems << qMakePair(QString(\""new item %1\"").arg(j), QString::number(j));\n                 model.insertItems(changes[i].index, targetItems);\n                 QTRY_COMPARE(model.count(), gridview->count());\n-                QTRY_VERIFY(gridview->property(\""runningAddTargets\"").toBool());\n-                QTRY_VERIFY(gridview->property(\""runningAddDisplaced\"").toBool());\n                 if (i == changes.count() - 1) {\n                     QTRY_VERIFY(!gridview->property(\""runningAddTargets\"").toBool());\n                     QTRY_VERIFY(!gridview->property(\""runningAddDisplaced\"").toBool());\n@@ -4837,12 +4833,8 @@ void tst_QQuickGridView::multipleTransitions()\n                 break;\n             }\n             case ListChange::Removed:\n-                for (int j=changes[i].index; j<changes[i].index + changes[i].count; ++j)\n-                    targetItems << qMakePair(model.name(i), model.number(i));\n                 model.removeItems(changes[i].index, changes[i].count);\n                 QTRY_COMPARE(model.count(), gridview->count());\n-                QTRY_VERIFY(gridview->property(\""runningRemoveTargets\"").toBool());\n-                QTRY_VERIFY(gridview->property(\""runningRemoveDisplaced\"").toBool());\n                 if (i == changes.count() - 1) {\n                     QTRY_VERIFY(!gridview->property(\""runningRemoveTargets\"").toBool());\n                     QTRY_VERIFY(!gridview->property(\""runningRemoveDisplaced\"").toBool());\n@@ -4851,11 +4843,8 @@ void tst_QQuickGridView::multipleTransitions()\n                 }\n                 break;\n             case ListChange::Moved:\n-                for (int j=changes[i].index; j<changes[i].index + changes[i].count; ++j)\n-                    targetItems << qMakePair(model.name(i), model.number(i));\n                 model.moveItems(changes[i].index, changes[i].to, changes[i].count);\n-                QTRY_VERIFY(gridview->property(\""runningMoveTargets\"").toBool());\n-                QTRY_VERIFY(gridview->property(\""runningMoveDisplaced\"").toBool());\n+                QTRY_COMPARE(QQuickItemPrivate::get(gridview)->polishScheduled, false);\n                 if (i == changes.count() - 1) {\n                     QTRY_VERIFY(!gridview->property(\""runningMoveTargets\"").toBool());\n                     QTRY_VERIFY(!gridview->property(\""runningMoveDisplaced\"").toBool());\n"", ""tst_qquicklistview.cpp"": ""@@ -5779,8 +5779,6 @@ void tst_QQuickListView::displacedTransitions_data()\n \n void tst_QQuickListView::multipleTransitions()\n {\n-    QSKIP(\""QTBUG-24523\"");\n-\n     // Tests that if you interrupt a transition in progress with another action that\n     // cancels the previous transition, the resulting items are still placed correctly.\n \n@@ -5829,17 +5827,15 @@ void tst_QQuickListView::multipleTransitions()\n \n     int timeBetweenActions = canvas->rootObject()->property(\""timeBetweenActions\"").toInt();\n \n-    QList<QPair<QString, QString> > targetItems;\n     for (int i=0; i<changes.count(); i++) {\n         switch (changes[i].type) {\n             case ListChange::Inserted:\n             {\n+                QList<QPair<QString, QString> > targetItems;\n                 for (int j=changes[i].index; j<changes[i].index + changes[i].count; ++j)\n                     targetItems << qMakePair(QString(\""new item %1\"").arg(j), QString::number(j));\n                 model.insertItems(changes[i].index, targetItems);\n                 QTRY_COMPARE(model.count(), listview->count());\n-                QTRY_VERIFY(listview->property(\""runningAddTargets\"").toBool());\n-                QTRY_VERIFY(listview->property(\""runningAddDisplaced\"").toBool());\n                 if (i == changes.count() - 1) {\n                     QTRY_VERIFY(!listview->property(\""runningAddTargets\"").toBool());\n                     QTRY_VERIFY(!listview->property(\""runningAddDisplaced\"").toBool());\n@@ -5849,12 +5845,9 @@ void tst_QQuickListView::multipleTransitions()\n                 break;\n             }\n             case ListChange::Removed:\n-                for (int j=changes[i].index; j<changes[i].index + changes[i].count; ++j)\n-                    targetItems << qMakePair(model.name(i), model.number(i));\n+            {\n                 model.removeItems(changes[i].index, changes[i].count);\n                 QTRY_COMPARE(model.count(), listview->count());\n-                QTRY_VERIFY(listview->property(\""runningRemoveTargets\"").toBool());\n-                QTRY_VERIFY(listview->property(\""runningRemoveDisplaced\"").toBool());\n                 if (i == changes.count() - 1) {\n                     QTRY_VERIFY(!listview->property(\""runningRemoveTargets\"").toBool());\n                     QTRY_VERIFY(!listview->property(\""runningRemoveDisplaced\"").toBool());\n@@ -5862,12 +5855,11 @@ void tst_QQuickListView::multipleTransitions()\n                     QTest::qWait(timeBetweenActions);\n                 }\n                 break;\n+            }\n             case ListChange::Moved:\n-                for (int j=changes[i].index; j<changes[i].index + changes[i].count; ++j)\n-                    targetItems << qMakePair(model.name(i), model.number(i));\n+            {\n                 model.moveItems(changes[i].index, changes[i].to, changes[i].count);\n-                QTRY_VERIFY(listview->property(\""runningMoveTargets\"").toBool());\n-                QTRY_VERIFY(listview->property(\""runningMoveDisplaced\"").toBool());\n+                QTRY_COMPARE(QQuickItemPrivate::get(listview)->polishScheduled, false);\n                 if (i == changes.count() - 1) {\n                     QTRY_VERIFY(!listview->property(\""runningMoveTargets\"").toBool());\n                     QTRY_VERIFY(!listview->property(\""runningMoveDisplaced\"").toBool());\n@@ -5875,6 +5867,7 @@ void tst_QQuickListView::multipleTransitions()\n                     QTest::qWait(timeBetweenActions);\n                 }\n                 break;\n+            }\n             case ListChange::SetCurrent:\n                 listview->setCurrentIndex(changes[i].index);\n                 break;\n""}",bug;test,"bug, refactor, test 
",bug;refactor;test;
7548.0,7548.0,refactor; resource,Fawzi Mohamed,zeroconf: initLib/setDefaultZConfLib related cleanups,"zeroconf: initLib/setDefaultZConfLib related cleanups

Renamed initLib to setDefaultZConfLib.
Use shared pointers for libs: avoid small leak for each call to initLib.
Renamed nativeLib to more logical dnsSdLib.
Print in ~ServiceBrowserPrivate only if DEBUG_ZEROCONF.

Change-Id: Icf76bba490c2ece46769253555b28c1220b44c23","['src/libs/zeroconf/servicebrowser_p.h', 'src/libs/zeroconf/servicebrowser.cpp', 'src/libs/zeroconf/dnsSdLib.cpp', 'src/libs/zeroconf/zeroconf.pro', 'src/libs/zeroconf/avahiLib.cpp', 'src/libs/zeroconf/servicebrowser.h', 'src/libs/zeroconf/embeddedLib.cpp']","{""avahiLib.cpp"": ""@@ -114,7 +114,7 @@ private:\n     QLibrary nativeLib;\n public:\n \n-    AvahiZConfLib(QString libName = QLatin1String(\""avahi\""), ZConfLib *fallBack = 0) : ZConfLib(fallBack), nativeLib(libName)\n+    AvahiZConfLib(QString libName = QLatin1String(\""avahi\""), ZConfLib::Ptr fallBack = ZConfLib::Ptr(0)) : ZConfLib(fallBack), nativeLib(libName)\n     {\n #ifndef ZCONF_AVAHI_STATIC_LINKING\n         // dynamic linking\n@@ -321,8 +321,8 @@ public:\n     }\n };\n \n-ZConfLib *ZConfLib::createAvahiLib(const QString &libName, ZConfLib *fallback) {\n-    return new AvahiZConfLib(libName, fallback);\n+ZConfLib::Ptr ZConfLib::createAvahiLib(const QString &libName, ZConfLib::Ptr fallback) {\n+    return ZConfLib::Ptr(new AvahiZConfLib(libName, fallback));\n }\n \n extern \""C\"" void cAvahiResolveReply( AvahiServiceResolver * r, AvahiIfIndex interface, AvahiProtocol /*protocol*/,\n@@ -381,7 +381,8 @@ extern \""C\"" void cAvahiResolveReply( AvahiServiceResolver * r, AvahiIfIndex inter\n         qDebug() << \""Error: unexpected avahi event \"" << event << \"" in cAvahiResolveReply\"";\n         break;\n     }\n-    AvahiZConfLib *lib = dynamic_cast<AvahiZConfLib *>(sg->serviceBrowser->mainConnection->lib);\n+    ZConfLib::Ptr libBase = sg->serviceBrowser->mainConnection->lib;\n+    AvahiZConfLib *lib = dynamic_cast<AvahiZConfLib *>(libBase.data());\n     if (lib)\n         lib->serviceResolverFree(r);\n }\n@@ -467,7 +468,7 @@ extern \""C\"" void cAvahiBrowseReply(AvahiServiceBrowser * /*b*/, AvahiIfIndex inte\n namespace ZeroConf {\n namespace Internal {\n \n-ZConfLib *ZConfLib::createAvahiLib(const QString &/*extraPaths*/, ZConfLib * fallback) {\n+ZConfLib::Ptr ZConfLib::createAvahiLib(const QString &/*extraPaths*/, ZConfLib::Ptr fallback) {\n     return fallback;\n }\n \n"", ""dnsSdLib.cpp"": ""@@ -43,7 +43,7 @@\n \n #include <errno.h>\n \n-#ifndef NO_NATIVE_LIB\n+#ifndef NO_DNS_SD_LIB\n \n #ifdef Q_OS_MACX\n #define ZCONF_MDNS_STATIC_LINKING\n@@ -91,7 +91,7 @@ typedef int (DNSSD_API *RefSockFDPtr)(DNSServiceRef sdRef);\n }\n \n // represents a zero conf library exposing the dns-sd interface\n-class NativeZConfLib : public ZConfLib{\n+class DnsSdZConfLib : public ZConfLib{\n     Q_DECLARE_TR_FUNCTIONS(ZeroConf)\n private:\n     RefDeallocatePtr m_refDeallocate;\n@@ -104,31 +104,31 @@ private:\n     ProcessResultPtr m_processResult;\n     CreateConnectionPtr m_createConnection;\n     RefSockFDPtr m_refSockFD;\n-    QLibrary nativeLib;\n+    QLibrary dnsSdLib;\n public:\n     enum {\n         // Note: the select() implementation on Windows (Winsock2) fails with any timeout much larger than this\n         LONG_TIME = 100000000\n     };\n \n-    NativeZConfLib(QString libName = QLatin1String(\""dns_sd\""), ZConfLib *fallBack = 0) : ZConfLib(fallBack), nativeLib(libName)\n+    DnsSdZConfLib(QString libName = QLatin1String(\""dns_sd\""), ZConfLib::Ptr fallBack = ZConfLib::Ptr(0)) : ZConfLib(fallBack), dnsSdLib(libName)\n     {\n #ifndef ZCONF_MDNS_STATIC_LINKING\n         // dynamic linking\n-        if (!nativeLib.load()) {\n+        if (!dnsSdLib.load()) {\n             m_isOk = false;\n-            m_errorMsg=tr(\""NativeZConfLib could not load native library\"");\n+            m_errorMsg=tr(\""DnsSdZConfLib could not load native library\"");\n         }\n-        m_refDeallocate = reinterpret_cast<RefDeallocatePtr>(nativeLib.resolve(\""DNSServiceRefDeallocate\""));\n-        m_resolve = reinterpret_cast<ResolvePtr>(nativeLib.resolve(\""DNSServiceResolve\""));\n-        m_queryRecord = reinterpret_cast<QueryRecordPtr>(nativeLib.resolve(\""DNSServiceQueryRecord\""));\n-        m_getAddrInfo = reinterpret_cast<GetAddrInfoPtr>(nativeLib.resolve(\""DNSServiceGetAddrInfo\""));\n-        m_reconfirmRecord = reinterpret_cast<ReconfirmRecordPtr>(nativeLib.resolve(\""DNSServiceReconfirmRecord\""));\n-        m_browse = reinterpret_cast<BrowsePtr>(nativeLib.resolve(\""DNSServiceBrowse\""));\n-        m_getProperty = reinterpret_cast<GetPropertyPtr>(nativeLib.resolve(\""DNSServiceGetProperty\""));\n-        m_processResult = reinterpret_cast<ProcessResultPtr>(nativeLib.resolve(\""DNSServiceProcessResult\"")) ;\n-        m_createConnection = reinterpret_cast<CreateConnectionPtr>(nativeLib.resolve(\""DNSServiceCreateConnection\""));\n-        m_refSockFD = reinterpret_cast<RefSockFDPtr>(nativeLib.resolve(\""DNSServiceRefSockFD\""));\n+        m_refDeallocate = reinterpret_cast<RefDeallocatePtr>(dnsSdLib.resolve(\""DNSServiceRefDeallocate\""));\n+        m_resolve = reinterpret_cast<ResolvePtr>(dnsSdLib.resolve(\""DNSServiceResolve\""));\n+        m_queryRecord = reinterpret_cast<QueryRecordPtr>(dnsSdLib.resolve(\""DNSServiceQueryRecord\""));\n+        m_getAddrInfo = reinterpret_cast<GetAddrInfoPtr>(dnsSdLib.resolve(\""DNSServiceGetAddrInfo\""));\n+        m_reconfirmRecord = reinterpret_cast<ReconfirmRecordPtr>(dnsSdLib.resolve(\""DNSServiceReconfirmRecord\""));\n+        m_browse = reinterpret_cast<BrowsePtr>(dnsSdLib.resolve(\""DNSServiceBrowse\""));\n+        m_getProperty = reinterpret_cast<GetPropertyPtr>(dnsSdLib.resolve(\""DNSServiceGetProperty\""));\n+        m_processResult = reinterpret_cast<ProcessResultPtr>(dnsSdLib.resolve(\""DNSServiceProcessResult\"")) ;\n+        m_createConnection = reinterpret_cast<CreateConnectionPtr>(dnsSdLib.resolve(\""DNSServiceCreateConnection\""));\n+        m_refSockFD = reinterpret_cast<RefSockFDPtr>(dnsSdLib.resolve(\""DNSServiceRefSockFD\""));\n #else\n         // static linking\n         m_refDeallocate = reinterpret_cast<RefDeallocatePtr>(&DNSServiceRefDeallocate);\n@@ -143,24 +143,24 @@ public:\n         m_refSockFD = reinterpret_cast<RefSockFDPtr>(&DNSServiceRefSockFD);\n #endif\n         if (DEBUG_ZEROCONF){\n-            if (m_refDeallocate == 0) qDebug() << QLatin1String(\""NativeZConfLib.m_refDeallocate == 0\"");\n-            if (m_resolve == 0) qDebug() << QLatin1String(\""NativeZConfLib.m_resolve == 0\"");\n-            if (m_queryRecord == 0) qDebug() << QLatin1String(\""NativeZConfLib.m_queryRecord == 0\"");\n-            if (m_getAddrInfo == 0) qDebug() << QLatin1String(\""NativeZConfLib.m_getAddrInfo == 0\"");\n-            if (m_reconfirmRecord == 0) qDebug() << QLatin1String(\""NativeZConfLib.m_reconfirmRecord == 0\"");\n-            if (m_browse == 0) qDebug() << QLatin1String(\""NativeZConfLib.m_browse == 0\"");\n-            if (m_getProperty == 0) qDebug() << QLatin1String(\""NativeZConfLib.m_getProperty == 0\"");\n-            if (m_processResult == 0) qDebug() << QLatin1String(\""NativeZConfLib.m_processResult == 0\"");\n-            if (m_createConnection == 0) qDebug() << QLatin1String(\""NativeZConfLib.m_createConnection == 0\"");\n-            if (m_refSockFD == 0) qDebug() << QLatin1String(\""NativeZConfLib.m_refSockFD == 0\"");\n+            if (m_refDeallocate == 0) qDebug() << QLatin1String(\""DnsSdZConfLib.m_refDeallocate == 0\"");\n+            if (m_resolve == 0) qDebug() << QLatin1String(\""DnsSdZConfLib.m_resolve == 0\"");\n+            if (m_queryRecord == 0) qDebug() << QLatin1String(\""DnsSdZConfLib.m_queryRecord == 0\"");\n+            if (m_getAddrInfo == 0) qDebug() << QLatin1String(\""DnsSdZConfLib.m_getAddrInfo == 0\"");\n+            if (m_reconfirmRecord == 0) qDebug() << QLatin1String(\""DnsSdZConfLib.m_reconfirmRecord == 0\"");\n+            if (m_browse == 0) qDebug() << QLatin1String(\""DnsSdZConfLib.m_browse == 0\"");\n+            if (m_getProperty == 0) qDebug() << QLatin1String(\""DnsSdZConfLib.m_getProperty == 0\"");\n+            if (m_processResult == 0) qDebug() << QLatin1String(\""DnsSdZConfLib.m_processResult == 0\"");\n+            if (m_createConnection == 0) qDebug() << QLatin1String(\""DnsSdZConfLib.m_createConnection == 0\"");\n+            if (m_refSockFD == 0) qDebug() << QLatin1String(\""DnsSdZConfLib.m_refSockFD == 0\"");\n         }\n     }\n \n-    ~NativeZConfLib() {\n+    ~DnsSdZConfLib() {\n     }\n \n     QString name(){\n-        return QString::fromUtf8(\""NativeZeroConfLib@%1\"").arg(size_t(this),0,16);\n+        return QString::fromUtf8(\""DnsSdZeroConfLib@%1\"").arg(size_t(this),0,16);\n     }\n \n     // bool tryStartDaemon();\n@@ -344,19 +344,19 @@ public:\n     }\n };\n \n-ZConfLib *ZConfLib::createNativeLib(const QString &libName, ZConfLib *fallback) {\n-    return new NativeZConfLib(libName, fallback);\n+ZConfLib::Ptr ZConfLib::createDnsSdLib(const QString &libName, ZConfLib::Ptr fallback) {\n+    return ZConfLib::Ptr(new DnsSdZConfLib(libName, fallback));\n     return fallback;\n }\n } // namespace Internal\n } // namespace ZeroConf\n \n-#else // no native lib\n+#else // NO_DNS_SD_LIB\n \n namespace ZeroConf {\n namespace Internal {\n \n-ZConfLib *ZConfLib::createNativeLib(const QString &/*extraPaths*/, ZConfLib * fallback) {\n+ZConfLib::Ptr ZConfLib::createDnsSdLib(const QString &/*extraPaths*/, ZConfLib::Ptr fallback) {\n     return fallback;\n }\n \n"", ""embeddedLib.cpp"": ""@@ -60,7 +60,7 @@ class EmbeddedZConfLib : public ZConfLib\n public:\n     QString daemonPath;\n \n-    EmbeddedZConfLib(const QString &daemonPath, ZConfLib *fallBack = 0) : ZConfLib(fallBack), daemonPath(daemonPath)\n+    EmbeddedZConfLib(const QString &daemonPath, ZConfLib::Ptr fallBack) : ZConfLib(fallBack), daemonPath(daemonPath)\n     {\n         if (!daemonPath.isEmpty() && daemonPath.at(0) != '/' && daemonPath.at(0) != '.')\n             this->daemonPath = QCoreApplication::applicationDirPath() + QChar('/') + daemonPath;\n@@ -204,9 +204,9 @@ public:\n     }\n };\n \n-ZConfLib *ZConfLib::createEmbeddedLib(const QString &daemonPath, ZConfLib *fallback)\n+ZConfLib::Ptr ZConfLib::createEmbeddedLib(const QString &daemonPath, ZConfLib::Ptr fallback)\n {\n-    return new EmbeddedZConfLib(daemonPath, fallback);\n+    return ZConfLib::Ptr(new EmbeddedZConfLib(daemonPath, fallback));\n }\n } // namespace Internal\n } // namespace ZeroConf\n@@ -216,7 +216,7 @@ ZConfLib *ZConfLib::createEmbeddedLib(const QString &daemonPath, ZConfLib *fallb\n namespace ZeroConf {\n namespace Internal {\n \n-ZConfLib *ZConfLib::createEmbeddedLib(const QString &, ZConfLib * fallback)\n+ZConfLib::Ptr ZConfLib::createEmbeddedLib(const QString &, ZConfLib::Ptr fallback)\n {\n     return fallback;\n }\n"", ""servicebrowser.cpp"": ""@@ -114,40 +114,46 @@ class ZeroConfLib\n {\n public:\n     ZeroConfLib();\n-    ZConfLib *defaultLib();\n-    void setDefaultLib(LibUsage usage, const QString &libName, const QString &daemonPath);\n+    ZConfLib::Ptr defaultLib();\n+    void setDefaultLib(LibUsage usage, const QString &avahiLibName, const QString &dnsSdLibName, const QString &dnsSdDaemonPath);\n \n private:\n     QMutex m_lock;\n-    ZConfLib *m_defaultLib;\n+    ZConfLib::Ptr m_defaultLib;\n };\n \n Q_GLOBAL_STATIC(ZeroConfLib, zeroConfLibInstance)\n \n ZeroConfLib::ZeroConfLib(): m_lock(QMutex::Recursive),\n     m_defaultLib(ZConfLib::createAvahiLib(QLatin1String(\""avahi-client\""),\n-                 ZConfLib::createNativeLib(QLatin1String(\""dns_sd\""),\n-                 ZConfLib::createEmbeddedLib(QString(\""mdnssd\""), 0))))\n+                 ZConfLib::createDnsSdLib(QLatin1String(\""dns_sd\""),\n+                 ZConfLib::createEmbeddedLib(QString(\""mdnssd\"")))))\n {\n     qRegisterMetaType<Service::ConstPtr>(\""ZeroConf::Service::ConstPtr\"");\n }\n \n-ZConfLib *ZeroConfLib::defaultLib(){\n+ZConfLib::Ptr ZeroConfLib::defaultLib(){\n     QMutexLocker l(&m_lock);\n     return m_defaultLib;\n }\n \n-void ZeroConfLib::setDefaultLib(LibUsage usage, const QString &libName, const QString &daemonPath){ // leaks... should be ok, switch to shared pointers???\n+void ZeroConfLib::setDefaultLib(LibUsage usage, const QString &avahiLibName, const QString &dnsSdLibName, const QString &dnsSdDaemonPath){\n     QMutexLocker l(&m_lock);\n     switch (usage){\n-    case (UseNativeOnly):\n-        m_defaultLib = ZConfLib::createNativeLib(libName, 0);\n+    case (UseDnsSdOnly):\n+        m_defaultLib = ZConfLib::createDnsSdLib(dnsSdLibName);\n         break;\n     case (UseEmbeddedOnly):\n-        m_defaultLib = ZConfLib::createEmbeddedLib(daemonPath, 0);\n+        m_defaultLib = ZConfLib::createEmbeddedLib(dnsSdDaemonPath);\n         break;\n-    case (UseNativeOrEmbedded):\n-        m_defaultLib = ZConfLib::createNativeLib(libName, ZConfLib::createEmbeddedLib(daemonPath, 0));\n+    case (UseAvahiOnly):\n+        m_defaultLib = ZConfLib::createAvahiLib(avahiLibName);\n+        break;\n+    case (UseAvahiOrDnsSd):\n+        m_defaultLib = ZConfLib::createAvahiLib(avahiLibName, ZConfLib::createDnsSdLib(dnsSdLibName));\n+        break;\n+    case (UseAvahiOrDnsSdOrEmbedded):\n+        m_defaultLib = ZConfLib::createAvahiLib(avahiLibName,ZConfLib::createDnsSdLib(dnsSdLibName, ZConfLib::createEmbeddedLib(dnsSdDaemonPath)));\n         break;\n     default:\n         qDebug() << \""invalid usage \"" << usage;\n@@ -411,7 +417,7 @@ void ServiceBrowser::reconfirmService(Service::ConstPtr service)\n \n // ----------------- library initialization impl -----------------\n /*!\n-  Intializes the library used for the mdns queries.\n+  Sets the library used by future Service Browsers to preform the mdns queries.\n   This changes the default library used by the next MainConnection, it does not change the already instantiated\n   connections.\n   \\a usage can decide which libraries are tried,\n@@ -421,9 +427,9 @@ void ServiceBrowser::reconfirmService(Service::ConstPtr service)\n \n   \\threadsafe\n */\n-void initLib(LibUsage usage, const QString &libName, const QString &daemonPath)\n+void setDefaultZConfLib(LibUsage usage, const QString &avahiLibName, const QString &dnsSdLibName, const QString &dnsSdDaemonPath)\n {\n-    zeroConfLibInstance()->setDefaultLib(usage, libName, daemonPath);\n+    zeroConfLibInstance()->setDefaultLib(usage, avahiLibName, dnsSdLibName, dnsSdDaemonPath);\n }\n \n namespace Internal {\n@@ -536,7 +542,7 @@ ConnectionThread::ConnectionThread(MainConnection &mc, QObject *parent):\n \n // ----------------- ServiceGatherer impl -----------------\n \n-ZConfLib *ServiceGatherer::lib()\n+ZConfLib::Ptr ServiceGatherer::lib()\n {\n     return serviceBrowser->mainConnection->lib;\n }\n@@ -971,7 +977,8 @@ ServiceBrowserPrivate::ServiceBrowserPrivate(const QString &serviceType, const Q\n \n ServiceBrowserPrivate::~ServiceBrowserPrivate()\n {\n-    qDebug() << \""destroying ServiceBrowserPrivate \"" << serviceType;\n+    if (DEBUG_ZEROCONF)\n+        qDebug() << \""destroying ServiceBrowserPrivate \"" << serviceType;\n     if (browsing){\n         stopBrowsing();\n     }\n@@ -1172,7 +1179,7 @@ void MainConnection::stop(bool wait)\n MainConnection::MainConnection():\n     lib(zeroConfLibInstance()->defaultLib()), m_lock(QMutex::Recursive), m_mainRef(0), m_failed(false), m_status(Starting), m_nErrs(0)\n {\n-    if (lib == 0){\n+    if (lib.isNull()){\n         qDebug() << \""could not load a valid library for ZeroConf::MainConnection, failing\"";\n     } else {\n         m_thread = new ConnectionThread(*this);\n@@ -1465,7 +1472,7 @@ QString ZConfLib::name(){\n     return QString::fromUtf8(\""ZeroConfLib@%1\"").arg(size_t(this),0,16);\n }\n \n-ZConfLib::ZConfLib(ZConfLib * f) : fallbackLib(f), m_isOk(true)\n+ZConfLib::ZConfLib(ZConfLib::Ptr f) : fallbackLib(f), m_isOk(true)\n { }\n \n ZConfLib::~ZConfLib()\n"", ""servicebrowser.h"": ""@@ -135,12 +135,14 @@ private:\n };\n \n enum LibUsage {\n-    UseNativeOnly = 1,\n+    UseDnsSdOnly = 1,\n     UseEmbeddedOnly,\n-    UseNativeOrEmbedded\n+    UseAvahiOnly,\n+    UseAvahiOrDnsSd,\n+    UseAvahiOrDnsSdOrEmbedded\n };\n \n-void initLib(LibUsage usage, const QString &libName, const QString & daemonPaths);\n+void setDefaultZConfLib(LibUsage usage, const QString &avahiLibName, const QString &dnsSdLibName, const QString & dnsSdDaemonPath);\n \n }\n \n"", ""servicebrowser_p.h"": ""@@ -58,6 +58,7 @@ class ServiceBrowserPrivate;\n class ZConfLib {\n     Q_DECLARE_TR_FUNCTIONS(ZeroConf)\n public:\n+    typedef QSharedPointer<ZConfLib> Ptr;\n     typedef void *ConnectionRef;\n     typedef void *BrowserRef;\n     enum ProcessStatus {\n@@ -66,9 +67,9 @@ public:\n         ProcessedError,\n         ProcessedFailure\n     };\n-    ZConfLib *fallbackLib;\n+    Ptr fallbackLib;\n \n-    ZConfLib(ZConfLib *fallBack);\n+    ZConfLib(Ptr fallBack);\n     virtual ~ZConfLib();\n \n     virtual QString name();\n@@ -100,10 +101,9 @@ public:\n     QString errorMsg();\n     void setError(bool failure, const QString &eMsg);\n \n-    static ZConfLib *createEmbeddedLib(const QString &daemonPath, ZConfLib *fallback=0);\n-    static ZConfLib *createNativeLib(const QString &libName, ZConfLib *fallback=0);\n-    static ZConfLib *createAvahiLib(const QString &libName, ZConfLib *fallback=0);\n-    static ZConfLib *defaultLib();\n+    static Ptr createEmbeddedLib(const QString &daemonPath, Ptr fallback=Ptr(0));\n+    static Ptr createDnsSdLib(const QString &libName, Ptr fallback=Ptr(0));\n+    static Ptr createAvahiLib(const QString &libName, Ptr fallback=Ptr(0));\n protected:\n     bool m_isOk;\n     QString m_errorMsg;\n@@ -166,7 +166,7 @@ public:\n     void reload(qint32 interfaceIndex=0);\n     void remove();\n     void reconfirm();\n-    ZConfLib *lib();\n+    ZConfLib::Ptr lib();\n private:\n     ServiceGatherer(const QString &newService, const QString &newType, const QString &newDomain,\n                     const QString &fullName, uint32_t interfaceIndex, ServiceBrowserPrivate *serviceBrowser);\n@@ -201,7 +201,7 @@ public:\n         Stopping,\n         Stopped\n     };\n-    ZConfLib *lib;\n+    ZConfLib::Ptr lib;\n \n     MainConnection();\n     ~MainConnection();\n"", ""zeroconf.pro"": ""@@ -8,9 +8,9 @@ DEFINES += ZEROCONF_LIBRARY\n \n SOURCES += servicebrowser.cpp \\\n     embeddedLib.cpp \\\n-    nativeLib.cpp \\\n     mdnsderived.cpp \\\n-    avahiLib.cpp\n+    avahiLib.cpp \\\n+    dnsSdLib.cpp\n \n HEADERS += servicebrowser.h \\\n         zeroconf_global.h \\\n@@ -27,3 +27,5 @@ win32{\n \n \n \n+\n+\n""}",refactor; resource,"refactor
",bug;resource;
10512.0,10512.0,resource,Alan Alpert (Inactive),Decrease debug output of modelview examples.,"Decrease debug output of modelview examples.

Change-Id: Idc7fd22f05eee7943c3b824a460897f13dc0408b","['examples/declarative/modelviews/parallax/content/pics/home-page.png', 'examples/declarative/modelviews/visualitemmodel/visualitemmodel.qml', 'examples/declarative/modelviews/parallax/parallax.qml']","{""home-page.png"": ""Binary files /dev/null and b/examples/declarative/modelviews/parallax/content/pics/home-page.png differ\n"", ""parallax.qml"": ""@@ -57,7 +57,7 @@ Rectangle {\n         }\n \n         Item {\n-            property url icon: \""content/pics/home-page.svg\""\n+            property url icon: \""content/pics/home-page.png\""\n             width: 320; height: 480\n             Smiley { }\n         }\n@@ -71,7 +71,6 @@ Rectangle {\n                 width: 300; height: 400\n                 clip: true; \n                 source: \""../../samegame/samegame.qml\""\n-                Component.onCompleted: item.inAnotherDemo = true;\n             }\n         }\n     }\n"", ""visualitemmodel.qml"": ""@@ -47,6 +47,7 @@ Rectangle {\n     color: \""lightgray\""\n     width: 240\n     height: 320\n+    property bool printDestruction: false\n \n     VisualItemModel {\n         id: itemModel\n@@ -56,21 +57,21 @@ Rectangle {\n             color: \""#FFFEF0\""\n             Text { text: \""Page 1\""; font.bold: true; anchors.centerIn: parent }\n \n-            Component.onDestruction: print(\""destroyed 1\"")\n+            Component.onDestruction: if (printDestruction) print(\""destroyed 1\"")\n         }\n         Rectangle {\n             width: view.width; height: view.height\n             color: \""#F0FFF7\""\n             Text { text: \""Page 2\""; font.bold: true; anchors.centerIn: parent }\n \n-            Component.onDestruction: print(\""destroyed 2\"")\n+            Component.onDestruction: if (printDestruction) print(\""destroyed 2\"")\n         }\n         Rectangle {\n             width: view.width; height: view.height\n             color: \""#F4F0FF\""\n             Text { text: \""Page 3\""; font.bold: true; anchors.centerIn: parent }\n \n-            Component.onDestruction: print(\""destroyed 3\"")\n+            Component.onDestruction: if (printDestruction) print(\""destroyed 3\"")\n         }\n     }\n \n""}",resource,"resource 
",bug;resource;
606.0,606.0,test,hjk,debugger: update manual tests,"debugger: update manual tests

Task-number: QTCREATORBUG-5184, QTCREATORBUG-5106
Change-Id: Icc43f534755f897eeea5333186b84fec91dbb8c0","['share/qtcreator/gdbmacros/gdbmacros.py', 'tests/manual/gdbdebugger/simple/simple_gdbtest_app.cpp']","{""gdbmacros.py"": ""@@ -2500,9 +2500,9 @@ if False:\n \n \n \n-if True:\n-    def qdump__A5106(d, item):\n+if False:\n+    def qdump__bug5106__A5106(d, item):\n         d.putName(\""a\"")\n-        d.putValue(item.value[\""m_a\""])\n+        d.putValue(\""This is the value: %s\"" % item.value[\""m_a\""])\n         d.putType(\"" \"")\n         d.putNumChild(0)\n"", ""simple_gdbtest_app.cpp"": ""@@ -139,7 +139,7 @@ namespace multibp {\n     public:\n         explicit Vector(int size)\n             : m_size(size), m_data(new T[size])\n-        {} // put breakpoint here\n+        {} // <=== break here\n         ~Vector() { delete [] m_data; }\n         int size() const { return m_size; }\n     private:\n@@ -2678,13 +2678,15 @@ namespace bug4019 {\n } // namespave bug4019\n \n \n-namespace bug4497 { // http://bugreports.qt.nokia.com/browse/QTCREATORBUG-4497\n+namespace bug4497 {\n+\n+    // http://bugreports.qt.nokia.com/browse/QTCREATORBUG-4497\n \n     void test4497()\n     {\n         using namespace std;\n         //cin.get(); // if commented out, the debugger doesn't stop at the breakpoint in the next line.\n-        cout << \""Hello, world!\"" << endl; // breakpoint\n+        cout << \""Hello, world!\"" << endl; // <=== break here\n \n         int sum = 0;\n         for (int i = 1; i <= 10; i++)\n@@ -2701,7 +2703,7 @@ namespace bug4497 { // http://bugreports.qt.nokia.com/browse/QTCREATORBUG-4497\n \n namespace bug5106 {\n \n-    // http://bugreports.qt.nokia.com/browse/QTCREATORBUG-4497\n+    // http://bugreports.qt.nokia.com/browse/QTCREATORBUG-5106\n \n     class A5106\n     {\n@@ -2719,7 +2721,7 @@ namespace bug5106 {\n     public:\n             B5106(int c, int a, int b) : A5106(a, b), m_c(c) {}\n \n-            virtual int test() { return 4; }\n+            virtual int test() { return 4; } // <=== break here\n \n     private:\n             int m_c;\n@@ -2729,7 +2731,7 @@ namespace bug5106 {\n     {\n         B5106 b(1,2,3);\n         b.test();\n-        b.test();\n+        b.A5106::test();\n     }\n \n } // namespace bug5106\n@@ -2739,14 +2741,23 @@ namespace bug5184 {\n \n     // http://bugreports.qt.nokia.com/browse/QTCREATORBUG-5184\n \n-    int test5184()\n+    // Note: The report there shows type field \""QUrl &\"" instead of QUrl.\n+    // It's unclear how this can happen. It should never have been like\n+    // that with a stock 7.2 and any version of Creator.\n+\n+    int helper(const QUrl &url)\n     {\n-        QUrl url(QString(\""http://127.0.0.1/\""));\n         QNetworkRequest request(url);\n         QList<QByteArray> raw = request.rawHeaderList();\n         return raw.size();  // <=== break here\n     }\n \n+    void test5184()\n+    {\n+        QUrl url(QString(\""http://127.0.0.1/\""));\n+        helper(url);\n+    }\n+\n } // namespace bug5184\n \n \n@@ -2777,7 +2788,7 @@ namespace qc42170 {\n \n     int helper(Object *obj)\n     {\n-        return 0; // <== break point here\n+        return 0; // <== break here\n     }\n \n     void test42170()\n""}",test,"test 
",bug;test;
24282.0,24282.0,feature; test,Kent Hansen,Add QMetaMethod-based QObject::connect/disconnectNotify() API,"Add QMetaMethod-based QObject::connect/disconnectNotify() API

This API will replace the const char *-based connectNotify() and
disconnectNotify() in Qt5.

The new implementation fixes the long-standing issue of
connectNotify() not being called when using the (internal)
index-based QMetaObject::connect() (e.g., from QML).

As with the old API, there are still two ""unintuitive"" behaviors
concerning disconnectNotify():
- disconnectNotify() is not called when the signal is disconnected
  using the QObject::disconnect(QMetaObject::Connection) overload.
- disconnectNotify() is not called when a receiver is destroyed
  (i.e., when a connection is implicitly removed).

The old versions of connectNotify() and disconnectNotify() are kept
for now; they will only be removed once known existing
reimplementations (e.g., QtNetwork, QtDBus) have been ported to the
new API.

Change-Id: I8b4f007f3c6d89199c1ba04a3e23c8ca314e0896","['src/corelib/kernel/qobject.cpp', 'src/corelib/kernel/qobject.h', 'src/corelib/kernel/qobject_p.h', 'tests/auto/corelib/kernel/qobject/tst_qobject.cpp', 'src/corelib/doc/snippets/code/src_corelib_kernel_qobject.cpp', 'src/corelib/kernel/qmetaobject_p.h', 'src/corelib/kernel/qmetaobject.cpp']","{""src_corelib_kernel_qobject.cpp"": ""@@ -339,8 +339,8 @@ myObject->disconnect(myReceiver);\n \n \n //! [32]\n-if (QLatin1String(signal) == SIGNAL(valueChanged(int))) {\n-    // signal is valueChanged(int)\n+if (signal == QMetaMethod::fromSignal(&MyObject::valueChanged)) {\n+    // signal is valueChanged\n }\n //! [32]\n \n"", ""qmetaobject.cpp"": ""@@ -812,6 +812,35 @@ int QMetaObjectPrivate::indexOfConstructor(const QMetaObject *m, const QByteArra\n     return -1;\n }\n \n+/*! \\internal\n+    Returns the signal for the given \\a metaObject at \\a index.\n+\n+    It it different from QMetaObject::method(); the index should not include\n+    non-signal methods.\n+\n+    The index must correspond to a signal defined in \\ a metaObject itself;\n+    it should not be an inherited signal.\n+*/\n+QMetaMethod QMetaObjectPrivate::signal(const QMetaObject *metaObject, int index)\n+{\n+    QMetaMethod result;\n+    if (index < 0)\n+        return result;\n+    Q_ASSERT(metaObject != 0);\n+\n+    int signalOffset = 0;\n+    for (const QMetaObject *m = metaObject->d.superdata; m; m = m->d.superdata)\n+        signalOffset += priv(m->d.data)->signalCount;\n+\n+    Q_ASSERT(index >= signalOffset);\n+    int localIndex = index - signalOffset;\n+    if (localIndex < priv(metaObject->d.data)->signalCount) {\n+        result.mobj = metaObject;\n+        result.handle = priv(metaObject->d.data)->methodData + 5*localIndex;\n+    }\n+    return result;\n+}\n+\n /*!\n     \\internal\n \n"", ""qmetaobject_p.h"": ""@@ -198,6 +198,7 @@ struct QMetaObjectPrivate\n                              int argc, const QArgumentType *types);\n     static int indexOfConstructor(const QMetaObject *m, const QByteArray &name,\n                                   int argc, const QArgumentType *types);\n+    static QMetaMethod signal(const QMetaObject *m, int signal_index);\n     static bool checkConnectArgs(int signalArgc, const QArgumentType *signalTypes,\n                                  int methodArgc, const QArgumentType *methodTypes);\n     static bool checkConnectArgs(const QMetaMethodPrivate *signal,\n@@ -211,10 +212,12 @@ struct QMetaObjectPrivate\n     static void memberIndexes(const QObject *obj, const QMetaMethod &member,\n                               int *signalIndex, int *methodIndex);\n     static QObjectPrivate::Connection *connect(const QObject *sender, int signal_index,\n+                        const QMetaObject *smeta,\n                         const QObject *receiver, int method_index_relative,\n                         const QMetaObject *rmeta = 0,\n                         int type = 0, int *types = 0);\n     static bool disconnect(const QObject *sender, int signal_index,\n+                           const QMetaObject *smeta,\n                            const QObject *receiver, int method_index, void **slot,\n                            DisconnectType = DisconnectAll);\n     static inline bool disconnectHelper(QObjectPrivate::Connection *c,\n"", ""qobject.cpp"": ""@@ -2384,8 +2384,6 @@ QMetaObject::Connection QObject::connect(const QObject *sender, const char *sign\n     signal_index = QMetaObjectPrivate::originalClone(smeta, signal_index);\n     int signalOffset, methodOffset;\n     computeOffsets(smeta, &signalOffset, &methodOffset);\n-    int signal_absolute_index = signal_index + methodOffset;\n-    Q_UNUSED(signal_absolute_index) //only used in debug mode\n     signal_index += signalOffset;\n \n     QByteArray tmp_method_name;\n@@ -2454,12 +2452,12 @@ QMetaObject::Connection QObject::connect(const QObject *sender, const char *sign\n     }\n \n #ifndef QT_NO_DEBUG\n-    QMetaMethod smethod = smeta->method(signal_absolute_index);\n+    QMetaMethod smethod = QMetaObjectPrivate::signal(smeta, signal_index);\n     QMetaMethod rmethod = rmeta->method(method_index_relative + rmeta->methodOffset());\n     check_and_warn_compat(smeta, smethod, rmeta, rmethod);\n #endif\n     QMetaObject::Connection handle = QMetaObject::Connection(QMetaObjectPrivate::connect(\n-        sender, signal_index, receiver, method_index_relative, rmeta ,type, types));\n+        sender, signal_index, smeta, receiver, method_index_relative, rmeta ,type, types));\n     if (handle)\n         const_cast<QObject*>(sender)->connectNotify(signal - 1);\n     return handle;\n@@ -2547,7 +2545,7 @@ QMetaObject::Connection QObject::connect(const QObject *sender, const QMetaMetho\n     check_and_warn_compat(smeta, signal, rmeta, method);\n #endif\n     QMetaObject::Connection handle = QMetaObject::Connection(QMetaObjectPrivate::connect(\n-        sender, signal_index, receiver, method_index, 0, type, types));\n+        sender, signal_index, signal.enclosingMetaObject(), receiver, method_index, 0, type, types));\n     if (handle)\n         const_cast<QObject*>(sender)->connectNotify(signalSignature.constData());\n     return handle;\n@@ -2706,7 +2704,7 @@ bool QObject::disconnect(const QObject *sender, const char *signal,\n         }\n \n         if (!method) {\n-            res |= QMetaObjectPrivate::disconnect(sender, signal_index, receiver, -1, 0);\n+            res |= QMetaObjectPrivate::disconnect(sender, signal_index, smeta, receiver, -1, 0);\n         } else {\n             const QMetaObject *rmeta = receiver->metaObject();\n             do {\n@@ -2717,7 +2715,7 @@ bool QObject::disconnect(const QObject *sender, const char *signal,\n                             rmeta = rmeta->superClass();\n                 if (method_index < 0)\n                     break;\n-                res |= QMetaObjectPrivate::disconnect(sender, signal_index, receiver, method_index, 0);\n+                res |= QMetaObjectPrivate::disconnect(sender, signal_index, smeta, receiver, method_index, 0);\n                 method_found = true;\n             } while ((rmeta = rmeta->superClass()));\n         }\n@@ -2730,8 +2728,11 @@ bool QObject::disconnect(const QObject *sender, const char *signal,\n         err_method_notfound(receiver, method_arg, \""disconnect\"");\n         err_info_about_objects(\""disconnect\"", sender, receiver);\n     }\n-    if (res)\n+    if (res) {\n+        if (!signal)\n+            const_cast<QObject*>(sender)->disconnectNotify(QMetaMethod());\n         const_cast<QObject*>(sender)->disconnectNotify(signal ? (signal - 1) : 0);\n+    }\n     return res;\n }\n \n@@ -2816,9 +2817,11 @@ bool QObject::disconnect(const QObject *sender, const QMetaMethod &signal,\n         return false;\n     }\n \n-    if (!QMetaObjectPrivate::disconnect(sender, signal_index, receiver, method_index, 0))\n+    if (!QMetaObjectPrivate::disconnect(sender, signal_index, signal.mobj, receiver, method_index, 0))\n         return false;\n \n+    if (!signal.isValid())\n+        const_cast<QObject*>(sender)->disconnectNotify(signal);\n     const_cast<QObject*>(sender)->disconnectNotify(method.mobj ? signalSignature.constData() : 0);\n     return true;\n }\n@@ -2849,19 +2852,31 @@ bool QObject::disconnect(const QObject *sender, const QMetaMethod &signal,\n \n /*!\n     \\fn void QObject::connectNotify(const char *signal)\n+    \\obsolete\n+*/\n+void QObject::connectNotify(const char *)\n+{\n+}\n+\n+/*!\n+    \\fn void QObject::disconnectNotify(const char *signal)\n+    \\obsolete\n+*/\n+void QObject::disconnectNotify(const char *)\n+{\n+}\n+\n+/*!\n+    \\since 5.0\n \n     This virtual function is called when something has been connected\n     to \\a signal in this object.\n \n-    If you want to compare \\a signal with a specific signal, use\n-    QLatin1String and the \\c SIGNAL() macro as follows:\n+    If you want to compare \\a signal with a specific signal, you can\n+    use QMetaMethod::fromSignal() as follows:\n \n     \\snippet code/src_corelib_kernel_qobject.cpp 32\n \n-    If the signal contains multiple parameters or parameters that\n-    contain spaces, call QMetaObject::normalizedSignature() on\n-    the result of the \\c SIGNAL() macro.\n-\n     \\warning This function violates the object-oriented principle of\n     modularity. However, it might be useful when you need to perform\n     expensive initialization only if something is connected to a\n@@ -2870,12 +2885,13 @@ bool QObject::disconnect(const QObject *sender, const QMetaMethod &signal,\n     \\sa connect(), disconnectNotify()\n */\n \n-void QObject::connectNotify(const char *)\n+void QObject::connectNotify(const QMetaMethod &signal)\n {\n+    Q_UNUSED(signal);\n }\n \n /*!\n-    \\fn void QObject::disconnectNotify(const char *signal)\n+    \\since 5.0\n \n     This virtual function is called when something has been\n     disconnected from \\a signal in this object.\n@@ -2883,6 +2899,11 @@ void QObject::connectNotify(const char *)\n     See connectNotify() for an example of how to compare\n     \\a signal with a specific signal.\n \n+    If all signals were disconnected from this object (e.g., the\n+    signal argument to disconnect() was 0), disconnectNotify()\n+    is only called once, and the \\a signal will be an invalid\n+    QMetaMethod (QMetaMethod::isValid() returns false).\n+\n     \\warning This function violates the object-oriented principle of\n     modularity. However, it might be useful for optimizing access to\n     expensive resources.\n@@ -2890,17 +2911,19 @@ void QObject::connectNotify(const char *)\n     \\sa disconnect(), connectNotify()\n */\n \n-void QObject::disconnectNotify(const char *)\n+void QObject::disconnectNotify(const QMetaMethod &signal)\n {\n+    Q_UNUSED(signal);\n }\n \n /* \\internal\n     convert a signal index from the method range to the signal range\n  */\n-static int methodIndexToSignalIndex(const QMetaObject *metaObject, int signal_index)\n+static int methodIndexToSignalIndex(const QMetaObject **base, int signal_index)\n {\n     if (signal_index < 0)\n         return signal_index;\n+    const QMetaObject *metaObject = *base;\n     while (metaObject && metaObject->methodOffset() > signal_index)\n         metaObject = metaObject->superClass();\n \n@@ -2911,6 +2934,7 @@ static int methodIndexToSignalIndex(const QMetaObject *metaObject, int signal_in\n             signal_index = QMetaObjectPrivate::originalClone(metaObject, signal_index - methodOffset) + signalOffset;\n         else\n             signal_index = signal_index - methodOffset + signalOffset;\n+        *base = metaObject;\n     }\n     return signal_index;\n }\n@@ -2925,8 +2949,9 @@ static int methodIndexToSignalIndex(const QMetaObject *metaObject, int signal_in\n QMetaObject::Connection QMetaObject::connect(const QObject *sender, int signal_index,\n                                           const QObject *receiver, int method_index, int type, int *types)\n {\n-    signal_index = methodIndexToSignalIndex(sender->metaObject(), signal_index);\n-    return Connection(QMetaObjectPrivate::connect(sender, signal_index,\n+    const QMetaObject *smeta = sender->metaObject();\n+    signal_index = methodIndexToSignalIndex(&smeta, signal_index);\n+    return Connection(QMetaObjectPrivate::connect(sender, signal_index, smeta,\n                                        receiver, method_index,\n                                        0, //FIXME, we could speed this connection up by computing the relative index\n                                        type, types));\n@@ -2939,7 +2964,8 @@ QMetaObject::Connection QMetaObject::connect(const QObject *sender, int signal_i\n \n     the QObjectPrivate::Connection* has a refcount of 2, so it must be passed to a QMetaObject::Connection\n  */\n-QObjectPrivate::Connection *QMetaObjectPrivate::connect(const QObject *sender, int signal_index,\n+QObjectPrivate::Connection *QMetaObjectPrivate::connect(const QObject *sender,\n+                                 int signal_index, const QMetaObject *smeta,\n                                  const QObject *receiver, int method_index,\n                                  const QMetaObject *rmeta, int type, int *types)\n {\n@@ -2984,6 +3010,12 @@ QObjectPrivate::Connection *QMetaObjectPrivate::connect(const QObject *sender, i\n     c->callFunction = callFunction;\n \n     QObjectPrivate::get(s)->addConnection(signal_index, c.data());\n+\n+    locker.unlock();\n+    QMetaMethod smethod = QMetaObjectPrivate::signal(smeta, signal_index);\n+    if (smethod.isValid())\n+        s->connectNotify(smethod);\n+\n     return c.take();\n }\n \n@@ -2992,8 +3024,9 @@ QObjectPrivate::Connection *QMetaObjectPrivate::connect(const QObject *sender, i\n bool QMetaObject::disconnect(const QObject *sender, int signal_index,\n                              const QObject *receiver, int method_index)\n {\n-    signal_index = methodIndexToSignalIndex(sender->metaObject(), signal_index);\n-    return QMetaObjectPrivate::disconnect(sender, signal_index,\n+    const QMetaObject *smeta = sender->metaObject();\n+    signal_index = methodIndexToSignalIndex(&smeta, signal_index);\n+    return QMetaObjectPrivate::disconnect(sender, signal_index, smeta,\n                                           receiver, method_index, 0);\n }\n \n@@ -3006,8 +3039,9 @@ one of these connections will be removed.\n bool QMetaObject::disconnectOne(const QObject *sender, int signal_index,\n                                 const QObject *receiver, int method_index)\n {\n-    signal_index = methodIndexToSignalIndex(sender->metaObject(), signal_index);\n-    return QMetaObjectPrivate::disconnect(sender, signal_index,\n+    const QMetaObject *smeta = sender->metaObject();\n+    signal_index = methodIndexToSignalIndex(&smeta, signal_index);\n+    return QMetaObjectPrivate::disconnect(sender, signal_index, smeta,\n                                           receiver, method_index, 0,\n                                           QMetaObjectPrivate::DisconnectOne);\n }\n@@ -3056,7 +3090,8 @@ bool QMetaObjectPrivate::disconnectHelper(QObjectPrivate::Connection *c,\n /*! \\internal\n     Same as the QMetaObject::disconnect, but \\a signal_index must be the result of QObjectPrivate::signalIndex\n  */\n-bool QMetaObjectPrivate::disconnect(const QObject *sender, int signal_index,\n+bool QMetaObjectPrivate::disconnect(const QObject *sender,\n+                                    int signal_index, const QMetaObject *smeta,\n                                     const QObject *receiver, int method_index, void **slot,\n                                     DisconnectType disconnectType)\n {\n@@ -3079,9 +3114,9 @@ bool QMetaObjectPrivate::disconnect(const QObject *sender, int signal_index,\n     bool success = false;\n     if (signal_index < 0) {\n         // remove from all connection lists\n-        for (signal_index = -1; signal_index < connectionLists->count(); ++signal_index) {\n+        for (int sig_index = -1; sig_index < connectionLists->count(); ++sig_index) {\n             QObjectPrivate::Connection *c =\n-                (*connectionLists)[signal_index].first;\n+                (*connectionLists)[sig_index].first;\n             if (disconnectHelper(c, receiver, method_index, slot, senderMutex, disconnectType)) {\n                 success = true;\n                 connectionLists->dirty = true;\n@@ -3101,6 +3136,13 @@ bool QMetaObjectPrivate::disconnect(const QObject *sender, int signal_index,\n     if (connectionLists->orphaned && !connectionLists->inUse)\n         delete connectionLists;\n \n+    locker.unlock();\n+    if (success) {\n+        QMetaMethod smethod = QMetaObjectPrivate::signal(smeta, signal_index);\n+        if (smethod.isValid())\n+            s->disconnectNotify(smethod);\n+    }\n+\n     return success;\n }\n \n@@ -3140,7 +3182,8 @@ void QMetaObject::connectSlotsByName(QObject *o)\n             int len = objName.length();\n             if (!len || qstrncmp(slot + 3, objName.data(), len) || slot[len+3] != '_')\n                 continue;\n-            int sigIndex = co->d_func()->signalIndex(slot + len + 4);\n+            const QMetaObject *smeta;\n+            int sigIndex = co->d_func()->signalIndex(slot + len + 4, &smeta);\n             if (sigIndex < 0) { // search for compatible signals\n                 const QMetaObject *smo = co->metaObject();\n                 int slotlen = qstrlen(slot + len + 4) - 1;\n@@ -3150,8 +3193,9 @@ void QMetaObject::connectSlotsByName(QObject *o)\n                         continue;\n \n                     if (!qstrncmp(method.methodSignature().constData(), slot + len + 4, slotlen)) {\n+                        smeta = method.enclosingMetaObject();\n                         int signalOffset, methodOffset;\n-                        computeOffsets(method.enclosingMetaObject(), &signalOffset, &methodOffset);\n+                        computeOffsets(smeta, &signalOffset, &methodOffset);\n                         sigIndex = k + - methodOffset + signalOffset;\n                         break;\n                     }\n@@ -3159,7 +3203,8 @@ void QMetaObject::connectSlotsByName(QObject *o)\n             }\n             if (sigIndex < 0)\n                 continue;\n-            if (Connection(QMetaObjectPrivate::connect(co, sigIndex, o, i))) {\n+\n+            if (Connection(QMetaObjectPrivate::connect(co, sigIndex, smeta, o, i))) {\n                 foundIt = true;\n                 break;\n             }\n@@ -3390,8 +3435,11 @@ void QMetaObject::activate(QObject *sender, int signal_index, void **argv)\n \n     It is different from QMetaObject::indexOfSignal():  indexOfSignal is the same as indexOfMethod\n     while QObjectPrivate::signalIndex is smaller because it doesn't give index to slots.\n+\n+    If \\a meta is not 0, it is set to the meta-object where the signal was found.\n */\n-int QObjectPrivate::signalIndex(const char *signalName) const\n+int QObjectPrivate::signalIndex(const char *signalName,\n+                                const QMetaObject **meta) const\n {\n     Q_Q(const QObject);\n     const QMetaObject *base = q->metaObject();\n@@ -3405,6 +3453,8 @@ int QObjectPrivate::signalIndex(const char *signalName) const\n     relative_index = QMetaObjectPrivate::originalClone(base, relative_index);\n     int signalOffset, methodOffset;\n     computeOffsets(base, &signalOffset, &methodOffset);\n+    if (meta)\n+        *meta = base;\n     return relative_index + signalOffset;\n }\n \n@@ -4129,9 +4179,13 @@ QMetaObject::Connection QObject::connectImpl(const QObject *sender, void **signa\n     QMetaObject::Connection ret(c.take());\n     locker.unlock();\n \n+    QMetaMethod method = QMetaObjectPrivate::signal(senderMetaObject, signal_index);\n+    Q_ASSERT(method.isValid());\n+    s->connectNotify(method);\n+\n     // reconstruct the signature to call connectNotify\n     const char *sig;\n-    QByteArray tmp_sig = senderMetaObject->method(signal_index - signalOffset + methodOffset).methodSignature();\n+    QByteArray tmp_sig = method.methodSignature();\n     sig = tmp_sig.constData();\n     QVarLengthArray<char> signalSignature(qstrlen(sig) + 2);\n     signalSignature.data()[0] = char(QSIGNAL_CODE + '0');\n@@ -4168,6 +4222,8 @@ bool QObject::disconnect(const QMetaObject::Connection &connection)\n     if (c->next)\n         c->next->prev = c->prev;\n     c->receiver = 0;\n+    // disconnectNotify() not called (the signal index is unknown).\n+\n     return true;\n }\n \n@@ -4251,7 +4307,7 @@ bool QObject::disconnectImpl(const QObject *sender, void **signal, const QObject\n         signal_index += signalOffset;\n     }\n \n-    return QMetaObjectPrivate::disconnect(sender, signal_index, receiver, -1, slot);\n+    return QMetaObjectPrivate::disconnect(sender, signal_index, senderMetaObject, receiver, -1, slot);\n }\n \n /*! \\class QMetaObject::Connection\n"", ""qobject.h"": ""@@ -370,8 +370,12 @@ protected:\n     virtual void childEvent(QChildEvent *);\n     virtual void customEvent(QEvent *);\n \n+    virtual void connectNotify(const QMetaMethod &signal);\n+    virtual void disconnectNotify(const QMetaMethod &signal);\n+#if QT_DEPRECATED_SINCE(5, 0)\n     virtual void connectNotify(const char *signal);\n     virtual void disconnectNotify(const char *signal);\n+#endif\n \n protected:\n     QObject(QObjectPrivate &dd, QObject *parent = 0);\n@@ -382,6 +386,7 @@ protected:\n     static const QMetaObject staticQtMetaObject;\n \n     friend struct QMetaObject;\n+    friend struct QMetaObjectPrivate;\n     friend class QMetaCallEvent;\n     friend class QApplication;\n     friend class QApplicationPrivate;\n"", ""qobject_p.h"": ""@@ -176,7 +176,7 @@ public:\n         return o->d_func();\n     }\n \n-    int signalIndex(const char *signalName) const;\n+    int signalIndex(const char *signalName, const QMetaObject **meta = 0) const;\n     inline bool isSignalConnected(uint signalIdx) const;\n \n public:\n"", ""tst_qobject.cpp"": ""@@ -77,6 +77,12 @@ private slots:\n     void connectDisconnectNotify_data();\n     void connectDisconnectNotify();\n     void connectNotifyPtr();\n+    void connectDisconnectNotifyMethod_data();\n+    void connectDisconnectNotifyMethod();\n+    void connectDisconnectNotifyMethodPMF();\n+    void disconnectNotifyMethod_receiverDestroyed();\n+    void connectNotifyMethod_connectSlotsByName();\n+    void connectDisconnectNotifyMethod_shadowing();\n     void emitInDefinedOrder();\n     void customTypes();\n     void streamCustomTypes();\n@@ -887,6 +893,316 @@ void tst_QObject::connectNotifyPtr()\n     delete r;\n }\n \n+class NotifyMethodObject : public SenderObject, public ReceiverObject\n+{\n+public:\n+    NotifyMethodObject() : SenderObject(), ReceiverObject()\n+    {}\n+\n+    QList<QMetaMethod> connectedSignals;\n+    QList<QMetaMethod> disconnectedSignals;\n+    void clearNotifications()\n+    {\n+        connectedSignals.clear();\n+        disconnectedSignals.clear();\n+    }\n+protected:\n+    void connectNotify(const QMetaMethod &signal)\n+    { connectedSignals.append(signal); }\n+    void disconnectNotify(const QMetaMethod &signal)\n+    { disconnectedSignals.append(signal); }\n+};\n+\n+void tst_QObject::connectDisconnectNotifyMethod_data()\n+{\n+    tst_QObject::connectDisconnectNotify_data();\n+}\n+\n+void tst_QObject::connectDisconnectNotifyMethod()\n+{\n+    NotifyMethodObject *s = new NotifyMethodObject;\n+    NotifyMethodObject *r = new NotifyMethodObject;\n+\n+    QFETCH(QString, a_signal);\n+    QFETCH(QString, a_slot);\n+\n+    // Obtaining meta methods\n+    int signalIndx = ((SenderObject*)s)->metaObject()->indexOfSignal(\n+            QMetaObject::normalizedSignature(a_signal.toLatin1().constData()+1).constData());\n+    int methodIndx = ((ReceiverObject*)r)->metaObject()->indexOfMethod(\n+            QMetaObject::normalizedSignature(a_slot.toLatin1().constData()+1).constData());\n+    QMetaMethod signal = ((SenderObject*)s)->metaObject()->method(signalIndx);\n+    QMetaMethod method = ((ReceiverObject*)r)->metaObject()->method(methodIndx);\n+    QVERIFY(signal.isValid());\n+    QVERIFY(method.isValid());\n+\n+    // Test connectNotify\n+    QVERIFY(QObject::connect((SenderObject*)s, a_signal.toLatin1(), (ReceiverObject*)r, a_slot.toLatin1()));\n+    QCOMPARE(s->connectedSignals.size(), 1);\n+    QCOMPARE(s->connectedSignals.at(0), signal);\n+    QVERIFY(s->disconnectedSignals.isEmpty());\n+\n+    // Test disconnectNotify\n+    QVERIFY(QObject::disconnect((SenderObject*)s, a_signal.toLatin1(), (ReceiverObject*)r, a_slot.toLatin1()));\n+    QCOMPARE(s->disconnectedSignals.size(), 1);\n+    QCOMPARE(s->disconnectedSignals.at(0), signal);\n+    QCOMPARE(s->connectedSignals.size(), 1);\n+\n+    // Reconnect\n+    s->clearNotifications();\n+    QVERIFY(QObject::connect((SenderObject*)s, a_signal.toLatin1(), (ReceiverObject*)r, a_slot.toLatin1()));\n+    QCOMPARE(s->connectedSignals.size(), 1);\n+    QCOMPARE(s->connectedSignals.at(0), signal);\n+    QVERIFY(s->disconnectedSignals.isEmpty());\n+\n+    // Test disconnectNotify for a complete disconnect\n+    QVERIFY(((SenderObject*)s)->disconnect((ReceiverObject*)r));\n+    QCOMPARE(s->disconnectedSignals.size(), 1);\n+    QCOMPARE(s->disconnectedSignals.at(0), QMetaMethod());\n+    QCOMPARE(s->connectedSignals.size(), 1);\n+\n+    // Test connectNotify when connecting by QMetaMethod\n+    s->clearNotifications();\n+    QVERIFY(QObject::connect((SenderObject*)s, signal, (ReceiverObject*)r, method));\n+    QCOMPARE(s->connectedSignals.size(), 1);\n+    QCOMPARE(s->connectedSignals.at(0), signal);\n+    QVERIFY(s->disconnectedSignals.isEmpty());\n+\n+    // Test disconnectNotify when disconnecting by QMetaMethod\n+    QVERIFY(QObject::disconnect((SenderObject*)s, signal, (ReceiverObject*)r, method));\n+    QCOMPARE(s->disconnectedSignals.size(), 1);\n+    QCOMPARE(s->disconnectedSignals.at(0), signal);\n+    QCOMPARE(s->connectedSignals.size(), 1);\n+\n+    // Reconnect\n+    s->clearNotifications();\n+    QVERIFY(QObject::connect((SenderObject*)s, a_signal.toLatin1(), (ReceiverObject*)r, a_slot.toLatin1()));\n+\n+    // Test disconnectNotify for a complete disconnect by QMetaMethod\n+    QVERIFY(QObject::disconnect((SenderObject*)s, QMetaMethod(), 0, QMetaMethod()));\n+    QCOMPARE(s->disconnectedSignals.size(), 1);\n+    QCOMPARE(s->disconnectedSignals.at(0), QMetaMethod());\n+    QCOMPARE(s->connectedSignals.size(), 1);\n+\n+    // Test connectNotify when connecting by index\n+    s->clearNotifications();\n+    QVERIFY(QMetaObject::connect((SenderObject*)s, signalIndx, (ReceiverObject*)r, methodIndx));\n+    QCOMPARE(s->connectedSignals.size(), 1);\n+    QCOMPARE(s->connectedSignals.at(0), signal);\n+    QVERIFY(s->disconnectedSignals.isEmpty());\n+\n+    // Test disconnectNotify when disconnecting by index\n+    QVERIFY(QMetaObject::disconnect((SenderObject*)s, signalIndx, (ReceiverObject*)r, methodIndx));\n+    QCOMPARE(s->disconnectedSignals.size(), 1);\n+    QCOMPARE(s->disconnectedSignals.at(0), signal);\n+    QCOMPARE(s->connectedSignals.size(), 1);\n+\n+    delete s;\n+    delete r;\n+}\n+\n+static void connectDisconnectNotifyTestSlot() {}\n+\n+void tst_QObject::connectDisconnectNotifyMethodPMF()\n+{\n+    NotifyMethodObject *s = new NotifyMethodObject;\n+    NotifyMethodObject *r = new NotifyMethodObject;\n+\n+    QMetaMethod signal = QMetaMethod::fromSignal(&SenderObject::signal1);\n+\n+    // Test connectNotify\n+    QVERIFY(QObject::connect((SenderObject*)s, &SenderObject::signal1, (ReceiverObject*)r, &ReceiverObject::slot1));\n+    QCOMPARE(s->connectedSignals.size(), 1);\n+    QCOMPARE(s->connectedSignals.at(0), signal);\n+    QVERIFY(s->disconnectedSignals.isEmpty());\n+\n+    // Test disconnectNotify\n+    QVERIFY(QObject::disconnect((SenderObject*)s, &SenderObject::signal1, (ReceiverObject*)r, &ReceiverObject::slot1));\n+    QCOMPARE(s->disconnectedSignals.size(), 1);\n+    QCOMPARE(s->disconnectedSignals.at(0), signal);\n+    QCOMPARE(s->connectedSignals.size(), 1);\n+\n+    // Reconnect\n+    s->clearNotifications();\n+    QVERIFY(QObject::connect((SenderObject*)s, &SenderObject::signal1, (ReceiverObject*)r, &ReceiverObject::slot1));\n+    QCOMPARE(s->connectedSignals.size(), 1);\n+    QCOMPARE(s->connectedSignals.at(0), signal);\n+    QVERIFY(s->disconnectedSignals.isEmpty());\n+\n+    // Test disconnectNotify with wildcard slot\n+    QVERIFY(QObject::disconnect((SenderObject*)s, &SenderObject::signal1, (ReceiverObject*)r, 0));\n+    QCOMPARE(s->disconnectedSignals.size(), 1);\n+    QCOMPARE(s->disconnectedSignals.at(0), signal);\n+    QCOMPARE(s->connectedSignals.size(), 1);\n+\n+    // Reconnect\n+    s->clearNotifications();\n+    QMetaObject::Connection conn = connect((SenderObject*)s, &SenderObject::signal1,\n+                                           (ReceiverObject*)r, &ReceiverObject::slot1);\n+\n+    // Test disconnectNotify when disconnecting by QMetaObject::Connection\n+    QVERIFY(QObject::disconnect(conn));\n+    // disconnectNotify() is not called, but it probably should be.\n+    QVERIFY(s->disconnectedSignals.isEmpty());\n+\n+    // Test connectNotify when connecting by function pointer\n+    s->clearNotifications();\n+    QVERIFY(QObject::connect((SenderObject*)s, &SenderObject::signal1, connectDisconnectNotifyTestSlot));\n+    QCOMPARE(s->connectedSignals.size(), 1);\n+    QCOMPARE(s->connectedSignals.at(0), signal);\n+    QVERIFY(s->disconnectedSignals.isEmpty());\n+\n+    delete s;\n+    delete r;\n+}\n+\n+void tst_QObject::disconnectNotifyMethod_receiverDestroyed()\n+{\n+    NotifyMethodObject *s = new NotifyMethodObject;\n+    NotifyMethodObject *r = new NotifyMethodObject;\n+\n+    QVERIFY(QObject::connect((SenderObject*)s, SIGNAL(signal1()), (ReceiverObject*)r, SLOT(slot1())));\n+\n+    delete r;\n+    // disconnectNotify() is not called, but it probably should be.\n+    QVERIFY(s->disconnectedSignals.isEmpty());\n+\n+    delete s;\n+}\n+\n+class ConnectByNameNotifySenderObject : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    QList<QMetaMethod> connectedSignals;\n+    QList<QMetaMethod> disconnectedSignals;\n+    void clearNotifications()\n+    {\n+        connectedSignals.clear();\n+        disconnectedSignals.clear();\n+    }\n+protected:\n+    void connectNotify(const QMetaMethod &signal)\n+    { connectedSignals.append(signal); }\n+    void disconnectNotify(const QMetaMethod &signal)\n+    { disconnectedSignals.append(signal); }\n+Q_SIGNALS:\n+    void signal1();\n+};\n+\n+class ConnectByNameNotifyReceiverObject : public QObject\n+{\n+    Q_OBJECT\n+    void createNotifyChild(const char *name)\n+    {\n+        QObject *o = new ConnectByNameNotifySenderObject;\n+        o->setParent(this);\n+        o->setObjectName(QString::fromLatin1(name));\n+    }\n+public:\n+    ConnectByNameNotifyReceiverObject()\n+    {\n+        createNotifyChild(\""foo\"");\n+        createNotifyChild(\""bar\"");\n+        createNotifyChild(\""baz\"");\n+    };\n+\n+public Q_SLOTS:\n+    void on_foo_signal1() {}\n+    void on_bar_signal1() {}\n+    void on_baz_signal1() {}\n+};\n+\n+void tst_QObject::connectNotifyMethod_connectSlotsByName()\n+{\n+    ConnectByNameNotifyReceiverObject testObject;\n+    QList<ConnectByNameNotifySenderObject *> senders =\n+            qFindChildren<ConnectByNameNotifySenderObject *>(&testObject);\n+    for (int i = 0; i < senders.size(); ++i) {\n+        ConnectByNameNotifySenderObject *o = senders.at(i);\n+        QVERIFY(o->connectedSignals.isEmpty());\n+        QVERIFY(o->disconnectedSignals.isEmpty());\n+    }\n+\n+    QMetaObject::connectSlotsByName(&testObject);\n+\n+    for (int i = 0; i < senders.size(); ++i) {\n+        ConnectByNameNotifySenderObject *o = senders.at(i);\n+        QCOMPARE(o->connectedSignals.size(), 1);\n+        QCOMPARE(o->connectedSignals.at(0), QMetaMethod::fromSignal(&ConnectByNameNotifySenderObject::signal1));\n+        QVERIFY(o->disconnectedSignals.isEmpty());\n+    }\n+}\n+\n+class ConnectDisconnectNotifyShadowObject\n+        : public ConnectByNameNotifySenderObject\n+{\n+    Q_OBJECT\n+public Q_SLOTS:\n+    void slot1() {}\n+Q_SIGNALS:\n+    void signal1();\n+};\n+\n+void tst_QObject::connectDisconnectNotifyMethod_shadowing()\n+{\n+    ConnectDisconnectNotifyShadowObject s;\n+    // Obtain QMetaMethods\n+    QMetaMethod shadowedSignal1 = QMetaMethod::fromSignal(&ConnectByNameNotifySenderObject::signal1);\n+    QMetaMethod redefinedSignal1 = QMetaMethod::fromSignal(&ConnectDisconnectNotifyShadowObject::signal1);\n+    QVERIFY(shadowedSignal1 != redefinedSignal1);\n+    int slot1Index = s.metaObject()->indexOfSlot(\""slot1()\"");\n+    QVERIFY(slot1Index != -1);\n+    QMetaMethod slot1 = s.metaObject()->method(slot1Index);\n+\n+    // Test connectNotify\n+#ifndef QT_NO_DEBUG\n+    const char *warning = \""QMetaObject::indexOfSignal: signal signal1() from \""\n+                          \""ConnectByNameNotifySenderObject redefined in \""\n+                          \""ConnectDisconnectNotifyShadowObject\"";\n+    QTest::ignoreMessage(QtWarningMsg, warning);\n+#endif\n+    QVERIFY(QObject::connect(&s, SIGNAL(signal1()), &s, SLOT(slot1())));\n+    QCOMPARE(s.connectedSignals.size(), 1);\n+    QCOMPARE(s.connectedSignals.at(0), redefinedSignal1);\n+    QVERIFY(s.disconnectedSignals.isEmpty());\n+\n+    // Test disconnectNotify\n+#ifndef QT_NO_DEBUG\n+    QTest::ignoreMessage(QtWarningMsg, warning);\n+#endif\n+    QVERIFY(QObject::disconnect(&s, SIGNAL(signal1()), &s, SLOT(slot1())));\n+    QCOMPARE(s.disconnectedSignals.size(), 1);\n+    QCOMPARE(s.disconnectedSignals.at(0), redefinedSignal1);\n+    QCOMPARE(s.connectedSignals.size(), 1);\n+\n+    // Test connectNotify when connecting by shadowed QMetaMethod\n+    s.clearNotifications();\n+    QVERIFY(QObject::connect(&s, shadowedSignal1, &s, slot1));\n+    QCOMPARE(s.connectedSignals.size(), 1);\n+    QCOMPARE(s.connectedSignals.at(0), shadowedSignal1);\n+    QVERIFY(s.disconnectedSignals.isEmpty());\n+\n+    // Test disconnectNotify when disconnecting by shadowed QMetaMethod\n+    QVERIFY(QObject::disconnect(&s, shadowedSignal1, &s, slot1));\n+    QCOMPARE(s.disconnectedSignals.size(), 1);\n+    QCOMPARE(s.disconnectedSignals.at(0), shadowedSignal1);\n+    QCOMPARE(s.connectedSignals.size(), 1);\n+\n+    // Test connectNotify when connecting by redefined QMetaMethod\n+    s.clearNotifications();\n+    QVERIFY(QObject::connect(&s, redefinedSignal1, &s, slot1));\n+    QCOMPARE(s.connectedSignals.size(), 1);\n+    QCOMPARE(s.connectedSignals.at(0), redefinedSignal1);\n+    QVERIFY(s.disconnectedSignals.isEmpty());\n+\n+    // Test disconnectNotify when disconnecting by redefined QMetaMethod\n+    QVERIFY(QObject::disconnect(&s, redefinedSignal1, &s, slot1));\n+    QCOMPARE(s.disconnectedSignals.size(), 1);\n+    QCOMPARE(s.disconnectedSignals.at(0), redefinedSignal1);\n+    QCOMPARE(s.connectedSignals.size(), 1);\n+}\n+\n class SequenceObject : public ReceiverObject\n {\n     Q_OBJECT\n""}",feature; test,"feature,bug
",bug;deprecat;feature;
11991.0,11991.0,resource; bug,Rohan McGovern [inactive],Don't use jom by default in Qt5 Windows builds,"Don't use jom by default in Qt5 Windows builds

Due to QTBUG-23376, qmake runs cannot be safely parallelized when
compiling QtDeclarative on Windows (or anything which depends on
QtDeclarative).

The simplest way to work around this problem is to stop using jom
(make-level parallelization) and fall back to nmake with CL=/MP
(compiler-level parallelization), which does not parallelize qmakes.

For most projects, the build performance is roughly comparable.
QtBase should keep using jom, as this repo is not affected by
QTBUG-23376, and jom is considerably faster than nmake for QtBase
due to the large amount of directories containing a small amount of
source files (under tests/auto).

Task-number: QTBUG-23376
Change-Id: I8bc58c7296797657cc8c682271e964cf9a6390c5","['projects/QtBase_master_Integration/stages/win32-msvc2010_Windows_7/properties/make.bin', 'projects/QtBase_master_Integration/stages/win32-msvc2010_Windows_7/properties/make.args', 'projects/Qt_Modules_Continuous_Integration/stages/win32-msvc2010_Windows_7/properties/make.args', 'projects/Qt_Modules_Continuous_Integration/stages/win32-msvc2010_Windows_7/properties/make.bin', 'projects/Qt_Modules_Continuous_Integration/stages/win32-msvc2010_Windows_7/environment/CL']","{""make.args"": ""@@ -1 +1 @@\n--j8 -nologo\n+/NOLOGO\n"", ""make.bin"": ""@@ -1 +1 @@\n-jom\n+nmake\n"", ""CL"": ""@@ -0,0 +1 @@\n+/MP\n""}",resource; bug,"bug,resource 
",bug;resource;test;
18330.0,18330.0,test,Kurt Korbatits,Changed qdir unittest remove() to check actual file removed,"Changed qdir unittest remove() to check actual file removed

- Changed remove() test to check the file just removed is gone.

Change-Id: I0b6c176e624134402b5547866064f436ce063f16",['tests/auto/corelib/io/qdir/tst_qdir.cpp'],"{""tst_qdir.cpp"": ""@@ -1214,7 +1214,8 @@ void tst_QDir::remove()\n     f.close();\n     QDir dir;\n     QVERIFY(dir.remove(\""remove-test\""));\n-    QVERIFY(!dir.remove(\""/remove-test\""));\n+    // Test that the file just removed is gone\n+    QVERIFY(!dir.remove(\""remove-test\""));\n     QTest::ignoreMessage(QtWarningMsg, \""QDir::remove: Empty or null file name\"");\n     QVERIFY(!dir.remove(\""\""));\n }\n""}",test,"test 
",deprecat;test;
20575.0,20575.0,resource,Friedemann Kleint,Build QmlEditorWidgets with Qt5.,"Build QmlEditorWidgets with Qt5.

Change-Id: I1b7eaa87272bd9b641bb72fc0618e493cf6da777",['src/libs/qmleditorwidgets/qmleditorwidgets-lib.pri'],"{""qmleditorwidgets-lib.pri"": ""@@ -1,4 +1,10 @@\n-QT += declarative script\n+QT += script\n+greaterThan(QT_MAJOR_VERSION, 4) {\n+    QT += quick1\n+} else {\n+    QT += declarative\n+}\n+\n INCLUDEPATH += $$PWD\n \n contains(CONFIG, dll) {\n""}",resource,"feature 
",resource;
13772.0,13772.0,test,Christian Stenger,Squish: Try to make this run on Jenkins,"Squish: Try to make this run on Jenkins

I'm not sure for this - but LD_LIBRARY_PATH is always empty for
me. But inside Jenkins it's set and could mess up the hook into
sub application.

Change-Id: I2f3283f67d60a94083a5eb589abed01b05e66b29",['tests/system/shared/hook_utils.py'],"{""hook_utils.py"": ""@@ -105,6 +105,8 @@ def modifyRunSettingsForHookIntoQtQuickUI(projectName, port):\n             for varName in (\""PATH\"", \""SQUISH_LIBQTDIR\""):\n                 __addVariableToRunEnvironment__(varName, qtLibPath, row)\n                 row = row + 1\n+            if not platform.system() in ('Microsoft', 'Windows', 'Darwin'):\n+                __addVariableToRunEnvironment__(\""LD_LIBRARY_PATH\"", qtLibPath, 0)\n             if platform.system() == \""Darwin\"":\n                 __addVariableToRunEnvironment__(\""DYLD_FRAMEWORK_PATH\"", qtLibPath, 0)\n             if not platform.system() in ('Microsoft', 'Windows'):\n""}",test,"test 
",others;
4682.0,4682.0,deprecat; refactor,Cristiano di Flora,Contacts qml demo refactoring / cleanup.,"Contacts qml demo refactoring / cleanup.

- removed obsolete files from source tree
- simplified UI

Change-Id: Ia2f0a15f05567db403f1d9c1e1afb6dd56c85071","['examples/qmlcontacts-components/contents/images/lineedit.sci', 'examples/qmlcontacts-components/contents/images/titlebar.png', 'examples/qmlcontacts-components/contents/ContactView.qml', 'examples/qmlcontacts-components/contents/images/toolbutton.sci', 'examples/qmlcontacts-components/contents/ToolBar.qml', 'examples/qmlcontacts-components/contents/images/default.svg', 'examples/qmlcontacts-components/contents/MediaButton.qml', 'examples/qmlcontacts-components/contents/images/button.png', 'examples/qmlcontacts-components/contents/images/gloss.png', 'examples/qmlcontacts-components/contents/ScrollBar.qml', 'examples/qmlcontacts-components/contents/images/lineedit.png', 'examples/qmlcontacts-components/contents/FieldRow.qml', 'examples/qmlcontacts-components/contents/images/titlebar.sci', 'examples/qmlcontacts-components/contents/images/toolbutton.png', 'examples/qmlcontacts-components/contents/TitleBar.qml', 'examples/qmlcontacts-components/contents/images/button-pressed.png', 'examples/qmlcontacts-components/contacts.qml', 'examples/qmlcontacts-components/contents/images/quit.png', 'examples/qmlcontacts-components/contents/Button.qml']",,deprecat; refactor,"refactor, resource 
",deprecat;refactor;resource;
4082.0,4082.0,test; feature,Eirik Aavitsland,Add option to compare to different platform in lancelot autotest,"Add option to compare to different platform in lancelot autotest

(cherry picked from commit b6b160d9ba1e0a5f1fbd67112f8c78ba48e7cad7)

Conflicts:

	tests/baselineserver/src/baselineserver.cpp

Change-Id: Ie8bdff26b8394bb6a5b6b48225b20833dbee0637","['tests/baselineserver/src/report.cpp', 'tests/baselineserver/shared/baselineprotocol.cpp', 'tests/auto/lancelot/tst_lancelot.cpp', 'tests/baselineserver/shared/baselineprotocol.h', 'tests/auto/lancelot/paintcommands.cpp', 'tests/baselineserver/src/baselineserver.h', 'tests/baselineserver/src/report.h', 'tests/baselineserver/src/baselineserver.cpp']","{""paintcommands.cpp"": ""@@ -2306,7 +2306,11 @@ void PaintCommands::command_gradient_setRadialExtended(QRegExp re)\n                \""focal radius=%.2f, spread=%d\\n\"",\n                cx, cy, rad, fx, fy, frad, m_gradientSpread);\n \n+#if QT_VERSION >= 0x040800\n     QRadialGradient rg(QPointF(cx, cy), rad, QPointF(fx, fy), frad);\n+#else\n+    QRadialGradient rg(QPointF(cx, cy), rad, QPointF(fx, fy));\n+#endif\n     rg.setStops(m_gradientStops);\n     rg.setSpread(m_gradientSpread);\n     rg.setCoordinateMode(m_gradientCoordinate);\n"", ""tst_lancelot.cpp"": ""@@ -62,6 +62,7 @@ public:\n     tst_Lancelot();\n \n     static bool simfail;\n+    static PlatformInfo clientInfo;\n \n private:\n     enum GraphicsEngine {\n@@ -98,6 +99,7 @@ private slots:\n };\n \n bool tst_Lancelot::simfail = false;\n+PlatformInfo tst_Lancelot::clientInfo;\n \n tst_Lancelot::tst_Lancelot()\n {\n@@ -112,7 +114,7 @@ void tst_Lancelot::initTestCase()\n #if defined(Q_OS_SOMEPLATFORM)\n     QSKIP(\""This test is not supported on this platform.\"", SkipAll);\n #endif\n-    if (!proto.connect(QLatin1String(\""tst_Lancelot\""), &dryRunMode))\n+    if (!proto.connect(QLatin1String(\""tst_Lancelot\""), &dryRunMode, clientInfo))\n         QSKIP(qPrintable(proto.errorMessage()), SkipAll);\n \n #if defined(USE_RUNTIME_DIR)\n@@ -329,13 +331,26 @@ QTEST_MAIN(tst_Lancelot)\n \n int main(int argc, char *argv[])\n {\n+    tst_Lancelot::clientInfo = PlatformInfo::localHostInfo();\n+\n     char *fargv[20];\n     int fargc = 0;\n     for (int i = 0; i < qMin(argc, 19); i++) {\n-        if (!qstrcmp(argv[i], \""-simfail\""))\n+        if (!qstrcmp(argv[i], \""-simfail\"")) {\n             tst_Lancelot::simfail = true;\n-        else\n+        } else if (!qstrcmp(argv[i], \""-compareto\"") && i < argc-1) {\n+            QString arg = QString::fromLocal8Bit(argv[++i]);\n+            int split = arg.indexOf(QLC('='));\n+            if (split < 0)\n+                continue;\n+            QString key = arg.left(split).trimmed();\n+            QString value = arg.mid(split+1).trimmed();\n+            if (key.isEmpty() || value.isEmpty())\n+                continue;\n+            tst_Lancelot::clientInfo.addOverride(key, value);\n+        } else {\n             fargv[fargc++] = argv[i];\n+        }\n     }\n     fargv[fargc] = 0;\n     return rmain(fargc, fargv);\n"", ""baselineprotocol.cpp"": ""@@ -83,7 +83,7 @@ void BaselineProtocol::sysSleep(int ms)\n }\n \n PlatformInfo::PlatformInfo()\n-    : QMap<QString, QString>(), replaceDefault(false)\n+    : QMap<QString, QString>(), adHoc(true)\n {\n }\n \n@@ -134,11 +134,15 @@ PlatformInfo PlatformInfo::localHostInfo()\n         pi.insert(PI_GitCommit, QLS(\""Unknown\""));\n \n     QByteArray gb = qgetenv(\""PULSE_GIT_BRANCH\"");\n-    if (!gb.isEmpty())\n+    if (!gb.isEmpty()) {\n         pi.insert(PI_PulseGitBranch, QString::fromLatin1(gb));\n+        pi.setAdHocRun(false);\n+    }\n     QByteArray tb = qgetenv(\""PULSE_TESTR_BRANCH\"");\n-    if (!tb.isEmpty())\n+    if (!tb.isEmpty()) {\n         pi.insert(PI_PulseTestrBranch, QString::fromLatin1(tb));\n+        pi.setAdHocRun(false);\n+    }\n \n     return pi;\n }\n@@ -147,43 +151,49 @@ PlatformInfo PlatformInfo::localHostInfo()\n PlatformInfo::PlatformInfo(const PlatformInfo &other)\n     : QMap<QString, QString>(other)\n {\n-    sigKeys = other.sigKeys;\n-    replaceDefault = other.replaceDefault;\n+    orides = other.orides;\n+    adHoc = other.adHoc;\n }\n \n \n PlatformInfo &PlatformInfo::operator=(const PlatformInfo &other)\n {\n     QMap<QString, QString>::operator=(other);\n-    sigKeys = other.sigKeys;\n-    replaceDefault = other.replaceDefault;\n+    orides = other.orides;\n+    adHoc = other.adHoc;\n     return *this;\n }\n \n \n-void PlatformInfo::addSignificantKeys(const QStringList &keys, bool replaceDefaultKeys)\n+void PlatformInfo::addOverride(const QString& key, const QString& value)\n+{\n+    orides.append(key);\n+    orides.append(value);\n+}\n+\n+\n+QStringList PlatformInfo::overrides() const\n {\n-    sigKeys = keys;\n-    replaceDefault = replaceDefaultKeys;\n+    return orides;\n }\n \n \n-QStringList PlatformInfo::addedKeys() const\n+void PlatformInfo::setAdHocRun(bool isAdHoc)\n {\n-    return sigKeys;\n+    adHoc = isAdHoc;\n }\n \n \n-bool PlatformInfo::addedKeysReplaceDefault() const\n+bool PlatformInfo::isAdHocRun() const\n {\n-    return replaceDefault;\n+    return adHoc;\n }\n \n \n QDataStream & operator<< (QDataStream &stream, const PlatformInfo &pi)\n {\n     stream << static_cast<const QMap<QString, QString>&>(pi);\n-    stream << pi.sigKeys << pi.replaceDefault;\n+    stream << pi.orides << pi.adHoc;\n     return stream;\n }\n \n@@ -191,7 +201,7 @@ QDataStream & operator<< (QDataStream &stream, const PlatformInfo &pi)\n QDataStream & operator>> (QDataStream &stream, PlatformInfo &pi)\n {\n     stream >> static_cast<QMap<QString, QString>&>(pi);\n-    stream >> pi.sigKeys >> pi.replaceDefault;\n+    stream >> pi.orides >> pi.adHoc;\n     return stream;\n }\n \n@@ -346,7 +356,7 @@ BaselineProtocol::~BaselineProtocol()\n }\n \n \n-bool BaselineProtocol::connect(const QString &testCase, bool *dryrun)\n+bool BaselineProtocol::connect(const QString &testCase, bool *dryrun, const PlatformInfo& clientInfo)\n {\n     errMsg.clear();\n     QByteArray serverName(qgetenv(\""QT_LANCELOT_SERVER\""));\n@@ -362,7 +372,7 @@ bool BaselineProtocol::connect(const QString &testCase, bool *dryrun)\n         }\n     }\n \n-    PlatformInfo pi = PlatformInfo::localHostInfo();\n+    PlatformInfo pi = clientInfo.isEmpty() ? PlatformInfo::localHostInfo() : clientInfo;\n     pi.insert(PI_TestCase, testCase);\n     QByteArray block;\n     QDataStream ds(&block, QIODevice::ReadWrite);\n"", ""baselineprotocol.h"": ""@@ -78,13 +78,14 @@ public:\n \n     static PlatformInfo localHostInfo();\n \n-    void addSignificantKeys(const QStringList& keys, bool replaceDefaultKeys=false);\n-    QStringList addedKeys() const;\n-    bool addedKeysReplaceDefault() const;\n+    void addOverride(const QString& key, const QString& value);\n+    QStringList overrides() const;\n+    bool isAdHocRun() const;\n+    void setAdHocRun(bool isAdHoc);\n \n private:\n-    QStringList sigKeys;\n-    bool replaceDefault;\n+    QStringList orides;\n+    bool adHoc;\n     friend QDataStream & operator<< (QDataStream &stream, const PlatformInfo &pi);\n     friend QDataStream & operator>> (QDataStream &stream, PlatformInfo& pi);\n };\n@@ -165,7 +166,7 @@ public:\n     // For client:\n \n     // For advanced client:\n-    bool connect(const QString &testCase, bool *dryrun = 0);\n+    bool connect(const QString &testCase, bool *dryrun = 0, const PlatformInfo& clientInfo = PlatformInfo());\n     bool requestBaselineChecksums(const QString &testFunction, ImageItemList *itemList);\n     bool submitNewBaseline(const ImageItem &item, QByteArray *serverMsg);\n     bool submitMismatch(const ImageItem &item, QByteArray *serverMsg);\n"", ""baselineserver.cpp"": ""@@ -172,27 +172,31 @@ const char *BaselineHandler::logtime()\n \n bool BaselineHandler::establishConnection()\n {\n-    if (!proto.acceptConnection(&plat)) {\n+    if (!proto.acceptConnection(&clientInfo)) {\n         qWarning() << runId << logtime() << \""Accepting new connection from\"" << proto.socket.peerAddress().toString() << \""failed.\"" << proto.errorMessage();\n         proto.sendBlock(BaselineProtocol::Abort, proto.errorMessage().toLatin1());  // In case the client can hear us, tell it what's wrong.\n         proto.socket.disconnectFromHost();\n         return false;\n     }\n     QString logMsg;\n-    foreach (QString key, plat.keys()) {\n+    foreach (QString key, clientInfo.keys()) {\n         if (key != PI_HostName && key != PI_HostAddress)\n-            logMsg += key + QLS(\"": '\"") + plat.value(key) + QLS(\""', \"");\n+            logMsg += key + QLS(\"": '\"") + clientInfo.value(key) + QLS(\""', \"");\n     }\n-    qDebug() << runId << logtime() << \""Connection established with\"" << plat.value(PI_HostName)\n-             << \""[\"" << qPrintable(plat.value(PI_HostAddress)) << \""]\"" << logMsg;\n+    qDebug() << runId << logtime() << \""Connection established with\"" << clientInfo.value(PI_HostName)\n+             << \""[\"" << qPrintable(clientInfo.value(PI_HostAddress)) << \""]\"" << logMsg\n+             << \""Overrides:\"" << clientInfo.overrides() << \""AdHoc-Run:\"" << clientInfo.isAdHocRun();\n+\n+    //### Temporarily override the client setting, for client compatibility:\n+    if (!clientInfo.isAdHocRun())\n+        clientInfo.setAdHocRun(clientInfo.value(PI_PulseGitBranch).isEmpty() && clientInfo.value(PI_PulseTestrBranch).isEmpty());\n \n     settings->beginGroup(\""ClientFilters\"");\n-    if (!settings->childKeys().isEmpty() && !plat.value(PI_PulseGitBranch).isEmpty()) {  // i.e. not adhoc client\n-        // Abort if client does not match the filters\n+    if (!clientInfo.isAdHocRun()) {         // for CI runs, allow filtering of clients. TBD: different filters (settings file) per testCase\n         foreach (QString filterKey, settings->childKeys()) {\n             QString filter = settings->value(filterKey).toString();\n-            QString platVal = plat.value(filterKey);\n-            if (filter.isEmpty() || platVal.isEmpty())\n+            QString platVal = clientInfo.value(filterKey);\n+            if (filter.isEmpty())\n                 continue;  // tbd: add a syntax for specifying a \""value-must-be-present\"" filter\n             if (!platVal.contains(filter)) {\n                 qDebug() << runId << logtime() << \""Did not pass client filter on\"" << filterKey << \""; disconnecting.\"";\n@@ -206,7 +210,7 @@ bool BaselineHandler::establishConnection()\n \n     proto.sendBlock(BaselineProtocol::Ack, QByteArray());\n \n-    report.init(this, runId, plat);\n+    report.init(this, runId, clientInfo);\n     return true;\n }\n \n@@ -297,6 +301,12 @@ void BaselineHandler::storeImage(const QByteArray &itemBlock, bool isBaseline)\n     ImageItem item;\n     ds >> item;\n \n+    if (isBaseline && !clientInfo.overrides().isEmpty()) {\n+        qDebug() << runId << logtime() << \""Received baseline from client with override info, ignoring. Item:\"" << item.itemName;\n+        proto.sendBlock(BaselineProtocol::UnknownError, \""New baselines not accepted from client with override info.\"");\n+        return;\n+    }\n+\n     QString prefix = pathForItem(item, isBaseline);\n     qDebug() << runId << logtime() << \""Received\"" << (isBaseline ? \""baseline\"" : \""mismatched\"") << \""image for:\"" << item.itemName << \""Storing in\"" << prefix;\n \n@@ -313,7 +323,7 @@ void BaselineHandler::storeImage(const QByteArray &itemBlock, bool isBaseline)\n         cwd.mkpath(dir);\n     item.image.save(prefix + QLS(FileFormat), FileFormat);\n \n-    PlatformInfo itemData = plat;\n+    PlatformInfo itemData = clientInfo;\n     itemData.insert(PI_ImageChecksum, QString::number(item.imageChecksums.at(0), 16));  //# Only the first is stored. TBD: get rid of list\n     itemData.insert(PI_RunId, runId);\n     itemData.insert(PI_CreationDate, QDateTime::currentDateTime().toString());\n@@ -366,17 +376,16 @@ void BaselineHandler::receiveDisconnect()\n }\n \n \n-void BaselineHandler::mapPlatformInfo() const\n+PlatformInfo BaselineHandler::mapPlatformInfo(const PlatformInfo& orig) const\n {\n-    mapped = plat;\n+    PlatformInfo mapped = orig;\n \n     // Map hostname\n-    QString host = plat.value(PI_HostName).section(QLC('.'), 0, 0);  // Filter away domain, if any\n+    QString host = orig.value(PI_HostName).section(QLC('.'), 0, 0);  // Filter away domain, if any\n     if (host.isEmpty() || host == QLS(\""localhost\"")) {\n-        host = plat.value(PI_HostAddress);\n+        host = orig.value(PI_HostAddress);\n     } else {\n-        if (!plat.value(PI_PulseGitBranch).isEmpty()) {\n-            // i.e. pulse run, so remove index postfix typical of vm hostnames\n+        if (!orig.isAdHocRun()) {    // i.e. CI system run, so remove index postfix typical of vm hostnames\n             host.remove(QRegExp(QLS(\""\\\\d+$\"")));\n             if (host.endsWith(QLC('-')))\n                 host.chop(1);\n@@ -387,18 +396,28 @@ void BaselineHandler::mapPlatformInfo() const\n     mapped.insert(PI_HostName, host);\n \n     // Map qmakespec\n-    QString mkspec = plat.value(PI_QMakeSpec);\n+    QString mkspec = orig.value(PI_QMakeSpec);\n     mapped.insert(PI_QMakeSpec, mkspec.replace(QLC('/'), QLC('_')));\n \n     // Map Qt version\n-    QString ver = plat.value(PI_QtVersion);\n+    QString ver = orig.value(PI_QtVersion);\n     mapped.insert(PI_QtVersion, ver.prepend(QLS(\""Qt-\"")));\n+\n+    return mapped;\n }\n \n+\n QString BaselineHandler::pathForItem(const ImageItem &item, bool isBaseline, bool absolute) const\n {\n-    if (mapped.isEmpty())\n-        mapPlatformInfo();\n+    if (mappedClientInfo.isEmpty()) {\n+        mappedClientInfo = mapPlatformInfo(clientInfo);\n+        PlatformInfo oraw = clientInfo;\n+        for (int i = 0; i < clientInfo.overrides().size()-1; i+=2)\n+            oraw.insert(clientInfo.overrides().at(i), clientInfo.overrides().at(i+1));\n+        overriddenMappedClientInfo = mapPlatformInfo(oraw);\n+    }\n+\n+    const PlatformInfo& mapped = isBaseline ? overriddenMappedClientInfo : mappedClientInfo;\n \n     QString itemName = item.itemName.simplified();\n     itemName.replace(QLC(' '), QLC('_'));\n@@ -512,13 +531,14 @@ void BaselineHandler::testPathMapping()\n     item.imageChecksums << 0x0123456789abcdefULL;\n     item.itemChecksum = 0x0123;\n \n-    plat.insert(PI_QtVersion, QLS(\""5.0.0\""));\n-    plat.insert(PI_BuildKey, QLS(\""(nobuildkey)\""));\n-    plat.insert(PI_QMakeSpec, QLS(\""linux-g++\""));\n-    plat.insert(PI_PulseGitBranch, QLS(\""somebranch\""));\n+    clientInfo.insert(PI_QtVersion, QLS(\""5.0.0\""));\n+    clientInfo.insert(PI_BuildKey, QLS(\""(nobuildkey)\""));\n+    clientInfo.insert(PI_QMakeSpec, QLS(\""linux-g++\""));\n+    clientInfo.insert(PI_PulseGitBranch, QLS(\""somebranch\""));\n+\n     foreach(const QString& host, hosts) {\n-        mapped.clear();\n-        plat.insert(PI_HostName, host);\n+        mappedClientInfo.clear();\n+        clientInfo.insert(PI_HostName, host);\n         qDebug() << \""Baseline from\"" << host << \""->\"" << pathForItem(item, true);\n         qDebug() << \""Mismatch from\"" << host << \""->\"" << pathForItem(item, false);\n     }\n"", ""baselineserver.h"": ""@@ -125,13 +125,14 @@ private:\n     void storeImage(const QByteArray &itemBlock, bool isBaseline);\n     void storeItemMetadata(const PlatformInfo &metadata, const QString &path);\n     PlatformInfo fetchItemMetadata(const QString &path);\n-    void mapPlatformInfo() const;\n+    PlatformInfo mapPlatformInfo(const PlatformInfo& orig) const;\n     const char *logtime();\n     QString computeMismatchScore(const QImage& baseline, const QImage& rendered);\n \n     BaselineProtocol proto;\n-    PlatformInfo plat;\n-    mutable PlatformInfo mapped;\n+    PlatformInfo clientInfo;\n+    mutable PlatformInfo mappedClientInfo;\n+    mutable PlatformInfo overriddenMappedClientInfo;\n     QString runId;\n     bool connectionEstablished;\n     Report report;\n"", ""report.cpp"": ""@@ -66,12 +66,13 @@ void Report::init(const BaselineHandler *h, const QString &r, const PlatformInfo\n     runId = r;\n     plat = p;\n     rootDir = BaselineServer::storagePath() + QLC('/');\n-    reportDir = plat.value(PI_TestCase) + QLC('/') + (plat.value(PI_PulseGitBranch).isEmpty() ? QLS(\""reports/adhoc/\"") : QLS(\""reports/pulse/\""));\n+    reportDir = plat.value(PI_TestCase) + QLC('/') + (plat.isAdHocRun() ? QLS(\""reports/adhoc/\"") : QLS(\""reports/pulse/\""));\n     QString dir = rootDir + reportDir;\n     QDir cwd;\n     if (!cwd.exists(dir))\n         cwd.mkpath(dir);\n     path = reportDir + QLS(\""Report_\"") + runId + QLS(\"".html\"");\n+    hasOverride = !plat.overrides().isEmpty();\n }\n \n void Report::addItems(const ImageItemList &items)\n@@ -141,11 +142,19 @@ void Report::writeHeader()\n         << \""<p>Note: This is a <i>static</i> page, generated at \"" << QDateTime::currentDateTime().toString()\n         << \"" for the test run with id \"" << runId << \""</p>\\n\""\n         << \""<p>Summary: <b><span style=\\\""color:red\\\"">\"" << numMismatches << \"" of \"" << numItems << \""</b></span> items reported mismatching</p>\\n\\n\"";\n-    out << \""<h3>Platform Info:</h3>\\n\""\n+    out << \""<h3>Testing Client Platform Info:</h3>\\n\""\n         << \""<table>\\n\"";\n     foreach (QString key, plat.keys())\n-        out << \""<tr><td>\"" << key << \""</td><td>\"" << plat.value(key) << \""</td></tr>\\n\"";\n+        out << \""<tr><td>\"" << key << \"":</td><td>\"" << plat.value(key) << \""</td></tr>\\n\"";\n     out << \""</table>\\n\\n\"";\n+    if (hasOverride) {\n+        out << \""<span style=\\\""color:red\\\""><h4>Note! Platform Override Info:</h4></span>\\n\""\n+            << \""<p>The client's output has been compared to baselines created on a different platform. Differences:</p>\\n\""\n+            << \""<table>\\n\"";\n+        for (int i = 0; i < plat.overrides().size()-1; i+=2)\n+            out << \""<tr><td>\"" << plat.overrides().at(i) << \"":</td><td>\"" << plat.overrides().at(i+1) << \""</td></tr>\\n\"";\n+        out << \""</table>\\n\\n\"";\n+    }\n }\n \n \n@@ -158,10 +167,12 @@ void Report::writeFunctionResults(const ImageItemList &list)\n \n \n     out << \""\\n<p>&nbsp;</p><h3>Test function: \"" << testFunction << \""</h3>\\n\"";\n-    out << \""<p><a href=\\\""/cgi-bin/server.cgi?cmd=clearAllBaselines&context=\"" << ctx << \""&url=\"" << pageUrl\n-        << \""\\\""><b>Clear all baselines</b></a> for this testfunction (They will be recreated by the next run)</p>\\n\"";\n-    out << \""<p><a href=\\\""/cgi-bin/server.cgi?cmd=updateAllBaselines&context=\"" << ctx << \""&mismatchContext=\"" << misCtx << \""&url=\"" << pageUrl\n-        << \""\\\""><b>Let these mismatching images be the new baselines</b></a> for this testfunction</p>\\n\\n\"";\n+    if (!hasOverride) {\n+        out << \""<p><a href=\\\""/cgi-bin/server.cgi?cmd=clearAllBaselines&context=\"" << ctx << \""&url=\"" << pageUrl\n+            << \""\\\""><b>Clear all baselines</b></a> for this testfunction (They will be recreated by the next run)</p>\\n\"";\n+        out << \""<p><a href=\\\""/cgi-bin/server.cgi?cmd=updateAllBaselines&context=\"" << ctx << \""&mismatchContext=\"" << misCtx << \""&url=\"" << pageUrl\n+            << \""\\\""><b>Let these mismatching images be the new baselines</b></a> for this testfunction</p>\\n\\n\"";\n+    }\n \n     out << \""<table border=\\\""2\\\"">\\n\""\n            \""<tr>\\n\""\n@@ -192,10 +203,12 @@ void Report::writeFunctionResults(const ImageItemList &list)\n                 out << \""Baseline not found/regenerated\"";\n                 break;\n             case ImageItem::IgnoreItem:\n-                out << \""<span style=\\\""background-color:yellow\\\"">Blacklisted</span> \""\n-                    << \""<a href=\\\""/cgi-bin/server.cgi?cmd=whitelist&context=\"" << ctx\n-                    << \""&itemId=\"" << item.itemName << \""&url=\"" << pageUrl\n-                    << \""\\\"">Whitelist this item</a>\"";\n+                out << \""<span style=\\\""background-color:yellow\\\"">Blacklisted</span> \"";\n+                if (!hasOverride) {\n+                    out << \""<a href=\\\""/cgi-bin/server.cgi?cmd=whitelist&context=\"" << ctx\n+                        << \""&itemId=\"" << item.itemName << \""&url=\"" << pageUrl\n+                        << \""\\\"">Whitelist this item</a>\"";\n+                }\n                 break;\n             case ImageItem::Ok:\n                 out << \""<span style=\\\""color:green\\\""><small>No mismatch reported</small></span>\"";\n@@ -224,12 +237,14 @@ void Report::writeItem(const QString &baseline, const QString &rendered, const I\n \n     out << \""<td align=center>\\n\""\n         << \""<p><span style=\\\""color:red\\\"">Mismatch reported</span></p>\\n\""\n-        << \""<p><a href=\\\""/\"" << metadata << \""\\\"">Baseline Info</a>\\n\""\n-        << \""<p><a href=\\\""/cgi-bin/server.cgi?cmd=updateSingleBaseline&context=\"" << ctx << \""&mismatchContext=\"" << misCtx\n-        << \""&itemFile=\"" << itemFile << \""&url=\"" << pageUrl << \""\\\"">Let this be the new baseline</a></p>\\n\""\n-        << \""<p><a href=\\\""/cgi-bin/server.cgi?cmd=blacklist&context=\"" << ctx\n-        << \""&itemId=\"" << item.itemName << \""&url=\"" << pageUrl << \""\\\"">Blacklist this item</a></p>\\n\""\n-        << \""<p><a href=\\\""/cgi-bin/server.cgi?cmd=view&baseline=\"" << baseline << \""&rendered=\"" << rendered\n+        << \""<p><a href=\\\""/\"" << metadata << \""\\\"">Baseline Info</a>\\n\"";\n+    if (!hasOverride) {\n+        out << \""<p><a href=\\\""/cgi-bin/server.cgi?cmd=updateSingleBaseline&context=\"" << ctx << \""&mismatchContext=\"" << misCtx\n+            << \""&itemFile=\"" << itemFile << \""&url=\"" << pageUrl << \""\\\"">Let this be the new baseline</a></p>\\n\""\n+            << \""<p><a href=\\\""/cgi-bin/server.cgi?cmd=blacklist&context=\"" << ctx\n+            << \""&itemId=\"" << item.itemName << \""&url=\"" << pageUrl << \""\\\"">Blacklist this item</a></p>\\n\"";\n+    }\n+    out << \""<p><a href=\\\""/cgi-bin/server.cgi?cmd=view&baseline=\"" << baseline << \""&rendered=\"" << rendered\n         << \""&compared=\"" << compared << \""&url=\"" << pageUrl << \""\\\"">Inspect</a></p>\\n\""\n         << \""</td>\\n\"";\n }\n"", ""report.h"": ""@@ -86,6 +86,7 @@ private:\n     int numItems;\n     int numMismatches;\n     QTextStream out;\n+    bool hasOverride;\n };\n \n #endif // REPORT_H\n""}",test; feature,"feature, test 
",resource;test;
12017.0,12017.0,bug,Prasanth Ullattil,Fix notifications for Map objects.,"Fix notifications for Map objects.

Notifications were not sent because the partition names did not match.
When checking for notifications, a NULL partition name was passed
instead of the correct one.

Change-Id: Ifd45758bea711a00229ef908b316c477aa959518","['src/daemon/jsondb-map-reduce.cpp', 'src/daemon/jsondb.h']","{""jsondb-map-reduce.cpp"": ""@@ -126,7 +126,7 @@ void JsonDb::createMapDefinition(QsonMap mapDefinition, bool firstTime, const QS\n     }\n }\n \n-void JsonDb::removeMapDefinition(QsonMap mapDefinition)\n+void JsonDb::removeMapDefinition(QsonMap mapDefinition, const QString &partition)\n {\n     QString targetType = mapDefinition.valueString(\""targetType\"");\n \n@@ -148,7 +148,7 @@ void JsonDb::removeMapDefinition(QsonMap mapDefinition)\n                                           mapDefinition.valueString(JsonDbString::kUuidStr), targetType);\n     QsonList objects = getObjectResponse.subList(\""result\"");\n     for (int i = 0; i < objects.size(); i++)\n-      removeViewObject(mOwner, objects.objectAt(i));\n+      removeViewObject(mOwner, objects.objectAt(i), partition);\n }\n \n void JsonDb::createReduceDefinition(QsonMap reduceDefinition, bool firstTime, const QString &partition)\n@@ -179,7 +179,7 @@ void JsonDb::createReduceDefinition(QsonMap reduceDefinition, bool firstTime, co\n     }\n }\n \n-void JsonDb::removeReduceDefinition(QsonMap reduceDefinition)\n+void JsonDb::removeReduceDefinition(QsonMap reduceDefinition,const QString &partition)\n {\n     QString targetType = reduceDefinition.valueString(\""targetType\"");\n     QString sourceType = reduceDefinition.valueString(\""sourceType\"");\n@@ -200,7 +200,7 @@ void JsonDb::removeReduceDefinition(QsonMap reduceDefinition)\n     QsonMap getObjectResponse = getObjects(\""_reduceUuid\"", reduceDefinition.valueString(JsonDbString::kUuidStr), targetType);\n     QsonList objects = getObjectResponse.subList(\""result\"");\n     for (int i = 0; i < objects.size(); i++)\n-      removeViewObject(mOwner, objects.objectAt(i));\n+      removeViewObject(mOwner, objects.objectAt(i), partition);\n     //TODO: actually remove the table\n }\n \n@@ -281,7 +281,7 @@ void JsonDb::updateMap(const QString &viewType, const QString &partitionName)\n          it != removedMapDefinitions.end();\n          ++it) {\n         QsonMap def = it.value();\n-        removeMapDefinition(def);\n+        removeMapDefinition(def, partitionName);\n     }\n     for (QMap<QString,QsonMap>::const_iterator it = addedMapDefinitions.begin();\n          it != addedMapDefinitions.end();\n@@ -410,7 +410,7 @@ void JsonDb::updateReduce(const QString &viewType, const QString &partitionName)\n          it != removedReduceDefinitions.end();\n          ++it) {\n         QsonMap def = it.value();\n-        removeReduceDefinition(def);\n+        removeReduceDefinition(def, partitionName);\n     }\n     for (QMap<QString,QsonMap>::const_iterator it = addedReduceDefinitions.begin();\n          it != addedReduceDefinitions.end();\n@@ -548,7 +548,7 @@ void JsonDbMapDefinition::unmapObject(const QsonMap &object)\n         QsonMap dependentObject = dependentObjects.objectAt(i).toMap();\n         if (dependentObject.valueString(JsonDbString::kTypeStr) != mTargetType)\n             continue;\n-        mJsonDb->removeViewObject(mOwner, dependentObject);\n+        mJsonDb->removeViewObject(mOwner, dependentObject, mPartition);\n     }\n }\n \n@@ -602,7 +602,7 @@ void JsonDbMapDefinition::viewObjectEmitted(const QJSValue &value)\n     newItem.insert(\""_sourceUuids\"", sourceUuids);\n     newItem.insert(\""_mapUuid\"", mUuid);\n \n-    QsonMap res = mJsonDb->createViewObject(mOwner, newItem);\n+    QsonMap res = mJsonDb->createViewObject(mOwner, newItem, mPartition);\n     if (JsonDb::responseIsError(res))\n         setError(\""Error executing map function during emitViewObject: \"" +\n                  res.subObject(JsonDbString::kErrorStr).valueString(JsonDbString::kMessageStr));\n@@ -711,7 +711,7 @@ void JsonDbReduceDefinition::updateObject(QsonMap before, QsonMap after)\n     QsonMap res;\n     if (!previousResult.valueString(JsonDbString::kUuidStr).isEmpty()) {\n         if (value.isEmpty()) {\n-            res = mJsonDb->removeViewObject(mOwner, previousResult);\n+            res = mJsonDb->removeViewObject(mOwner, previousResult, mPartition);\n         } else {\n             value.insert(JsonDbString::kTypeStr, mTargetType);\n             value.insert(JsonDbString::kUuidStr,\n@@ -720,13 +720,13 @@ void JsonDbReduceDefinition::updateObject(QsonMap before, QsonMap after)\n                          previousResult.valueString(JsonDbString::kVersionStr));\n             value.insert(mTargetKeyName, keyValue);\n             value.insert(\""_reduceUuid\"", mUuid);\n-            res = mJsonDb->updateViewObject(mOwner, value);\n+            res = mJsonDb->updateViewObject(mOwner, value, mPartition);\n         }\n     } else {\n         value.insert(JsonDbString::kTypeStr, mTargetType);\n         value.insert(mTargetKeyName, keyValue);\n         value.insert(\""_reduceUuid\"", mUuid);\n-        res = mJsonDb->createViewObject(mOwner, value);\n+        res = mJsonDb->createViewObject(mOwner, value, mPartition);\n     }\n \n     if (JsonDb::responseIsError(res))\n"", ""jsondb.h"": ""@@ -111,9 +111,9 @@ public:\n     QsonMap updateList(const JsonDbOwner *owner, QsonList&, const QString &partition = QString(), bool replication = false);\n     QsonMap removeList(const JsonDbOwner *owner, QsonList, const QString &partition = QString());\n \n-    QsonMap createViewObject(const JsonDbOwner *owner, QsonMap&, const QString &partition = QString());\n-    QsonMap updateViewObject(const JsonDbOwner *owner, QsonMap&, const QString &partition = QString());\n-    QsonMap removeViewObject(const JsonDbOwner *owner, QsonMap, const QString &partition = QString());\n+    QsonMap createViewObject(const JsonDbOwner *owner, QsonMap&, const QString &partition);\n+    QsonMap updateViewObject(const JsonDbOwner *owner, QsonMap&, const QString &partition);\n+    QsonMap removeViewObject(const JsonDbOwner *owner, QsonMap, const QString &partition);\n \n     QsonMap changesSince(const JsonDbOwner *owner, QsonMap object, const QString &partition = QString());\n \n@@ -163,10 +163,10 @@ protected:\n \n     void initMap(const QString &partition);\n     void createMapDefinition(QsonMap mapDefinition, bool firstTime, const QString &partition);\n-    void removeMapDefinition(QsonMap mapDefinition);\n+    void removeMapDefinition(QsonMap mapDefinition, const QString &partition);\n \n     void createReduceDefinition(QsonMap reduceDefinition, bool firstTime, const QString &partition);\n-    void removeReduceDefinition(QsonMap reduceDefinition);\n+    void removeReduceDefinition(QsonMap reduceDefinition, const QString &partition);\n     void removeReduceDefinition(JsonDbReduceDefinition *def);\n \n     quint32 findUpdatedMapReduceDefinitions(JsonDbBtreeStorage *partition, const QString &definitionType, const QString &viewType, quint32 targetStateNumber,\n""}",bug,"bug 
",bug;
13060.0,13060.0,"feature; deprecat; test,refactor,resource",Kranthi Kuntala,introduce QContactId,"introduce QContactId

This change introduces a back-end agnostic QContactId abstraction based
on the design pattern already adopted in Organizer API.
Back-end specific IDs are hidden behind an opaque QContactId wrapper class.

this implementation will remove the local id from the api

doc updated as per implementation
improved QContactManager tests in this commit

Change-Id: Ib9f5433c662eeac476f73005500c1bdd5604b1fb","['src/plugins/contacts/wince/contactconversions.cpp', 'src/plugins/contacts/jsondb/jsondb.pro', 'src/contacts/requests/qcontactremoverequest.cpp', 'src/imports/contacts/qdeclarativecontactmodel.cpp', 'src/contacts/qcontactchangeset.h', 'doc/src/snippets/qtcontactsdocsample/qtcontactsdocsample.cpp', 'src/plugins/contacts/jsondb/qcontactjsondbid.h', 'src/plugins/contacts/jsondb/qcontactjsondbid.cpp', 'doc/src/contacts.qdoc', 'src/contacts/requests/qcontactrequests.h', 'src/contacts/filters/qcontactidfilter_p.h', 'src/contacts/contacts.pro', 'src/plugins/contacts/jsondb/qcontactjsondbrequesthandler.h', 'src/contacts/qcontactmanager.cpp', 'src/contacts/qcontactchangeset.cpp', 'src/contacts/qcontactid.h', 'src/imports/contacts/qdeclarativecontactimageprovider.cpp', 'src/contacts/filters/qcontactidfilter.cpp', 'tests/auto/qcontactasync/unittest/tst_qcontactasync.cpp', 'src/contacts/qcontactmanager_p.cpp', 'src/contacts/engines/qcontactsimulatorbackend.cpp', 'src/imports/contacts/plugin.cpp', 'doc/src/snippets/qtversitdocsample/qtversitdocsample.cpp', 'src/imports/contacts/filters/qdeclarativecontactidfilter_p.h', 'src/contacts/qcontactmanagerengine.cpp', 'src/plugins/contacts/wince/qcontactrequestworker.cpp', 'tests/auto/qcontactasync/maliciousplugin/maliciousplugin_p.h', 'src/contacts/qcontactobserver.h', 'tests/auto/qdeclarativecontact/qdeclarativecontact.pro', 'src/plugins/contacts/jsondb/qcontactjsondbstring.h', 'src/contacts/requests/qcontactidfetchrequest.h', 'tests/auto/qcontactfilter/tst_qcontactfilter.cpp', 'src/contacts/requests/qcontactfetchbyidrequest.h', 'tests/auto/qcontactmanager/tst_qcontactmanager.cpp', 'src/imports/contacts/filters/qdeclarativecontactfiltermoc.cpp', 'src/contacts/qcontactmanagerenginev2wrapper_p.cpp', 'src/contacts/engines/qcontactmemorybackenddata_simulator.cpp', 'src/contacts/qcontactengineid.h', 'src/contacts/qcontactmanager.h', 'src/imports/contacts/filters/filters.pri', 'src/plugins/contacts/jsondb/qcontactjsondbconverter.cpp', 'src/plugins/contacts/jsondb/qcontactjsondbstring.cpp', 'src/contacts/qcontact.cpp', 'src/contacts/qcontactabstractrequest.h', 'src/contacts/engines/qcontactmemorybackenddata_simulator_p.h', 'doc/src/snippets/qtcontactsdocsample/qtcontactsdocsampleasync.cpp', 'src/imports/contacts/filters/qdeclarativecontactfilters_p.h', 'src/contacts/qcontactfilter.cpp', 'doc/src/contactssync.qdoc', 'src/plugins/contacts/jsondb/qcontactjsondbrequesthandler.cpp', 'src/plugins/contacts/memory/qcontactmemorybackend.cpp', 'src/contacts/qcontactabstractrequest.cpp', 'src/contacts/qcontactmanagerenginefactory.h', 'src/contacts/filters/qcontactfilters.h', 'src/plugins/contacts/memory/qcontactmemorybackend_p.h', 'src/imports/contacts/qdeclarativecontact.cpp', 'src/plugins/contacts/jsondb/qcontactjsondbengine.h', 'src/contacts/engines/qcontactsimulatorbackend_p.h', 'tests/auto/qcontactasync/maliciousplugin/maliciousplugin.cpp', 'src/contacts/qcontactmanagerengine.h', 'tests/auto/qmlcontacts/testcases/tst_contacts_jsondb_to_model_notification_e2e.qml', 'doc/src/contactsusage.qdoc', 'src/plugins/contacts/jsondb/qcontactjsondbenginefactory.cpp', 'src/contacts/filters/filters.pri', 'src/imports/contacts/qdeclarativecontactfilter_p.h', 'tests/auto/qcontactasync/jsondbtests/tst_qcontactjsondbasync.cpp', 'src/plugins/contacts/jsondb/qcontactjsondbenginefactory.h', 'src/contacts/filters/qcontactidfilter.h', 'src/contacts/qcontactengineid.cpp', 'src/imports/contacts/qdeclarativecontact_p.h', 'src/contacts/requests/qcontactfetchbyidrequest.cpp', 'src/plugins/contacts/wince/qcontactrequestworker.h', 'tests/auto/qcontactmanagerplugins/dummyplugin/dummyplugin.h', 'tests/auto/qcontactmanagerdataholder.h', 'src/contacts/qcontactmanager_p.h', 'src/contacts/qcontactchangeset_p.h', 'src/plugins/contacts/jsondb/qcontactjsondbengine.cpp', 'src/contacts/qcontact.h', 'src/imports/contacts/qdeclarativecontactfilter.cpp', 'src/contacts/contactconnection_simulator.cpp', 'src/contacts/requests/qcontactrequests_p.h', 'src/plugins/contacts/wince/qcontactwincebackend_p.h', 'src/contacts/qcontactid.cpp', 'src/contacts/requests/requests.pri', 'src/imports/contacts/qdeclarativecontactmodel_p.h', 'doc/src/contactsasync.qdoc', 'src/imports/contacts/qdeclarativecontactrelationshipmodel.cpp', 'src/contacts/qcontactfilter.h', 'src/contacts/requests/qcontactidfetchrequest.cpp', 'src/contacts/requests/qcontactremoverequest.h', 'src/contacts/qcontactmanagerenginev2wrapper_p.h', 'src/contacts/qcontactobserver.cpp', 'src/plugins/contacts/jsondb/qcontactjsondbconverter.h', 'examples/qmlcontacts-components/contacts.qml', 'src/plugins/contacts/wince/qcontactwincebackend.cpp', 'tests/auto/qcontactmanagerplugins/dummyplugin/dummyplugin.cpp']",,"feature; deprecat; test,refactor,resource","feature 
",bug;feature;test;
11027.0,11027.0,feature,Friedemann Kleint,Debugger: Improve type formats dialog.,"Debugger: Improve type formats dialog.

- Add title, suppress whatsthis, change layout to grid.

Change-Id: I2a6819c913321062c050bebdc84799f847e9bc13",['src/plugins/debugger/debuggerdialogs.cpp'],"{""debuggerdialogs.cpp"": ""@@ -65,6 +65,7 @@\n #include <QtGui/QScrollArea>\n #include <QtGui/QSortFilterProxyModel>\n #include <QtGui/QStandardItemModel>\n+#include <QtGui/QGridLayout>\n \n using namespace Utils;\n \n@@ -989,38 +990,33 @@ class TypeFormatsDialogPage : public QWidget\n public:\n     TypeFormatsDialogPage()\n     {\n-        m_layout = new QVBoxLayout;\n-        m_layout->setMargin(5);\n-        m_layout->setSpacing(0);\n-        m_layout->addItem(new QSpacerItem(1, 1, QSizePolicy::MinimumExpanding,\n-            QSizePolicy::MinimumExpanding));\n-        setLayout(m_layout);\n+        m_layout = new QGridLayout;\n+        m_layout->setColumnStretch(0, 2);\n+        QVBoxLayout *vboxLayout = new QVBoxLayout;\n+        vboxLayout->addLayout(m_layout);\n+        vboxLayout->addItem(new QSpacerItem(1, 1, QSizePolicy::Ignored,\n+                                            QSizePolicy::MinimumExpanding));\n+        setLayout(vboxLayout);\n     }\n \n     void addTypeFormats(const QString &type,\n         const QStringList &typeFormats, int current)\n     {\n-        QHBoxLayout *hl = new QHBoxLayout;\n+        const int row = m_layout->rowCount();\n+        int column = 0;\n         QButtonGroup *group = new QButtonGroup(this);\n-        QLabel *typeLabel = new QLabel(type, this);\n-        hl->addWidget(typeLabel);\n+        m_layout->addWidget(new QLabel(type), row, column++);\n         for (int i = -1; i != typeFormats.size(); ++i) {\n             QRadioButton *choice = new QRadioButton(this);\n-            if (i == -1)\n-                choice->setText(tr(\""Reset\""));\n-            else\n-                choice->setText(typeFormats.at(i));\n-            hl->addWidget(choice);\n+            choice->setText(i == -1 ? tr(\""Reset\"") : typeFormats.at(i));\n+            m_layout->addWidget(choice, row, column++);\n             if (i == current)\n                 choice->setChecked(true);\n             group->addButton(choice, i);\n         }\n-        hl->addItem(new QSpacerItem(1, 1, QSizePolicy::MinimumExpanding,\n-            QSizePolicy::MinimumExpanding));\n-        m_layout->insertLayout(m_layout->count() - 1, hl);\n     }\n private:\n-    QVBoxLayout *m_layout;\n+    QGridLayout *m_layout;\n };\n \n class TypeFormatsDialogUi\n@@ -1069,6 +1065,8 @@ private:\n TypeFormatsDialog::TypeFormatsDialog(QWidget *parent)\n    : QDialog(parent), m_ui(new TypeFormatsDialogUi(this))\n {\n+    setWindowTitle(tr(\""Type Formats\""));\n+    setWindowFlags(windowFlags() & ~Qt::WindowContextHelpButtonHint);\n     m_ui->addPage(tr(\""Qt Types\""));\n     m_ui->addPage(tr(\""Standard Types\""));\n     m_ui->addPage(tr(\""Misc Types\""));\n""}",feature,"feature, refactor 
",bug;
18444.0,18444.0,feature,Joerg Bornemann,print error location on rule artifact binding error,"print error location on rule artifact binding error

Change-Id: Ic474357cbd9929856464a2c1bd79b1d3b3dfddea","['src/lib/buildgraph/buildgraph.cpp', 'src/lib/language/language.cpp', 'src/lib/language/loader.cpp', 'src/lib/language/language.h', 'src/lib/tools/persistence.cpp']","{""buildgraph.cpp"": ""@@ -513,12 +513,13 @@ void BuildGraph::applyRule(BuildProduct *product, QMap<QString, QSet<Artifact *>\n \n         QVariantMap artifactModulesCfg = outputArtifact->configuration->value().value(\""modules\"").toMap();\n         for (int i=0; i < ra->bindings.count(); ++i) {\n-            const QStringList &name = ra->bindings.at(i).first;\n-            const QString &code = ra->bindings.at(i).second;\n-            scriptValue = scriptEngine()->evaluate(code);\n-            if (scriptValue.isError())\n-                throw Error(QLatin1String(\""evaluating rule bindings: \"") + scriptValue.toString());\n-            setConfigProperty(artifactModulesCfg, name, scriptValue.toVariant());\n+            const RuleArtifact::Binding &binding = ra->bindings.at(i);\n+            scriptValue = scriptEngine()->evaluate(binding.code);\n+            if (scriptValue.isError()) {\n+                QString msg = QLatin1String(\""evaluating rule binding '%1': %2\"");\n+                throw Error(msg.arg(binding.name.join(QLatin1String(\"".\"")), scriptValue.toString()), binding.location);\n+            }\n+            setConfigProperty(artifactModulesCfg, binding.name, scriptValue.toVariant());\n         }\n         QVariantMap outputArtifactConfiguration = outputArtifact->configuration->value();\n         outputArtifactConfiguration.insert(\""modules\"", artifactModulesCfg);\n"", ""language.cpp"": ""@@ -117,7 +117,16 @@ void RuleArtifact::load(PersistentPool &pool, PersistentObjectData &data)\n     QDataStream s(data);\n     s >> fileScript;\n     s >> fileTags;\n-    s >> bindings;\n+\n+    int i;\n+    s >> i;\n+    bindings.clear();\n+    bindings.reserve(i);\n+    Binding binding;\n+    for (; --i >= 0;) {\n+        s >> binding.name >> binding.code >> binding.location;\n+        bindings += binding;\n+    }\n }\n \n void RuleArtifact::store(PersistentPool &pool, PersistentObjectData &data) const\n@@ -126,7 +135,12 @@ void RuleArtifact::store(PersistentPool &pool, PersistentObjectData &data) const\n     QDataStream s(&data, QIODevice::WriteOnly);\n     s << fileScript;\n     s << fileTags;\n-    s << bindings;\n+\n+    s << bindings.count();\n+    for (int i = bindings.count(); --i >= 0;) {\n+        const Binding &binding = bindings.at(i);\n+        s << binding.name << binding.code << binding.location;\n+    }\n }\n \n void RuleScript::load(PersistentPool &, PersistentObjectData &data)\n"", ""language.h"": ""@@ -112,7 +112,15 @@ public:\n     typedef QSharedPointer<RuleArtifact> Ptr;\n     QString fileScript;\n     QStringList fileTags;\n-    QList<QPair<QStringList, QString> > bindings;\n+\n+    struct Binding\n+    {\n+        QStringList name;\n+        QString code;\n+        CodeLocation location;\n+    };\n+\n+    QList<Binding> bindings;\n \n private:\n     void load(qbs::PersistentPool &pool, qbs::PersistentObjectData &data);\n"", ""loader.cpp"": ""@@ -2051,7 +2051,12 @@ Rule::Ptr Loader::resolveRule(EvaluationObject *object, ResolvedModule::Ptr modu\n             foreach (const Binding &binding, origArtifactObj->bindings) {\n                 if (binding.name.length() <= 1)\n                     continue;\n-                artifact->bindings.append(qMakePair(binding.name, binding.valueSource.sourceCode()));\n+                RuleArtifact::Binding rabinding;\n+                rabinding.name = binding.name;\n+                rabinding.code = binding.valueSource.sourceCode();\n+                rabinding.location.fileName = binding.valueSource.fileName();\n+                rabinding.location.line = binding.valueSource.firstLineNumber();\n+                artifact->bindings.append(rabinding);\n             }\n         } else if (hashChildPrototypeName == hashName_TransformProperties) {\n             addTransformPropertiesToRule(rule, child->instantiatingObject());\n"", ""persistence.cpp"": ""@@ -42,7 +42,7 @@\n \n namespace qbs {\n \n-static const char QBS_PERSISTENCE_MAGIC[] = \""QBSPERSISTENCE0_0_1__3\"";\n+static const char QBS_PERSISTENCE_MAGIC[] = \""QBSPERSISTENCE0_0_1__4\"";\n \n PersistentPool::PersistentPool()\n {\n""}",feature,"bug 
",others;
1132.0,1132.0,deprecat; refactor,Julian de Bhal,Remove redundant signal from QDeclarativeItem3d,"Remove redundant signal from QDeclarativeItem3d

Change-Id: I2cb2ca93a4cd033a88496fd39e80689771b4f22e",['src/quick3d/qdeclarativeitem3d.h'],"{""qdeclarativeitem3d.h"": ""@@ -182,7 +182,6 @@ Q_SIGNALS:\n     void meshNodeChanged();\n     void effectChanged();\n     void lightChanged();\n-    void stateChanged(const QString &);\n     void clicked();\n     void doubleClicked();\n     void pressed();\n""}",deprecat; refactor,"refactor 
",deprecat;
21530.0,21530.0,"test,bug",Pekka Kauppila,Fixed test reliability problems caused by tst_organizeraudiblereminder.qml,"Fixed test reliability problems caused by tst_organizeraudiblereminder.qml

Change-Id: I68775c66603705b7cd49a36205eb300a723a130c","['tests/auto/organizer/qmlorganizer/testcases/tst_organizeraudiblereminder.qml', 'tests/auto/organizer/qmlorganizer/testcases/QOrganizerTestUtility.qml']","{""QOrganizerTestUtility.qml"": ""@@ -84,7 +84,9 @@ TestCase {\n     function waitModelChange(expect_count, waitModelSignalType) {\n         var count = 0;\n         if (Number(waitModelSignalType) == itemChange || waitModelSignalType === undefined ) {\n-            if (__model.itemCount < expect_count) {\n+            if (expect_count === undefined) {\n+                organizerChangedSpy.wait(signalWaitTime);\n+            } else if (__model.itemCount < expect_count) {\n                 do {\n                     organizerChangedSpy.wait(signalWaitTime);\n                     count ++;\n"", ""tst_organizeraudiblereminder.qml"": ""@@ -121,6 +121,7 @@ Rectangle {\n \n                 var audibleReminderDetail = Qt.createQmlObject(data.code , event);\n                 utility.init(model);\n+                utility.waitModelChange();\n                 utility.empty_calendar();\n                 //------Create and save the detail test------//\n                 utility.debug(\""Create and save the detail test\"", debugFlag);\n@@ -144,7 +145,7 @@ Rectangle {\n                 model.saveItem(event);\n                 //Let's wait for the model to be up-to-date\n                 utility.waitModelChange(1);\n-                compare(model.itemCount, 1)\n+                compare(model.itemCount, 1);\n \n                 var fetchlist = model.items;\n                 var savedEvent = fetchlist[0];\n@@ -189,12 +190,12 @@ Rectangle {\n                     utility.outputDetail(detailRemovedEvent.detail(Detail.AudibleReminder));\n                 verify(detailRemovedEventDetailList.length == 0)\n                 verify(removeEventDetail != undefined)\n+                utility.empty_calendar();\n                 utility.organizerChangedSpy.clear();\n                 utility.organizerChangedSpy.destroy();\n                 model.destroy();\n                 event.destroy();\n                 audibleReminderDetail.destroy();\n- //               utility.empty_calendar();\n             }\n         }\n     }\n""}","test,bug","**test, bug** 
",bug;resource;test;
15336.0,15336.0,"bug,merge",Sean Harmer,Fix compilation on QNX.,"Fix compilation on QNX.

Cherry picked commit 144de35b8c770d6698e1e6a11a37cbcc24ca4e8b from Qt
4.8

Change-Id: I6880436b54cc1c8ab6ecb64727316f422dcf5ee8","['src/3rdparty/javascriptcore/JavaScriptCore/wtf/Threading.h', 'src/3rdparty/javascriptcore/JavaScriptCore/wtf/HashTable.h']","{""HashTable.h"": ""@@ -257,8 +257,8 @@ namespace WTF {\n \n     using std::swap;\n \n-#if !COMPILER(MSVC)\n-    // Visual C++ has a swap for pairs defined.\n+#if !COMPILER(MSVC) && !OS(QNX)\n+    // The Dinkumware C++ library (used by MSVC and QNX) has a swap for pairs defined.\n \n     // swap pairs by component, in case of pair members that specialize swap\n     template<typename T, typename U> inline void swap(pair<T, U>& a, pair<T, U>& b)\n"", ""Threading.h"": ""@@ -75,6 +75,8 @@\n #include <libkern/OSAtomic.h>\n #elif OS(ANDROID)\n #include <cutils/atomic.h>\n+#elif OS(QNX)\n+#include <atomic.h>\n #elif COMPILER(GCC) && !OS(SYMBIAN)\n #if (__GNUC__ > 4) || ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 2))\n #include <ext/atomicity.h>\n@@ -239,6 +241,12 @@ inline int atomicDecrement(int volatile* addend) { return OSAtomicDecrement32Bar\n inline int atomicIncrement(int volatile* addend) { return android_atomic_inc(addend); }\n inline int atomicDecrement(int volatile* addend) { return android_atomic_dec(addend); }\n \n+#elif OS(QNX)\n+\n+// component functions take and return unsigned\n+inline int atomicIncrement(int volatile* addend) { return (int) atomic_add_value((unsigned volatile*)addend, 1); }\n+inline int atomicDecrement(int volatile* addend) { return (int) atomic_sub_value((unsigned volatile*)addend, 1); }\n+\n #elif COMPILER(GCC) && !CPU(SPARC64) && !OS(SYMBIAN) // sizeof(_Atomic_word) != sizeof(int) on sparc64 gcc\n #define WTF_USE_LOCKFREE_THREADSAFESHARED 1\n \n""}","bug,merge","bug 
",bug;
24137.0,24137.0,bug,Erik Verbruggen,Fix out-of-memory crash when indenting generated tokens.,"Fix out-of-memory crash when indenting generated tokens.

Generated tokens do not have a position in any source file, so not try
to indent them. Previously, the 'source' used was the scratch buffer,
which would not contain newlines, so the indent depth would be the
length of the scratch buffer at that point.

Task-number: QTCREATORBUG-7262
Change-Id: If94213d6dffd13dd2b47c7038ec2398ad925d904","['src/libs/cplusplus/PPToken.h', 'tests/auto/cplusplus/preprocessor/data/identifier-expansion.3.out.cpp', 'src/libs/cplusplus/pp-engine.cpp']","{""PPToken.h"": ""@@ -96,8 +96,11 @@ public:\n     const QByteArray &source() const\n     { return m_src; }\n \n-    const char *start() const\n-    { return m_src.constData() + offset; }\n+    const char *bufferStart() const\n+    { return m_src.constData(); }\n+\n+    const char *tokenStart() const\n+    { return bufferStart() + offset; }\n \n     ByteArrayRef asByteArrayRef() const\n     { return ByteArrayRef(&m_src, offset, length()); }\n"", ""pp-engine.cpp"": ""@@ -851,7 +851,7 @@ bool Preprocessor::handleFunctionLikeMacro(PPToken *tk, const Macro *macro, QVec\n                                 lineno = t.lineno;\n                             else if (t.whitespace())\n                                 newText.append(' ');\n-                            newText.append(t.start(), t.length());\n+                            newText.append(t.tokenStart(), t.length());\n                         }\n                         newText.replace(\""\\\\\"", \""\\\\\\\\\"");\n                         newText.replace(\""\\\""\"", \""\\\\\\\""\"");\n@@ -972,8 +972,8 @@ _Lrestart:\n             } else if (tk.isValid() && !prevTk.isValid() && tk.lineno == m_env->currentLine) {\n                 out(QByteArray(prevTk.length() + (tk.whitespace() ? 1 : 0), ' '));\n             } else if (prevTk.generated() != tk.generated() || !prevTk.isValid()) {\n-                const char *begin = tk.source().constBegin();\n-                const char *end = begin + tk.offset;\n+                const char *begin = tk.bufferStart();\n+                const char *end = tk.tokenStart();\n                 const char *it = end - 1;\n                 for (; it >= begin; --it)\n                     if (*it == '\\n')\n@@ -982,8 +982,8 @@ _Lrestart:\n                 for (; it < end; ++it)\n                     out(' ');\n             } else {\n-                const char *begin = tk.source().constBegin();\n-                const char *end = begin + tk.offset;\n+                const char *begin = tk.bufferStart();\n+                const char *end = tk.tokenStart();\n                 const char *it = end - 1;\n                 for (; it >= begin; --it)\n                     if (!pp_isspace(*it) || *it == '\\n')\n@@ -1501,6 +1501,14 @@ bool Preprocessor::isQtReservedWord(const ByteArrayRef &macroId)\n \n PPToken Preprocessor::generateToken(enum Kind kind, const char *content, int len, unsigned lineno, bool addQuotes)\n {\n+    // When reconstructing the column position of a token,\n+    // Preprocessor::preprocess will search for the last preceeding newline.\n+    // When the token is a generated token, the column position cannot be\n+    // reconstructed, but we also have to prevent it from searching the whole\n+    // scratch buffer. So inserting a newline before the new token will give\n+    // an indent width of 0 (zero).\n+    m_scratchBuffer.append('\\n');\n+\n     const size_t pos = m_scratchBuffer.size();\n \n     if (kind == T_STRING_LITERAL && addQuotes)\n@@ -1532,8 +1540,8 @@ PPToken Preprocessor::generateConcatenated(const PPToken &leftTk, const PPToken\n {\n     QByteArray newText;\n     newText.reserve(leftTk.length() + rightTk.length());\n-    newText.append(leftTk.start(), leftTk.length());\n-    newText.append(rightTk.start(), rightTk.length());\n+    newText.append(leftTk.tokenStart(), leftTk.length());\n+    newText.append(rightTk.tokenStart(), rightTk.length());\n     return generateToken(T_IDENTIFIER, newText.constData(), newText.size(), leftTk.lineno, true);\n }\n \n"", ""identifier-expansion.3.out.cpp"": ""@@ -11,7 +11,7 @@ op_ADD, op_SUB,\n static const char *names[] = {\n #gen true\n # 2 \""data/identifier-expansion.3.cpp\""\n-            \""ADD\""\n+\""ADD\""\n \n \n ,\n""}",bug,"bug 
",bug;
18258.0,18258.0,bug,Martin Smith,qdoc3: Add the \b command for rendering bold text.,"qdoc3: Add the \b command for rendering bold text.

\bold was already implemented as a command, and it remains,
but now \b is added.

Task-number:  QTBUG-24578
Change-Id: Id6d7675c23fb922b6ee7203a2e45d8219f717518",['tools/qdoc3/doc.cpp'],"{""doc.cpp"": ""@@ -78,6 +78,7 @@ enum {\n     CMD_A,\n     CMD_ABSTRACT,\n     CMD_ANNOTATEDLIST,\n+    CMD_B,\n     CMD_BADCODE,\n     CMD_BASENAME,\n     CMD_BOLD,\n@@ -191,6 +192,7 @@ static struct {\n     { \""a\"", CMD_A, 0 },\n     { \""abstract\"", CMD_ABSTRACT, 0 },\n     { \""annotatedlist\"", CMD_ANNOTATEDLIST, 0 },\n+    { \""b\"", CMD_B, 0 },\n     { \""badcode\"", CMD_BADCODE, 0 },\n     { \""basename\"", CMD_BASENAME, 0 }, // ### don't document for now\n     { \""bold\"", CMD_BOLD, 0 },\n@@ -635,6 +637,7 @@ void DocParser::parse(const QString& source,\n                         leavePara();\n                         insertBaseName(getArgument());\n                         break;\n+                    case CMD_B:\n                     case CMD_BOLD:\n                         startFormat(ATOM_FORMATTING_BOLD, cmd);\n                         break;\n""}",bug,"feature 
",bug;feature;
7513.0,7513.0,"feature,bug",Friedemann Kleint,Windows: More fine-grained paint event handling.,"Windows: More fine-grained paint event handling.

Pass expose events to GL widgets, handle invalid
update rectangles, ignore WM_ERASEBKND (using code from 4.8).

Change-Id: Ide062efb392292fff556d37b0ef0e880676748a2","['src/plugins/platforms/windows/qwindowscontext.cpp', 'src/plugins/platforms/windows/qwindowswindow.h', 'src/plugins/platforms/windows/qwindowswindow.cpp']","{""qwindowscontext.cpp"": ""@@ -680,8 +680,7 @@ bool QWindowsContext::windowsProc(HWND hwnd, UINT message,\n         }\n         break;\n     case QtWindows::ExposeEvent:\n-        platformWindow->handleWmPaint(hwnd, message, wParam, lParam);\n-        return true;\n+        return platformWindow->handleWmPaint(hwnd, message, wParam, lParam);\n     case QtWindows::MouseWheelEvent:\n     case QtWindows::MouseEvent:\n     case QtWindows::NonClientMouseEvent:\n"", ""qwindowswindow.cpp"": ""@@ -942,12 +942,22 @@ void QWindowsWindow::releaseDC()\n     }\n }\n \n-void QWindowsWindow::handleWmPaint(HWND hwnd, UINT,\n+bool QWindowsWindow::handleWmPaint(HWND hwnd, UINT message,\n                                          WPARAM, LPARAM)\n {\n+    // Ignore invalid update bounding rectangles\n+    if (!GetUpdateRect(m_data.hwnd, 0, FALSE))\n+        return false;\n+    if (message == WM_ERASEBKGND) // Backing store - ignored.\n+        return true;\n     PAINTSTRUCT ps;\n     if (testFlag(OpenGLSurface)) {\n-        BeginPaint(hwnd, &ps); // WM_ERASEBKGND needs to be handled.\n+        // Observed painting problems with Aero style disabled (QTBUG-7865).\n+        if (testFlag(OpenGLDoubleBuffered))\n+            InvalidateRect(hwnd, 0, false);\n+        BeginPaint(hwnd, &ps);\n+        QWindowSystemInterface::handleSynchronousExposeEvent(window(),\n+                                                             QRegion(qrectFromRECT(ps.rcPaint)));\n         EndPaint(hwnd, &ps);\n     } else {\n         releaseDC();\n@@ -963,6 +973,7 @@ void QWindowsWindow::handleWmPaint(HWND hwnd, UINT,\n         m_hdc = 0;\n         EndPaint(hwnd, &ps);\n     }\n+    return true;\n }\n \n void QWindowsWindow::setWindowTitle(const QString &title)\n"", ""qwindowswindow.h"": ""@@ -156,7 +156,7 @@ public:\n         { return GetWindowLongPtr(m_data.hwnd, GWL_EXSTYLE); }\n     void setExStyle(unsigned s) const;\n \n-    void handleWmPaint(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam);\n+    bool handleWmPaint(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam);\n \n     void handleMoved();\n     void handleResized(int wParam);\n""}","feature,bug","bug,feature 
",feature;
3230.0,3230.0,test,Rohan McGovern [inactive],QtQA::TestScript: increased all exe-related verbosity by 1,"QtQA::TestScript: increased all exe-related verbosity by 1

Log the commands we run by default.  Without this, it is too hard to
figure out what the test script is doing.

Change-Id: Idfab17d3dce2f4a72f1e95926b1b677765d46e73","['scripts/lib/perl5/QtQA/t/30-TestScript-reliable-exe.t', 'scripts/lib/perl5/QtQA/TestScript.pm', 'scripts/lib/perl5/QtQA/t/10-TestScript.t']","{""TestScript.pm"": ""@@ -220,7 +220,7 @@ sub exe\n \n     local @ENV{@property_env_keys} = values %{$self->{resolved_property}};\n \n-    $self->print_when_verbose(1, '+ ', join(' ', @command), \""\\n\"");\n+    $self->print_when_verbose(0, '+ ', join(' ', @command), \""\\n\"");\n     $self->_reliable_exe( \\%options, @command );\n \n     return;\n@@ -381,7 +381,7 @@ sub exe_qx\n {\n     my ($self, @command) = @_;\n \n-    $self->print_when_verbose(2, \""qx @command\\n\"");\n+    $self->print_when_verbose(1, \""qx @command\\n\"");\n \n     my $stdout;\n     my $stderr;\n@@ -391,14 +391,14 @@ sub exe_qx\n         ($stdout, $stderr) = capture {\n             $status = system( @command );\n         };\n-        $self->print_when_verbose(3, \""qx stdout:\\n$stdout\\n\""\n+        $self->print_when_verbose(2, \""qx stdout:\\n$stdout\\n\""\n                                     .\""qx stderr:\\n$stderr\\n\"");\n     }\n     else {\n         $stdout = capture_merged {\n             $status = system( @command );\n         };\n-        $self->print_when_verbose(3, \""qx stdout & stderr:\\n$stdout\\n\"" );\n+        $self->print_when_verbose(2, \""qx stdout & stderr:\\n$stdout\\n\"" );\n     }\n \n     if ($status != 0) {\n"", ""10-TestScript.t"": ""@@ -230,6 +230,7 @@ sub test_exe\n         'use Data::Dumper; print Dumper(\\@ARGV);',\n         @TEST_EXE_ARGS1,\n     );\n+    my $expected_log = \""+ @good_cmd\\n$TEST_EXE_ARGS1_DUMP\"";\n \n     # We invoke a subprocess which uses Data::Dumper to print out all\n     # arguments.  This is a simple way to check unambiguously what args\n@@ -239,7 +240,7 @@ sub test_exe\n \n     TODO: {\n         local $TODO = 'fix or document argument passing on Windows' if $WINDOWS;\n-        is( $stdout, $TEST_EXE_ARGS1_DUMP, 'exe passes arguments correctly'   );\n+        is( $stdout, $expected_log, 'exe passes arguments correctly'   );\n     }\n     is( $stderr, q{},                  'no unexpected warnings or stderr' );\n \n@@ -251,7 +252,6 @@ sub test_exe\n     # exe should print out one line before running the command, like this:\n     #   + cmd with each arg separated by space\n     # Note it currently does not attempt to print args with whitespace unambiguously\n-    my $expected_log = \""+ @good_cmd\\n$TEST_EXE_ARGS1_DUMP\"";\n     TODO: {\n         local $TODO = 'fix or document argument passing on Windows' if $WINDOWS;\n         is( $stdout, $expected_log, 'exe logs correctly' );\n@@ -313,7 +313,7 @@ sub test_exe_qx\n \n \n \n-    # If verbose 1, makes no difference (exe_qx is intentionally quieter than exe)\n+    # If verbose 1, command will be logged before it is run.\n     $script->get_options_from_array(['--verbose']);\n \n     lives_ok(\n@@ -331,36 +331,12 @@ sub test_exe_qx\n         is( $merged, $test_merged, 'merged output OK (verbose1)'                  );\n     }\n \n-    ok( !$log_stdout, 'no log output (verbose1)' );\n-    ok( !$log_stderr, 'no log error (verbose1)'  );\n-\n-\n-\n-    # If verbose 2, command will be logged before it is run.\n-    # Note this `--verbose' accumulates on top of the previous.\n-    $script->get_options_from_array(['--verbose']);\n-\n-    lives_ok(\n-        sub {\n-            capture { ($stdout, $stderr) = $script->exe_qx(@good_cmd) } \\$log_stdout, \\$log_stderr;\n-            capture { $merged = $script->exe_qx(@good_cmd) };           # discard any log output\n-        },\n-        'successful command lives (verbose2)'\n-    );\n-\n-    is( $stderr, $test_stderr, 'stderr OK (verbose2)' );\n-    TODO: {\n-        local $TODO = 'fix or document argument passing on Windows' if $WINDOWS;\n-        is( $stdout, $test_stdout, 'exe_qx passes arguments correctly (verbose2)' );\n-        is( $merged, $test_merged, 'merged output OK (verbose2)'                  );\n-    }\n-\n-    is( $log_stdout, \""qx @good_cmd\\n\"", 'log output OK (verbose2)' );\n-    ok( !$log_stderr,                  'no log error (verbose2)'  );\n+    is( $log_stdout, \""qx @good_cmd\\n\"", 'log output OK (verbose1)' );\n+    ok( !$log_stderr,                  'no log error (verbose1)'  );\n \n \n \n-    # If verbose 3, command will be logged before it is run, and stdout/stderr is logged\n+    # If verbose 2, command will be logged before it is run, and stdout/stderr is logged\n     # after it is run.  We need to test the log for merged vs non-merged independently here.\n     $script->get_options_from_array(['--verbose']);\n \n"", ""30-TestScript-reliable-exe.t"": ""@@ -87,6 +87,13 @@ sub run_one_test\n         );\n     };\n \n+    # First line of stdout should always be the command.\n+    my $logged_command = quotemeta( '+ '.join(' ', @{$command}) );\n+    like( $stdout, qr{\\A $logged_command \\n}xms, \""$testname stdout first line looks correct\"" );\n+\n+    # Remove first line for subsequent comparison\n+    $stdout =~ s{\\A [^\\n]+ \\n}{}xms;\n+\n     is_or_like( $stdout,  $expected_stdout,  \""$testname stdout looks correct\"" );\n     is_or_like( $stderr,  $expected_stderr,  \""$testname stderr looks correct\"" );\n \n""}",test,"test
",resource;test;
17554.0,17554.0,deprecat; test,"NOT IN USE, DO NOT ADD (was Bradley T. Hughes)",Remove ARMFPA support and Q_DOUBLE_FORMAT detection,"Remove ARMFPA support and Q_DOUBLE_FORMAT detection

Remove the -armfpa option the config.tests/unix/doubleformat*
detection. The places where we used QT_ARMFPA and Q_DOUBLE_FORMAT
has been removed as well.

Rationale: ARM FPA with GCC doesn't not work with EABI. Qt currently
does not support compiling without EABI, making ARM FPA an
impossibility. It is unknown whether other compilers provide ARM FPA
support with EABI. Support for ARM FPA can be re-added in the future
should the need arise, but since ARM VFP is available for ARMv5 and up,
we should encourage implementors to instead use soft-floats or VFP.

Change-Id: I3671aba575118ae3e3e6d769759301c8f2f496f5","['config.tests/unix/doubleformat.test', 'tests/auto/corelib/tools/qlocale/tst_qlocale.cpp', 'tests/auto/other/compiler/tst_compiler.cpp', 'config.tests/unix/doubleformat/doubleformattest.pro', 'src/corelib/tools/qlocale_tools_p.h', 'configure', 'tests/auto/corelib/tools/qstring/tst_qstring.cpp', 'src/corelib/tools/qlocale_tools.cpp', 'config.tests/unix/doubleformat/doubleformattest.cpp', 'src/corelib/io/qdatastream.cpp', 'src/corelib/global/qnumeric_p.h']","{""doubleformat.test"": ""@@ -1,63 +0,0 @@\n-#!/bin/sh\n-\n-QMKSPEC=$1\n-VERBOSE=$2\n-SRCDIR=$3\n-OUTDIR=$4\n-\n-# debuggery\n-[ \""$VERBOSE\"" = \""yes\"" ] && echo \""Determining floating point  word-order... ($*)\""\n-\n-# build and run a test program\n-test -d \""$OUTDIR/config.tests/unix/doubleformat\"" || mkdir -p \""$OUTDIR/config.tests/unix/doubleformat\""\n-\""$OUTDIR/bin/qmake\"" -nocache -spec \""$QMKSPEC\"" \""QT_BUILD_TREE=$OUTDIR\"" \""$SRCDIR/config.tests/unix/doubleformat/doubleformattest.pro\"" -o \""$OUTDIR/config.tests/unix/doubleformat/Makefile\"" >/dev/null 2>&1\n-cd \""$OUTDIR/config.tests/unix/doubleformat\""\n-\n-DOUBLEFORMAT=\""UNKNOWN\""\n-[ \""$VERBOSE\"" = \""yes\"" ] && $MAKE || $MAKE >/dev/null 2>&1\n-\n-if [ -f ./doubleformattest ]; then\n-    : # nop\n-else\n-    [ \""$VERBOSE\"" = \""yes\"" ] && echo \""Unknown floating point format!\""\n-    exit 2\n-fi\n-\n-# LE: strings | grep 0123ABCD0123ABCD\n-# BE: strings | grep DCBA3210DCBA3210\n-# \n-# LE arm-swapped-dword-order: strings | grep ABCD0123ABCD0123\n-# BE arm-swapped-dword-order: strings | grep 3210DCBA3210DCBA (untested)\n-\n-\n-if strings ./doubleformattest | grep \""0123ABCD0123ABCD\"" >/dev/null 2>&1; then\n-    [ \""$VERBOSE\"" = \""yes\"" ] && echo \""     Normal little endian format\""\n-    DOUBLEFORMAT=\""LITTLE\""\n-elif strings ./doubleformattest | grep \""ABCD0123ABCD0123\"" >/dev/null 2>&1; then\n-    [ \""$VERBOSE\"" = \""yes\"" ] && echo \""     Swapped little endian format\""\n-    DOUBLEFORMAT=\""LITTLESWAPPED\""\n-elif strings ./doubleformattest | grep \""DCBA3210DCBA3210\"" >/dev/null 2>&1; then\n-    [ \""$VERBOSE\"" = \""yes\"" ] && echo \""     Normal big endian format\""\n-    DOUBLEFORMAT=\""BIG\""\n-elif strings ./doubleformattest | grep \""3210DCBA3210DCBA\"" >/dev/null 2>&1; then\n-    [ \""$VERBOSE\"" = \""yes\"" ] && echo \""     Swapped big endian format\""\n-    DOUBLEFORMAT=\""BIGSWAPPED\""\n-fi\n-\n-# done\n-if [ \""$DOUBLEFORMAT\"" = \""LITTLE\"" ]; then\n-    [ \""$VERBOSE\"" = \""yes\"" ] && echo \""Using little endian.\""\n-    exit 10\n-elif [ \""$DOUBLEFORMAT\"" = \""BIG\"" ]; then\n-    [ \""$VERBOSE\"" = \""yes\"" ] && echo \""Using big endian.\""\n-    exit 11\n-elif [ \""$DOUBLEFORMAT\"" = \""LITTLESWAPPED\"" ]; then\n-    [ \""$VERBOSE\"" = \""yes\"" ] && echo \""Using swapped little endian.\""\n-    exit 12\n-elif [ \""$DOUBLEFORMAT\"" = \""BIGSWAPPED\"" ]; then\n-    [ \""$VERBOSE\"" = \""yes\"" ] && echo \""Using swapped big endian.\""\n-    exit 13\n-else\n-    [ \""$VERBOSE\"" = \""yes\"" ] && echo \""Unknown floating point format!\""\n-    exit 99\n-fi\n"", ""doubleformattest.cpp"": ""@@ -1,66 +0,0 @@\n-/****************************************************************************\n-**\n-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n-** Contact: http://www.qt-project.org/\n-**\n-** This file is part of the config.tests of the Qt Toolkit.\n-**\n-** $QT_BEGIN_LICENSE:LGPL$\n-** GNU Lesser General Public License Usage\n-** This file may be used under the terms of the GNU Lesser General Public\n-** License version 2.1 as published by the Free Software Foundation and\n-** appearing in the file LICENSE.LGPL included in the packaging of this\n-** file. Please review the following information to ensure the GNU Lesser\n-** General Public License version 2.1 requirements will be met:\n-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n-**\n-** In addition, as a special exception, Nokia gives you certain additional\n-** rights. These rights are described in the Nokia Qt LGPL Exception\n-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n-**\n-** GNU General Public License Usage\n-** Alternatively, this file may be used under the terms of the GNU General\n-** Public License version 3.0 as published by the Free Software Foundation\n-** and appearing in the file LICENSE.GPL included in the packaging of this\n-** file. Please review the following information to ensure the GNU General\n-** Public License version 3.0 requirements will be met:\n-** http://www.gnu.org/copyleft/gpl.html.\n-**\n-** Other Usage\n-** Alternatively, this file may be used in accordance with the terms and\n-** conditions contained in a signed written agreement between you and Nokia.\n-**\n-**\n-**\n-**\n-**\n-**\n-** $QT_END_LICENSE$\n-**\n-****************************************************************************/\n-\n-/*\n-\n-LE: strings | grep 0123ABCD0123ABCD\n-BE: strings | grep DCBA3210DCBA3210\n-\n-LE arm-swapped-dword-order: strings | grep ABCD0123ABCD0123\n-BE arm-swapped-dword-order: strings | grep 3210DCBA3210DCBA (untested)\n-\n-tested on x86, arm-le (gp), aix\n-\n-*/\n-\n-#include <stdlib.h>\n-\n-// equals static char c [] = \""0123ABCD0123ABCD\\0\\0\\0\\0\\0\\0\\0\""\n-static double d [] = { 710524581542275055616.0, 710524581542275055616.0, 0.0 };\n-\n-int main(int argc, char **argv)\n-{\n-    // make sure the linker doesn't throw away the arrays\n-    double *d2 = (double *) d;\n-    if (argc > 3)\n-        d[1] += 1;\n-    return d2[0] + d[2] + atof(argv[1]);\n-}\n"", ""doubleformattest.pro"": ""@@ -1,3 +0,0 @@\n-SOURCES = doubleformattest.cpp\n-CONFIG -= qt dylib\n-mac:CONFIG -= app_bundle\n"", ""configure"": ""@@ -803,8 +803,6 @@ CFG_QWS_DEPTHS=all\n CFG_ACCESSIBILITY=auto\n CFG_ENDIAN=auto\n CFG_HOST_ENDIAN=auto\n-CFG_DOUBLEFORMAT=auto\n-CFG_ARMFPA=auto\n CFG_IWMMXT=no\n CFG_NEON=auto\n CFG_CLOCK_GETTIME=auto\n@@ -999,7 +997,7 @@ while [ \""$#\"" -gt 0 ]; do\n         VAL=no\n         ;;\n     #Qt style yes options\n-    -incremental|-qvfb|-profile|-shared|-static|-sm|-xinerama|-xshape|-xsync|-xinput|-xinput2|-egl|-reduce-exports|-pch|-separate-debug-info|-stl|-freetype|-xcursor|-xfixes|-xrandr|-xrender|-mitshm|-fontconfig|-xkb|-xcb|-wayland|-nis|-dbus|-dbus-linked|-glib|-gstreamer|-gtkstyle|-cups|-iconv|-largefile|-h|-help|-v|-verbose|-debug|-release|-fast|-accessibility|-confirm-license|-gnumake|-framework|-debug-and-release|-exceptions|-harfbuzz|-prefix-install|-silent|-armfpa|-optimized-qmake|-dwarf2|-reduce-relocations|-sse|-openssl|-openssl-linked|-phonon-backend|-audio-backend|-declarative-debug|-javascript-jit|-rpath|-force-pkg-config|-icu|-force-asserts|-testcocoon)\n+    -incremental|-qvfb|-profile|-shared|-static|-sm|-xinerama|-xshape|-xsync|-xinput|-xinput2|-egl|-reduce-exports|-pch|-separate-debug-info|-stl|-freetype|-xcursor|-xfixes|-xrandr|-xrender|-mitshm|-fontconfig|-xkb|-xcb|-wayland|-nis|-dbus|-dbus-linked|-glib|-gstreamer|-gtkstyle|-cups|-iconv|-largefile|-h|-help|-v|-verbose|-debug|-release|-fast|-accessibility|-confirm-license|-gnumake|-framework|-debug-and-release|-exceptions|-harfbuzz|-prefix-install|-silent|-optimized-qmake|-dwarf2|-reduce-relocations|-sse|-openssl|-openssl-linked|-phonon-backend|-audio-backend|-declarative-debug|-javascript-jit|-rpath|-force-pkg-config|-icu|-force-asserts|-testcocoon)\n         VAR=`echo $1 | sed \""s,^-\\(.*\\),\\1,\""`\n         VAL=yes\n         ;;\n@@ -1306,13 +1304,6 @@ while [ \""$#\"" -gt 0 ]; do\n             UNKNOWN_OPT=yes\n         fi\n         ;;\n-    armfpa)\n-        if [ \""$VAL\"" = \""yes\"" ] || [ \""$VAL\"" = \""no\"" ]; then\n-            CFG_ARMFPA=\""$VAL\""\n-        else\n-            UNKNOWN_OPT=yes\n-        fi\n-        ;;\n     depths)\n         CFG_QWS_DEPTHS=\""$VAL\""\n         ;;\n@@ -3405,7 +3396,7 @@ Usage:  $relconf [-h] [-prefix <dir>] [-prefix-install] [-bindir <dir>] [-libdir\n         [-iconv] [-no-pch] [-pch] [-no-dbus] [-dbus] [-dbus-linked] [-no-gui]\n         [-no-separate-debug-info] [-no-mmx] [-no-3dnow] [-no-sse] [-no-sse2]\n         [-no-sse3] [-no-ssse3] [-no-sse4.1] [-no-sse4.2] [-no-avx] [-no-neon]\n-        [-qtnamespace <namespace>] [-qtlibinfix <infix>] [-separate-debug-info] [-armfpa]\n+        [-qtnamespace <namespace>] [-qtlibinfix <infix>] [-separate-debug-info]\n         [-no-phonon-backend] [-phonon-backend] [-no-media-backend] [-media-backend]\n         [-no-audio-backend] [-audio-backend]\n         [-no-javascript-jit] [-javascript-jit] [-no-declarative-debug] [-declarative-debug]\n@@ -3947,12 +3938,6 @@ if [ \""$PLATFORM_QWS\"" = \""yes\"" -o \""$PLATFORM_QPA\"" = \""yes\"" ]; then\n     -feature-<feature> .. Compile in <feature>. The available features\n                           are described in src/corelib/global/qfeatures.txt\n \n-    -armfpa ............. Target platform uses the ARM-FPA floating point format.\n-    -no-armfpa .......... Target platform does not use the ARM-FPA floating point format.\n-\n-                          The floating point format is usually autodetected by configure. Use this\n-                          to override the detected value.\n-\n     -little-endian ...... Target platform is little endian (LSB first).\n     -big-endian ......... Target platform is big endian (MSB first).\n \n@@ -5963,51 +5948,6 @@ if [ \""$CFG_HOST_ENDIAN\"" = \""auto\"" ]; then\n     fi\n fi\n \n-if [ \""$CFG_ARMFPA\"" != \""auto\"" ]; then\n-    if [ \""$CFG_ARMFPA\"" = \""yes\"" ]; then\n-        if [ \""$CFG_ENDIAN\"" = \""Q_LITTLE_ENDIAN\"" ]; then\n-            CFG_DOUBLEFORMAT=\""Q_DOUBLE_LITTLE_SWAPPED\""\n-        else\n-            CFG_DOUBLEFORMAT=\""Q_DOUBLE_BIG_SWAPPED\""\n-        fi\n-    else\n-        CFG_DOUBLEFORMAT=\""normal\""\n-    fi\n-fi\n-\n-\n-if [ \""$CFG_DOUBLEFORMAT\"" = \""auto\"" ]; then\n-    if [ \""$PLATFORM_QWS\"" != \""yes\"" -o \""$PLATFORM_QPA\"" = \""yes\"" ]; then\n-        CFG_DOUBLEFORMAT=normal\n-    else\n-        \""$unixtests/doubleformat.test\"" \""$XQMAKESPEC\"" $OPT_VERBOSE \""$relpath\"" \""$outpath\""\n-\tF=\""$?\""\n-        if [ \""$F\"" -eq 10 ] && [ \""$CFG_ENDIAN\"" = \""Q_LITTLE_ENDIAN\"" ]; then\n-            CFG_DOUBLEFORMAT=normal\n-        elif [ \""$F\"" -eq 11 ] && [ \""$CFG_ENDIAN\"" = \""Q_BIG_ENDIAN\"" ]; then\n-            CFG_DOUBLEFORMAT=normal\n-        elif [ \""$F\"" -eq 10 ]; then\n-            CFG_DOUBLEFORMAT=\""Q_DOUBLE_LITTLE\""\n-        elif [ \""$F\"" -eq 11 ]; then\n-            CFG_DOUBLEFORMAT=\""Q_DOUBLE_BIG\""\n-        elif [ \""$F\"" -eq 12 ]; then\n-            CFG_DOUBLEFORMAT=\""Q_DOUBLE_LITTLE_SWAPPED\""\n-            CFG_ARMFPA=\""yes\""\n-        elif [ \""$F\"" -eq 13 ]; then\n-            CFG_DOUBLEFORMAT=\""Q_DOUBLE_BIG_SWAPPED\""\n-            CFG_ARMFPA=\""yes\""\n-        else\n-            echo\n-\t    echo \""The system floating point format could not be detected.\""\n-\t    echo \""This may cause data to be generated in a wrong format\""\n-\t    echo \""Turn on verbose messaging (-v) to see the final report.\""\n-\t    # we do not fail on this since this is a new test, and if it fails,\n-\t    # the old behavior should be correct in most cases\n-            CFG_DOUBLEFORMAT=normal\n-        fi\n-    fi\n-fi\n-\n HAVE_STL=no\n if \""$unixtests/compile.test\"" \""$XQMAKESPEC\"" \""$QMAKE_CONFIG\"" $OPT_VERBOSE \""$relpath\"" \""$outpath\"" config.tests/unix/stl \""STL\"" $L_FLAGS $I_FLAGS $l_FLAGS; then\n     HAVE_STL=yes\n@@ -6967,28 +6907,6 @@ else\n fi\n echo \""#endif\"" >>\""$outpath/src/corelib/global/qconfig.h.new\""\n \n-if [ \""$CFG_DOUBLEFORMAT\"" != \""normal\"" ]; then\n-    cat >>\""$outpath/src/corelib/global/qconfig.h.new\"" <<EOF\n-/* Non-IEEE double format */\n-#define Q_DOUBLE_LITTLE \""01234567\""\n-#define Q_DOUBLE_BIG \""76543210\""\n-#define Q_DOUBLE_LITTLE_SWAPPED \""45670123\""\n-#define Q_DOUBLE_BIG_SWAPPED \""32107654\""\n-#define Q_DOUBLE_FORMAT $CFG_DOUBLEFORMAT\n-EOF\n-fi\n-if [ \""$CFG_ARMFPA\"" = \""yes\"" ]; then\n-    if [ \""$CFG_ARCH\"" != \""$CFG_HOST_ARCH\"" ]; then\n-\tcat >>\""$outpath/src/corelib/global/qconfig.h.new\"" <<EOF\n-#ifndef QT_BOOTSTRAPPED\n-# define QT_ARMFPA\n-#endif\n-EOF\n-    else\n-\techo \""#define QT_ARMFPA\"" >>\""$outpath/src/corelib/global/qconfig.h.new\""\n-    fi\n-fi\n-\n CFG_ARCH_STR=`echo $CFG_ARCH | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n CFG_HOST_ARCH_STR=`echo $CFG_HOST_ARCH | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n cat >>\""$outpath/src/corelib/global/qconfig.h.new\"" <<EOF\n"", ""qnumeric_p.h"": ""@@ -61,63 +61,43 @@ QT_BEGIN_NAMESPACE\n \n static const union { unsigned char c[8]; double d; } qt_be_inf_bytes = { { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 } };\n static const union { unsigned char c[8]; double d; } qt_le_inf_bytes = { { 0, 0, 0, 0, 0, 0, 0xf0, 0x7f } };\n-static const union { unsigned char c[8]; double d; } qt_armfpa_inf_bytes = { { 0, 0, 0xf0, 0x7f, 0, 0, 0, 0 } };\n static inline double qt_inf()\n {\n-#ifdef QT_ARMFPA\n-    return qt_armfpa_inf_bytes.d;\n-#else\n     return (QSysInfo::ByteOrder == QSysInfo::BigEndian\n             ? qt_be_inf_bytes.d\n             : qt_le_inf_bytes.d);\n-#endif\n }\n \n // Signaling NAN\n static const union { unsigned char c[8]; double d; } qt_be_snan_bytes = { { 0x7f, 0xf8, 0, 0, 0, 0, 0, 0 } };\n static const union { unsigned char c[8]; double d; } qt_le_snan_bytes = { { 0, 0, 0, 0, 0, 0, 0xf8, 0x7f } };\n-static const union { unsigned char c[8]; double d; } qt_armfpa_snan_bytes = { { 0, 0, 0xf8, 0x7f, 0, 0, 0, 0 } };\n static inline double qt_snan()\n {\n-#ifdef QT_ARMFPA\n-    return qt_armfpa_snan_bytes.d;\n-#else\n     return (QSysInfo::ByteOrder == QSysInfo::BigEndian\n             ? qt_be_snan_bytes.d\n             : qt_le_snan_bytes.d);\n-#endif\n }\n \n // Quiet NAN\n static const union { unsigned char c[8]; double d; } qt_be_qnan_bytes = { { 0xff, 0xf8, 0, 0, 0, 0, 0, 0 } };\n static const union { unsigned char c[8]; double d; } qt_le_qnan_bytes = { { 0, 0, 0, 0, 0, 0, 0xf8, 0xff } };\n-static const union { unsigned char c[8]; double d; } qt_armfpa_qnan_bytes = { { 0, 0, 0xf8, 0xff, 0, 0, 0, 0 } };\n static inline double qt_qnan()\n {\n-#ifdef QT_ARMFPA\n-    return qt_armfpa_qnan_bytes.d;\n-#else\n     return (QSysInfo::ByteOrder == QSysInfo::BigEndian\n             ? qt_be_qnan_bytes.d\n             : qt_le_qnan_bytes.d);\n-#endif\n }\n \n #else // Q_CC_MIPS\n \n static const unsigned char qt_be_inf_bytes[] = { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 };\n static const unsigned char qt_le_inf_bytes[] = { 0, 0, 0, 0, 0, 0, 0xf0, 0x7f };\n-static const unsigned char qt_armfpa_inf_bytes[] = { 0, 0, 0xf0, 0x7f, 0, 0, 0, 0 };\n static inline double qt_inf()\n {\n     const unsigned char *bytes;\n-#ifdef QT_ARMFPA\n-    bytes = qt_armfpa_inf_bytes;\n-#else\n     bytes = (QSysInfo::ByteOrder == QSysInfo::BigEndian\n              ? qt_be_inf_bytes\n              : qt_le_inf_bytes);\n-#endif\n \n     union { unsigned char c[8]; double d; } returnValue;\n     qMemCopy(returnValue.c, bytes, sizeof(returnValue.c));\n@@ -127,17 +107,12 @@ static inline double qt_inf()\n // Signaling NAN\n static const unsigned char qt_be_snan_bytes[] = { 0x7f, 0xf8, 0, 0, 0, 0, 0, 0 };\n static const unsigned char qt_le_snan_bytes[] = { 0, 0, 0, 0, 0, 0, 0xf8, 0x7f };\n-static const unsigned char qt_armfpa_snan_bytes[] = { 0, 0, 0xf8, 0x7f, 0, 0, 0, 0 };\n static inline double qt_snan()\n {\n     const unsigned char *bytes;\n-#ifdef QT_ARMFPA\n-    bytes = qt_armfpa_snan_bytes;\n-#else\n     bytes = (QSysInfo::ByteOrder == QSysInfo::BigEndian\n              ? qt_be_snan_bytes\n              : qt_le_snan_bytes);\n-#endif\n \n     union { unsigned char c[8]; double d; } returnValue;\n     qMemCopy(returnValue.c, bytes, sizeof(returnValue.c));\n@@ -147,17 +122,12 @@ static inline double qt_snan()\n // Quiet NAN\n static const unsigned char qt_be_qnan_bytes[] = { 0xff, 0xf8, 0, 0, 0, 0, 0, 0 };\n static const unsigned char qt_le_qnan_bytes[] = { 0, 0, 0, 0, 0, 0, 0xf8, 0xff };\n-static const unsigned char qt_armfpa_qnan_bytes[] = { 0, 0, 0xf8, 0xff, 0, 0, 0, 0 };\n static inline double qt_qnan()\n {\n     const unsigned char *bytes;\n-#ifdef QT_ARMFPA\n-    bytes = qt_armfpa_qnan_bytes;\n-#else\n     bytes = (QSysInfo::ByteOrder == QSysInfo::BigEndian\n              ? qt_be_qnan_bytes\n              : qt_le_qnan_bytes);\n-#endif\n \n     union { unsigned char c[8]; double d; } returnValue;\n     qMemCopy(returnValue.c, bytes, sizeof(returnValue.c));\n@@ -169,43 +139,31 @@ static inline double qt_qnan()\n static inline bool qt_is_inf(double d)\n {\n     uchar *ch = (uchar *)&d;\n-#ifdef QT_ARMFPA\n-    return (ch[3] & 0x7f) == 0x7f && ch[2] == 0xf0;\n-#else\n     if (QSysInfo::ByteOrder == QSysInfo::BigEndian) {\n         return (ch[0] & 0x7f) == 0x7f && ch[1] == 0xf0;\n     } else {\n         return (ch[7] & 0x7f) == 0x7f && ch[6] == 0xf0;\n     }\n-#endif\n }\n \n static inline bool qt_is_nan(double d)\n {\n     uchar *ch = (uchar *)&d;\n-#ifdef QT_ARMFPA\n-    return (ch[3] & 0x7f) == 0x7f && ch[2] > 0xf0;\n-#else\n     if (QSysInfo::ByteOrder == QSysInfo::BigEndian) {\n         return (ch[0] & 0x7f) == 0x7f && ch[1] > 0xf0;\n     } else {\n         return (ch[7] & 0x7f) == 0x7f && ch[6] > 0xf0;\n     }\n-#endif\n }\n \n static inline bool qt_is_finite(double d)\n {\n     uchar *ch = (uchar *)&d;\n-#ifdef QT_ARMFPA\n-    return (ch[3] & 0x7f) != 0x7f || (ch[2] & 0xf0) != 0xf0;\n-#else\n     if (QSysInfo::ByteOrder == QSysInfo::BigEndian) {\n         return (ch[0] & 0x7f) != 0x7f || (ch[1] & 0xf0) != 0xf0;\n     } else {\n         return (ch[7] & 0x7f) != 0x7f || (ch[6] & 0xf0) != 0xf0;\n     }\n-#endif\n }\n \n static inline bool qt_is_inf(float d)\n"", ""qdatastream.cpp"": ""@@ -771,10 +771,6 @@ QDataStream &QDataStream::operator>>(float &f)\n     return *this;\n }\n \n-#if defined(Q_DOUBLE_FORMAT)\n-#define Q_DF(x) Q_DOUBLE_FORMAT[(x)] - '0'\n-#endif\n-\n /*!\n     \\overload\n \n@@ -797,7 +793,6 @@ QDataStream &QDataStream::operator>>(double &f)\n \n     f = 0.0;\n     CHECK_STREAM_PRECOND(*this)\n-#ifndef Q_DOUBLE_FORMAT\n     if (dev->read((char *)&f, 8) != 8) {\n         f = 0.0;\n         setStatus(ReadPastEnd);\n@@ -811,39 +806,6 @@ QDataStream &QDataStream::operator>>(double &f)\n             f = x.val1;\n         }\n     }\n-#else\n-    //non-standard floating point format\n-    union {\n-        double val1;\n-        char val2[8];\n-    } x;\n-    char *p = x.val2;\n-    char b[8];\n-    if (dev->read(b, 8) == 8) {\n-        if (noswap) {\n-            *p++ = b[Q_DF(0)];\n-            *p++ = b[Q_DF(1)];\n-            *p++ = b[Q_DF(2)];\n-            *p++ = b[Q_DF(3)];\n-            *p++ = b[Q_DF(4)];\n-            *p++ = b[Q_DF(5)];\n-            *p++ = b[Q_DF(6)];\n-            *p = b[Q_DF(7)];\n-        } else {\n-            *p++ = b[Q_DF(7)];\n-            *p++ = b[Q_DF(6)];\n-            *p++ = b[Q_DF(5)];\n-            *p++ = b[Q_DF(4)];\n-            *p++ = b[Q_DF(3)];\n-            *p++ = b[Q_DF(2)];\n-            *p++ = b[Q_DF(1)];\n-            *p = b[Q_DF(0)];\n-        }\n-        f = x.val1;\n-    } else {\n-        setStatus(ReadPastEnd);\n-    }\n-#endif\n     return *this;\n }\n \n@@ -1112,7 +1074,6 @@ QDataStream &QDataStream::operator<<(double f)\n     }\n \n     CHECK_STREAM_WRITE_PRECOND(*this)\n-#ifndef Q_DOUBLE_FORMAT\n     if (noswap) {\n         if (dev->write((char *)&f, sizeof(double)) != sizeof(double))\n             q_status = WriteFailed;\n@@ -1126,36 +1087,6 @@ QDataStream &QDataStream::operator<<(double f)\n         if (dev->write((char *)&x.val2, sizeof(double)) != sizeof(double))\n             q_status = WriteFailed;\n     }\n-#else\n-    union {\n-        double val1;\n-        char val2[8];\n-    } x;\n-    x.val1 = f;\n-    char *p = x.val2;\n-    char b[8];\n-    if (noswap) {\n-        b[Q_DF(0)] = *p++;\n-        b[Q_DF(1)] = *p++;\n-        b[Q_DF(2)] = *p++;\n-        b[Q_DF(3)] = *p++;\n-        b[Q_DF(4)] = *p++;\n-        b[Q_DF(5)] = *p++;\n-        b[Q_DF(6)] = *p++;\n-        b[Q_DF(7)] = *p;\n-    } else {\n-        b[Q_DF(7)] = *p++;\n-        b[Q_DF(6)] = *p++;\n-        b[Q_DF(5)] = *p++;\n-        b[Q_DF(4)] = *p++;\n-        b[Q_DF(3)] = *p++;\n-        b[Q_DF(2)] = *p++;\n-        b[Q_DF(1)] = *p++;\n-        b[Q_DF(0)] = *p;\n-    }\n-    if (dev->write(b, 8) != 8)\n-        q_status = WriteFailed;\n-#endif\n     return *this;\n }\n \n"", ""qlocale_tools.cpp"": ""@@ -601,7 +601,7 @@ QT_END_INCLUDE_NAMESPACE\n #error Exactly one of IEEE_BIG_OR_LITTLE_ENDIAN, VAX, or IBM should be defined.\n #endif\n \n-static inline ULong _getWord0(const NEEDS_VOLATILE double x)\n+static inline ULong getWord0(const NEEDS_VOLATILE double x)\n {\n     const NEEDS_VOLATILE uchar *ptr = reinterpret_cast<const NEEDS_VOLATILE uchar *>(&x);\n     if (QSysInfo::ByteOrder == QSysInfo::BigEndian) {\n@@ -611,7 +611,7 @@ static inline ULong _getWord0(const NEEDS_VOLATILE double x)\n     }\n }\n \n-static inline void _setWord0(NEEDS_VOLATILE double *x, ULong l)\n+static inline void setWord0(NEEDS_VOLATILE double *x, ULong l)\n {\n     NEEDS_VOLATILE uchar *ptr = reinterpret_cast<NEEDS_VOLATILE uchar *>(x);\n     if (QSysInfo::ByteOrder == QSysInfo::BigEndian) {\n@@ -627,7 +627,7 @@ static inline void _setWord0(NEEDS_VOLATILE double *x, ULong l)\n     }\n }\n \n-static inline ULong _getWord1(const NEEDS_VOLATILE double x)\n+static inline ULong getWord1(const NEEDS_VOLATILE double x)\n {\n     const NEEDS_VOLATILE uchar *ptr = reinterpret_cast<const NEEDS_VOLATILE uchar *>(&x);\n     if (QSysInfo::ByteOrder == QSysInfo::BigEndian) {\n@@ -636,7 +636,7 @@ static inline ULong _getWord1(const NEEDS_VOLATILE double x)\n         return (ptr[3]<<24) + (ptr[2]<<16) + (ptr[1]<<8) + ptr[0];\n     }\n }\n-static inline void _setWord1(NEEDS_VOLATILE double *x, ULong l)\n+static inline void setWord1(NEEDS_VOLATILE double *x, ULong l)\n {\n     NEEDS_VOLATILE uchar *ptr = reinterpret_cast<uchar NEEDS_VOLATILE *>(x);\n     if (QSysInfo::ByteOrder == QSysInfo::BigEndian) {\n@@ -652,42 +652,6 @@ static inline void _setWord1(NEEDS_VOLATILE double *x, ULong l)\n     }\n }\n \n-static inline ULong getWord0(const NEEDS_VOLATILE double x)\n-{\n-#ifdef QT_ARMFPA\n-    return _getWord1(x);\n-#else\n-    return _getWord0(x);\n-#endif\n-}\n-\n-static inline void setWord0(NEEDS_VOLATILE double *x, ULong l)\n-{\n-#ifdef QT_ARMFPA\n-    _setWord1(x, l);\n-#else\n-    _setWord0(x, l);\n-#endif\n-}\n-\n-static inline ULong getWord1(const NEEDS_VOLATILE double x)\n-{\n-#ifdef QT_ARMFPA\n-    return _getWord0(x);\n-#else\n-    return _getWord1(x);\n-#endif\n-}\n-\n-static inline void setWord1(NEEDS_VOLATILE double *x, ULong l)\n-{\n-#ifdef QT_ARMFPA\n-    _setWord0(x, l);\n-#else\n-    _setWord1(x, l);\n-#endif\n-}\n-\n static inline void Storeinc(ULong *&a, const ULong &b, const ULong &c)\n {\n \n"", ""qlocale_tools_p.h"": ""@@ -97,15 +97,11 @@ QString &exponentForm(QChar zero, QChar decimal, QChar exponential,\n inline bool isZero(double d)\n {\n     uchar *ch = (uchar *)&d;\n-#ifdef QT_ARMFPA\n-        return !(ch[3] & 0x7F || ch[2] || ch[1] || ch[0] || ch[7] || ch[6] || ch[5] || ch[4]);\n-#else\n     if (QSysInfo::ByteOrder == QSysInfo::BigEndian) {\n         return !(ch[0] & 0x7F || ch[1] || ch[2] || ch[3] || ch[4] || ch[5] || ch[6] || ch[7]);\n     } else {\n         return !(ch[7] & 0x7F || ch[6] || ch[5] || ch[4] || ch[3] || ch[2] || ch[1] || ch[0]);\n     }\n-#endif\n }\n \n // Removes thousand-group separators in \""C\"" locale.\n"", ""tst_qlocale.cpp"": ""@@ -750,11 +750,7 @@ void tst_QLocale::negativeZero()\n {\n     double negativeZero( 0.0 ); // Initialise to zero.\n     uchar *ptr = (uchar *)&negativeZero;\n-#ifdef QT_ARMFPA\n-    ptr[3] = 0x80;\n-#else\n     ptr[QSysInfo::ByteOrder == QSysInfo::BigEndian ? 0 : 7] = 0x80;\n-#endif\n     QString s = QString::number(negativeZero);\n     QCOMPARE(s, QString(\""0\""));\n }\n"", ""tst_qstring.cpp"": ""@@ -4147,16 +4147,7 @@ void tst_QString::tortureSprintfDouble()\n #            error \""Q_BYTE_ORDER not defined\""\n #        endif\n \n-#       ifdef QT_ARMFPA\n-        buff[0] = data->bytes[4];\n-        buff[1] = data->bytes[5];\n-        buff[2] = data->bytes[6];\n-        buff[3] = data->bytes[7];\n-        buff[4] = data->bytes[0];\n-        buff[5] = data->bytes[1];\n-        buff[6] = data->bytes[2];\n-        buff[7] = data->bytes[3];\n-#        elif Q_BYTE_ORDER == Q_LITTLE_ENDIAN\n+#        if Q_BYTE_ORDER == Q_LITTLE_ENDIAN\n         for (uint i = 0; i < 8; ++i)\n             buff[i] = data->bytes[i];\n #        else\n"", ""tst_compiler.cpp"": ""@@ -527,33 +527,23 @@ void tst_Compiler::privateStaticTemplateMember() const\n // the second member of the union\n static const union { unsigned char c[8]; double d; } qt_be_inf_bytes = { { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 } };\n static const union { unsigned char c[8]; double d; } qt_le_inf_bytes = { { 0, 0, 0, 0, 0, 0, 0xf0, 0x7f } };\n-static const union { unsigned char c[8]; double d; } qt_armfpa_inf_bytes = { { 0, 0, 0xf0, 0x7f, 0, 0, 0, 0 } };\n static inline double qt_inf()\n {\n-#ifdef QT_ARMFPA\n-    return qt_armfpa_inf_bytes.d;\n-#else\n     return (QSysInfo::ByteOrder == QSysInfo::BigEndian\n             ? qt_be_inf_bytes.d\n             : qt_le_inf_bytes.d);\n-#endif\n }\n \n #else\n \n static const unsigned char qt_be_inf_bytes[] = { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 };\n static const unsigned char qt_le_inf_bytes[] = { 0, 0, 0, 0, 0, 0, 0xf0, 0x7f };\n-static const unsigned char qt_armfpa_inf_bytes[] = { 0, 0, 0xf0, 0x7f, 0, 0, 0, 0 };\n static inline double qt_inf()\n {\n     const uchar *bytes;\n-#ifdef QT_ARMFPA\n-    bytes = qt_armfpa_inf_bytes;\n-#else\n     bytes = (QSysInfo::ByteOrder == QSysInfo::BigEndian\n              ? qt_be_inf_bytes\n              : qt_le_inf_bytes);\n-#endif\n \n     union { uchar c[8]; double d; } returnValue;\n     memcpy(returnValue.c, bytes, sizeof(returnValue.c));\n""}",deprecat; test,"deprecate, refactor 
",deprecat;feature;resource;test;
24402.0,24402.0,test,Joerg Bornemann,tests/manual/collidingmice: less complicated Qt4/5 support,"tests/manual/collidingmice: less complicated Qt4/5 support

We just have to depend on qt.widgets.
The module will do the right thing.

Change-Id: Ib2968027653a9e2a49c5bda7ea256fbff590819a",['tests/manual/collidingmice/collidingmice.qbp'],"{""collidingmice.qbp"": ""@@ -4,15 +4,9 @@ Application {\n     name : \""CollidingMice\""\n     destination: \""bin\""\n \n-    Depends { id: qtcore; name: \""Qt.core\"" }\n     Depends {\n-        condition: qtcore.versionMajor === 4\n-        name: \""Qt.gui\""\n-    }\n-    Depends {\n-        condition: qtcore.versionMajor === 5\n         name: \""Qt\""\n-        submodules: [\""gui\"", \""widgets\""]\n+        submodules: [\""widgets\""]\n     }\n \n     files : [\n""}",test,"test 
",resource;test;
9840.0,9840.0,feature; test,hjk,debugger: start automization of manual tests,"debugger: start automization of manual tests

Change-Id: I33bd046eca253130049d0a80de7a1a3f3e442307","['src/plugins/debugger/debuggerengine.cpp', 'src/plugins/debugger/gdb/gdbengine.cpp', 'src/plugins/debugger/debuggerengine.h', 'src/plugins/debugger/gdb/pythongdbengine.cpp', 'tests/manual/debugger/simple/simple_test_app.cpp']","{""debuggerengine.cpp"": ""@@ -65,6 +65,7 @@\n \n #include <QtCore/QDebug>\n #include <QtCore/QTimer>\n+#include <QtCore/QFile>\n #include <QtCore/QFutureInterface>\n \n #include <QtGui/QMessageBox>\n@@ -158,7 +159,8 @@ public:\n         m_watchHandler(engine),\n         m_disassemblerAgent(engine),\n         m_memoryAgent(engine),\n-        m_isStateDebugging(false)\n+        m_isStateDebugging(false),\n+        m_testsPossible(true)\n     {\n         connect(&m_locationTimer, SIGNAL(timeout()), SLOT(resetLocation()));\n         if (sp.toolChainAbi.os() == ProjectExplorer::Abi::MacOS)\n@@ -285,6 +287,14 @@ public:\n     QTimer m_locationTimer;\n \n     bool m_isStateDebugging;\n+\n+    // Testing\n+    void handleAutoTests();\n+    void handleAutoTestLine(int line);\n+    void reportTestError(const QString &);\n+    bool m_testsPossible;\n+    QStringList m_testContents;\n+    QString m_testErrors;\n };\n \n \n@@ -1100,6 +1110,9 @@ void DebuggerEngine::setState(DebuggerState state, bool forced)\n         BreakHandler *handler = breakHandler();\n         foreach (BreakpointModelId id, handler->engineBreakpointIds(this))\n             handler->notifyBreakpointReleased(id);\n+\n+        if (!d->m_testErrors.isEmpty())\n+            showMessage(_(\""\\nTest Errors\\n\\n\"") + d->m_testErrors);\n     }\n \n     const bool running = d->m_state == InferiorRunOk;\n@@ -1654,6 +1667,98 @@ void DebuggerEngine::setStateDebugging(bool on)\n     d->m_isStateDebugging = on;\n }\n \n+void DebuggerEngine::handleAutoTests()\n+{\n+    d->handleAutoTests();\n+}\n+\n+void DebuggerEnginePrivate::handleAutoTests()\n+{\n+    if (!m_testsPossible)\n+        return;\n+\n+    StackFrame frame = m_engine->stackHandler()->currentFrame();\n+    if (!frame.file.endsWith(QLatin1String(\""debugger/simple/simple_test_app.cpp\"")))\n+        return;\n+\n+    if (m_testContents.isEmpty()) {\n+        QFile file(frame.file);\n+        file.open(QIODevice::ReadOnly);\n+        QTextStream ts(&file);\n+        m_testContents = ts.readAll().split(QLatin1Char('\\n'));\n+        if (m_testContents.isEmpty()) {\n+            m_testsPossible = false;\n+            return;\n+        }\n+        foreach (const QString &s, m_testContents) {\n+            if (s.startsWith(QLatin1String(\""#define USE_AUTORUN\""))) {\n+                m_testsPossible = s.startsWith(QLatin1String(\""#define USE_AUTORUN 1\""));\n+                break;\n+            }\n+        }\n+    }\n+\n+    if (!m_testsPossible)\n+        return;\n+\n+    int line = frame.line;\n+    if (line > 1 && line < m_testContents.size())\n+        handleAutoTestLine(line);\n+}\n+\n+void DebuggerEnginePrivate::handleAutoTestLine(int line)\n+{\n+    QString s = m_testContents.at(line).trimmed();\n+    if (s.endsWith(QLatin1Char('.')))\n+        s.chop(1);\n+    int pos = s.indexOf(QLatin1String(\""//\""));\n+    if (pos == -1)\n+        return;\n+    s = s.mid(pos + 2).trimmed();\n+    QString cmd = s.section(QLatin1Char(' '), 0, 0);\n+    if (cmd == QLatin1String(\""Expand\"")) {\n+        m_engine->showMessage(_(\""'Expand' found in line %1, but not implemented yet.\"").arg(line));\n+        handleAutoTestLine(line + 1);\n+    } else if (cmd == QLatin1String(\""Expand\"")) {\n+        m_engine->showMessage(_(\""'Expand' found in line %1, but not implemented yet.\"").arg(line));\n+        handleAutoTestLine(line + 1);\n+    } else if (cmd == QLatin1String(\""Check\"")) {\n+        QString name = s.section(QLatin1Char(' '), 1, 1);\n+        if (name.isEmpty()) {\n+            reportTestError(_(\""Check in line %1 needs arguments.\"").arg(line));\n+        } else {\n+            QByteArray iname = \""local.\"" + name.toLatin1();\n+            const WatchData *data = m_engine->watchHandler()->findItem(iname);\n+            if (data) {\n+                QString needle = s.section(QLatin1Char(' '), 2, -1);\n+                QString found = data->value + QString::fromLatin1(\"" \"" + data->type);\n+                if (needle == found) {\n+                    m_engine->showMessage(_(\""Check in line %1 for %2 was successful\"")\n+                        .arg(line).arg(needle));\n+                } else {\n+                    reportTestError(_(\""Check in line %1 for %2 failed. Got %3.\"")\n+                        .arg(line).arg(needle).arg(found));\n+                }\n+            } else {\n+                reportTestError(_(\""### Check in line %1 referes to unknown variable %2.\"")\n+                    .arg(line).arg(name));\n+            }\n+        }\n+        handleAutoTestLine(line + 1);\n+    } else if (cmd == QLatin1String(\""Continue\"")) {\n+        m_engine->showMessage(_(\""Continue in line %1 processed.\"").arg(line));\n+        m_engine->continueInferior();\n+    }\n+}\n+\n+\n+void DebuggerEnginePrivate::reportTestError(const QString &error)\n+{\n+    m_engine->showMessage(_(\""### \"") + error);\n+    m_testErrors.append(error);\n+    m_testErrors.append(QLatin1Char('\\n'));\n+}\n+\n } // namespace Debugger\n \n #include \""debuggerengine.moc\""\n"", ""debuggerengine.h"": ""@@ -394,6 +394,8 @@ protected:\n     virtual void slaveEngineStateChanged(DebuggerEngine *engine,\n         DebuggerState state);\n \n+    virtual void handleAutoTests();\n+\n private:\n     // Wrapper engine needs access to state of its subengines.\n     friend class Internal::QmlCppEngine;\n"", ""gdbengine.cpp"": ""@@ -5091,7 +5091,6 @@ void GdbEngine::scheduleTestResponse(int testCase, const QByteArray &response)\n     m_scheduledTestResponses[token] = response;\n }\n \n-\n //\n // Factory\n //\n"", ""pythongdbengine.cpp"": ""@@ -191,6 +191,7 @@ void GdbEngine::handleStackFramePython(const GdbResponse &response)\n         }\n         if (!partial)\n             emit stackFrameCompleted();\n+        handleAutoTests();\n     } else {\n         showMessage(_(\""DUMPER FAILED: \"" + response.toString()));\n     }\n"", ""simple_test_app.cpp"": ""@@ -42,6 +42,18 @@\n // Default: 0\n #define USE_AUTOBREAK 0\n \n+// With USE_AUTORUN, creator will automatically \""execute\"" the commands\n+// in a comment following a BREAK_HERE line.\n+// The following commands are supported:\n+//   // Check <name> <value> <type>\n+//         - Checks whether the local variable is displayed with value and type.\n+//   // Continue\n+//         - Continues execution\n+// If the line after a BREAK_HERE line does not contain one of the\n+// supported commands, the test stops.\n+// Default: 0\n+#define USE_AUTORUN 0\n+\n // With USE_UNINITIALIZE_AUTOBREAK, the debugger will stop automatically\n // on all lines containing the BREAK_UNINITIALIZED_HERE macro.\n // This should be enabled during manual testing.\n@@ -3235,6 +3247,11 @@ namespace basic {\n         const int c = 44;\n         const Ref d = a;\n         BREAK_HERE;\n+        // Check a 43 int.\n+        // Check b 43 int.\n+        // Check b 44 int.\n+        // Check b 43 int.\n+        // Continue.\n         dummyStatement(&a, &b, &c, &d);\n     }\n \n@@ -4142,7 +4159,14 @@ namespace sanity {\n         obj.setObjectName(\""An Object\"");\n \n         BREAK_HERE;\n-        // Expand all.\n+        // Check list <3 items> QStringList\n+        // Check list2 <5 items> QList<char const*>\n+        // Check obj \""An Object\"" QObject\n+        // Check qv <1 items> QVector<int>\n+        // Check s \""hallohallo\"" string\n+        // Check v <1 items> vector<int>\n+        // Continue\n+\n         dummyStatement(&s, &qv, &v, &list, &list2, &obj);\n     }\n \n""}",feature; test,"test 
",bug;test;
5413.0,5413.0,test,Rohan McGovern [inactive],test: marked qmlmapsandnav autotest as insignificant,"test: marked qmlmapsandnav autotest as insignificant

This test stably fails, referring to QML types which don't seem to
exist.  Ideally it would be marked with QEXPECT_FAIL, but it is a QML
test and the failure is at compilation phase, so there does not seem to
be a feasible way to accomplish this.

Task-number: QTBUG-21619
Change-Id: Id8bb7036cf82e2255f7bc3b261dad8e44bbd31e8",['tests/auto/declarative/declarative.pro'],"{""declarative.pro"": ""@@ -10,3 +10,5 @@ OTHER_FILES += *.qml\n #qml.path = $$DESTDIR\n #qml.files = *.qml\n #INSTALLS += qml\n+\n+CONFIG += insignificant_test    # broken (refers to nonexistent types), QTBUG-21619\n""}",test,"test 
",bug;resource;test;
22706.0,22706.0,feature,Aurindam Jana,Debugging: Pass a DebuggingLanguage arg in executeDebuggerCommand(),"Debugging: Pass a DebuggingLanguage arg in executeDebuggerCommand()

Change-Id: I99eedc86c987615072b7400051b61700b98ebab3","['src/plugins/debugger/cdb/cdbengine.cpp', 'src/plugins/debugger/debuggercore.h', 'src/plugins/debugger/script/scriptengine.h', 'src/plugins/debugger/debuggerengine.h', 'src/plugins/debugger/gdb/gdbengine.h', 'src/plugins/debugger/qml/qmlcppengine.h', 'src/plugins/debugger/script/scriptengine.cpp', 'src/plugins/debugger/debuggerplugin.cpp', 'src/plugins/debugger/qml/qmlcppengine.cpp', 'src/plugins/debugger/qml/qmlengine.h', 'src/plugins/debugger/pdb/pdbengine.cpp', 'src/plugins/debugger/logwindow.cpp', 'src/plugins/debugger/debuggerengine.cpp', 'src/plugins/debugger/pdb/pdbengine.h', 'src/plugins/debugger/gdb/gdbengine.cpp', 'src/plugins/debugger/qml/qmlengine.cpp', 'src/plugins/debugger/cdb/cdbengine.h']","{""cdbengine.cpp"": ""@@ -1357,9 +1357,10 @@ void CdbEngine::handleThreads(const CdbExtensionCommandPtr &reply)\n     }\n }\n \n-void CdbEngine::executeDebuggerCommand(const QString &command)\n+void CdbEngine::executeDebuggerCommand(const QString &command, DebuggerLanguages languages)\n {\n-    postCommand(command.toLocal8Bit(), QuietCommand);\n+    if (languages & CppLanguage)\n+        postCommand(command.toLocal8Bit(), QuietCommand);\n }\n \n // Post command without callback\n"", ""cdbengine.h"": ""@@ -115,7 +115,7 @@ public:\n     virtual void executeRunToFunction(const QString &functionName);\n     virtual void executeJumpToLine(const ContextData &data);\n     virtual void assignValueInDebugger(const WatchData *w, const QString &expr, const QVariant &value);\n-    virtual void executeDebuggerCommand(const QString &command);\n+    virtual void executeDebuggerCommand(const QString &command, DebuggerLanguages languages);\n \n     virtual void activateFrame(int index);\n     virtual void selectThread(int index);\n"", ""debuggercore.h"": ""@@ -118,7 +118,7 @@ public:\n         const QVector<Symbol> &symbols) = 0;\n     virtual void openMemoryEditor() = 0;\n     virtual void languagesChanged() = 0;\n-    virtual void executeDebuggerCommand(const QString &command) = 0;\n+    virtual void executeDebuggerCommand(const QString &command, DebuggerLanguages languages) = 0;\n     virtual bool evaluateScriptExpression(const QString &expression) = 0;\n \n     virtual Utils::SavedAction *action(int code) const = 0;\n"", ""debuggerengine.cpp"": ""@@ -1661,7 +1661,7 @@ void DebuggerEngine::executeJumpToLine(const ContextData &)\n {\n }\n \n-void DebuggerEngine::executeDebuggerCommand(const QString &)\n+void DebuggerEngine::executeDebuggerCommand(const QString &, DebuggerLanguages)\n {\n     showStatusMessage(tr(\""This debugger cannot handle user input.\""));\n }\n"", ""debuggerengine.h"": ""@@ -365,7 +365,7 @@ protected:\n     virtual void executeRunToLine(const Internal::ContextData &data);\n     virtual void executeRunToFunction(const QString &functionName);\n     virtual void executeJumpToLine(const Internal::ContextData &data);\n-    virtual void executeDebuggerCommand(const QString &command);\n+    virtual void executeDebuggerCommand(const QString &command, DebuggerLanguages languages);\n     virtual bool evaluateScriptExpression(const QString &expression);\n \n     virtual void frameUp();\n"", ""debuggerplugin.cpp"": ""@@ -846,7 +846,7 @@ public slots:\n     void aboutToUnloadSession();\n     void aboutToSaveSession();\n \n-    void executeDebuggerCommand(const QString &command);\n+    void executeDebuggerCommand(const QString &command, DebuggerLanguages languages);\n     bool evaluateScriptExpression(const QString &expression);\n     void coreShutdown();\n \n@@ -2526,10 +2526,10 @@ void DebuggerPluginPrivate::aboutToSaveSession()\n     m_breakHandler->saveSessionData();\n }\n \n-void DebuggerPluginPrivate::executeDebuggerCommand(const QString &command)\n+void DebuggerPluginPrivate::executeDebuggerCommand(const QString &command, DebuggerLanguages languages)\n {\n     if (currentEngine()->acceptsDebuggerCommands())\n-        currentEngine()->executeDebuggerCommand(command);\n+        currentEngine()->executeDebuggerCommand(command, languages);\n     else\n         showStatusMessage(tr(\""User commands are not accepted in the current state.\""));\n }\n"", ""gdbengine.cpp"": ""@@ -1158,8 +1158,10 @@ bool GdbEngine::acceptsDebuggerCommands() const\n         || state() == InferiorUnrunnable;\n }\n \n-void GdbEngine::executeDebuggerCommand(const QString &command)\n+void GdbEngine::executeDebuggerCommand(const QString &command, DebuggerLanguages languages)\n {\n+    if (!(languages & CppLanguage))\n+        return;\n     QTC_CHECK(acceptsDebuggerCommands());\n     GdbCommand cmd;\n     cmd.command = command.toLatin1();\n"", ""gdbengine.h"": ""@@ -240,7 +240,7 @@ private: ////////// General Interface //////////\n     virtual void abortDebugger();\n \n     virtual bool acceptsDebuggerCommands() const;\n-    virtual void executeDebuggerCommand(const QString &command);\n+    virtual void executeDebuggerCommand(const QString &command, DebuggerLanguages languages);\n     virtual QByteArray qtNamespace() const { return m_dumperHelper.qtNamespace(); }\n     virtual void setQtNamespace(const QByteArray &ns)\n         { return m_dumperHelper.setQtNamespace(ns); }\n"", ""logwindow.cpp"": ""@@ -389,12 +389,13 @@ LogWindow::LogWindow(QWidget *parent)\n void LogWindow::executeLine()\n {\n     m_ignoreNextInputEcho = true;\n-    debuggerCore()->executeDebuggerCommand(m_inputText->textCursor().block().text());\n+    debuggerCore()->executeDebuggerCommand(m_inputText->textCursor().block().text(),\n+                                           CppLanguage);\n }\n \n void LogWindow::sendCommand()\n {\n-    debuggerCore()->executeDebuggerCommand(m_commandEdit->text());\n+    debuggerCore()->executeDebuggerCommand(m_commandEdit->text(), CppLanguage);\n }\n \n void LogWindow::showOutput(int channel, const QString &output)\n"", ""pdbengine.cpp"": ""@@ -98,8 +98,10 @@ PdbEngine::PdbEngine(const DebuggerStartParameters &startParameters)\n PdbEngine::~PdbEngine()\n {}\n \n-void PdbEngine::executeDebuggerCommand(const QString &command)\n+void PdbEngine::executeDebuggerCommand(const QString &command, DebuggerLanguages languages)\n {\n+    if (!(languages & CppLanguage))\n+        return;\n     QTC_ASSERT(state() == InferiorStopOk, qDebug() << state());\n     //XSDEBUG(\""PdbEngine::executeDebuggerCommand:\"" << command);\n     if (state() == DebuggerNotReady) {\n"", ""pdbengine.h"": ""@@ -97,7 +97,7 @@ private:\n \n     void assignValueInDebugger(const WatchData *data,\n         const QString &expr, const QVariant &value);\n-    void executeDebuggerCommand(const QString &command);\n+    void executeDebuggerCommand(const QString &command, DebuggerLanguages languages);\n \n     void loadSymbols(const QString &moduleName);\n     void loadAllSymbols();\n"", ""qmlcppengine.cpp"": ""@@ -409,13 +409,10 @@ void QmlCppEngine::executeJumpToLine(const ContextData &data)\n     d->m_activeEngine->executeJumpToLine(data);\n }\n \n-void QmlCppEngine::executeDebuggerCommand(const QString &command)\n+void QmlCppEngine::executeDebuggerCommand(const QString &command, DebuggerLanguages languages)\n {\n-    if (d->m_qmlEngine->state() == InferiorStopOk) {\n-        d->m_qmlEngine->executeDebuggerCommand(command);\n-    } else {\n-        d->m_cppEngine->executeDebuggerCommand(command);\n-    }\n+    d->m_qmlEngine->executeDebuggerCommand(command, languages);\n+    d->m_cppEngine->executeDebuggerCommand(command, languages);\n }\n \n bool QmlCppEngine::evaluateScriptExpression(const QString &expression)\n"", ""qmlcppengine.h"": ""@@ -116,7 +116,7 @@ protected:\n     void executeRunToLine(const ContextData &data);\n     void executeRunToFunction(const QString &functionName);\n     void executeJumpToLine(const ContextData &data);\n-    void executeDebuggerCommand(const QString &command);\n+    void executeDebuggerCommand(const QString &command, DebuggerLanguages languages);\n     bool evaluateScriptExpression(const QString &expression);\n \n     void setupEngine();\n"", ""qmlengine.cpp"": ""@@ -1141,9 +1141,9 @@ void QmlEngine::appendDebugOutput(QtMsgType type, const QString &message,\n     qtMessageLogHandler()->appendItem(item);\n }\n \n-void QmlEngine::executeDebuggerCommand(const QString& command)\n+void QmlEngine::executeDebuggerCommand(const QString &command, DebuggerLanguages languages)\n {\n-    if (d->m_adapter.activeDebuggerClient()) {\n+    if ((languages & QmlLanguage) && d->m_adapter.activeDebuggerClient()) {\n         d->m_adapter.activeDebuggerClient()->executeDebuggerCommand(command);\n     }\n }\n@@ -1183,7 +1183,7 @@ bool QmlEngine::evaluateScriptExpression(const QString& expression)\n                         }\n                     }\n                 } else {\n-                    executeDebuggerCommand(expression);\n+                    executeDebuggerCommand(expression, QmlLanguage);\n                 }\n             } else {\n                 didEvaluate = false;\n"", ""qmlengine.h"": ""@@ -151,7 +151,7 @@ private:\n     bool supportsThreads() const { return false; }\n     void updateWatchData(const WatchData &data,\n         const WatchUpdateFlags &flags);\n-    void executeDebuggerCommand(const QString &command);\n+    void executeDebuggerCommand(const QString &command, DebuggerLanguages languages);\n     bool evaluateScriptExpression(const QString &expression);\n \n     bool hasCapability(unsigned) const;\n"", ""scriptengine.cpp"": ""@@ -214,9 +214,10 @@ ScriptEngine::~ScriptEngine()\n {\n }\n \n-void ScriptEngine::executeDebuggerCommand(const QString &command)\n+void ScriptEngine::executeDebuggerCommand(const QString &command, DebuggerLanguages languages)\n {\n     Q_UNUSED(command)\n+    Q_UNUSED(languages)\n     XSDEBUG(\""FIXME:  ScriptEngine::executeDebuggerCommand()\"");\n }\n \n"", ""scriptengine.h"": ""@@ -95,7 +95,7 @@ private:\n \n     void assignValueInDebugger(const WatchData *w,\n         const QString &expr, const QVariant &value);\n-    void executeDebuggerCommand(const QString &command);\n+    void executeDebuggerCommand(const QString &command, DebuggerLanguages languages);\n \n     void loadSymbols(const QString &moduleName);\n     void loadAllSymbols();\n""}",feature,"feature 
",bug;
6545.0,6545.0,resource,Jerome Pasion,Doc: Add ability to generate documentation for the module.,"Doc: Adding files to generate documentation for the Multimedia module.

-Added targets so that ""make docs"" will generate the documentation.

Change-Id: I16a74d7e15e12df16570f110c7e67a110d53afad","['doc/qtmultimedia_doc.pri', 'qtmultimedia.pro', 'doc/config/style/qtmultimedia.css', 'doc/config/qtmultimedia.qdocconf', 'doc/config/qtmultimedia-dita.qdocconf', 'doc/config/qtmultimedia_doc.pri']","{""qtmultimedia-dita.qdocconf"": ""@@ -0,0 +1,28 @@\n+# Name of the project.\n+project = Qt Multimedia\n+\n+# Directories in which to search for files to document and images.\n+# By default set to the root directory of the project for sources\n+# and headers and qdoc will therefore generate output for each file.\n+# Images should be placed in <rootdir>/dic/images and examples in\n+# <rootdir>/examples.\n+# Paths are relative to the  location of this file.\n+exampledirs +=  ../src/examples \\\n+                ../../examples\n+headerdirs += ../src \\\n+              ../../src\n+\n+imagedirs += ../src/images \\\n+\n+sourcedirs += ../src \\\n+              ../../src\n+\n+#Do not change the variables after this line unless you know what you are doing.\n+\n+outputdir = ../ditaxml\n+outputformats = DITAXML\n+\n+examples.fileextensions = \""*.cpp *.h *.js *.svg *.xml *.ui *.qml\""\n+examples.imageextensions = \""*.png *.jpeg *.jpg *.gif *.mng\""\n+headers.fileextensions = \""*.h *.ch *.h++ *.hh *.hpp *.hxx\""\n+sources.fileextensions = \""*.cpp *.qdoc *.mm *.qml\""sss\n"", ""qtmultimedia.qdocconf"": ""@@ -0,0 +1,84 @@\n+# Name of the project.\n+project = Qt Multimedia\n+description = Qt Multimedia Documentation\n+\n+# Directories in which to search for files to document and images.\n+# By default set to the root directory of the project for sources\n+# and headers and qdoc will therefore generate output for each file.\n+# Images should be placed in <rootdir>/dic/images and examples in\n+# <rootdir>/examples.\n+# Paths are relative to the  location of this file.\n+\n+exampledirs += ../src/examples \\\n+               ../.. \\\n+               ../../examples\n+\n+headerdirs += ../src \\\n+              ../../src\n+\n+imagedirs += ../src/images \\\n+\n+sourcedirs += ../src \\\n+              ../../src\n+\n+excludedirs +=\n+\n+# The index file contains links to the Qt 5 documentation.\n+# Point to the any .index file to cross link to other projects\n+#indexes = $QT5DOC/doc/html/qt.index\n+\n+# The following parameters are for creating a qhp file, the qhelpgenerator\n+# program can convert the qhp file into a qch file which can be opened in\n+# Qt Assistant and/or Qt Creator.\n+\n+# Defines the name of the project. You cannot use operators (+, =, -) in\n+# the name. Properties for this project are set using a qhp.<projectname>.property\n+# format.\n+qhp.projects = qtmultimedia\n+\n+# Sets the name of the output qhp file.\n+qhp.qtmultimedia.file = qtmultimedia.qhp\n+\n+# Namespace for the output file. This namespace is used to distinguish between\n+# different documentation files in Creator/Assistant. Normal format for MP\n+# projects should be: com.nokia.mp.<projectname>.version with version being\n+# a number containing a major, minor and revision element. E.g. version 1.0\n+# becomes 100.\n+qhp.qtmultimedia.namespace = qtmultimedia.100\n+\n+# Title for the package, will be the main title for the package in\n+# Assistant/Creator.\n+qhp.qtmultimedia.indexTitle = Qt Multimedia Documentation\n+\n+# Extra files to add to the output which are not linked to from anywhere\n+# using a qdoc \\l command.\n+qhp.qtmultimedia.extraFiles = style/qtmultimedia.css\n+\n+# Only update the name of the project for the next variables.\n+qhp.qtmultimedia.virtualFolder  = qdoc\n+qhp.qtmultimedia.subprojects = classes\n+qhp.qtmultimedia.subprojects.classes.title = Classes\n+qhp.qtmultimedia.subprojects.classes.selectors = class fake:headerfile\n+qhp.qtmultimedia.subprojects.classes.sortPages = true\n+\n+\n+\n+# Do NOT change the variables after this line unless you know what you are doing.\n+\n+outputdir = ../html\n+outputformats = HTML\n+\n+examples.fileextensions = \""*.cpp *.h *.js *.svg *.xml *.ui *.qml\""\n+examples.imageextensions = \""*.png *.jpeg *.jpg *.gif *.mng\""\n+headers.fileextensions = \""*.h *.ch *.h++ *.hh *.hpp *.hxx\""\n+sources.fileextensions = \""*.cpp *.qdoc *.mm *.qml\""\n+\n+HTML.nobreadcrumbs = \""true\""\n+\n+HTML.templatedir = .\n+HTML.stylesheets = style/qtmultimedia.css\n+\n+HTML.headerstyles = \""  <link rel=\\\""stylesheet\\\"" type=\\\""text/css\\\"" href=\\\""style/qtmultimedia.css\\\"" />\\n\""\n+HTML.endheader = \""</head>\\n<body>\\n\""\n+\n+HTML.footer = \""<div class=\\\""footer\\\"">Copyright (c) 2011 Nokia Corporation and/or its subsidiaries. All rights reserved.</div>\\n\""\n"", ""qtmultimedia_doc.pri"": ""@@ -0,0 +1,34 @@\n+\n+win32:!win32-g++ {\n+    unixstyle = false\n+} else:win32-g++:isEmpty(QMAKE_SH) {\n+    unixstyle = false\n+} else {\n+    unixstyle = true\n+}\n+\n+LINE_SEP=$$escape_expand(\\\\n\\\\t)\n+GENERATOR = $$[QT_INSTALL_BINS]/qhelpgenerator\n+QDOC = $$[QT_INSTALL_BINS]/qdoc3\n+MOBILITY_DOCUMENTATION = $$QDOC $${QT_MOBILITY_SOURCE_TREE}/doc/config/qtmobility.qdocconf $$LINE_SEP \\\n+                         cd $${QT_MOBILITY_SOURCE_TREE} && \\\n+                          $$GENERATOR doc/html/qtmobility.qhp -o doc/qch/qtmobility.qch\n+\n+ONLINE_MOBILITY_DOCUMENTATION = $$QDOC $${QT_MOBILITY_SOURCE_TREE}/doc/config/qtmobility-online.qdocconf $$LINE_SEP \\\n+                         cd $${QT_MOBILITY_SOURCE_TREE} && \\\n+                          $$GENERATOR doc/html/qtmobility.qhp -o doc/qch/qtmobility.qch\n+\n+contains(unixstyle, false):MOBILITY_DOCUMENTATION = $$replace(MOBILITY_DOCUMENTATION, \""/\"", \""\\\\\"")\n+\n+# Build rules\n+qch_docs.commands = $$MOBILITY_DOCUMENTATION\n+qch_onlinedocs.commands = $$ONLINE_MOBILITY_DOCUMENTATION\n+\n+docs.depends = dita_docs online_docs qch_docs\n+online_docs.depends = qdoc3 $$PWD/qtmultimedia.qdocconf\n+\n+\n+QMAKE_EXTRA_TARGETS += docs dita_docs online_docs qch_docs\n+QMAKE_CLEAN += \\\n+               \""-r $$PWD/html\"" \\\n+               \""-r $$PWD/ditaxml\""\n"", ""qtmultimedia.css"": ""@@ -0,0 +1,160 @@\n+a:link, a:visited {\n+    color: #00732F;\n+    text-decoration: none;\n+    font-weight: bold;\n+}\n+\n+body {\n+    font: normal 400 14px/1.2 Arial;\n+    margin-top: 85px;\n+}\n+\n+h1 {\n+    margin: 0;\n+}\n+\n+h2 {\n+    font: 500 20px/1.2 Arial;\n+}\n+\n+h3.fn, span.fn {\n+    -moz-border-radius: 7px 7px 7px 7px;\n+    -webkit-border-radius: 7px 7px 7px 7px;\n+    border-radius: 7px 7px 7px 7px;\n+    background-color: #F6F6F6;\n+    border-width: 1px;\n+    border-style: solid;\n+    border-color: #E6E6E6;\n+    word-spacing: 3px;\n+    padding: 3px 5px;\n+}\n+\n+table, pre {\n+    -moz-border-radius: 7px 7px 7px 7px;\n+    -webkit-border-radius: 7px 7px 7px 7px;\n+    border-radius: 7px 7px 7px 7px;\n+    background-color: #F6F6F6;\n+    border: 1px solid #E6E6E6;\n+    border-collapse: separate;\n+    font-size: 12px;\n+    line-height: 1.2;\n+    margin-bottom: 25px;\n+    margin-left: 15px;\n+}\n+\n+table td {\n+    padding: 3px 15px 3px 20px;\n+}\n+\n+table tr.even {\n+    background-color: white;\n+    color: #66666E;\n+}\n+\n+table tr.odd {\n+    background-color: #F6F6F6;\n+    color: #66666E;\n+}\n+\n+li {\n+    margin-bottom: 10px;\n+    padding-left: 12px;\n+}\n+\n+.cpp {\n+    display: block;\n+    margin: 10;\n+    overflow: hidden;\n+    overflow-x: hidden;\n+    overflow-y: hidden;\n+    padding: 20px 0 20px 0;\n+}\n+\n+.footer {\n+    margin-top: 50px;\n+}\n+\n+.memItemLeft {\n+    padding-right: 3px;\n+}\n+\n+.memItemRight {\n+    padding: 3px 15px 3px 0;\n+}\n+\n+.qml {\n+    display: block;\n+    margin: 10;\n+    overflow: hidden;\n+    overflow-x: hidden;\n+    overflow-y: hidden;\n+    padding: 20px 0 20px 0;\n+}\n+\n+.qmldefault {\n+    padding-left: 5px;\n+    float: right;\n+    color: red;\n+}\n+\n+.qmlreadonly {\n+    padding-left: 5px;\n+    float: right;\n+    color: #254117;\n+}\n+\n+.rightAlign {\n+    padding: 3px 5px 3px 10px;\n+    text-align: right;\n+}\n+\n+.title {\n+    background-color: white;\n+    color: #44A51C;\n+    font-family: Verdana;\n+    font-size: 35px;\n+    font-weight: normal;\n+    left: 0;\n+    padding-bottom: 5px;\n+    padding-left: 16px;\n+    padding-top: 20px;\n+    position: absolute;\n+    right: 0;\n+    top: 0;\n+}\n+\n+.toc {\n+    float: right;\n+    -moz-border-radius: 7px 7px 7px 7px;\n+    -webkit-border-radius: 7px 7px 7px 7px;\n+    border-radius: 7px 7px 7px 7px;\n+    background-color: #F6F6F6;\n+    border: 1px solid #DDD;\n+    margin: 0 20px 10px 10px;\n+    padding: 20px 15px 20px 20px;\n+    height: auto;\n+    width: 200px;\n+}\n+/* offset the child sections */\n+.toc .level2 {\n+    margin-left: 15px;\n+}\n+.toc .level3 {\n+    margin-left: 30px;\n+}\n+.toc .level4 {\n+    margin-left: 40px;\n+}\n+\n+/* modify the TOC layouts */\n+div.toc ul {\n+    padding-left: 20px;\n+}\n+div.toc li {\n+    padding-left: 4px;\n+}\n+/* Remove the border around images*/\n+a img\n+{\n+    border:none;\n+}\n"", ""qtmultimedia.pro"": ""@@ -20,3 +20,4 @@ SUBDIRS += module_qtmultimedia_src \\\n            module_qtmultimedia_examples \\\n            module_qtmultimedia_tests \\\n \n+include(doc/config/qtmultimedia_doc.pri)\n""}",resource,"resource, doc 
",resource;
9313.0,9313.0,refactor,hjk,Simplify KD* directory structure.,"Simplify KD* directory structure.

Change-Id: Ia6a4a9581873ada42aed3818d8fd2a4f41763f75","['installerbuilder/libinstaller/packagemanagercore_p.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/pimpl_ptr.h', 'installerbuilder/libinstaller/cryptosignatureverifier.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterufcompresscommon.cpp', 'installerbuilder/common/binaryformat.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdatersignatureverificationrunnable.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/pimpl_ptr.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdselfrestarter.h', 'installerbuilder/libinstaller/environmentvariablesoperation.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdsavefile.h', 'installerbuilder/libinstaller/component.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdsysinfo_mac.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterupdatefinder.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdsavefile.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterpackagesinfo.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterupdatefinder.cpp', 'installerbuilder/binarycreator/binarycreator.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdrunoncechecker.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdlockfile.h', 'installerbuilder/libinstaller/packagemanagercore_p.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterupdate.cpp', 'installerbuilder/libinstaller/selfrestartoperation.cpp', 'installerbuilder/tests/environmentvariable/environmentvariabletest.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterupdateoperations.cpp', 'installerbuilder/libinstaller/getrepositorymetainfojob.h', 'installerbuilder/libinstaller/init.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdatertask.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdselfrestarter.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdlockfile.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/environment.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterupdateoperation.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdrunoncechecker.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdatertask.h', 'installerbuilder/libinstaller/packagemanagercore.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/KDToolsCore/pimpl_ptr', 'installerbuilder/libinstaller/3rdparty/kdtools/environment.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdtoolsglobal.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdsysinfo_x11.cpp', 'installerbuilder/libinstaller/getrepositorymetainfojob.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/KDToolsCore/KDToolsCore.pri', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterufcompresscommon_p.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdatersignatureverificationrunnable.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterupdatesourcesinfo.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdatersignatureverifier.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdater.h', 'installerbuilder/libinstaller/downloadarchivesjob.h', 'installerbuilder/installerbase/installerbase.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdsysinfo.h', 'examples/testapp/main.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterfiledownloaderfactory.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterpackagesinfo.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdtools.pri', 'installerbuilder/libinstaller/3rdparty/kdtools/kdjob.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterfiledownloaderfactory.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdsysinfo.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdjob.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterupdate.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterupdateoperations.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterapplication.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterupdatesinfo.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterupdateinstaller.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdlockfile_p.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterupdateoperationfactory.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterfiledownloader.cpp', 'installerbuilder/libinstaller/downloadarchivesjob.cpp', 'installerbuilder/libinstaller/libinstaller.pro', 'examples/testapp/mainwindow.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterupdatesourcesinfo.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterupdateoperationfactory.h', 'installerbuilder/installerbase/installerbase_p.cpp', 'installerbuilder/libinstaller/operationrunner.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdlockfile_unix.cpp', 'tools/extractbinarydata/main.cpp', 'installerbuilder/libinstaller/qinstallerglobal.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdatersignatureverifier.cpp', 'installerbuilder/libinstaller/fakestopprocessforupdateoperation.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdgenericfactory.cpp', 'installerbuilder/libinstaller/getrepositoriesmetainfojob.h', 'installerbuilder/libinstaller/libinstaller.pri', 'installerbuilder/libinstaller/3rdparty/kdtools/kdlockfile_win.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterfiledownloader_p.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdatersignatureverificationresult.h', 'installerbuilder/libinstaller/createshortcutoperation.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdgenericfactory.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterupdatesinfo_p.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterfiledownloader.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterupdateoperation.h', 'installerbuilder/tests/extractarchiveoperationtest/extractarchiveoperationtest.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdsysinfo_win.cpp', 'installerbuilder/common/consolepasswordprovider.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterufuncompressor.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterufuncompressor_p.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterapplication.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdatercrypto.cpp', 'examples/downloadspeed/main.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdaterupdateinstaller.h', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdatersignatureverificationresult.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/kdupdatercrypto.h', 'installerbuilder/libinstaller/packagemanagergui.cpp']","{""main.cpp"": ""@@ -37,7 +37,7 @@\n \n #include <init.h>\n \n-#include <KDToolsCore/kdsavefile.h>\n+#include <kdsavefile.h>\n \n #include <QtCore/QCoreApplication>\n #include <QtCore/QDebug>\n"", ""mainwindow.cpp"": ""@@ -40,7 +40,7 @@\n #include <common/errors.h>\n #include <updatesettings.h>\n \n-#include <KDToolsCore/kdselfrestarter.h>\n+#include <kdselfrestarter.h>\n \n #include <QtGui/QAbstractButton>\n #include <QtGui/QApplication>\n"", ""binarycreator.cpp"": ""@@ -39,7 +39,7 @@\n #include <init.h>\n #include <settings.h>\n \n-#include <KDToolsCore/kdsavefile.h>\n+#include <kdsavefile.h>\n \n #include <QCoreApplication>\n #include <QDebug>\n"", ""binaryformat.cpp"": ""@@ -38,7 +38,7 @@\n #include \""utils.h\""\n #include \""zipjob.h\""\n \n-#include <KDUpdater/kdupdaterupdateoperationfactory.h>\n+#include <kdupdaterupdateoperationfactory.h>\n \n #include <QtCore/QResource>\n #include <QtCore/QTemporaryFile>\n"", ""consolepasswordprovider.h"": ""@@ -23,10 +23,11 @@\n ** (qt-info@nokia.com).\n **\n **************************************************************************/\n+\n #ifndef CONSOLEPASSWORDPROVIDER_H\n #define CONSOLEPASSWORDPROVIDER_H\n \n-#include <KDUpdater/kdupdatercrypto.h>\n+#include <kdupdatercrypto.h>\n \n #include <iostream>\n #include <string>\n"", ""installerbase.cpp"": ""@@ -49,8 +49,8 @@\n #include <settings.h>\n #include <updater.h>\n \n-#include <KDToolsCore/kdselfrestarter.h>\n-#include <KDToolsCore/kdrunoncechecker.h>\n+#include <kdselfrestarter.h>\n+#include <kdrunoncechecker.h>\n \n #include <QtCore/QTranslator>\n \n"", ""installerbase_p.cpp"": ""@@ -39,10 +39,10 @@\n #include <lib7z_facade.h>\n #include <qprocesswrapper.h>\n \n-#include <KDUpdater/kdupdaterfiledownloader.h>\n-#include <KDUpdater/kdupdaterfiledownloaderfactory.h>\n+#include <kdupdaterfiledownloader.h>\n+#include <kdupdaterfiledownloaderfactory.h>\n \n-#include <KDToolsCore/kdsavefile.h>\n+#include <kdsavefile.h>\n \n #include <QtCore/QDir>\n #include <QtCore/QDebug>\n"", ""KDToolsCore.pri"": ""@@ -1,31 +0,0 @@\n-DEPENDPATH += $$PWD\n-INCLUDEPATH += $$PWD\n-\n-CONFIG( shared, static|shared) {\n-    DEFINES += BUILD_SHARED_KDTOOLSCORE\n-}\n-\n-HEADERS += $$PWD/pimpl_ptr.h \\\n-    $$PWD/kdtoolsglobal.h \\\n-    $$PWD/kdjob.h \\\n-    $$PWD/kdgenericfactory.h \\\n-    $$PWD/kdselfrestarter.h \\\n-    $$PWD/kdsavefile.h \\\n-    $$PWD/kdrunoncechecker.h \\\n-    $$PWD/kdlockfile.h \\\n-    $$PWD/kdsysinfo.h\n-\n-SOURCES += $$PWD/pimpl_ptr.cpp \\\n-    $$PWD/kdjob.cpp \\\n-    $$PWD/kdgenericfactory.cpp \\\n-    $$PWD/kdselfrestarter.cpp \\\n-    $$PWD/kdsavefile.cpp \\\n-    $$PWD/kdrunoncechecker.cpp \\\n-    $$PWD/kdlockfile.cpp \\\n-    $$PWD/kdsysinfo.cpp\n-\n-unix:SOURCES += $$PWD/kdlockfile_unix.cpp\n-win32:SOURCES += $$PWD/kdlockfile_win.cpp\n-win32:SOURCES += $$PWD/kdsysinfo_win.cpp\n-macx:SOURCES += $$PWD/kdsysinfo_mac.cpp\n-unix:!macx:SOURCES += $$PWD/kdsysinfo_x11.cpp\n"", ""pimpl_ptr"": ""@@ -1 +0,0 @@\n-#include \""pimpl_ptr.h\""\n"", ""environment.cpp"": """", ""environment.h"": """", ""kdgenericfactory.cpp"": """", ""kdgenericfactory.h"": ""@@ -23,7 +23,7 @@\n #ifndef __KDTOOLSCORE__KDGENERICFACTORY_H__\n #define __KDTOOLSCORE__KDGENERICFACTORY_H__\n \n-#include <KDToolsCore/kdtoolsglobal.h>\n+#include <kdtoolsglobal.h>\n \n #include <QtCore/QHash>\n \n"", ""kdjob.cpp"": """", ""kdjob.h"": ""@@ -25,7 +25,7 @@\n \n #include <QObject>\n \n-#include <KDToolsCore/pimpl_ptr.h>\n+#include <pimpl_ptr.h>\n \n class KDTOOLSCORE_EXPORT KDJob : public QObject {\n     Q_OBJECT\n"", ""kdlockfile.cpp"": """", ""kdlockfile.h"": """", ""kdlockfile_p.h"": """", ""kdlockfile_unix.cpp"": """", ""kdlockfile_win.cpp"": """", ""kdrunoncechecker.cpp"": """", ""kdrunoncechecker.h"": ""@@ -23,7 +23,7 @@\n #ifndef __KDTOOLS_RUNONCECHECKER_H__\n #define __KDTOOLS_RUNONCECHECKER_H__\n \n-#include <KDToolsCore/pimpl_ptr>\n+#include <pimpl_ptr.h>\n \n #include <QtCore/QString>\n \n"", ""kdsavefile.cpp"": """", ""kdsavefile.h"": ""@@ -23,8 +23,8 @@\n #ifndef __KDTOOLSCORE_KDSAVEFILE_H__\n #define __KDTOOLSCORE_KDSAVEFILE_H__\n \n-#include <KDToolsCore/kdtoolsglobal.h>\n-#include <KDToolsCore/pimpl_ptr.h>\n+#include <kdtoolsglobal.h>\n+#include <pimpl_ptr.h>\n \n #include <QtCore/QIODevice>\n #include <QtCore/QFile>\n"", ""kdselfrestarter.cpp"": """", ""kdselfrestarter.h"": ""@@ -23,7 +23,7 @@\n #ifndef __KDTOOLSCORE_KDSELFRESTARTER_H__\n #define __KDTOOLSCORE_KDSELFRESTARTER_H__\n \n-#include <KDToolsCore/pimpl_ptr.h>\n+#include <pimpl_ptr.h>\n \n class KDTOOLSCORE_EXPORT KDSelfRestarter {\n public:\n"", ""kdsysinfo.cpp"": """", ""kdsysinfo.h"": ""@@ -23,7 +23,7 @@\n #ifndef KDSYSINFO_H\n #define KDSYSINFO_H\n \n-#include <KDToolsCore/kdtoolsglobal.h>\n+#include <kdtoolsglobal.h>\n \n #include <QtCore/QString>\n #include <QtCore/QSysInfo>\n"", ""kdsysinfo_mac.cpp"": """", ""kdsysinfo_win.cpp"": """", ""kdsysinfo_x11.cpp"": """", ""kdtools.pri"": ""@@ -1,10 +1,31 @@\n DEPENDPATH += $$PWD\n INCLUDEPATH += $$PWD\n \n-CONFIG( shared, static|shared) {\n+CONFIG(shared, static|shared) {\n+    DEFINES += BUILD_SHARED_KDTOOLSCORE\n     DEFINES += BUILD_SHARED_KDUPDATER\n }\n \n+HEADERS += $$PWD/pimpl_ptr.h \\\n+    $$PWD/kdtoolsglobal.h \\\n+    $$PWD/kdjob.h \\\n+    $$PWD/kdgenericfactory.h \\\n+    $$PWD/kdselfrestarter.h \\\n+    $$PWD/kdsavefile.h \\\n+    $$PWD/kdrunoncechecker.h \\\n+    $$PWD/kdlockfile.h \\\n+    $$PWD/kdsysinfo.h\n+\n+SOURCES += $$PWD/pimpl_ptr.cpp \\\n+    $$PWD/kdjob.cpp \\\n+    $$PWD/kdgenericfactory.cpp \\\n+    $$PWD/kdselfrestarter.cpp \\\n+    $$PWD/kdsavefile.cpp \\\n+    $$PWD/kdrunoncechecker.cpp \\\n+    $$PWD/kdlockfile.cpp \\\n+    $$PWD/kdsysinfo.cpp\n+\n+\n HEADERS += $$PWD/kdupdater.h \\\n     $$PWD/kdupdaterapplication.h \\\n     $$PWD/kdupdatercrypto.h \\\n@@ -51,8 +72,15 @@ SOURCES += $$PWD/kdupdaterapplication.cpp \\\n \n QT += gui\n \n+unix:SOURCES += $$PWD/kdlockfile_unix.cpp\n+win32:SOURCES += $$PWD/kdlockfile_win.cpp\n+win32:SOURCES += $$PWD/kdsysinfo_win.cpp\n+macx:SOURCES += $$PWD/kdsysinfo_mac.cpp\n+unix:!macx:SOURCES += $$PWD/kdsysinfo_x11.cpp\n+\n+\n TRY_INCLUDEPATHS = /include /usr/include /usr/local/include $$QMAKE_INCDIR $$INCLUDEPATH\n-win32:TRY_INCLUDEPATHS += $$PWD/../../openssl-0.9.8k/src/include\n+win32:TRY_INCLUDEPATHS += $$PWD/../openssl-0.9.8k/src/include\n linux-lsb-g++:TRY_INCLUDEPATHS = $$QMAKE_INCDIR $$INCLUDEPATH\n for(p, TRY_INCLUDEPATHS) {\n     pp = $$join(p, \""\"", \""\"", \""/openssl\"")\n"", ""kdtoolsglobal.h"": """", ""kdupdater.h"": """", ""kdupdaterapplication.cpp"": """", ""kdupdaterapplication.h"": """", ""kdupdatercrypto.cpp"": """", ""kdupdatercrypto.h"": ""@@ -25,7 +25,7 @@\n \n #include \""kdupdater.h\""\n \n-#include <KDToolsCore/pimpl_ptr.h>\n+#include <pimpl_ptr.h>\n \n QT_BEGIN_NAMESPACE\n class QByteArray;\n"", ""kdupdaterfiledownloader.cpp"": """", ""kdupdaterfiledownloader.h"": ""@@ -24,7 +24,7 @@\n #define KD_UPDATER_FILE_DOWNLOADER_H\n \n #include \""kdupdater.h\""\n-#include <KDToolsCore/pimpl_ptr.h>\n+#include <pimpl_ptr.h>\n \n #include <QtCore/QObject>\n #include <QtCore/QUrl>\n"", ""kdupdaterfiledownloader_p.h"": ""@@ -24,7 +24,7 @@\n #define KD_UPDATER_FILE_DOWNLOADER_P_H\n \n #include \""kdupdaterfiledownloader.h\""\n-#include <KDToolsCore/pimpl_ptr.h>\n+#include <pimpl_ptr.h>\n \n #include <QtCore/QCryptographicHash>\n #include <QtNetwork/QNetworkReply>\n"", ""kdupdaterfiledownloaderfactory.cpp"": """", ""kdupdaterfiledownloaderfactory.h"": ""@@ -24,8 +24,8 @@\n #define KD_UPDATER_FILE_DOWNLOADER_FACTORY_H\n \n #include \""kdupdater.h\""\n-#include <KDToolsCore/pimpl_ptr.h>\n-#include <KDToolsCore/kdgenericfactory.h>\n+#include <pimpl_ptr.h>\n+#include <kdgenericfactory.h>\n \n #include <QtCore/QStringList>\n #include <QtCore/QUrl>\n"", ""kdupdaterpackagesinfo.cpp"": """", ""kdupdaterpackagesinfo.h"": """", ""kdupdatersignatureverificationresult.cpp"": """", ""kdupdatersignatureverificationresult.h"": """", ""kdupdatersignatureverificationrunnable.cpp"": """", ""kdupdatersignatureverificationrunnable.h"": ""@@ -23,7 +23,7 @@\n #ifndef KDUPDATERSIGNATUREVERIFICATIONJOB_H\n #define KDUPDATERSIGNATUREVERIFICATIONJOB_H\n \n-#include <KDToolsCore/pimpl_ptr.h>\n+#include <pimpl_ptr.h>\n #include <QtCore/QGenericArgument>\n #include <QtCore/QRunnable>\n \n"", ""kdupdatersignatureverifier.cpp"": """", ""kdupdatersignatureverifier.h"": """", ""kdupdatertask.cpp"": """", ""kdupdatertask.h"": """", ""kdupdaterufcompresscommon.cpp"": """", ""kdupdaterufcompresscommon_p.h"": ""@@ -25,7 +25,7 @@\n \n #define KD_UPDATER_UF_HEADER_MAGIC \""KDVCLZ\""\n \n-#include <KDToolsCore/kdtoolsglobal.h>\n+#include <kdtoolsglobal.h>\n \n #include <QtCore/QStringList>\n #include <QtCore/QByteArray>\n"", ""kdupdaterufuncompressor.cpp"": """", ""kdupdaterufuncompressor_p.h"": ""@@ -23,7 +23,7 @@\n #ifndef __KDTOOLS_KDUPDATERUFUNCOMPRESSOR_P_H__\n #define __KDTOOLS_KDUPDATERUFUNCOMPRESSOR_P_H__\n \n-#include <KDToolsCore/pimpl_ptr.h>\n+#include <pimpl_ptr.h>\n \n #include <QtCore/QCoreApplication>\n \n"", ""kdupdaterupdate.cpp"": """", ""kdupdaterupdate.h"": """", ""kdupdaterupdatefinder.cpp"": """", ""kdupdaterupdatefinder.h"": """", ""kdupdaterupdateinstaller.cpp"": """", ""kdupdaterupdateinstaller.h"": """", ""kdupdaterupdateoperation.cpp"": """", ""kdupdaterupdateoperation.h"": """", ""kdupdaterupdateoperationfactory.cpp"": """", ""kdupdaterupdateoperationfactory.h"": ""@@ -23,10 +23,10 @@\n #ifndef KD_UPDATER_UPDATE_OPERATION_FACTORY_H\n #define KD_UPDATER_UPDATE_OPERATION_FACTORY_H\n \n-#include <KDToolsCore/kdgenericfactory.h>\n+#include <kdgenericfactory.h>\n \n #include \""kdupdater.h\""\n-#include <KDToolsCore/pimpl_ptr.h>\n+#include <pimpl_ptr.h>\n \n namespace KDUpdater\n {\n"", ""kdupdaterupdateoperations.cpp"": """", ""kdupdaterupdateoperations.h"": """", ""kdupdaterupdatesinfo.cpp"": """", ""kdupdaterupdatesinfo_p.h"": """", ""kdupdaterupdatesourcesinfo.cpp"": """", ""kdupdaterupdatesourcesinfo.h"": """", ""pimpl_ptr.cpp"": """", ""pimpl_ptr.h"": ""@@ -23,7 +23,7 @@\n #ifndef __KDTOOLSCORE__PIMPL_PTR_H__\n #define __KDTOOLSCORE__PIMPL_PTR_H__\n \n-#include <KDToolsCore/kdtoolsglobal.h>\n+#include <kdtoolsglobal.h>\n \n #ifndef DOXYGEN_RUN\n namespace kdtools {\n"", ""component.cpp"": ""@@ -41,8 +41,8 @@\n #include \""qinstallerglobal.h\""\n #include \""messageboxhandler.h\""\n \n-#include <KDUpdater/kdupdaterupdatesourcesinfo.h>\n-#include <KDUpdater/kdupdaterupdateoperationfactory.h>\n+#include <kdupdaterupdatesourcesinfo.h>\n+#include <kdupdaterupdateoperationfactory.h>\n \n #include <QtCore/QDirIterator>\n #include <QtCore/QTranslator>\n"", ""createshortcutoperation.cpp"": ""@@ -31,8 +31,8 @@\n **\n **************************************************************************/\n \n-#include <KDUpdater/kdupdaterapplication.h>\n-#include <KDUpdater/kdupdaterpackagesinfo.h>\n+#include <kdupdaterapplication.h>\n+#include <kdupdaterpackagesinfo.h>\n \n #include \""createshortcutoperation.h\""\n #include \""common/errors.h\""\n"", ""cryptosignatureverifier.h"": ""@@ -27,10 +27,9 @@\n #ifndef CRYPTOSIGNATUREVERIFIER_H\n #define CRYPTOSIGNATUREVERIFIER_H\n \n-#include \""KDUpdater/kdupdatercrypto.h\""\n-\n-#include <KDUpdater/kdupdatersignatureverifier.h>\n-#include <KDUpdater/kdupdatersignatureverificationresult.h>\n+#include <kdupdatercrypto.h>\n+#include <kdupdatersignatureverifier.h>\n+#include <kdupdatersignatureverificationresult.h>\n \n \n class CryptoSignatureVerifier : public KDUpdater::SignatureVerifier\n"", ""downloadarchivesjob.cpp"": ""@@ -39,8 +39,8 @@\n #include \""messageboxhandler.h\""\n #include \""packagemanagercore.h\""\n \n-#include <KDUpdater/kdupdaterfiledownloader.h>\n-#include <KDUpdater/kdupdaterfiledownloaderfactory.h>\n+#include <kdupdaterfiledownloader.h>\n+#include <kdupdaterfiledownloaderfactory.h>\n \n #include <QtCore/QFile>\n #include <QtCore/QTimerEvent>\n"", ""downloadarchivesjob.h"": ""@@ -26,7 +26,7 @@\n #ifndef DOWNLOADARCHIVESJOB_H\n #define DOWNLOADARCHIVESJOB_H\n \n-#include <KDToolsCore/kdjob.h>\n+#include <kdjob.h>\n \n #include <QtCore/QPair>\n #include <QtCore/QSet>\n"", ""environmentvariablesoperation.cpp"": ""@@ -35,7 +35,7 @@\n \n #include <stdlib.h>\n \n-#include \""KDUpdater/environment.h\""\n+#include \""environment.h\""\n \n #ifdef Q_WS_WIN\n # include <windows.h>\n"", ""fakestopprocessforupdateoperation.cpp"": ""@@ -33,7 +33,7 @@\n \n #include \""fakestopprocessforupdateoperation.h\""\n \n-#include <KDToolsCore/kdsysinfo.h>\n+#include <kdsysinfo.h>\n #include <QtCore/QDir>\n \n #include <algorithm>\n"", ""getrepositoriesmetainfojob.h"": ""@@ -26,7 +26,7 @@\n #ifndef GETREPOSITORIESMETAINFOJOB_H\n #define GETREPOSITORIESMETAINFOJOB_H\n \n-#include <KDToolsCore/kdjob.h>\n+#include <kdjob.h>\n \n #include <QtCore/QList>\n #include <QtCore/QPointer>\n"", ""getrepositorymetainfojob.cpp"": ""@@ -40,8 +40,8 @@\n #include \""messageboxhandler.h\""\n #include \""qinstallerglobal.h\""\n \n-#include <KDUpdater/kdupdaterfiledownloader.h>\n-#include <KDUpdater/kdupdaterfiledownloaderfactory.h>\n+#include <kdupdaterfiledownloader.h>\n+#include <kdupdaterfiledownloaderfactory.h>\n \n #include <QtCore/QFile>\n #include <QtCore/QTimer>\n"", ""getrepositorymetainfojob.h"": ""@@ -26,7 +26,7 @@\n #ifndef GETREPOSITORYMETAINFOJOB_H\n #define GETREPOSITORYMETAINFOJOB_H\n \n-#include <KDToolsCore/kdjob.h>\n+#include <kdjob.h>\n \n #include <QtCore/QPointer>\n #include <QtCore/QString>\n"", ""init.cpp"": ""@@ -76,10 +76,10 @@\n \n #include <QtPlugin>\n \n-#include <KDUpdater/kdupdaterupdateoperation.h>\n-#include <KDUpdater/kdupdaterupdateoperationfactory.h>\n-#include <KDUpdater/kdupdaterfiledownloader.h>\n-#include <KDUpdater/kdupdaterfiledownloaderfactory.h>\n+#include <kdupdaterupdateoperation.h>\n+#include <kdupdaterupdateoperationfactory.h>\n+#include <kdupdaterfiledownloader.h>\n+#include <kdupdaterfiledownloaderfactory.h>\n \n #include <QNetworkProxyFactory>\n \n"", ""libinstaller.pri"": ""@@ -12,8 +12,7 @@ DEPENDPATH += $$PWD \\\n     $$PWD/.. \\\n     $$PWD/3rdparty/p7zip_9.04 \\\n     $$PWD/3rdparty/p7zip_9.04/unix/CPP \\\n-    $$PWD/3rdparty/kdtools/KDUpdater \\\n-    $$PWD/3rdparty/kdtools/KDToolsCore \\\n+    $$PWD/3rdparty/kdtools \n \n CONFIG( shared, static|shared ):DEFINES += LIB_INSTALLER_SHARED\n CONFIG( shared, static|shared ):DEFINES += KDTOOLS_SHARED\n"", ""libinstaller.pro"": ""@@ -3,8 +3,8 @@ TARGET = installer\n DEPENDPATH += . \\\n     .. \\\n     ../common \\\n-    3rdparty/kdtools/KDToolsCore \\\n-    3rdparty/kdtools/KDUpdater\n+    3rdparty/kdtools \n+\n INCLUDEPATH += . \\\n     .. \\\n     3rdparty/kdtools\n@@ -30,8 +30,7 @@ contains(CONFIG, static): {\n }\n \n include(3rdparty/p7zip_9.04/p7zip.pri)\n-include(3rdparty/kdtools/KDUpdater/KDUpdater.pri)\n-include(3rdparty/kdtools/KDToolsCore/KDToolsCore.pri)\n+include(3rdparty/kdtools/kdtools.pri)\n \n HEADERS += $$PWD/packagemanagercore.h \\\n     $$PWD/packagemanagercore_p.h \\\n@@ -185,7 +184,7 @@ win32:LIBS += ole32.lib \\\n     oleaut32.lib \\\n     user32.lib\n \n-# Needed by KDToolsCore (in kdlog_win.cpp):\n+# Needed by kdtools (in kdlog_win.cpp):\n win32:LIBS += advapi32.lib psapi.lib\n macx:LIBS += -framework Carbon\n \n"", ""operationrunner.cpp"": ""@@ -39,8 +39,8 @@\n #include \""init.h\""\n #include \""packagemanagercore.h\""\n \n-#include <KDUpdater/kdupdaterupdateoperation.h>\n-#include <KDUpdater/kdupdaterupdateoperationfactory.h>\n+#include <kdupdaterupdateoperation.h>\n+#include <kdupdaterupdateoperationfactory.h>\n \n #include <iostream>\n \n"", ""packagemanagercore.cpp"": ""@@ -55,8 +55,8 @@\n #include <QtScript/QScriptEngine>\n #include <QtScript/QScriptContext>\n \n-#include <KDToolsCore/kdsysinfo.h>\n-#include <KDUpdater/kdupdaterupdateoperationfactory.h>\n+#include <kdsysinfo.h>\n+#include <kdupdaterupdateoperationfactory.h>\n \n #ifdef Q_OS_WIN\n #include \""qt_windows.h\""\n"", ""packagemanagercore_p.cpp"": ""@@ -45,11 +45,11 @@\n #include \""qprocesswrapper.h\""\n #include \""qsettingswrapper.h\""\n \n-#include <KDToolsCore/kdsavefile.h>\n-#include <KDToolsCore/kdselfrestarter.h>\n-#include <KDUpdater/kdupdaterupdatesourcesinfo.h>\n-#include <KDUpdater/kdupdaterupdateoperationfactory.h>\n-#include <KDUpdater/kdupdaterupdatefinder.h>\n+#include <kdsavefile.h>\n+#include <kdselfrestarter.h>\n+#include <kdupdaterupdatesourcesinfo.h>\n+#include <kdupdaterupdateoperationfactory.h>\n+#include <kdupdaterupdatefinder.h>\n \n #include <QtCore/QtConcurrentRun>\n #include <QtCore/QCoreApplication>\n"", ""packagemanagercore_p.h"": ""@@ -37,8 +37,8 @@\n #include \""settings.h\""\n #include \""packagemanagercore.h\""\n \n-#include <KDToolsCore/kdsysinfo.h>\n-#include <KDUpdater/kdupdaterapplication.h>\n+#include <kdsysinfo.h>\n+#include <kdupdaterapplication.h>\n \n #include <QtCore/QHash>\n #include <QtCore/QObject>\n"", ""packagemanagergui.cpp"": ""@@ -46,7 +46,7 @@\n #include \""common/utils.h\""\n #include \""common/fileutils.h\""\n \n-#include <KDToolsCore/kdsysinfo.h>\n+#include <kdsysinfo.h>\n \n #include <QtCore/QDir>\n #include <QtCore/QDynamicPropertyChangeEvent>\n"", ""qinstallerglobal.h"": ""@@ -28,9 +28,9 @@\n \n #include <installer_global.h>\n \n-#include <KDUpdater/kdupdaterupdate.h>\n-#include <KDUpdater/kdupdaterupdateoperation.h>\n-#include <KDUpdater/kdupdaterpackagesinfo.h>\n+#include <kdupdaterupdate.h>\n+#include <kdupdaterupdateoperation.h>\n+#include <kdupdaterpackagesinfo.h>\n \n QT_BEGIN_NAMESPACE\n class QScriptContext;\n"", ""selfrestartoperation.cpp"": ""@@ -33,7 +33,7 @@\n #include \""selfrestartoperation.h\""\n #include \""packagemanagercore.h\""\n \n-#include <KDToolsCore/kdselfrestarter.h>\n+#include <kdselfrestarter.h>\n \n using namespace QInstaller;\n \n"", ""environmentvariabletest.cpp"": ""@@ -35,7 +35,7 @@\n \n #include \""init.h\""\n \n-#include <KDUpdater/kdupdaterapplication.h>\n+#include <kdupdaterapplication.h>\n \n #include <QDir>\n #include <QDirIterator>\n"", ""extractarchiveoperationtest.cpp"": ""@@ -35,7 +35,7 @@\n \n #include \""init.h\""\n \n-#include <KDUpdater/kdupdaterapplication.h>\n+#include <kdupdaterapplication.h>\n \n #include <QDir>\n #include <QDirIterator>\n""}",refactor,"refactor
",others;
7382.0,7382.0,deprecat,Robert Löhning,Removed dead assignment,"Removed dead assignment

Change-Id: I4fd52e155a2252b4e66b419eb7d14b24a439ab96",['src/plugins/texteditor/basetextdocument.cpp'],"{""basetextdocument.cpp"": ""@@ -484,7 +484,8 @@ bool BaseTextDocument::open(QString *errorString, const QString &fileName, const\n         emit titleChanged(title);\n         emit changed();\n     }\n-    return true;\n+    return readResult == Utils::TextFileFormat::ReadSuccess\n+           || readResult == Utils::TextFileFormat::ReadEncodingError;\n }\n \n bool BaseTextDocument::reload(QString *errorString, QTextCodec *codec)\n""}",deprecat,"bug, refactor 
",deprecat;
12985.0,12985.0,"bug,resource",Frederik Gladhorn,Fix typo: jbects->objects,"Fix typo: jbects->objects

Change-Id: Iba8131512656646d2115d81a323b1afceb9ce67c",['doc/src/development/designer-manual.qdoc'],"{""designer-manual.qdoc"": ""@@ -622,7 +622,7 @@\n             \\i \\bold{Editing Properties}\n \n         The property editor uses standard Qt input widgets to manage the\n-        properties of jbects on the form. Textual properties are shown in line\n+        properties of objects on the form. Textual properties are shown in line\n         edits, integer properties are displayed in spinboxes, boolean\n         properties are displayed in check boxes, and compound properties such\n         as colors and sizes are presented in drop-down lists of input widgets.\n""}","bug,resource","bug, resource 
",bug;
13790.0,13790.0,"bug;deprecat,test",Kent Hansen,Remove QJSEngine::toObject() and QJSValue::toObject(),"Remove QJSEngine::toObject() and QJSValue::toObject()

Rationale: There is no compelling usecase for these functions.
They are a remnant from QtScript.

Task-number: QTBUG-23604
Change-Id: I6d8b4299956dd8f6284934739c4f1a65e4deb64c","['tests/auto/declarative/qjsvalue/tst_qjsvalue.cpp', 'src/declarative/qml/v8/qjsvalue.cpp', 'src/declarative/qml/v8/qjsengine.h', 'tests/auto/declarative/qjsengine/tst_qjsengine.cpp', 'src/declarative/qml/v8/qjsengine.cpp', 'tests/auto/declarative/qjsvalueiterator/tst_qjsvalueiterator.cpp', 'tests/auto/declarative/qjsvalue/tst_qjsvalue.h', 'src/declarative/qml/v8/qjsvalue_p.h', 'src/declarative/qml/v8/qjsvalue.h', 'src/declarative/qml/v8/qjsvalue_impl_p.h']","{""qjsengine.cpp"": ""@@ -447,33 +447,6 @@ QJSValue QJSEngine::globalObject() const\n \n #ifdef QT_DEPRECATED\n \n-/*!\n-  \\obsolete\n-\n-  Converts the given \\a value to an object, if such a conversion is\n-  possible; otherwise returns an invalid QJSValue. The conversion\n-  is performed according to the following table:\n-\n-    \\table\n-    \\header \\o Input Type \\o Result\n-    \\row    \\o Undefined  \\o An invalid QJSValue.\n-    \\row    \\o Null       \\o An invalid QJSValue.\n-    \\row    \\o Boolean    \\o A new Boolean object whose internal value is set to the value of the boolean.\n-    \\row    \\o Number     \\o A new Number object whose internal value is set to the value of the number.\n-    \\row    \\o String     \\o A new String object whose internal value is set to the value of the string.\n-    \\row    \\o Object     \\o The result is the object itself (no conversion).\n-    \\endtable\n-\n-    \\sa newObject()\n-*/\n-QJSValue QJSEngine::toObject(const QJSValue& value)\n-{\n-    Q_D(QJSEngine);\n-    QScriptIsolate api(d, QScriptIsolate::NotNullEngine);\n-    v8::HandleScope handleScope;\n-    return QJSValuePrivate::get(QJSValuePrivate::get(value)->toObject(d));\n-}\n-\n /*!\n   \\obsolete\n \n"", ""qjsengine.h"": ""@@ -102,8 +102,6 @@ public:\n     QT_DEPRECATED QJSValue newRegExp(const QString &pattern, const QString &flags);\n     QT_DEPRECATED QJSValue newDate(double value);\n     QT_DEPRECATED QJSValue newDate(const QDateTime &value);\n-\n-    QT_DEPRECATED QJSValue toObject(const QJSValue &value);\n #endif\n \n Q_SIGNALS:\n"", ""qjsvalue.cpp"": ""@@ -461,7 +461,7 @@ bool QJSValue::isArray() const\n   Note that function values, variant values, and QObject values are\n   objects, so this function returns true for such values.\n \n-  \\sa toObject(), QJSEngine::newObject()\n+  \\sa QJSEngine::newObject()\n */\n bool QJSValue::isObject() const\n {\n@@ -677,18 +677,6 @@ quint16 QJSValue::toUInt16() const\n     return d->toUInt16();\n }\n \n-/*!\n-  \\obsolete\n-\n-  This function is obsolete; use QJSEngine::toObject() instead.\n-*/\n-QJSValue QJSValue::toObject() const\n-{\n-    Q_D(const QJSValue);\n-    QScriptIsolate api(d->engine());\n-    return QJSValuePrivate::get(d->toObject());\n-}\n-\n #endif // QT_DEPRECATED\n \n /*!\n"", ""qjsvalue.h"": ""@@ -145,7 +145,6 @@ public:\n     QT_DEPRECATED qint32 toInt32() const;\n     QT_DEPRECATED quint32 toUInt32() const;\n     QT_DEPRECATED quint16 toUInt16() const;\n-    QT_DEPRECATED QJSValue toObject() const;\n     QT_DEPRECATED QRegExp toRegExp() const;\n \n     QT_DEPRECATED bool instanceOf(const QJSValue &other) const;\n"", ""qjsvalue_impl_p.h"": ""@@ -256,51 +256,6 @@ double QJSValuePrivate::toNumber() const\n     return 0; // Avoid compiler warning.\n }\n \n-QScriptPassPointer<QJSValuePrivate> QJSValuePrivate::toObject(QV8Engine* engine) const\n-{\n-    Q_ASSERT(engine);\n-    if (this->engine() && engine != this->engine()) {\n-        qWarning(\""QJSEngine::toObject: cannot convert value created in a different engine\"");\n-        return InvalidValue();\n-    }\n-\n-    v8::HandleScope scope;\n-    switch (m_state) {\n-    case Invalid:\n-    case CNull:\n-    case CUndefined:\n-        return new QJSValuePrivate;\n-    case CString:\n-        return new QJSValuePrivate(engine, engine->makeJSValue(*u.m_string)->ToObject());\n-    case CNumber:\n-        return new QJSValuePrivate(engine, engine->makeJSValue(u.m_number)->ToObject());\n-    case CBool:\n-        return new QJSValuePrivate(engine, engine->makeJSValue(u.m_bool)->ToObject());\n-    case JSValue:\n-        if (m_value->IsObject())\n-            return const_cast<QJSValuePrivate*>(this);\n-        if (m_value->IsNull() || m_value->IsUndefined()) // avoid \""Uncaught TypeError: Cannot convert null to object\""\n-            return InvalidValue();\n-        return new QJSValuePrivate(engine, m_value->ToObject());\n-    default:\n-        Q_ASSERT_X(false, Q_FUNC_INFO, \""Not all states are included in this switch\"");\n-        return InvalidValue();\n-    }\n-}\n-\n-/*!\n-  This method is created only for QJSValue::toObject() purpose which is obsolete.\n-  \\internal\n- */\n-QScriptPassPointer<QJSValuePrivate> QJSValuePrivate::toObject() const\n-{\n-    if (isJSBased())\n-        return toObject(engine());\n-\n-    // Without an engine there is not much we can do.\n-    return new QJSValuePrivate;\n-}\n-\n QString QJSValuePrivate::toString() const\n {\n     switch (m_state) {\n"", ""qjsvalue_p.h"": ""@@ -84,8 +84,6 @@ public:\n \n     inline bool toBool() const;\n     inline double toNumber() const;\n-    inline QScriptPassPointer<QJSValuePrivate> toObject() const;\n-    inline QScriptPassPointer<QJSValuePrivate> toObject(QV8Engine *engine) const;\n     inline QString toString() const;\n     inline double toInteger() const;\n     inline qint32 toInt32() const;\n"", ""tst_qjsengine.cpp"": ""@@ -235,7 +235,6 @@ private slots:\n #endif\n     void jsContinueInSwitch();\n     void jsShadowReadOnlyPrototypeProperty();\n-    void toObject();\n     void jsReservedWords_data();\n     void jsReservedWords();\n     void jsFutureReservedWords_data();\n@@ -4366,7 +4365,7 @@ void tst_QJSEngine::stringObjects()\n     QString str(\""ciao\"");\n     // in C++\n     {\n-        QJSValue obj = QJSValue(&eng, str).toObject();\n+        QJSValue obj = eng.evaluate(QString::fromLatin1(\""new String('%0')\"").arg(str));\n         QCOMPARE(obj.property(\""length\"").toInt(), str.length());\n         QCOMPARE(obj.propertyFlags(\""length\""), QJSValue::PropertyFlags(QJSValue::Undeletable | QJSValue::SkipInEnumeration | QJSValue::ReadOnly));\n         for (int i = 0; i < str.length(); ++i) {\n@@ -4390,7 +4389,6 @@ void tst_QJSEngine::stringObjects()\n         QVERIFY(obj.property(\""100\"").strictlyEquals(val));\n     }\n \n-    // in script\n     {\n         QJSValue ret = eng.evaluate(\""s = new String('ciao'); r = []; for (var p in s) r.push(p); r\"");\n         QVERIFY(ret.isArray());\n@@ -4677,85 +4675,6 @@ void tst_QJSEngine::jsShadowReadOnlyPrototypeProperty()\n     QVERIFY(eng.evaluate(\""o.hasOwnProperty('length')\"").toBool());\n }\n \n-void tst_QJSEngine::toObject()\n-{\n-    QJSEngine eng;\n-\n-    QVERIFY(!eng.toObject(eng.undefinedValue()).isValid());\n-\n-    QVERIFY(!eng.toObject(eng.nullValue()).isValid());\n-\n-    QJSValue falskt(false);\n-    {\n-        QJSValue tmp = eng.toObject(falskt);\n-        QVERIFY(tmp.isObject());\n-        QCOMPARE(tmp.toNumber(), falskt.toNumber());\n-    }\n-    QVERIFY(falskt.isBool());\n-\n-    QJSValue sant(true);\n-    {\n-        QJSValue tmp = eng.toObject(sant);\n-        QVERIFY(tmp.isObject());\n-        QCOMPARE(tmp.toNumber(), sant.toNumber());\n-    }\n-    QVERIFY(sant.isBool());\n-\n-    QJSValue number(123.0);\n-    {\n-        QJSValue tmp = eng.toObject(number);\n-        QVERIFY(tmp.isObject());\n-        QCOMPARE(tmp.toNumber(), number.toNumber());\n-    }\n-    QVERIFY(number.isNumber());\n-\n-    QJSValue str = QJSValue(&eng, QString(\""ciao\""));\n-    {\n-        QJSValue tmp = eng.toObject(str);\n-        QVERIFY(tmp.isObject());\n-        QCOMPARE(tmp.toString(), str.toString());\n-    }\n-    QVERIFY(str.isString());\n-\n-    QJSValue object = eng.newObject();\n-    {\n-        QJSValue tmp = eng.toObject(object);\n-        QVERIFY(tmp.isObject());\n-        QVERIFY(tmp.strictlyEquals(object));\n-    }\n-\n-    QJSValue qobject = eng.newQObject(this);\n-    QVERIFY(eng.toObject(qobject).strictlyEquals(qobject));\n-\n-    QVERIFY(!eng.toObject(QJSValue()).isValid());\n-\n-    // v1 constructors\n-\n-    QJSValue boolValue(&eng, true);\n-    {\n-        QJSValue ret = eng.toObject(boolValue);\n-        QVERIFY(ret.isObject());\n-        QCOMPARE(ret.toBool(), boolValue.toBool());\n-    }\n-    QVERIFY(boolValue.isBool());\n-\n-    QJSValue numberValue(&eng, 123.0);\n-    {\n-        QJSValue ret = eng.toObject(numberValue);\n-        QVERIFY(ret.isObject());\n-        QCOMPARE(ret.toNumber(), numberValue.toNumber());\n-    }\n-    QVERIFY(numberValue.isNumber());\n-\n-    QJSValue stringValue(&eng, QString::fromLatin1(\""foo\""));\n-    {\n-        QJSValue ret = eng.toObject(stringValue);\n-        QVERIFY(ret.isObject());\n-        QCOMPARE(ret.toString(), stringValue.toString());\n-    }\n-    QVERIFY(stringValue.isString());\n-}\n-\n void tst_QJSEngine::jsReservedWords_data()\n {\n     QTest::addColumn<QString>(\""word\"");\n"", ""tst_qjsvalue.cpp"": ""@@ -1437,114 +1437,6 @@ void tst_QJSValue::toQObject()\n     QCOMPARE(qjsvalue_cast<QPushButton*>(variant3), &button);\n }\n \n-void tst_QJSValue::toObject()\n-{\n-    QJSEngine eng;\n-\n-    QJSValue undefined = eng.undefinedValue();\n-    QCOMPARE(undefined.toObject().isValid(), false);\n-    QVERIFY(undefined.isUndefined());\n-\n-    QJSValue null = eng.nullValue();\n-    QCOMPARE(null.toObject().isValid(), false);\n-    QVERIFY(null.isNull());\n-\n-    {\n-        QJSValue falskt = QJSValue(&eng, false);\n-        {\n-            QJSValue tmp = falskt.toObject();\n-            QCOMPARE(tmp.isObject(), true);\n-            QCOMPARE(tmp.toNumber(), falskt.toNumber());\n-        }\n-        QVERIFY(falskt.isBool());\n-\n-        QJSValue sant = QJSValue(&eng, true);\n-        {\n-            QJSValue tmp = sant.toObject();\n-            QCOMPARE(tmp.isObject(), true);\n-            QCOMPARE(tmp.toNumber(), sant.toNumber());\n-        }\n-        QVERIFY(sant.isBool());\n-\n-        QJSValue number = QJSValue(&eng, 123.0);\n-        {\n-            QJSValue tmp = number.toObject();\n-            QCOMPARE(tmp.isObject(), true);\n-            QCOMPARE(tmp.toNumber(), number.toNumber());\n-        }\n-        QVERIFY(number.isNumber());\n-\n-        QJSValue str = QJSValue(&eng, QString(\""ciao\""));\n-        {\n-            QJSValue tmp = str.toObject();\n-            QCOMPARE(tmp.isObject(), true);\n-            QCOMPARE(tmp.toString(), str.toString());\n-        }\n-        QVERIFY(str.isString());\n-    }\n-\n-    QJSValue object = eng.newObject();\n-    {\n-        QJSValue tmp = object.toObject();\n-        QCOMPARE(tmp.isObject(), true);\n-    }\n-\n-    QJSValue qobject = eng.newQObject(this);\n-    QCOMPARE(qobject.toObject().isValid(), true);\n-\n-    QJSValue inv;\n-    QCOMPARE(inv.toObject().isValid(), false);\n-\n-    // V2 constructors: in this case, you have to use QScriptEngine::toObject()\n-    {\n-        QJSValue undefined = QJSValue(QJSValue::UndefinedValue);\n-        QVERIFY(!undefined.toObject().isValid());\n-        QVERIFY(!eng.toObject(undefined).isValid());\n-        QVERIFY(undefined.isUndefined());\n-\n-        QJSValue null = QJSValue(QJSValue::NullValue);\n-        QVERIFY(!null.toObject().isValid());\n-        QVERIFY(!eng.toObject(null).isValid());\n-        QVERIFY(null.isNull());\n-\n-        QJSValue falskt = QJSValue(false);\n-        QVERIFY(!falskt.toObject().isValid());\n-        {\n-            QJSValue tmp = eng.toObject(falskt);\n-            QVERIFY(tmp.isObject());\n-            QVERIFY(tmp.toBool());\n-        }\n-        QVERIFY(falskt.isBool());\n-\n-        QJSValue sant = QJSValue(true);\n-        QVERIFY(!sant.toObject().isValid());\n-        {\n-            QJSValue tmp = eng.toObject(sant);\n-            QVERIFY(tmp.isObject());\n-            QVERIFY(tmp.toBool());\n-        }\n-        QVERIFY(sant.isBool());\n-\n-        QJSValue number = QJSValue(123.0);\n-        QVERIFY(!number.toObject().isValid());\n-        {\n-            QJSValue tmp = eng.toObject(number);\n-            QVERIFY(tmp.isObject());\n-            QCOMPARE(tmp.toInt(), number.toInt());\n-        }\n-        QVERIFY(number.isNumber());\n-\n-        QJSValue str = QJSValue(QString::fromLatin1(\""ciao\""));\n-        QVERIFY(!str.toObject().isValid());\n-        {\n-            QJSValue tmp = eng.toObject(str);\n-            QVERIFY(tmp.isObject());\n-            QCOMPARE(tmp.toString(), QString::fromLatin1(\""ciao\""));\n-        }\n-        QVERIFY(str.isString());\n-    }\n-}\n-\n void tst_QJSValue::toDateTime()\n {\n     QJSEngine eng;\n@@ -2851,7 +2743,7 @@ void tst_QJSValue::call_this()\n     QJSValue fun = eng.evaluate(\""(function() { return this; })\"");\n     QCOMPARE(fun.isCallable(), true);\n \n-    QJSValue numberObject = QJSValue(&eng, 123.0).toObject();\n+    QJSValue numberObject = eng.evaluate(\""new Number(123)\"");\n     QJSValue result = fun.callWithInstance(numberObject);\n     QCOMPARE(result.isObject(), true);\n     QCOMPARE(result.toNumber(), 123.0);\n@@ -3445,11 +3337,11 @@ void tst_QJSValue::equals()\n     QCOMPARE(num.equals(QJSValue(&eng, 321)), false);\n     QCOMPARE(num.equals(QJSValue(&eng, QLatin1String(\""123\""))), true);\n     QCOMPARE(num.equals(QJSValue(&eng, QLatin1String(\""321\""))), false);\n-    QCOMPARE(num.equals(QJSValue(&eng, 123).toObject()), true);\n-    QCOMPARE(num.equals(QJSValue(&eng, 321).toObject()), false);\n-    QCOMPARE(num.equals(QJSValue(&eng, QLatin1String(\""123\"")).toObject()), true);\n-    QCOMPARE(num.equals(QJSValue(&eng, QLatin1String(\""321\"")).toObject()), false);\n-    QVERIFY(num.toObject().equals(num));\n+    QCOMPARE(num.equals(eng.evaluate(\""new Number(123)\"")), true);\n+    QCOMPARE(num.equals(eng.evaluate(\""new Number(321)\"")), false);\n+    QCOMPARE(num.equals(eng.evaluate(\""new String('123')\"")), true);\n+    QCOMPARE(num.equals(eng.evaluate(\""new String('321')\"")), false);\n+    QVERIFY(eng.evaluate(\""new Number(123)\"").equals(num));\n     QCOMPARE(num.equals(QJSValue()), false);\n \n     QJSValue str = QJSValue(&eng, QLatin1String(\""123\""));\n@@ -3457,11 +3349,11 @@ void tst_QJSValue::equals()\n     QCOMPARE(str.equals(QJSValue(&eng, QLatin1String(\""321\""))), false);\n     QCOMPARE(str.equals(QJSValue(&eng, 123)), true);\n     QCOMPARE(str.equals(QJSValue(&eng, 321)), false);\n-    QCOMPARE(str.equals(QJSValue(&eng, QLatin1String(\""123\"")).toObject()), true);\n-    QCOMPARE(str.equals(QJSValue(&eng, QLatin1String(\""321\"")).toObject()), false);\n-    QCOMPARE(str.equals(QJSValue(&eng, 123).toObject()), true);\n-    QCOMPARE(str.equals(QJSValue(&eng, 321).toObject()), false);\n-    QVERIFY(str.toObject().equals(str));\n+    QCOMPARE(str.equals(eng.evaluate(\""new String('123')\"")), true);\n+    QCOMPARE(str.equals(eng.evaluate(\""new String('321')\"")), false);\n+    QCOMPARE(str.equals(eng.evaluate(\""new Number(123)\"")), true);\n+    QCOMPARE(str.equals(eng.evaluate(\""new Number(321)\"")), false);\n+    QVERIFY(eng.evaluate(\""new String('123')\"").equals(str));\n     QCOMPARE(str.equals(QJSValue()), false);\n \n     QJSValue num2 = QJSValue(123);\n@@ -3499,10 +3391,10 @@ void tst_QJSValue::equals()\n     QVERIFY(sant.equals(QJSValue(&eng, 1)));\n     QVERIFY(sant.equals(QJSValue(&eng, QLatin1String(\""1\""))));\n     QVERIFY(sant.equals(sant));\n-    QVERIFY(sant.equals(QJSValue(&eng, 1).toObject()));\n-    QVERIFY(sant.equals(QJSValue(&eng, QLatin1String(\""1\"")).toObject()));\n-    QVERIFY(sant.equals(sant.toObject()));\n-    QVERIFY(sant.toObject().equals(sant));\n+    QVERIFY(sant.equals(eng.evaluate(\""new Number(1)\"")));\n+    QVERIFY(sant.equals(eng.evaluate(\""new String('1')\"")));\n+    QVERIFY(sant.equals(eng.evaluate(\""new Boolean(true)\"")));\n+    QVERIFY(eng.evaluate(\""new Boolean(true)\"").equals(sant));\n     QVERIFY(!sant.equals(QJSValue(&eng, 0)));\n     QVERIFY(!sant.equals(undefined));\n     QVERIFY(!sant.equals(null));\n@@ -3511,10 +3403,10 @@ void tst_QJSValue::equals()\n     QVERIFY(falskt.equals(QJSValue(&eng, 0)));\n     QVERIFY(falskt.equals(QJSValue(&eng, QLatin1String(\""0\""))));\n     QVERIFY(falskt.equals(falskt));\n-    QVERIFY(falskt.equals(QJSValue(&eng, 0).toObject()));\n-    QVERIFY(falskt.equals(QJSValue(&eng, QLatin1String(\""0\"")).toObject()));\n-    QVERIFY(falskt.equals(falskt.toObject()));\n-    QVERIFY(falskt.toObject().equals(falskt));\n+    QVERIFY(falskt.equals(eng.evaluate(\""new Number(0)\"")));\n+    QVERIFY(falskt.equals(eng.evaluate(\""new String('0')\"")));\n+    QVERIFY(falskt.equals(eng.evaluate(\""new Boolean(false)\"")));\n+    QVERIFY(eng.evaluate(\""new Boolean(false)\"").equals(falskt));\n     QVERIFY(!falskt.equals(sant));\n     QVERIFY(!falskt.equals(undefined));\n     QVERIFY(!falskt.equals(null));\n@@ -3646,11 +3538,11 @@ void tst_QJSValue::strictlyEquals()\n     QCOMPARE(num.strictlyEquals(QJSValue(&eng, 321)), false);\n     QCOMPARE(num.strictlyEquals(QJSValue(&eng, QLatin1String(\""123\""))), false);\n     QCOMPARE(num.strictlyEquals(QJSValue(&eng, QLatin1String(\""321\""))), false);\n-    QCOMPARE(num.strictlyEquals(QJSValue(&eng, 123).toObject()), false);\n-    QCOMPARE(num.strictlyEquals(QJSValue(&eng, 321).toObject()), false);\n-    QCOMPARE(num.strictlyEquals(QJSValue(&eng, QLatin1String(\""123\"")).toObject()), false);\n-    QCOMPARE(num.strictlyEquals(QJSValue(&eng, QLatin1String(\""321\"")).toObject()), false);\n-    QVERIFY(!num.toObject().strictlyEquals(num));\n+    QCOMPARE(num.strictlyEquals(eng.evaluate(\""new Number(123)\"")), false);\n+    QCOMPARE(num.strictlyEquals(eng.evaluate(\""new Number(321)\"")), false);\n+    QCOMPARE(num.strictlyEquals(eng.evaluate(\""new String('123')\"")), false);\n+    QCOMPARE(num.strictlyEquals(eng.evaluate(\""new String('321')\"")), false);\n+    QVERIFY(!eng.evaluate(\""new Number(123)\"").strictlyEquals(num));\n     QVERIFY(!num.strictlyEquals(QJSValue()));\n     QVERIFY(!QJSValue().strictlyEquals(num));\n \n@@ -3659,11 +3551,11 @@ void tst_QJSValue::strictlyEquals()\n     QCOMPARE(str.strictlyEquals(QJSValue(&eng, QLatin1String(\""321\""))), false);\n     QCOMPARE(str.strictlyEquals(QJSValue(&eng, 123)), false);\n     QCOMPARE(str.strictlyEquals(QJSValue(&eng, 321)), false);\n-    QCOMPARE(str.strictlyEquals(QJSValue(&eng, QLatin1String(\""123\"")).toObject()), false);\n-    QCOMPARE(str.strictlyEquals(QJSValue(&eng, QLatin1String(\""321\"")).toObject()), false);\n-    QCOMPARE(str.strictlyEquals(QJSValue(&eng, 123).toObject()), false);\n-    QCOMPARE(str.strictlyEquals(QJSValue(&eng, 321).toObject()), false);\n-    QVERIFY(!str.toObject().strictlyEquals(str));\n+    QCOMPARE(str.strictlyEquals(eng.evaluate(\""new String('123')\"")), false);\n+    QCOMPARE(str.strictlyEquals(eng.evaluate(\""new String('321')\"")), false);\n+    QCOMPARE(str.strictlyEquals(eng.evaluate(\""new Number(123)\"")), false);\n+    QCOMPARE(str.strictlyEquals(eng.evaluate(\""new Number(321)\"")), false);\n+    QVERIFY(!eng.evaluate(\""new String('123')\"").strictlyEquals(str));\n     QVERIFY(!str.strictlyEquals(QJSValue()));\n \n     QJSValue num2 = QJSValue(123);\n@@ -3699,10 +3591,10 @@ void tst_QJSValue::strictlyEquals()\n     QVERIFY(!sant.strictlyEquals(QJSValue(&eng, 1)));\n     QVERIFY(!sant.strictlyEquals(QJSValue(&eng, QLatin1String(\""1\""))));\n     QVERIFY(sant.strictlyEquals(sant));\n-    QVERIFY(!sant.strictlyEquals(QJSValue(&eng, 1).toObject()));\n-    QVERIFY(!sant.strictlyEquals(QJSValue(&eng, QLatin1String(\""1\"")).toObject()));\n-    QVERIFY(!sant.strictlyEquals(sant.toObject()));\n-    QVERIFY(!sant.toObject().strictlyEquals(sant));\n+    QVERIFY(!sant.strictlyEquals(eng.evaluate(\""new Number(1)\"")));\n+    QVERIFY(!sant.strictlyEquals(eng.evaluate(\""new String('1')\"")));\n+    QVERIFY(!sant.strictlyEquals(eng.evaluate(\""new Boolean(true)\"")));\n+    QVERIFY(!eng.evaluate(\""new Boolean(true)\"").strictlyEquals(sant));\n     QVERIFY(!sant.strictlyEquals(QJSValue(&eng, 0)));\n     QVERIFY(!sant.strictlyEquals(undefined));\n     QVERIFY(!sant.strictlyEquals(null));\n@@ -3712,10 +3604,10 @@ void tst_QJSValue::strictlyEquals()\n     QVERIFY(!falskt.strictlyEquals(QJSValue(&eng, 0)));\n     QVERIFY(!falskt.strictlyEquals(QJSValue(&eng, QLatin1String(\""0\""))));\n     QVERIFY(falskt.strictlyEquals(falskt));\n-    QVERIFY(!falskt.strictlyEquals(QJSValue(&eng, 0).toObject()));\n-    QVERIFY(!falskt.strictlyEquals(QJSValue(&eng, QLatin1String(\""0\"")).toObject()));\n-    QVERIFY(!falskt.strictlyEquals(falskt.toObject()));\n-    QVERIFY(!falskt.toObject().strictlyEquals(falskt));\n+    QVERIFY(!falskt.strictlyEquals(eng.evaluate(\""new Number(0)\"")));\n+    QVERIFY(!falskt.strictlyEquals(eng.evaluate(\""new String('0')\"")));\n+    QVERIFY(!falskt.strictlyEquals(eng.evaluate(\""new Boolean(false)\"")));\n+    QVERIFY(!eng.evaluate(\""new Boolean(false)\"").strictlyEquals(falskt));\n     QVERIFY(!falskt.strictlyEquals(sant));\n     QVERIFY(!falskt.strictlyEquals(undefined));\n     QVERIFY(!falskt.strictlyEquals(null));\n"", ""tst_qjsvalue.h"": ""@@ -60,8 +60,6 @@ public:\n     virtual ~tst_QJSValue();\n \n private slots:\n-    void toObject();\n-\n     void ctor_invalid();\n     void ctor_undefinedWithEngine();\n     void ctor_undefined();\n"", ""tst_qjsvalueiterator.cpp"": ""@@ -282,9 +282,7 @@ void tst_QJSValueIterator::iterateArray()\n void tst_QJSValueIterator::iterateString()\n {\n     QJSEngine engine;\n-    QJSValue str = QJSValue(&engine, QString::fromLatin1(\""ciao\""));\n-    QVERIFY(str.isString());\n-    QJSValue obj = str.toObject();\n+    QJSValue obj = engine.evaluate(\""new String('ciao')\"");\n     QVERIFY(obj.property(\""length\"").isNumber());\n     int length = obj.property(\""length\"").toInt();\n     QCOMPARE(length, 4);\n""}","bug;deprecat,test","deprecate, refactor 
",bug;deprecat;
21680.0,21680.0,bug,Daniel Teske,Qt4Project: Fix ordering of buildconfigurations for new/open,"Qt4Project: Fix ordering of buildconfigurations for new/open

Task-number: QTCREATORBUG-7152

Change-Id: I4c7c0d2f89cdde2ed8dc13adc4187adf91b10f29",['src/plugins/qt4projectmanager/qt4target.cpp'],"{""qt4target.cpp"": ""@@ -970,10 +970,33 @@ bool less(const BuildConfigurationInfo &a, const BuildConfigurationInfo &b)\n         return true;\n     if (a.qtVersionId > b.qtVersionId)\n         return false;\n-    if (a.buildConfig < b.buildConfig)\n-        return true;\n-    if (a.buildConfig > b.buildConfig)\n-        return false;\n+\n+    if (a.buildConfig != b.buildConfig) {\n+        QtSupport::BaseQtVersion *version = a.version();\n+        QtSupport::BaseQtVersion::QmakeBuildConfigs defaultBuildConfigs = QtSupport::BaseQtVersion::DebugBuild;\n+        if (version)\n+            defaultBuildConfigs = version->defaultBuildConfig();\n+\n+        bool adebug = a.buildConfig & QtSupport::BaseQtVersion::DebugBuild;\n+        bool bdebug = b.buildConfig & QtSupport::BaseQtVersion::DebugBuild;\n+        bool defaultdebug = defaultBuildConfigs & QtSupport::BaseQtVersion::DebugBuild;\n+\n+        if (adebug != bdebug)\n+            return (adebug == defaultdebug);\n+\n+        bool abuildall = a.buildConfig & QtSupport::BaseQtVersion::BuildAll;\n+        bool bbuildall = b.buildConfig & QtSupport::BaseQtVersion::BuildAll;\n+        bool defaultbuildall = defaultBuildConfigs & QtSupport::BaseQtVersion::BuildAll;\n+\n+        if (abuildall != bbuildall)\n+            return (abuildall == defaultbuildall);\n+\n+        // Those cases can't happen\n+        if (a.buildConfig < b.buildConfig)\n+            return true;\n+        if (a.buildConfig > b.buildConfig)\n+            return false;\n+    }\n     if (a.additionalArguments < b.additionalArguments)\n         return true;\n     if (a.additionalArguments > b.additionalArguments)\n@@ -986,8 +1009,6 @@ bool less(const BuildConfigurationInfo &a, const BuildConfigurationInfo &b)\n \n void Qt4DefaultTargetSetupWidget::setBuildConfigurationInfos(QList<BuildConfigurationInfo> infos, bool resetDirectories)\n {\n-    // This is somewhat ugly in that we used to sort the buildconfigurations in the order\n-    // that the default for that qt version is first\n     qSort(infos.begin(), infos.end(), less);\n \n     // Existing builds, to figure out which newly added\n""}",bug,"bug 
",bug;resource;
9233.0,9233.0,test; deprecat,Jason McDonald,Remove disabled code from QLibrary autotest,"Remove disabled code from QLibrary autotest

The removed code was already commented-out when it was first added in
2007, and would not form a useful test as it was not followed by any
verification steps.  QLibrary::setLoadHints() is tested elsewhere, so
this code can vanish.

Change-Id: I1c4dcaacaf31b0f38136336414cfbe3de1a406f3",['tests/auto/corelib/plugin/qlibrary/tst_qlibrary.cpp'],"{""tst_qlibrary.cpp"": ""@@ -568,11 +568,6 @@ void tst_QLibrary::multipleInstancesForOneLibrary()\n     QLibrary lib2(lib);\n     //lib2 should be loaded because lib1 was loaded and never unloaded\n     QCOMPARE(lib2.isLoaded(), true);\n-\n-/*\n-    lib1.setLoadHints(QLibrary::ResolveAllSymbolsHint);\n-    lib2.setLoadHints(QLibrary::ExportExternalSymbolHint);\n-*/\n }\n \n QTEST_APPLESS_MAIN(tst_QLibrary)\n""}",test; deprecat,"test, refactor 
",deprecat;test;
11818.0,11818.0,bug,Aurindam Jana,Debugger: Reset Location Mark,"Debugger: Reset Location Mark

Call resetLocation() before setLocation().

Change-Id: I633d513ddc9a5a1683e81f7cabf127e79885ad4e",['src/plugins/debugger/debuggerengine.cpp'],"{""debuggerengine.cpp"": ""@@ -567,6 +567,8 @@ void DebuggerEngine::resetLocation()\n \n void DebuggerEngine::gotoLocation(const Location &loc)\n {\n+     d->resetLocation();\n+\n     if (debuggerCore()->boolSetting(OperateByInstruction) || !loc.hasDebugInfo()) {\n         d->m_disassemblerAgent.setLocation(loc);\n         return;\n@@ -575,7 +577,6 @@ void DebuggerEngine::gotoLocation(const Location &loc)\n     //if (m_shuttingDown)\n     //    return;\n \n-    d->resetLocation();\n \n     const QString file = loc.fileName();\n     const int line = loc.lineNumber();\n""}",bug,"bug 
",bug;
1400.0,1400.0,test,Michael Goddard,Add missing autotest.,"Add missing autotest and fix private tests.

The QSoundEffect test was missing in the initial modularization, and
once added it needs to be enabled properly (private-tests vs.
private_tests)

Change-Id: I92ba5290b28a4af3a1d4bd8f8a036e14a75cf8d1","['tests/auto/multimedia.pro', 'tests/auto/qsoundeffect/tst_qsoundeffect.cpp', 'tests/auto/qsoundeffect/qsoundeffect.pro', 'tests/auto/qsoundeffect/test.wav']","{""multimedia.pro"": ""@@ -25,7 +25,7 @@ SUBDIRS += \\\n \n # Tests depending on private interfaces should only be built if\n # these interfaces are exported.\n-contains (QT_CONFIG, private-tests) {\n+contains (QT_CONFIG, private_tests) {\n   SUBDIRS += \\\n     qgraphicsvideoitem \\\n     qmediaimageviewer \\\n@@ -38,9 +38,9 @@ contains (QT_CONFIG, private-tests) {\n \n contains (QT_CONFIG, declarative) {\n   # All the declarative tests depend on private interfaces\n-  contains (QT_CONFIG, private-tests) {\n+  contains (QT_CONFIG, private_tests) {\n     SUBDIRS += \\\n-#    qsoundeffect \\\n+    qsoundeffect \\\n     qdeclarativeaudio \\\n     qdeclarativevideo\n   }\n"", ""qsoundeffect.pro"": ""@@ -0,0 +1,25 @@\n+load(qttest_p4)\n+\n+QT += core declarative multimediakit-private\n+\n+# TARGET = tst_qsoundeffect\n+\n+SOURCES += tst_qsoundeffect.cpp\n+\n+wince*|symbian {\n+    deploy.files = test.wav\n+    DEPLOYMENT = deploy\n+    DEFINES += QT_QSOUNDEFFECT_USEAPPLICATIONPATH\n+} else:maemo* {\n+    DEFINES += QT_QSOUNDEFFECT_USEAPPLICATIONPATH\n+} else {\n+    DEFINES += SRCDIR=\\\\\\\""$$PWD/\\\\\\\""\n+}\n+\n+unix:!mac:!symbian {\n+    !contains(QT_CONFIG, pulseaudio) {\n+        DEFINES += QT_MULTIMEDIA_QMEDIAPLAYER\n+    }\n+}\n+\n+maemo*:CONFIG += insignificant_test\n"", ""test.wav"": ""Binary files /dev/null and b/tests/auto/qsoundeffect/test.wav differ\n"", ""tst_qsoundeffect.cpp"": ""@@ -0,0 +1,195 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the test suite of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+//TESTED_COMPONENT=src/multimedia\n+\n+#include <QtTest/QtTest>\n+#include <QtCore/qlocale.h>\n+#include <qaudiooutput.h>\n+#include <qaudiodeviceinfo.h>\n+#include <qaudio.h>\n+#include \""private/qsoundeffect_p.h\""\n+\n+\n+class tst_QSoundEffect : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    tst_QSoundEffect(QObject* parent=0) : QObject(parent) {}\n+\n+private slots:\n+    void initTestCase();\n+    void testSource();\n+    void testLooping();\n+    void testVolume();\n+    void testMuting();\n+\n+    void testPlaying();\n+    void testStatus();\n+\n+private:\n+    QSoundEffect* sound;\n+    QUrl url;\n+};\n+\n+void tst_QSoundEffect::initTestCase()\n+{\n+#ifdef QT_QSOUNDEFFECT_USEAPPLICATIONPATH\n+    url = QUrl::fromLocalFile(QCoreApplication::applicationDirPath() + QString(\""/test.wav\""));\n+#else\n+    url = QUrl::fromLocalFile(QString(SRCDIR \""test.wav\""));\n+#endif\n+\n+    sound = new QSoundEffect(this);\n+\n+    QVERIFY(sound->source().isEmpty());\n+    QVERIFY(sound->loopCount() == 1);\n+    QVERIFY(sound->volume() == 1);\n+    QVERIFY(sound->isMuted() == false);\n+}\n+\n+void tst_QSoundEffect::testSource()\n+{\n+    QSignalSpy readSignal(sound, SIGNAL(sourceChanged()));\n+\n+    sound->setSource(url);\n+\n+    QCOMPARE(sound->source(),url);\n+    QCOMPARE(readSignal.count(),1);\n+\n+    QTestEventLoop::instance().enterLoop(1);\n+    sound->play();\n+\n+    QTest::qWait(3000);\n+}\n+\n+void tst_QSoundEffect::testLooping()\n+{\n+    QSignalSpy readSignal(sound, SIGNAL(loopCountChanged()));\n+\n+    sound->setLoopCount(5);\n+    QCOMPARE(sound->loopCount(),5);\n+\n+    sound->play();\n+\n+    // test.wav is about 200ms, wait until it has finished playing 5 times\n+    QTest::qWait(3000);\n+\n+}\n+\n+void tst_QSoundEffect::testVolume()\n+{\n+    QSignalSpy readSignal(sound, SIGNAL(volumeChanged()));\n+\n+    sound->setVolume(0.5);\n+    QCOMPARE(sound->volume(),0.5);\n+\n+    QTest::qWait(20);\n+    QCOMPARE(readSignal.count(),1);\n+}\n+\n+void tst_QSoundEffect::testMuting()\n+{\n+    QSignalSpy readSignal(sound, SIGNAL(mutedChanged()));\n+\n+    sound->setMuted(true);\n+    QCOMPARE(sound->isMuted(),true);\n+\n+    QTest::qWait(20);\n+    QCOMPARE(readSignal.count(),1);\n+}\n+\n+void tst_QSoundEffect::testPlaying()\n+{\n+    sound->setLoopCount(QSoundEffect::Infinite);\n+    //valid source\n+    sound->setSource(url);\n+    QTestEventLoop::instance().enterLoop(1);\n+    sound->play();\n+    QTestEventLoop::instance().enterLoop(1);\n+    QCOMPARE(sound->isPlaying(), true);\n+    sound->stop();\n+\n+    //empty source\n+    sound->setSource(QUrl());\n+    QTestEventLoop::instance().enterLoop(1);\n+    sound->play();\n+    QTestEventLoop::instance().enterLoop(1);\n+    QCOMPARE(sound->isPlaying(), false);\n+\n+    //invalid source\n+    sound->setSource(QUrl((QLatin1String(\""invalid source\""))));\n+    QTestEventLoop::instance().enterLoop(1);\n+    sound->play();\n+    QTestEventLoop::instance().enterLoop(1);\n+    QCOMPARE(sound->isPlaying(), false);\n+\n+    sound->setLoopCount(1);\n+}\n+\n+void tst_QSoundEffect::testStatus()\n+{\n+    sound->setSource(QUrl());\n+    QCOMPARE(sound->status(), QSoundEffect::Null);\n+\n+    //valid source\n+    sound->setSource(url);\n+\n+    QTestEventLoop::instance().enterLoop(1);\n+    QCOMPARE(sound->status(), QSoundEffect::Ready);\n+\n+    //empty source\n+    sound->setSource(QUrl());\n+    QTestEventLoop::instance().enterLoop(1);\n+    QCOMPARE(sound->status(), QSoundEffect::Null);\n+\n+    //invalid source\n+    sound->setLoopCount(QSoundEffect::Infinite);\n+\n+    sound->setSource(QUrl(QLatin1String(\""invalid source\"")));\n+    QTestEventLoop::instance().enterLoop(1);\n+    QCOMPARE(sound->status(), QSoundEffect::Error);\n+}\n+\n+\n+QTEST_MAIN(tst_QSoundEffect)\n+\n+#include \""tst_qsoundeffect.moc\""\n""}",test,"test, bug 
",test;
18289.0,18289.0,bug,Girish Ramakrishnan,Fix xcb-icccm 3.8 support,"Fix xcb-icccm 3.8 support

Build fix on platforms having xcb-icccm >= 3.8

This is a backport of 7ce8491280990350162933a0716d1b014f65aeb6 and
f005dee1b3692a09e47782dcff9b5b07aa659b51 from qtbase.

Change-Id: Ic6cbb555335a74cc7b00273081c249aa7e08afaf",['src/plugins/platforms/xcb/qxcbwindow.cpp'],"{""qxcbwindow.cpp"": ""@@ -49,7 +49,32 @@\n #include \""qdri2context.h\""\n #endif\n \n+// Fix xcb-icccm 3.8 support\n+#define class class_name\n #include <xcb/xcb_icccm.h>\n+#undef class\n+\n+#ifdef XCB_ICCCM_NUM_WM_SIZE_HINTS_ELEMENTS\n+#define xcb_wm_hints_t xcb_icccm_wm_hints_t\n+#define xcb_wm_hints_set_iconic xcb_icccm_wm_hints_set_iconic\n+#define xcb_wm_hints_set_normal xcb_icccm_wm_hints_set_normal\n+#define xcb_set_wm_hints xcb_icccm_set_wm_hints\n+\n+#define xcb_wm_hints_t xcb_icccm_wm_hints_t\n+#define xcb_get_wm_hints_reply xcb_icccm_get_wm_hints_reply\n+#define xcb_get_wm_hints xcb_icccm_get_wm_hints\n+#define xcb_set_wm_hints xcb_icccm_set_wm_hints\n+#define xcb_set_wm_normal_hints xcb_icccm_set_wm_normal_hints\n+#define xcb_size_hints_set_base_size xcb_icccm_size_hints_set_base_size\n+#define xcb_size_hints_set_max_size xcb_icccm_size_hints_set_max_size\n+#define xcb_size_hints_set_min_size xcb_icccm_size_hints_set_min_size\n+#define xcb_size_hints_set_position xcb_icccm_size_hints_set_position\n+#define xcb_size_hints_set_resize_inc xcb_icccm_size_hints_set_resize_inc\n+#define xcb_size_hints_set_size xcb_icccm_size_hints_set_size\n+#define xcb_size_hints_set_win_gravity xcb_icccm_size_hints_set_win_gravity\n+#define xcb_wm_hints_t xcb_icccm_wm_hints_t\n+#define XCB_WM_STATE_ICONIC XCB_ICCCM_WM_STATE_ICONIC\n+#endif\n \n #include <private/qapplication_p.h>\n #include <private/qwindowsurface_p.h>\n""}",bug,"bug 
",bug;
24728.0,24728.0,bug,Friedemann Kleint,Fix warning about deprecated QAbstractItemModel::reset().,"Fix warning about deprecated QAbstractItemModel::reset().

Change-Id: I76fb3cdf072c4947d16b9fc35a71e56223a286c9","['src/3rdparty/phonon/phonon/objectdescriptionmodel_p.h', 'src/3rdparty/phonon/phonon/objectdescriptionmodel.cpp']","{""objectdescriptionmodel.cpp"": ""@@ -311,7 +311,8 @@ ObjectDescriptionModelData::~ObjectDescriptionModelData()\n void ObjectDescriptionModelData::setModelData(const QList<QExplicitlySharedDataPointer<ObjectDescriptionData> > &newData)\n {\n     d->data = newData;\n-    d->model->reset();\n+    d->model->beginResetModel();\n+    d->model->endResetModel();\n }\n \n QList<QExplicitlySharedDataPointer<ObjectDescriptionData> > ObjectDescriptionModelData::modelData() const\n"", ""objectdescriptionmodel_p.h"": ""@@ -45,6 +45,8 @@ class ListModelHelper : public QAbstractListModel\n         using QAbstractListModel::endInsertRows;\n         using QAbstractListModel::beginRemoveRows;\n         using QAbstractListModel::endRemoveRows;\n+        using QAbstractListModel::beginResetModel;\n+        using QAbstractListModel::endResetModel;\n };\n \n class ObjectDescriptionModelDataPrivate\n""}",bug,"bug, deprecate 
",bug;deprecat;
6260.0,6260.0,deprecat,Tim Jenssen,removed some unneeded ui elements from kdtools,"removed some unneeded ui elements from kdtools

 - kdupdaterupdatesdialog
 - kdupdaterpackagesview
 - addupdatesourcedialog

Change-Id: If524c7daad56d683ec96ebc98dca0762b8062103","['installerbuilder/libinstaller/3rdparty/kdtools/KDUpdater/KDUpdater.pri', 'installerbuilder/libinstaller/3rdparty/kdtools/KDUpdater/UpdatesDialog', 'installerbuilder/libinstaller/3rdparty/kdtools/KDUpdater/kdupdaterpackagesview.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/KDUpdater/KDUpdater', 'installerbuilder/libinstaller/3rdparty/kdtools/KDUpdater/kdupdaterupdatesdialog.h', 'installerbuilder/libinstaller/3rdparty/kdtools/KDUpdater/updatesdialog.ui', 'installerbuilder/libinstaller/3rdparty/kdtools/KDUpdater/kdupdaterupdatesourcesview.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/KDUpdater/kdupdaterpackagesview.h', 'installerbuilder/libinstaller/3rdparty/kdtools/KDUpdater/kdupdaterupdatesourcesview.h', 'installerbuilder/libinstaller/3rdparty/kdtools/KDUpdater/kdupdaterupdatesdialog.cpp', 'installerbuilder/libinstaller/3rdparty/kdtools/KDUpdater/addupdatesourcedialog.ui']","{""KDUpdater"": ""@@ -4,7 +4,6 @@\n #include \""kdupdaterfiledownloader.h\""\n #include \""kdupdaterfiledownloaderfactory.h\""\n #include \""kdupdaterpackagesinfo.h\""\n-#include \""kdupdaterpackagesview.h\""\n #include \""kdupdatersignatureverificationresult.h\""\n #include \""kdupdatersignatureverificationrunnable.h\""\n #include \""kdupdatersignatureverifier.h\""\n@@ -15,6 +14,4 @@\n #include \""kdupdaterupdateoperation.h\""\n #include \""kdupdaterupdateoperationfactory.h\""\n #include \""kdupdaterupdateoperations.h\""\n-#include \""kdupdaterupdatesdialog.h\""\n #include \""kdupdaterupdatesourcesinfo.h\""\n-#include \""kdupdaterupdatesourcesview.h\""\n"", ""KDUpdater.pri"": ""@@ -12,7 +12,6 @@ HEADERS += $$PWD/kdupdater.h \\\n     $$PWD/kdupdaterfiledownloader_p.h \\\n     $$PWD/kdupdaterfiledownloaderfactory.h \\\n     $$PWD/kdupdaterpackagesinfo.h \\\n-    $$PWD/kdupdaterpackagesview.h \\\n     $$PWD/kdupdatersignatureverificationresult.h \\\n     $$PWD/kdupdatersignatureverifier.h \\\n     $$PWD/kdupdaterupdate.h \\\n@@ -26,8 +25,6 @@ HEADERS += $$PWD/kdupdater.h \\\n     $$PWD/kdupdaterupdatesinfo_p.h \\\n     $$PWD/kdupdaterupdateinstaller.h \\\n     $$PWD/kdupdaterufuncompressor_p.h \\\n-    $$PWD/kdupdaterupdatesdialog.h \\\n-    $$PWD/kdupdaterupdatesourcesview.h \\\n     $$PWD/kdupdaterufcompresscommon_p.h \\\n     $$PWD/environment.h\n \n@@ -36,7 +33,6 @@ SOURCES += $$PWD/kdupdaterapplication.cpp \\\n     $$PWD/kdupdaterfiledownloader.cpp \\\n     $$PWD/kdupdaterfiledownloaderfactory.cpp \\\n     $$PWD/kdupdaterpackagesinfo.cpp \\\n-    $$PWD/kdupdaterpackagesview.cpp \\\n     $$PWD/kdupdatersignatureverificationresult.cpp \\\n     $$PWD/kdupdatersignatureverifier.cpp \\\n     $$PWD/kdupdaterupdate.cpp \\\n@@ -50,18 +46,9 @@ SOURCES += $$PWD/kdupdaterapplication.cpp \\\n     $$PWD/kdupdaterupdatesinfo.cpp \\\n     $$PWD/kdupdaterupdateinstaller.cpp \\\n     $$PWD/kdupdaterufuncompressor.cpp \\\n-    $$PWD/kdupdaterupdatesdialog.cpp \\\n-    $$PWD/kdupdaterupdatesourcesview.cpp \\\n     $$PWD/kdupdaterufcompresscommon.cpp \\\n     $$PWD/environment.cpp\n \n-\n-\n-FORMS += $$PWD/updatesdialog.ui \\\n-    $$PWD/addupdatesourcedialog.ui\n-\n-DEFINES += KDUPDATERGUITEXTBROWSER \\\n-    KDUPDATERVIEW=QTextBrowser\n QT += gui\n \n TRY_INCLUDEPATHS = /include /usr/include /usr/local/include $$QMAKE_INCDIR $$INCLUDEPATH\n"", ""UpdatesDialog"": ""@@ -1 +0,0 @@\n-#include \""kdupdaterupdatesdialog.h\""\n"", ""addupdatesourcedialog.ui"": ""@@ -1,193 +0,0 @@\n-<ui version=\""4.0\"" >\n- <class>AddUpdateSourceDialog</class>\n- <widget class=\""QDialog\"" name=\""AddUpdateSourceDialog\"" >\n-  <property name=\""geometry\"" >\n-   <rect>\n-    <x>0</x>\n-    <y>0</y>\n-    <width>400</width>\n-    <height>239</height>\n-   </rect>\n-  </property>\n-  <property name=\""windowTitle\"" >\n-   <string>Add Update Source</string>\n-  </property>\n-  <layout class=\""QVBoxLayout\"" >\n-   <item>\n-    <layout class=\""QGridLayout\"" >\n-     <item row=\""0\"" column=\""0\"" >\n-      <widget class=\""QLabel\"" name=\""label\"" >\n-       <property name=\""text\"" >\n-        <string>&amp;Name</string>\n-       </property>\n-       <property name=\""buddy\"" >\n-        <cstring>txtName</cstring>\n-       </property>\n-      </widget>\n-     </item>\n-     <item row=\""0\"" column=\""1\"" >\n-      <widget class=\""QLineEdit\"" name=\""txtName\"" >\n-       <property name=\""font\"" >\n-        <font>\n-         <pointsize>10</pointsize>\n-         <weight>75</weight>\n-         <bold>true</bold>\n-        </font>\n-       </property>\n-      </widget>\n-     </item>\n-     <item row=\""1\"" column=\""0\"" >\n-      <widget class=\""QLabel\"" name=\""label_2\"" >\n-       <property name=\""text\"" >\n-        <string>&amp;Title</string>\n-       </property>\n-       <property name=\""buddy\"" >\n-        <cstring>txtTitle</cstring>\n-       </property>\n-      </widget>\n-     </item>\n-     <item row=\""1\"" column=\""1\"" >\n-      <widget class=\""QLineEdit\"" name=\""txtTitle\"" >\n-       <property name=\""font\"" >\n-        <font>\n-         <pointsize>9</pointsize>\n-         <italic>false</italic>\n-        </font>\n-       </property>\n-      </widget>\n-     </item>\n-     <item row=\""2\"" column=\""0\"" >\n-      <widget class=\""QLabel\"" name=\""label_3\"" >\n-       <property name=\""text\"" >\n-        <string>&amp;Description</string>\n-       </property>\n-       <property name=\""alignment\"" >\n-        <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop</set>\n-       </property>\n-       <property name=\""buddy\"" >\n-        <cstring>txtDescription</cstring>\n-       </property>\n-      </widget>\n-     </item>\n-     <item row=\""2\"" column=\""1\"" >\n-      <widget class=\""QTextEdit\"" name=\""txtDescription\"" />\n-     </item>\n-     <item row=\""3\"" column=\""0\"" >\n-      <widget class=\""QLabel\"" name=\""label_4\"" >\n-       <property name=\""text\"" >\n-        <string>&amp;URL</string>\n-       </property>\n-       <property name=\""buddy\"" >\n-        <cstring>txtUrl</cstring>\n-       </property>\n-      </widget>\n-     </item>\n-     <item row=\""3\"" column=\""1\"" >\n-      <widget class=\""QLineEdit\"" name=\""txtUrl\"" >\n-       <property name=\""palette\"" >\n-        <palette>\n-         <active>\n-          <colorrole role=\""Text\"" >\n-           <brush brushstyle=\""SolidPattern\"" >\n-            <color alpha=\""255\"" >\n-             <red>0</red>\n-             <green>45</green>\n-             <blue>195</blue>\n-            </color>\n-           </brush>\n-          </colorrole>\n-         </active>\n-         <inactive>\n-          <colorrole role=\""Text\"" >\n-           <brush brushstyle=\""SolidPattern\"" >\n-            <color alpha=\""255\"" >\n-             <red>0</red>\n-             <green>45</green>\n-             <blue>195</blue>\n-            </color>\n-           </brush>\n-          </colorrole>\n-         </inactive>\n-         <disabled>\n-          <colorrole role=\""Text\"" >\n-           <brush brushstyle=\""SolidPattern\"" >\n-            <color alpha=\""255\"" >\n-             <red>106</red>\n-             <green>104</green>\n-             <blue>100</blue>\n-            </color>\n-           </brush>\n-          </colorrole>\n-         </disabled>\n-        </palette>\n-       </property>\n-       <property name=\""font\"" >\n-        <font>\n-         <underline>true</underline>\n-        </font>\n-       </property>\n-      </widget>\n-     </item>\n-    </layout>\n-   </item>\n-   <item>\n-    <spacer>\n-     <property name=\""orientation\"" >\n-      <enum>Qt::Vertical</enum>\n-     </property>\n-     <property name=\""sizeHint\"" >\n-      <size>\n-       <width>20</width>\n-       <height>40</height>\n-      </size>\n-     </property>\n-    </spacer>\n-   </item>\n-   <item>\n-    <widget class=\""QDialogButtonBox\"" name=\""buttonBox\"" >\n-     <property name=\""orientation\"" >\n-      <enum>Qt::Horizontal</enum>\n-     </property>\n-     <property name=\""standardButtons\"" >\n-      <set>QDialogButtonBox::Cancel|QDialogButtonBox::NoButton|QDialogButtonBox::Ok</set>\n-     </property>\n-    </widget>\n-   </item>\n-  </layout>\n- </widget>\n- <resources/>\n- <connections>\n-  <connection>\n-   <sender>buttonBox</sender>\n-   <signal>accepted()</signal>\n-   <receiver>AddUpdateSourceDialog</receiver>\n-   <slot>accept()</slot>\n-   <hints>\n-    <hint type=\""sourcelabel\"" >\n-     <x>257</x>\n-     <y>229</y>\n-    </hint>\n-    <hint type=\""destinationlabel\"" >\n-     <x>157</x>\n-     <y>274</y>\n-    </hint>\n-   </hints>\n-  </connection>\n-  <connection>\n-   <sender>buttonBox</sender>\n-   <signal>rejected()</signal>\n-   <receiver>AddUpdateSourceDialog</receiver>\n-   <slot>reject()</slot>\n-   <hints>\n-    <hint type=\""sourcelabel\"" >\n-     <x>325</x>\n-     <y>229</y>\n-    </hint>\n-    <hint type=\""destinationlabel\"" >\n-     <x>286</x>\n-     <y>274</y>\n-    </hint>\n-   </hints>\n-  </connection>\n- </connections>\n-</ui>\n"", ""kdupdaterpackagesview.cpp"": ""@@ -1,134 +0,0 @@\n-/****************************************************************************\n-** Copyright (C) 2001-2010 Klaralvdalens Datakonsult AB.  All rights reserved.\n-**\n-** This file is part of the KD Tools library.\n-**\n-** Licensees holding valid commercial KD Tools licenses may use this file in\n-** accordance with the KD Tools Commercial License Agreement provided with\n-** the Software.\n-**\n-**\n-** This file may be distributed and/or modified under the terms of the\n-** GNU Lesser General Public License version 2 and version 3 as published by the\n-** Free Software Foundation and appearing in the file LICENSE.LGPL included.\n-**\n-** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE\n-** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.\n-**\n-** Contact info@kdab.com if any conditions of this licensing are not\n-** clear to you.\n-**\n-**********************************************************************/\n-\n-#include \""kdupdaterpackagesview.h\""\n-#include \""kdupdaterpackagesinfo.h\""\n-\n-/*!\n-   \\ingroup kdupdater\n-   \\class KDUpdater::PackagesView kdupdaterpackagesview.h KDUpdaterPackagesView\n-   \\brief A widget that can show packages contained in \\ref KDUpdater::PackagesInfo\n-\n-   \\ref KDUpdater::PackagesInfo, associated with \\ref KDUpdater::Application, contains\n-   information about all the packages installed in the application. This widget helps view the packages\n-   in a list.\n-\n-   \\image html packagesview.jpg\n-\n-   To use this widget, just create an instance and pass to \\ref setPackageInfo() a pointer to\n-   \\ref KDUpdater::PackagesInfo whose information you want this widget to show.\n-*/\n-\n-struct KDUpdater::PackagesView::PackagesViewData\n-{\n-    PackagesViewData( PackagesView* qq ) :\n-        q( qq ),\n-        packagesInfo(0)\n-    {}\n-\n-    PackagesView* q;\n-    PackagesInfo* packagesInfo;\n-};\n-\n-/*!\n-   Constructor.\n-*/\n-KDUpdater::PackagesView::PackagesView(QWidget* parent)\n-    : QTreeWidget(parent),\n-      d ( new PackagesViewData( this ) )\n-{\n-\n-    setColumnCount(5);\n-    setHeaderLabels( QStringList() << tr(\""Name\"") << tr(\""Title\"")\n-                     << tr(\""Description\"") << tr(\""Version\"")\n-                     << tr(\""Last Updated\"") );\n-    setRootIsDecorated(false);\n-}\n-\n-/*!\n-   Destructor\n-*/\n-KDUpdater::PackagesView::~PackagesView()\n-{\n-    delete d;\n-}\n-\n-/*!\n-   Sets the package info whose information this widget should show.\n-\n-   \\code\n-   KDUpdater::Application application;\n-\n-   KDUpdater::PackagesView packageView;\n-   packageView.setPackageInfo( application.packagesInfo() );\n-   packageView.show();\n-   \\endcode\n-\n-*/\n-void KDUpdater::PackagesView::setPackageInfo(KDUpdater::PackagesInfo* packagesInfo)\n-{\n-    if( d->packagesInfo == packagesInfo )\n-        return;\n-\n-    if(d->packagesInfo)\n-        disconnect(d->packagesInfo, 0, this, 0);\n-\n-    d->packagesInfo = packagesInfo;\n-    if(d->packagesInfo)\n-        connect(d->packagesInfo, SIGNAL(reset()), this, SLOT(refresh()));\n-\n-    refresh();\n-}\n-\n-/*!\n-   Returns a pointer to the package info whose information this widget is showing.\n-*/\n-KDUpdater::PackagesInfo* KDUpdater::PackagesView::packagesInfo() const\n-{\n-    return d->packagesInfo;\n-}\n-\n-/*!\n-   This slot reloads package information from the \\ref KDUpdater::PackagesInfo associated\n-   with this widget.\n-\n-   \\note By default, this slot is connected to the \\ref KDUpdater::PackagesInfo::reset()\n-   signal in \\ref setPackageInfo()\n-*/\n-void KDUpdater::PackagesView::refresh()\n-{\n-    this->clear();\n-    if( !d->packagesInfo )\n-        return;\n-\n-    Q_FOREACH(const KDUpdater::PackageInfo& info, d->packagesInfo->packageInfos())\n-    {\n-        QTreeWidgetItem* item = new QTreeWidgetItem(this);\n-        item->setText(0, info.name);\n-        item->setText(1, info.title);\n-        item->setText(2, info.description);\n-        item->setText(3, info.version);\n-        item->setText(4, info.lastUpdateDate.toString());\n-    }\n-\n-    resizeColumnToContents(0);\n-}\n"", ""kdupdaterpackagesview.h"": ""@@ -1,53 +0,0 @@\n-/****************************************************************************\n-** Copyright (C) 2001-2010 Klaralvdalens Datakonsult AB.  All rights reserved.\n-**\n-** This file is part of the KD Tools library.\n-**\n-** Licensees holding valid commercial KD Tools licenses may use this file in\n-** accordance with the KD Tools Commercial License Agreement provided with\n-** the Software.\n-**\n-**\n-** This file may be distributed and/or modified under the terms of the\n-** GNU Lesser General Public License version 2 and version 3 as published by the\n-** Free Software Foundation and appearing in the file LICENSE.LGPL included.\n-**\n-** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE\n-** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.\n-**\n-** Contact info@kdab.com if any conditions of this licensing are not\n-** clear to you.\n-**\n-**********************************************************************/\n-\n-#ifndef KD_UPDATER_PACKAGES_VIEW_H\n-#define KD_UPDATER_PACKAGES_VIEW_H\n-\n-#include \""kdupdater.h\""\n-#include <QTreeWidget>\n-\n-namespace KDUpdater\n-{\n-    class PackagesInfo;\n-\n-    class KDTOOLS_UPDATER_EXPORT PackagesView : public QTreeWidget\n-    {\n-        Q_OBJECT\n-\n-    public:\n-        explicit PackagesView(QWidget* parent=0);\n-        ~PackagesView();\n-\n-        void setPackageInfo(PackagesInfo* packageInfo);\n-        PackagesInfo* packagesInfo() const;\n-\n-    public Q_SLOTS:\n-        void refresh();\n-\n-    private:\n-        struct PackagesViewData;\n-        PackagesViewData* d;\n-    };\n-}\n-\n-#endif\n"", ""kdupdaterupdatesdialog.cpp"": ""@@ -1,305 +0,0 @@\n-/****************************************************************************\n-** Copyright (C) 2001-2010 Klaralvdalens Datakonsult AB.  All rights reserved.\n-**\n-** This file is part of the KD Tools library.\n-**\n-** Licensees holding valid commercial KD Tools licenses may use this file in\n-** accordance with the KD Tools Commercial License Agreement provided with\n-** the Software.\n-**\n-**\n-** This file may be distributed and/or modified under the terms of the\n-** GNU Lesser General Public License version 2 and version 3 as published by the\n-** Free Software Foundation and appearing in the file LICENSE.LGPL included.\n-**\n-** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE\n-** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.\n-**\n-** Contact info@kdab.com if any conditions of this licensing are not\n-** clear to you.\n-**\n-**********************************************************************/\n-\n-#include \""kdupdaterupdatesdialog.h\""\n-#include \""kdupdaterpackagesinfo.h\""\n-#include \""kdupdaterupdate.h\""\n-#include \""kdupdaterapplication.h\""\n-\n-#include <QtCore/QCoreApplication>\n-#include <QtCore/QDir>\n-#include <QtCore/QHash>\n-#include <QtCore/QSet>\n-\n-#if defined( KDUPDATERGUIWEBVIEW )\n-#include <QtWebKit/QWebView>\n-#elif defined( KDUPDATERGUITEXTBROWSER )\n-#include <QtGui/QTextBrowser>\n-#endif\n-\n-#include \""ui_updatesdialog.h\""\n-\n-/*!\n-   \\ingroup kdupdater\n-   \\class KDUpdater::UpdatesDialog kdupdaterupdatesdialog.h KDUpdaterUpdatesDialog\n-   \\brief A dialog that let the user chooses which updates he wants to install\n-\n-   After \\ref KDUpdater::UpdateFinder class finds all updates available for an application,\n-   this dialog can be used to help the user select which update he wants to install.\n-\n-   Usage:\n-   \\code\n-    QList<KDUpdater::Update*> updates = updateFinder.updates();\n-\n-    KDUpdater::UpdatesDialog updatesDialog(this);\n-    updatesDialog.setUpdates(updates);\n-\n-    if( updatesDialog.exec() != QDialog::Accepted )\n-    {\n-        qDeleteAll(updates);\n-        updates.clear();\n-        return;\n-    }\n-\n-    QList<KDUpdater::Update*> reqUpdates;\n-    for(int i=0; i<updates.count(); i++)\n-    {\n-        if( !updatesDialog.isUpdateAllowed(updates[i]) )\n-            continue;\n-        reqUpdates.append(updates[i]);\n-    }\n-    \\endcode\n-*/\n-\n-class KDUpdater::UpdatesDialog::Private\n-{\n-    Q_DECLARE_TR_FUNCTIONS(KDUpdater::Private)\n-\n-public:\n-    explicit Private( UpdatesDialog* qq ) :\n-        q( qq )\n-    {}\n-\n-    UpdatesDialog* q;\n-\n-    Ui::UpdatesDialog ui;\n-\n-    int currentUpdate;\n-    QList<Update*> updates;\n-    QSet<const Update*> status;\n-\n-    void setCurrentUpdate(int index);\n-\n-    QString packageDescription( Update* update );\n-    QString compatDescription( Update* update );\n-    void slotStateChanged();\n-    void slotPreviousClicked();\n-    void slotNextClicked();\n-};\n-\n-/*!\n-   Constructor.\n-*/\n-KDUpdater::UpdatesDialog::UpdatesDialog(QWidget *parent)\n-    : QDialog(parent),\n-      d( new Private( this ) )\n-{\n-    d->ui.setupUi(this);\n-    d->currentUpdate = -1;\n-\n-    connect(d->ui.packageUpdateCheckBox, SIGNAL(stateChanged(int)),\n-            this, SLOT(slotStateChanged()));\n-    connect(d->ui.nextPackageButton, SIGNAL(clicked()),\n-            this, SLOT(slotNextClicked()));\n-    connect(d->ui.previousPackageButton, SIGNAL(clicked()),\n-            this, SLOT(slotPreviousClicked()));\n-}\n-\n-\n-/*!\n-   Destructor.\n-*/\n-KDUpdater::UpdatesDialog::~UpdatesDialog()\n-{\n-    delete d;\n-}\n-\n-\n-/*!\n-   Sets the list of updates available to the user.\n-*/\n-void KDUpdater::UpdatesDialog::setUpdates(const QList<Update*> &updates)\n-{\n-    d->updates = updates;\n-    d->status.clear();\n-\n-    d->ui.packageSwitchBar->setVisible( d->updates.size()>1 );\n-\n-    if (d->updates.isEmpty()) {\n-        d->ui.descriptionLabel->setText(tr(\""<b>No update available...</b>\""));\n-        d->ui.descriptionLabel->setFixedSize(d->ui.descriptionLabel->sizeHint());\n-        d->ui.releaseNotesGroup->hide();\n-        d->ui.pixmapLabel->hide();\n-    } else if (d->updates.size()==1) {\n-        //Only one update, so pre-accept it.\n-        //OK/Cancel will do from the user POV\n-        d->status.insert( d->updates.front() );\n-    }\n-\n-    d->ui.totalPackageLabel->setText(QString::number(d->updates.size()));\n-    d->setCurrentUpdate(0);\n-}\n-\n-\n-/*!\n-   returns the list of updates available to the user.\n-*/\n-QList<KDUpdater::Update*> KDUpdater::UpdatesDialog::updates() const\n-{\n-    return d->updates;\n-}\n-\n-\n-/*!\n-   Returns true if the update needs to be installed.\n-*/\n-bool KDUpdater::UpdatesDialog::isUpdateAllowed(const KDUpdater::Update *update) const\n-{\n-    return d->status.contains( update );\n-}\n-\n-void KDUpdater::UpdatesDialog::Private::slotStateChanged()\n-{\n-    if (currentUpdate<0 || currentUpdate>=updates.size()) {\n-        return;\n-    }\n-\n-    if ( ui.packageUpdateCheckBox->isChecked() )\n-        status.insert( updates[currentUpdate] );\n-    else\n-        status.remove( updates[currentUpdate] );\n-}\n-\n-void KDUpdater::UpdatesDialog::Private::slotPreviousClicked()\n-{\n-    setCurrentUpdate(currentUpdate-1);\n-}\n-\n-void KDUpdater::UpdatesDialog::Private::slotNextClicked()\n-{\n-    setCurrentUpdate(currentUpdate+1);\n-}\n-\n-void KDUpdater::UpdatesDialog::Private::setCurrentUpdate(int index)\n-{\n-    if (updates.isEmpty()) {\n-        if (currentUpdate == -1)\n-            return;\n-\n-        currentUpdate = -1;\n-        return;\n-    }\n-\n-    if (index<0 || index>=updates.size()) {\n-        return;\n-    }\n-\n-    currentUpdate = index;\n-\n-    KDUpdater::Update *update = updates.at( index );\n-\n-    QString description;\n-\n-    switch ( update->type() ) {\n-    case PackageUpdate:\n-    case NewPackage:\n-        description = packageDescription( update );\n-        break;\n-    case CompatUpdate:\n-        description = compatDescription( update );\n-        break;\n-    default:\n-        description = tr( \""<unkown>\"" );\n-    }\n-\n-    ui.descriptionLabel->setText(description);\n-    ui.descriptionLabel->setMinimumHeight(ui.descriptionLabel->heightForWidth(400));\n-\n-    ui.packageUpdateCheckBox->setChecked( status.contains( update ) );\n-\n-    ui.currentPackageLabel->setText(QString::number(index+1));\n-    ui.nextPackageButton->setEnabled( index!=(updates.size()-1) );\n-    ui.previousPackageButton->setEnabled( index!=0 );\n-\n-    QDir appdir(update->application()->applicationDirectory());\n-    if (update->data( QLatin1String( \""ReleaseNotes\"" ) ).isValid()) {\n-        ui.releaseNotesGroup->show();\n-#if defined( KDUPDATERGUIWEBVIEW )\n-        ui.releaseNotesView->setUrl( update->data( QLatin1String( \""ReleaseNotes\"" ) ).toUrl() );\n-#elif defined( KDUPDATERGUITEXTBROWSER )\n-        ui.releaseNotesView->setSource( update->data( QLatin1String( \""ReleaseNotes\"" ) ).toUrl());\n-#endif\n-    }\n-    else {\n-        ui.releaseNotesGroup->hide();\n-    }\n-}\n-\n-\n-QString KDUpdater::UpdatesDialog::Private::packageDescription( KDUpdater::Update* update )\n-{\n-    KDUpdater::PackagesInfo *packages = update->application()->packagesInfo();\n-    KDUpdater::PackageInfo info = packages->packageInfo(\n-        packages->findPackageInfo(update->data( QLatin1String( \""Name\"" ) ).toString()));\n-\n-    QDir appdir(update->application()->applicationDirectory());\n-    QPixmap pixmap(appdir.filePath(info.pixmap));\n-    if (!pixmap.isNull()) {\n-        ui.pixmapLabel->setPixmap(pixmap.scaled(96, 96));\n-    }\n-\n-\n-    QString description = tr(\""<b>A new package update is available for %1!</b><br/><br/>\""\n-                             \""The package %2 %3 is now available -- you have version %4\"")\n-                          .arg(packages->applicationName(),\n-                               update->data( QLatin1String( \""Name\"" ) ).toString(),\n-                               update->data( QLatin1String( \""Version\"" ) ).toString(),\n-                               info.version);\n-\n-    if (!info.title.isEmpty() || !info.description.isEmpty() ) {\n-        description += QLatin1String( \""<br/><br/>\"" );\n-        description += tr(\""<b>Package Details:</b>\"" );\n-        if ( !info.title.isEmpty() ) {\n-            description += tr( \""<br/><i>Title:</i> %1\"" ).arg( info.title );\n-        }\n-        if ( !info.description.isEmpty() ) {\n-            description += tr( \""<br/><i>Description:</i> %1\"" ).arg( info.description );\n-        }\n-    }\n-\n-    if ( update->data( QLatin1String( \""Description\"" ) ).isValid() ) {\n-        description += QLatin1String( \""<br/><br/>\"" );\n-        description += tr( \""<b>Update description:</b><br/>%1\"" )\n-                       .arg( update->data( QLatin1String( \""Description\"" ) ).toString() );\n-    }\n-    return description;\n-}\n-\n-QString KDUpdater::UpdatesDialog::Private::compatDescription( Update* update )\n-{\n-    KDUpdater::PackagesInfo *packages = update->application()->packagesInfo();\n-\n-    QString description = tr(\""<b>A new compatibility update is available for %1!</b><br/><br/>\""\n-                             \""The compatibility level %2 is now available -- you have level %3\"")\n-                          .arg(packages->applicationName(),\n-                               QString::number(update->data( QLatin1String( \""CompatLevel\"" ) ).toInt()),\n-                               QString::number(packages->compatLevel()));\n-\n-    if ( update->data( QLatin1String( \""Description\"" ) ).isValid() ) {\n-        description += QLatin1String( \""<br/><br/>\"" );\n-        description += tr( \""<b>Update description:</b> %1\"" )\n-                       .arg( update->data( QLatin1String( \""Description\"" ) ).toString() );\n-    }\n-    return description;\n-}\n-\n-#include \""moc_kdupdaterupdatesdialog.cpp\""\n"", ""kdupdaterupdatesdialog.h"": ""@@ -1,57 +0,0 @@\n-/****************************************************************************\n-** Copyright (C) 2001-2010 Klaralvdalens Datakonsult AB.  All rights reserved.\n-**\n-** This file is part of the KD Tools library.\n-**\n-** Licensees holding valid commercial KD Tools licenses may use this file in\n-** accordance with the KD Tools Commercial License Agreement provided with\n-** the Software.\n-**\n-**\n-** This file may be distributed and/or modified under the terms of the\n-** GNU Lesser General Public License version 2 and version 3 as published by the\n-** Free Software Foundation and appearing in the file LICENSE.LGPL included.\n-**\n-** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE\n-** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.\n-**\n-** Contact info@kdab.com if any conditions of this licensing are not\n-** clear to you.\n-**\n-**********************************************************************/\n-\n-#ifndef KD_UPDATER_UPDATES_DIALOG_H\n-#define KD_UPDATER_UPDATES_DIALOG_H\n-\n-#include \""kdupdater.h\""\n-#include <QtCore/QList>\n-#include <QtGui/QDialog>\n-\n-namespace KDUpdater\n-{\n-    class Update;\n-\n-    class KDTOOLS_UPDATER_EXPORT UpdatesDialog : public QDialog\n-    {\n-        Q_OBJECT\n-\n-    public:\n-        explicit UpdatesDialog(QWidget *parent = 0);\n-        ~UpdatesDialog();\n-\n-        void setUpdates(const QList<Update*> &updates);\n-        QList<Update*> updates() const;\n-\n-        bool isUpdateAllowed( const Update * update ) const;\n-\n-    private:\n-        class Private;\n-        Private * const d;\n-\n-        Q_PRIVATE_SLOT( d, void slotStateChanged() )\n-        Q_PRIVATE_SLOT( d, void slotPreviousClicked() )\n-        Q_PRIVATE_SLOT( d, void slotNextClicked() )\n-    };\n-}\n-\n-#endif\n"", ""kdupdaterupdatesourcesview.cpp"": ""@@ -1,375 +0,0 @@\n-/****************************************************************************\n-** Copyright (C) 2001-2010 Klaralvdalens Datakonsult AB.  All rights reserved.\n-**\n-** This file is part of the KD Tools library.\n-**\n-** Licensees holding valid commercial KD Tools licenses may use this file in\n-** accordance with the KD Tools Commercial License Agreement provided with\n-** the Software.\n-**\n-**\n-** This file may be distributed and/or modified under the terms of the\n-** GNU Lesser General Public License version 2 and version 3 as published by the\n-** Free Software Foundation and appearing in the file LICENSE.LGPL included.\n-**\n-** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE\n-** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.\n-**\n-** Contact info@kdab.com if any conditions of this licensing are not\n-** clear to you.\n-**\n-**********************************************************************/\n-\n-#include \""kdupdaterupdatesourcesview.h\""\n-#include \""kdupdaterupdatesourcesinfo.h\""\n-#include \""ui_addupdatesourcedialog.h\""\n-\n-#include <QMessageBox>\n-#include <QContextMenuEvent>\n-#include <QAction>\n-#include <QMenu>\n-\n-/*!\n-   \\ingroup kdupdater\n-   \\class KDUpdater::UpdateSourcesView kdupdaterupdatesourcesview.h KDUpdaterUpdateSourcesView\n-   \\brief A widget that helps view and/or edit \\ref KDUpdater::UpdateSourcesInfo\n-\n-   \\ref KDUpdater::UpdateSourcesInfo, associated with \\ref KDUpdater::Application, contains information\n-   about all the update sources from which the application can download and install updates.\n-   This widget helps view and edit update sources information.\n-\n-   \\image html updatesourcesview.jpg\n-\n-   The widget provides the following slots for editing update sources information\n-   \\ref addNewSource()\n-   \\ref editCurrentSource()\n-   \\ref removeCurrentSource()\n-\n-   You can include this widget within another form or dialog and connect to these slots which make\n-   use of an inbuilt dialog box to add/edit update sources. Shown below is a screenshot of the\n-   inbuilt dialog box.\n-\n-   \\image html editupdatesource.jpg\n-\n-   Alternatively you can also use your own dialog box and directly update \\ref KDUpdater::UpdateSourcesInfo.\n-   This widget connects to \\ref KDUpdater::UpdateSourcesInfo signals and ensures that the data it displays\n-   is always kept updated.\n-\n-   The widget provides a context menu using which you can add/remove/edit update sources. Shown below is a\n-   screenshot of the context menu.\n-\n-   \\image html updatesourcesview_contextmenu.jpg\n-*/\n-\n-struct KDUpdater::UpdateSourcesView::UpdateSourcesViewData\n-{\n-    UpdateSourcesViewData( UpdateSourcesView* qq ) :\n-        q( qq ),\n-        updateSourcesInfo(0)\n-    {}\n-\n-    UpdateSourcesView* q;\n-    UpdateSourcesInfo* updateSourcesInfo;\n-};\n-\n-/*!\n-   Constructor\n-*/\n-KDUpdater::UpdateSourcesView::UpdateSourcesView(QWidget* parent)\n-    : QTreeWidget(parent),\n-      d(new KDUpdater::UpdateSourcesView::UpdateSourcesViewData( this ) )\n-{\n-    setColumnCount(3);\n-    setHeaderLabels( QStringList() << tr(\""Name\"") << tr(\""Title\"") << tr(\""URL\"") );\n-    setRootIsDecorated(false);\n-\n-    connect(this, SIGNAL(itemDoubleClicked(QTreeWidgetItem*,int)), this, SLOT(editCurrentSource()));\n-}\n-\n-/*!\n-   Destructor\n-*/\n-KDUpdater::UpdateSourcesView::~UpdateSourcesView()\n-{\n-    delete d;\n-}\n-\n-/*!\n-   Sets the \\ref KDUpdater::UpdateSourcesInfo object whose information this widget should show.\n-\n-   \\code\n-   KDUpdater::Application application;\n-\n-   KDUpdater::UpdateSourcesView updatesView;\n-   updatesView.setUpdateSourcesInfo( application.updateSourcesInfo() );\n-   updatesView.show();\n-   \\endcode\n-*/\n-void KDUpdater::UpdateSourcesView::setUpdateSourcesInfo(KDUpdater::UpdateSourcesInfo* info)\n-{\n-    if( d->updateSourcesInfo == info )\n-        return;\n-\n-    if(d->updateSourcesInfo)\n-        disconnect(d->updateSourcesInfo, 0, this, 0);\n-\n-    d->updateSourcesInfo = info;\n-    if(d->updateSourcesInfo)\n-    {\n-        connect(d->updateSourcesInfo, SIGNAL(reset()), this, SLOT(refresh()));\n-        connect(d->updateSourcesInfo, SIGNAL(updateSourceInfoAdded(UpdateSourceInfo)),\n-                this, SLOT(slotUpdateSourceInfoAdded(UpdateSourceInfo)));\n-        connect(d->updateSourcesInfo, SIGNAL(updateSourceInfoRemoved(UpdateSourceInfo)),\n-                this, SLOT(slotUpdateSourceInfoRemoved(UpdateSourceInfo)));\n-        connect(d->updateSourcesInfo, SIGNAL(updateSourceInfoChanged(UpdateSourceInfo,UpdateSourceInfo)),\n-                this, SLOT(slotUpdateSourceInfoChanged(UpdateSourceInfo,UpdateSourceInfo)));\n-    }\n-\n-    refresh();\n-}\n-\n-/*!\n-   Returns a pointer to the \\ref KDUpdater::UpdateSourcesInfo object whose information this\n-   widget is showing.\n-*/\n-KDUpdater::UpdateSourcesInfo* KDUpdater::UpdateSourcesView::updateSourcesInfo() const\n-{\n-    return d->updateSourcesInfo;\n-}\n-\n-/*!\n-   Returns the index of the currently selected update source in the widget. You can use this\n-   index along with \\ref KDUpdater::UpdateSourcesInfo::updateSourceInfo() method to get hold\n-   of the update source info.\n-*/\n-int KDUpdater::UpdateSourcesView::currentUpdateSourceInfoIndex() const\n-{\n-    if( !d->updateSourcesInfo )\n-        return -1;\n-\n-    QTreeWidgetItem* item = this->currentItem();\n-    if( !item )\n-        return -1;\n-\n-    int index = this->indexOfTopLevelItem(item);\n-    if( index < 0 )\n-        return -1;\n-\n-    return index;\n-}\n-\n-/*!\n-   Call this slot to reload the updates information. By default this slot is connected to\n-   \\ref KDUpdater::UpdateSourcesInfo::reset() signal in \\ref setUpdateSourcesInfo().\n-*/\n-void KDUpdater::UpdateSourcesView::refresh()\n-{\n-    this->clear();\n-\n-    if( !d->updateSourcesInfo )\n-        return;\n-\n-    for(int i=0; i<d->updateSourcesInfo->updateSourceInfoCount(); i++)\n-    {\n-        KDUpdater::UpdateSourceInfo info = d->updateSourcesInfo->updateSourceInfo(i);\n-        QTreeWidgetItem* item = new QTreeWidgetItem(this);\n-        item->setText(0, info.name);\n-        item->setText(1, info.title);\n-        item->setText(2, info.url.toString());\n-        item->setData(0, Qt::UserRole, qVariantFromValue<KDUpdater::UpdateSourceInfo>(info));\n-    }\n-\n-    resizeColumnToContents(0);\n-}\n-\n-/*!\n-   Call this slot to make use of the in-built dialog box to add a new update source. Shown\n-   below is a screenshot of the in-built dialog box.\n-\n-   \\image html addupdatesource.jpg\n-*/\n-void KDUpdater::UpdateSourcesView::addNewSource()\n-{\n-    if( !d->updateSourcesInfo )\n-        return;\n-\n-    QDialog dialog(this);\n-    Ui::AddUpdateSourceDialog ui;\n-    ui.setupUi(&dialog);\n-\n-    while(1)\n-    {\n-        if( dialog.exec() == QDialog::Rejected )\n-            return;\n-\n-        if(ui.txtName->text().isEmpty() || ui.txtUrl->text().isEmpty())\n-        {\n-            QMessageBox::information(this, tr(\""Invalid Update Source Info\""),\n-                                     tr(\""A valid update source name and url has to be provided\""));\n-            continue;\n-        }\n-\n-        break;\n-    }\n-\n-    KDUpdater::UpdateSourceInfo newInfo;\n-    newInfo.name = ui.txtName->text();\n-    newInfo.title = ui.txtTitle->text();\n-    newInfo.description = ui.txtDescription->toPlainText();  // FIXME: This should perhaps be toHtml\n-    newInfo.url = QUrl(ui.txtUrl->text());\n-\n-    d->updateSourcesInfo->addUpdateSourceInfo(newInfo);\n-}\n-\n-/*!\n-   Call this slot to delete the currently selected update source.\n-*/\n-void KDUpdater::UpdateSourcesView::removeCurrentSource()\n-{\n-    if( !d->updateSourcesInfo )\n-        return;\n-\n-    QTreeWidgetItem* item = this->currentItem();\n-    if( !item )\n-        return;\n-\n-    int index = this->indexOfTopLevelItem(item);\n-    if( index < 0 )\n-        return;\n-\n-    d->updateSourcesInfo->removeUpdateSourceInfoAt(index);\n-}\n-\n-/*!\n-   Call this slot to edit the currently selected update source, using the in-built edit\n-   update source dialog box. Shown below is a screenshot of the edit update source dialog\n-   box.\n-\n-   \\image html editupdatesource.jpg\n-*/\n-void KDUpdater::UpdateSourcesView::editCurrentSource()\n-{\n-    if( !d->updateSourcesInfo )\n-        return;\n-\n-    QTreeWidgetItem* item = this->currentItem();\n-    if( !item )\n-        return;\n-\n-    int index = this->indexOfTopLevelItem(item);\n-    if( index < 0 )\n-        return;\n-\n-    KDUpdater::UpdateSourceInfo info = item->data(0, Qt::UserRole).value<KDUpdater::UpdateSourceInfo>();\n-\n-    QDialog dialog(this);\n-    Ui::AddUpdateSourceDialog ui;\n-    ui.setupUi(&dialog);\n-    ui.txtName->setText(info.name);\n-    ui.txtTitle->setText(info.title);\n-    ui.txtDescription->setPlainText(info.description); // FIXME: This should perhaps be setHtml\n-    ui.txtUrl->setText(info.url.toString());\n-    dialog.setWindowTitle(tr(\""Edit Update Source\""));\n-\n-    if( dialog.exec() == QDialog::Rejected )\n-        return;\n-\n-    KDUpdater::UpdateSourceInfo newInfo;\n-    newInfo.name = ui.txtName->text();\n-    newInfo.title = ui.txtTitle->text();\n-    newInfo.description = ui.txtDescription->toPlainText(); // FIXME: This should perhaps be setHtml\n-    newInfo.url = QUrl(ui.txtUrl->text());\n-\n-    d->updateSourcesInfo->setUpdateSourceInfoAt(index, newInfo);\n-}\n-\n-/*!\n-   \\internal\n-*/\n-void KDUpdater::UpdateSourcesView::slotUpdateSourceInfoAdded(const KDUpdater::UpdateSourceInfo &info)\n-{\n-    if( !d->updateSourcesInfo )\n-        return;\n-\n-    QTreeWidgetItem* item = new QTreeWidgetItem(this);\n-    item->setText(0, info.name);\n-    item->setText(1, info.title);\n-    item->setText(2, info.url.toString());\n-    item->setData(0, Qt::UserRole, qVariantFromValue<KDUpdater::UpdateSourceInfo>(info));\n-}\n-\n-/*!\n-   \\internal\n-*/\n-void KDUpdater::UpdateSourcesView::slotUpdateSourceInfoRemoved(const KDUpdater::UpdateSourceInfo &info)\n-{\n-    if( !d->updateSourcesInfo )\n-        return;\n-\n-    QTreeWidgetItem* item = 0;\n-    for(int i=0; i<topLevelItemCount(); i++)\n-    {\n-        item = topLevelItem(i);\n-        KDUpdater::UpdateSourceInfo itemInfo = item->data(0, Qt::UserRole).value<KDUpdater::UpdateSourceInfo>();\n-        if(itemInfo == info)\n-            break;\n-        item = 0;\n-    }\n-\n-    if( !item )\n-        return;\n-\n-    delete item;\n-}\n-\n-/*!\n-   \\internal\n-*/\n-void KDUpdater::UpdateSourcesView::slotUpdateSourceInfoChanged (const KDUpdater::UpdateSourceInfo &newInfo,\n-                                                                const KDUpdater::UpdateSourceInfo &oldInfo)\n-{\n-    if( !d->updateSourcesInfo )\n-        return;\n-\n-    QTreeWidgetItem* item = 0;\n-    for(int i=0; i<topLevelItemCount(); i++)\n-    {\n-        item = topLevelItem(i);\n-        KDUpdater::UpdateSourceInfo itemInfo = item->data(0, Qt::UserRole).value<KDUpdater::UpdateSourceInfo>();\n-        if(itemInfo == oldInfo)\n-            break;\n-        item = 0;\n-    }\n-\n-    if( !item )\n-        return;\n-\n-    item->setText(0, newInfo.name);\n-    item->setText(1, newInfo.title);\n-    item->setText(2, newInfo.url.toString());\n-    item->setData(0, Qt::UserRole, qVariantFromValue<KDUpdater::UpdateSourceInfo>(newInfo));\n-}\n-\n-/*!\n-   \\internal\n-*/\n-void KDUpdater::UpdateSourcesView::contextMenuEvent(QContextMenuEvent* e)\n-{\n-    QTreeWidgetItem* item = this->itemAt( e->pos() );\n-\n-    QMenu menu;\n-    QAction* addAction = menu.addAction(tr(\""&Add Source\""));\n-    QAction* editAction = item ? menu.addAction(tr(\""&Edit Source\"")) : 0;\n-    QAction* remAction = item ? menu.addAction(tr(\""&Remove Source\"")) : 0;\n-\n-    QAction* result = menu.exec( QCursor::pos() );\n-    if( !result )\n-        return;\n-\n-    if( result == addAction )\n-        this->addNewSource();\n-    else if( result == remAction )\n-        this->removeCurrentSource();\n-    else if( result == editAction )\n-        this->editCurrentSource();\n-}\n"", ""kdupdaterupdatesourcesview.h"": ""@@ -1,68 +0,0 @@\n-/****************************************************************************\n-** Copyright (C) 2001-2010 Klaralvdalens Datakonsult AB.  All rights reserved.\n-**\n-** This file is part of the KD Tools library.\n-**\n-** Licensees holding valid commercial KD Tools licenses may use this file in\n-** accordance with the KD Tools Commercial License Agreement provided with\n-** the Software.\n-**\n-**\n-** This file may be distributed and/or modified under the terms of the\n-** GNU Lesser General Public License version 2 and version 3 as published by the\n-** Free Software Foundation and appearing in the file LICENSE.LGPL included.\n-**\n-** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE\n-** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.\n-**\n-** Contact info@kdab.com if any conditions of this licensing are not\n-** clear to you.\n-**\n-**********************************************************************/\n-\n-#ifndef KD_UPDATER_UPDATE_SOURCES_VIEW_H\n-#define KD_UPDATER_UPDATE_SOURCES_VIEW_H\n-\n-#include \""kdupdater.h\""\n-#include <QTreeWidget>\n-\n-namespace KDUpdater\n-{\n-    struct UpdateSourceInfo;\n-    class UpdateSourcesInfo;\n-\n-    class KDTOOLS_UPDATER_EXPORT UpdateSourcesView : public QTreeWidget\n-    {\n-        Q_OBJECT\n-\n-    public:\n-        explicit UpdateSourcesView(QWidget* parent=0);\n-        ~UpdateSourcesView();\n-\n-        void setUpdateSourcesInfo(UpdateSourcesInfo* info);\n-        UpdateSourcesInfo* updateSourcesInfo() const;\n-\n-        int currentUpdateSourceInfoIndex() const;\n-\n-    public Q_SLOTS:\n-        void refresh();\n-        void addNewSource();\n-        void removeCurrentSource();\n-        void editCurrentSource();\n-\n-    protected:\n-        void contextMenuEvent(QContextMenuEvent* e);\n-\n-    private Q_SLOTS:\n-        void slotUpdateSourceInfoAdded(const UpdateSourceInfo &info);\n-        void slotUpdateSourceInfoRemoved(const UpdateSourceInfo &info);\n-        void slotUpdateSourceInfoChanged(const UpdateSourceInfo &newInfo,\n-                                         const UpdateSourceInfo &oldInfo);\n-\n-    private:\n-        struct UpdateSourcesViewData;\n-        UpdateSourcesViewData* d;\n-    };\n-};\n-\n-#endif\n"", ""updatesdialog.ui"": ""@@ -1,245 +0,0 @@\n-<ui version=\""4.0\"" >\n- <class>UpdatesDialog</class>\n- <widget class=\""QDialog\"" name=\""UpdatesDialog\"" >\n-  <property name=\""geometry\"" >\n-   <rect>\n-    <x>0</x>\n-    <y>0</y>\n-    <width>555</width>\n-    <height>478</height>\n-   </rect>\n-  </property>\n-  <property name=\""windowTitle\"" >\n-   <string>Update</string>\n-  </property>\n-  <layout class=\""QGridLayout\"" name=\""gridLayout\"" >\n-   <property name=\""sizeConstraint\"" >\n-    <enum>QLayout::SetMinAndMaxSize</enum>\n-   </property>\n-   <item row=\""0\"" column=\""0\"" >\n-    <widget class=\""QLabel\"" name=\""pixmapLabel\"" >\n-     <property name=\""sizePolicy\"" >\n-      <sizepolicy vsizetype=\""Minimum\"" hsizetype=\""Minimum\"" >\n-       <horstretch>0</horstretch>\n-       <verstretch>0</verstretch>\n-      </sizepolicy>\n-     </property>\n-     <property name=\""minimumSize\"" >\n-      <size>\n-       <width>96</width>\n-       <height>96</height>\n-      </size>\n-     </property>\n-     <property name=\""text\"" >\n-      <string/>\n-     </property>\n-     <property name=\""alignment\"" >\n-      <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop</set>\n-     </property>\n-    </widget>\n-   </item>\n-   <item row=\""0\"" column=\""2\"" colspan=\""2\"" >\n-    <widget class=\""QLabel\"" name=\""descriptionLabel\"" >\n-     <property name=\""minimumSize\"" >\n-      <size>\n-       <width>400</width>\n-       <height>96</height>\n-      </size>\n-     </property>\n-     <property name=\""text\"" >\n-      <string/>\n-     </property>\n-     <property name=\""textFormat\"" >\n-      <enum>Qt::RichText</enum>\n-     </property>\n-     <property name=\""alignment\"" >\n-      <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop</set>\n-     </property>\n-     <property name=\""wordWrap\"" >\n-      <bool>true</bool>\n-     </property>\n-    </widget>\n-   </item>\n-   <item row=\""1\"" column=\""2\"" colspan=\""2\"" >\n-    <layout class=\""QVBoxLayout\"" name=\""verticalLayout_2\"" >\n-     <item>\n-      <widget class=\""QWidget\"" native=\""1\"" name=\""releaseNotesGroup\"" >\n-       <layout class=\""QVBoxLayout\"" name=\""verticalLayout\"" >\n-        <property name=\""leftMargin\"" >\n-         <number>0</number>\n-        </property>\n-        <property name=\""rightMargin\"" >\n-         <number>0</number>\n-        </property>\n-        <item>\n-         <widget class=\""QLabel\"" name=\""label\"" >\n-          <property name=\""text\"" >\n-           <string>&lt;b>Release Notes:&lt;/b></string>\n-          </property>\n-          <property name=\""textFormat\"" >\n-           <enum>Qt::RichText</enum>\n-          </property>\n-         </widget>\n-        </item>\n-        <item>\n-         <widget class=\""KDUPDATERVIEW\"" native=\""1\"" name=\""releaseNotesView\"" >\n-          <property name=\""minimumSize\"" >\n-           <size>\n-            <width>400</width>\n-            <height>200</height>\n-           </size>\n-          </property>\n-         </widget>\n-        </item>\n-       </layout>\n-      </widget>\n-     </item>\n-     <item>\n-      <widget class=\""QWidget\"" native=\""1\"" name=\""packageSwitchBar\"" >\n-       <layout class=\""QHBoxLayout\"" name=\""horizontalLayout\"" >\n-        <property name=\""spacing\"" >\n-         <number>0</number>\n-        </property>\n-        <property name=\""margin\"" >\n-         <number>0</number>\n-        </property>\n-        <item>\n-         <widget class=\""QCheckBox\"" name=\""packageUpdateCheckBox\"" >\n-          <property name=\""text\"" >\n-           <string>Update the current package</string>\n-          </property>\n-         </widget>\n-        </item>\n-        <item>\n-         <spacer name=\""horizontalSpacer\"" >\n-          <property name=\""orientation\"" >\n-           <enum>Qt::Horizontal</enum>\n-          </property>\n-          <property name=\""sizeHint\"" stdset=\""0\"" >\n-           <size>\n-            <width>296</width>\n-            <height>20</height>\n-           </size>\n-          </property>\n-         </spacer>\n-        </item>\n-        <item>\n-         <widget class=\""QToolButton\"" name=\""previousPackageButton\"" >\n-          <property name=\""text\"" >\n-           <string/>\n-          </property>\n-          <property name=\""iconSize\"" >\n-           <size>\n-            <width>8</width>\n-            <height>8</height>\n-           </size>\n-          </property>\n-          <property name=\""autoRaise\"" >\n-           <bool>true</bool>\n-          </property>\n-          <property name=\""arrowType\"" >\n-           <enum>Qt::LeftArrow</enum>\n-          </property>\n-         </widget>\n-        </item>\n-        <item>\n-         <widget class=\""QLabel\"" name=\""currentPackageLabel\"" >\n-          <property name=\""text\"" >\n-           <string>N</string>\n-          </property>\n-         </widget>\n-        </item>\n-        <item>\n-         <widget class=\""QLabel\"" name=\""label_2\"" >\n-          <property name=\""text\"" >\n-           <string>/</string>\n-          </property>\n-         </widget>\n-        </item>\n-        <item>\n-         <widget class=\""QLabel\"" name=\""totalPackageLabel\"" >\n-          <property name=\""text\"" >\n-           <string>M</string>\n-          </property>\n-         </widget>\n-        </item>\n-        <item>\n-         <widget class=\""QToolButton\"" name=\""nextPackageButton\"" >\n-          <property name=\""text\"" >\n-           <string/>\n-          </property>\n-          <property name=\""iconSize\"" >\n-           <size>\n-            <width>8</width>\n-            <height>8</height>\n-           </size>\n-          </property>\n-          <property name=\""autoRaise\"" >\n-           <bool>true</bool>\n-          </property>\n-          <property name=\""arrowType\"" >\n-           <enum>Qt::RightArrow</enum>\n-          </property>\n-         </widget>\n-        </item>\n-       </layout>\n-      </widget>\n-     </item>\n-    </layout>\n-   </item>\n-   <item row=\""2\"" column=\""3\"" >\n-    <widget class=\""QDialogButtonBox\"" name=\""buttonBox\"" >\n-     <property name=\""orientation\"" >\n-      <enum>Qt::Horizontal</enum>\n-     </property>\n-     <property name=\""standardButtons\"" >\n-      <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>\n-     </property>\n-    </widget>\n-   </item>\n-  </layout>\n- </widget>\n- <customwidgets>\n-  <customwidget>\n-   <class>KDUPDATERVIEW</class>\n-   <extends>QWidget</extends>\n-   <header>qwidget.h</header>\n-   <container>1</container>\n-  </customwidget>\n- </customwidgets>\n- <resources/>\n- <connections>\n-  <connection>\n-   <sender>buttonBox</sender>\n-   <signal>accepted()</signal>\n-   <receiver>UpdatesDialog</receiver>\n-   <slot>accept()</slot>\n-   <hints>\n-    <hint type=\""sourcelabel\"" >\n-     <x>248</x>\n-     <y>254</y>\n-    </hint>\n-    <hint type=\""destinationlabel\"" >\n-     <x>157</x>\n-     <y>274</y>\n-    </hint>\n-   </hints>\n-  </connection>\n-  <connection>\n-   <sender>buttonBox</sender>\n-   <signal>rejected()</signal>\n-   <receiver>UpdatesDialog</receiver>\n-   <slot>reject()</slot>\n-   <hints>\n-    <hint type=\""sourcelabel\"" >\n-     <x>316</x>\n-     <y>260</y>\n-    </hint>\n-    <hint type=\""destinationlabel\"" >\n-     <x>286</x>\n-     <y>274</y>\n-    </hint>\n-   </hints>\n-  </connection>\n- </connections>\n-</ui>\n""}",deprecat,"refactor
",deprecat;
2812.0,2812.0,bug,Christian Kandeler,RemoteLinux: Get rid of non-standard mkdir option.,"RemoteLinux: Get rid of non-standard mkdir option.

Busybox implementations, for example, don't necessarily have -v.

Change-Id: Icf9ed8e8826ef53073d62d2900d2f72d0bf2fe83",['src/plugins/remotelinux/genericdirectuploadservice.cpp'],"{""genericdirectuploadservice.cpp"": ""@@ -309,7 +309,7 @@ void GenericDirectUploadService::uploadNextFile()\n     QFileInfo fi(d.localFilePath);\n     if (fi.isDir())\n         dirToCreate += QLatin1Char('/') + fi.fileName();\n-    const QString command = QLatin1String(\""mkdir -vp \"") + dirToCreate;\n+    const QString command = QLatin1String(\""mkdir -p \"") + dirToCreate;\n     m_d->mkdirProc = connection()->createRemoteProcess(command.toUtf8());\n     connect(m_d->mkdirProc.data(), SIGNAL(closed(int)), SLOT(handleMkdirFinished(int)));\n     connect(m_d->mkdirProc.data(), SIGNAL(outputAvailable(QByteArray)),\n""}",bug,"bug, refactor 
",feature;
20401.0,20401.0,bug,acseqt,Fix buttons which weren't correctly set as visible/invisible,"Fix buttons which weren't correctly set as visible/invisible

Since the change in the feature detection mechanism of QtLocation.
In particular the locale option and edit/remove places buttons.
These now have been addressed.

Task-number: QTBUG-24755
Change-Id: Ic54df78f49ffd8b0f30d8e0b679a54636842a74b","['examples/declarative/places/content/places/PlaceDelegate.qml', 'examples/declarative/places/content/places/OptionsDialog.qml', 'examples/declarative/places/content/places/CategoryDelegate.qml']","{""CategoryDelegate.qml"": ""@@ -94,13 +94,18 @@ Item {\n \n         anchors.right: cross.left\n         anchors.verticalCenter: parent.verticalCenter\n-        visible: (placesPlugin.name != \""\"" ? placesPlugin.supportsPlaces(Plugin.SaveCategoryFeature) : false)\n+        visible: placesPlugin.supportsPlaces(Plugin.SaveCategoryFeature);\n \n         source: \""../../resources/pencil.png\""\n         hoveredSource: \""../../resources/pencil_hovered.png\""\n         pressedSource: \""../../resources/pencil_pressed.png\""\n \n         onClicked: root.editClicked()\n+\n+        Connections {\n+            target: placesPlugin\n+            onNameChanged: edit.visible = placesPlugin.supportsPlaces(Plugin.SaveCategoryFeature);\n+        }\n     }\n \n     IconButton {\n@@ -108,13 +113,18 @@ Item {\n \n         anchors.right: arrow.left\n         anchors.verticalCenter: parent.verticalCenter\n-        visible: (placesPlugin.name != \""\"" ? placesPlugin.supportsPlaces(Plugin.RemoveCategoryFeature) : false)\n+        visible: placesPlugin.supportsPlaces(Plugin.RemoveCategoryFeature);\n \n         source: \""../../resources/cross.png\""\n         hoveredSource: \""../../resources/cross_hovered.png\""\n         pressedSource: \""../../resources/cross_pressed.png\""\n \n         onClicked: root.crossClicked()\n+\n+        Connections {\n+            target: placesPlugin\n+            onNameChanged:  cross.visible = placesPlugin.supportsPlaces(Plugin.RemoveCategoryFeature);\n+        }\n     }\n \n     IconButton {\n"", ""OptionsDialog.qml"": ""@@ -101,18 +101,16 @@ Item {\n             TextWithLabel {\n                 id: localesInput\n \n-                function resetVisibility() {\n-                    visible = placesPlugin.supportedPlacesFeatures & Plugin.LocaleFeature\n-                }\n-\n                 width: parent.width - gap\n                 height: listItemHeight\n                 label: \""Locale(s)\""\n                 enabled: true\n+                visible: placesPlugin.supportsPlaces(Plugin.LocalizedPlacesFeature);\n \n-                Component.onCompleted: {\n-                    resetVisibility();\n-                    placesPlugin.nameChanged.connect(resetVisibility);\n+                Connections {\n+                    target: placesPlugin\n+                    onNameChanged:\n+                        localesInput.visible = placesPlugin.supportsPlaces(Plugin.LocalizedPlacesFeature);\n                 }\n             }\n \n"", ""PlaceDelegate.qml"": ""@@ -203,15 +203,27 @@ Item {\n                     onClicked: searchForSimilar(place)\n                 }\n                 Button {\n+                    id: editButton\n                     text: qsTr(\""Edit\"")\n                     onClicked: editPlace(place)\n-                    visible: placesPlugin.supportedPlacesFeatures & Plugin.SavePlaceFeature\n+                    visible: placesPlugin.supportsPlaces(Plugin.SavePlaceFeature);\n+\n+                    Connections {\n+                        target: placesPlugin\n+                        onNameChanged: editButton.visible = placesPlugin.supportsPlaces(Plugin.SavePlaceFeature);\n+                    }\n                 }\n \n                 Button {\n+                    id: deleteButton\n                     text: qsTr(\""Delete\"");\n                     onClicked: deletePlace(place)\n-                    visible: placesPlugin.supportedPlacesFeatures & Plugin.RemovePlaceFeature\n+                    visible: placesPlugin.supportsPlaces(Plugin.RemovePlaceFeature);\n+\n+                    Connections {\n+                        target: placesPlugin\n+                        onNameChanged: deleteButton.visible = placesPlugin.supportsPlaces(Plugin.RemovePlaceFeature);\n+                    }\n                 }\n \n                 Item {\n""}",bug,"bug 
",bug;deprecat;resource;
19944.0,19944.0,bug,Daniel Teske,ProjectExplorer: Remove hack for virtual folders,"Fix tooltip of virtual folders

Node::path() is used in at least 3 different ways: As the sort criteria,
(that's why virtual folders add a #50OtherFiles there), as the tooltip,
and as the basis for ""Open Terminal Here"". Ideally those 3 cases would
be separate functions in Node, alas that's a non trivial change.

Change-Id: I76b730f4c4254e2894467603bbe9a30e356a0bcc",['src/plugins/projectexplorer/projectmodels.cpp'],"{""projectmodels.cpp"": ""@@ -255,7 +255,11 @@ QVariant FlatModel::data(const QModelIndex &index, int role) const\n             break;\n         }\n         case Qt::ToolTipRole: {\n-            result = QDir::toNativeSeparators(node->path());\n+            QString path = node->path();\n+            int hashPos = path.indexOf('#');\n+            if (hashPos != -1)\n+                path = path.left(hashPos);\n+            result = QDir::toNativeSeparators(path);\n             break;\n         }\n         case Qt::DecorationRole: {\n""}",bug,"bug, refactor 
",deprecat;
5534.0,5534.0,feature,hjk,debugger: hack to specify sysroot in generic remote linux,"debugger: hack to specify sysroot in generic remote linux

Change-Id: I9657f71246df4742329a0b4f27bf08f146e9632a","['src/plugins/debugger/gdb/gdbengine.cpp', 'src/plugins/debugger/debuggerstartparameters.h', 'src/plugins/debugger/gdb/remotegdbserveradapter.cpp', 'src/plugins/debugger/debuggerplugin.cpp']","{""debuggerplugin.cpp"": ""@@ -1014,6 +1014,9 @@ public slots:\n     DebuggerToolTipManager *toolTipManager() const { return m_toolTipManager; }\n     virtual QSharedPointer<GlobalDebuggerOptions> globalDebuggerOptions() const { return m_globalDebuggerOptions; }\n \n+    // FIXME: Remove.\n+    void maybeEnrichParameters(DebuggerStartParameters *sp);\n+\n public:\n     DebuggerMainWindow *m_mainWindow;\n     DebuggerRunControlFactory *m_debuggerRunControlFactory;\n@@ -1189,11 +1192,18 @@ static QString msgParameterMissing(const QString &a)\n     return DebuggerPlugin::tr(\""Option '%1' is missing the parameter.\"").arg(a);\n }\n \n-\n-static void maybeEnrichParameters(DebuggerStartParameters *sp)\n+void DebuggerPluginPrivate::maybeEnrichParameters(DebuggerStartParameters *sp)\n {\n-    if (!theDebuggerCore->boolSetting(AutoEnrichParameters))\n+    if (!boolSetting(AutoEnrichParameters))\n         return;\n+    if (sp->sysroot.isEmpty() && (sp->startMode == AttachToRemoteServer\n+            || sp->startMode == StartRemote)) {\n+        // FIXME: Get from BaseQtVersion\n+        sp->sysroot = QString::fromLocal8Bit(qgetenv(\""QTC_DEBUGGER_SYSROOT\""));\n+        //if (sp->sysroot.isEmpty())\n+        //    sp->sysroot = debuggerCore()->configValue(_(\""LastSysroot\"")).toString();\n+        showMessage(\""### USING FAKE SYSROOT ###\"" + sp->sysroot.toLocal8Bit(), LogWarning);\n+    }\n     if (sp->debugInfoLocation.isEmpty())\n         sp->debugInfoLocation = sp->sysroot + \""/usr/lib/debug\"";\n     if (sp->debugSourceLocation.isEmpty()) {\n@@ -1204,6 +1214,10 @@ static void maybeEnrichParameters(DebuggerStartParameters *sp)\n         sp->debugSourceLocation.append(base + \""qt5base/src/v8\"");\n         sp->debugSourceLocation.append(base + \""qtdeclarative/src/declarative/qml\"");\n     }\n+    if (sp->solibSearchPath.isEmpty()) {\n+        sp->solibSearchPath = sp->sysroot + \""/usr/lib/debug\"";\n+        // was: QFileInfo(sp.dumperLibrary).path().toLocal8Bit();\n+    }\n }\n \n bool DebuggerPluginPrivate::parseArgument(QStringList::const_iterator &it,\n@@ -1486,7 +1500,6 @@ void DebuggerPluginPrivate::attachExternalApplication()\n     sp.startMode = AttachExternal;\n     sp.toolChainAbi = dlg.abi();\n     sp.debuggerCommand = dlg.debuggerCommand();\n-    maybeEnrichParameters(&sp);\n     if (DebuggerRunControl *rc = createDebugger(sp))\n         startDebugger(rc);\n }\n@@ -1498,7 +1511,6 @@ void DebuggerPluginPrivate::attachExternalApplication(ProjectExplorer::RunContro\n     sp.displayName = tr(\""Debugger attached to %1\"").arg(rc->displayName());\n     sp.startMode = AttachExternal;\n     sp.toolChainAbi = rc->abi();\n-    maybeEnrichParameters(&sp);\n     if (DebuggerRunControl *rc = createDebugger(sp))\n         startDebugger(rc);\n }\n@@ -1530,7 +1542,6 @@ void DebuggerPluginPrivate::attachCore()\n     sp.toolChainAbi = dlg.abi();\n     sp.sysroot = dlg.sysroot();\n     sp.overrideStartScript = dlg.overrideStartScript();\n-    maybeEnrichParameters(&sp);\n     if (DebuggerRunControl *rc = createDebugger(sp))\n         startDebugger(rc);\n }\n@@ -1545,7 +1556,6 @@ void DebuggerPluginPrivate::attachRemote(const QString &spec)\n     sp.displayName = tr(\""Remote: \\\""%1\\\""\"").arg(sp.remoteChannel);\n     sp.startMode = AttachToRemoteServer;\n     sp.toolChainAbi = anyAbiOfBinary(sp.executable);\n-    maybeEnrichParameters(&sp);\n     if (DebuggerRunControl *rc = createDebugger(sp))\n         startDebugger(rc);\n }\n@@ -1643,7 +1653,6 @@ void DebuggerPluginPrivate::startRemoteApplication()\n     sp.startMode = StartRemote;\n     if (!queryRemoteParameters(sp, true))\n         return;\n-    maybeEnrichParameters(&sp);\n     if (RunControl *rc = createDebugger(sp))\n         startDebugger(rc);\n }\n@@ -1656,7 +1665,6 @@ void DebuggerPluginPrivate::attachRemoteApplication()\n     sp.startMode = AttachToRemoteServer;\n     sp.useServerStartScript = false;\n     sp.serverStartScript.clear();\n-    maybeEnrichParameters(&sp);\n     if (RunControl *rc = createDebugger(sp))\n         startDebugger(rc);\n }\n@@ -1926,8 +1934,10 @@ void DebuggerPluginPrivate::requestMark(ITextEditor *editor, int lineNumber)\n }\n \n DebuggerRunControl *DebuggerPluginPrivate::createDebugger\n-    (const DebuggerStartParameters &sp, RunConfiguration *rc)\n+    (const DebuggerStartParameters &sp0, RunConfiguration *rc)\n {\n+    DebuggerStartParameters sp = sp0;\n+    maybeEnrichParameters(&sp);\n     return m_debuggerRunControlFactory->create(sp, rc);\n }\n \n@@ -2525,12 +2535,14 @@ static QString formatStartParameters(DebuggerStartParameters &sp)\n     str << \""Start parameters: '\"" << sp.displayName << \""' mode: \"" << sp.startMode\n         << \""\\nABI: \"" << sp.toolChainAbi.toString() << '\\n';\n     if (!sp.executable.isEmpty()) {\n-        str << \""Executable: \"" << QDir::toNativeSeparators(sp.executable) << ' ' << sp.processArgs;\n+        str << \""Executable: \"" << QDir::toNativeSeparators(sp.executable)\n+            << ' ' << sp.processArgs;\n         if (sp.useTerminal)\n             str << \"" [terminal]\"";\n         str << '\\n';\n         if (!sp.workingDirectory.isEmpty())\n-            str << \""Directory: \"" << QDir::toNativeSeparators(sp.workingDirectory) << '\\n';\n+            str << \""Directory: \"" << QDir::toNativeSeparators(sp.workingDirectory)\n+                << '\\n';\n         if (sp.executableUid) {\n             str << \""UID: 0x\"";\n             str.setIntegerBase(16);\n@@ -2547,36 +2559,38 @@ static QString formatStartParameters(DebuggerStartParameters &sp)\n     if (!sp.projectSourceDirectory.isEmpty()) {\n         str << \""Project: \"" << QDir::toNativeSeparators(sp.projectSourceDirectory);\n         if (!sp.projectBuildDirectory.isEmpty())\n-            str << \"" (built: \"" << QDir::toNativeSeparators(sp.projectBuildDirectory) << ')';\n+            str << \"" (built: \"" << QDir::toNativeSeparators(sp.projectBuildDirectory)\n+                << ')';\n         str << '\\n';\n     }\n     if (!sp.qtInstallPath.isEmpty())\n         str << \""Qt: \"" << QDir::toNativeSeparators(sp.qtInstallPath) << '\\n';\n     if (!sp.qmlServerAddress.isEmpty())\n-        str << \""QML server: \"" << sp.qmlServerAddress << ':' << sp.qmlServerPort << '\\n';\n+        str << \""QML server: \"" << sp.qmlServerAddress << ':'\n+            << sp.qmlServerPort << '\\n';\n     if (!sp.remoteChannel.isEmpty()) {\n-        str << \""Remote: \"" << sp.remoteChannel << \"", \"" << sp.remoteArchitecture << '\\n';\n+        str << \""Remote: \"" << sp.remoteChannel << \"", \""\n+            << sp.remoteArchitecture << '\\n';\n         if (!sp.remoteDumperLib.isEmpty())\n             str << \""Remote dumpers: \"" << sp.remoteDumperLib << '\\n';\n         if (!sp.remoteSourcesDir.isEmpty())\n             str << \""Remote sources: \"" << sp.remoteSourcesDir << '\\n';\n         if (!sp.remoteMountPoint.isEmpty())\n-            str << \""Remote mount point: \"" << sp.remoteMountPoint << \"" Local: \"" << sp.localMountDir << '\\n';\n+            str << \""Remote mount point: \"" << sp.remoteMountPoint\n+                << \"" Local: \"" << sp.localMountDir << '\\n';\n     }\n     if (!sp.gnuTarget.isEmpty())\n         str << \""Gnu target: \"" << sp.gnuTarget << '\\n';\n-    if (!sp.sysroot.isEmpty())\n-        str << \""Sysroot: \"" << sp.sysroot << '\\n';\n-    if (!sp.symbolFileName.isEmpty())\n-        str << \""Symbol file: \"" << sp.symbolFileName << '\\n';\n+    str << \""Sysroot: \"" << sp.sysroot << '\\n';\n+    str << \""Solib Search Path: \"" << sp.solibSearchPath << '\\n';\n+    str << \""Debug Source Loaction: \"" << sp.debugSourceLocation.join(\"":\"") << '\\n';\n+    str << \""Symbol file: \"" << sp.symbolFileName << '\\n';\n     if (sp.useServerStartScript)\n         str << \""Using server start script: \"" << sp.serverStartScript;\n-    if (!sp.dumperLibrary.isEmpty()) {\n-        str << \""Dumper libraries: \"" << QDir::toNativeSeparators(sp.dumperLibrary);\n-        foreach (const QString &dl, sp.dumperLibraryLocations)\n-            str << ' ' << QDir::toNativeSeparators(dl);\n-        str << '\\n';\n-    }\n+    str << \""Dumper libraries: \"" << QDir::toNativeSeparators(sp.dumperLibrary);\n+    foreach (const QString &dl, sp.dumperLibraryLocations)\n+        str << ' ' << QDir::toNativeSeparators(dl);\n+    str << '\\n';\n     return rc;\n }\n \n@@ -2636,17 +2650,17 @@ QString DebuggerPluginPrivate::debuggerForAbi(const Abi &abi, DebuggerEngineType\n         switch (et) {\n         case CdbEngineType:\n             searchAbis.clear();\n-            searchAbis.push_back(Abi(abi.architecture(), abi.os(), Abi::WindowsMsvc2010Flavor,\n-                                     abi.binaryFormat(), abi.wordWidth()));\n-            searchAbis.push_back(Abi(abi.architecture(), abi.os(), Abi::WindowsMsvc2008Flavor,\n-                                     abi.binaryFormat(), abi.wordWidth()));\n-            searchAbis.push_back(Abi(abi.architecture(), abi.os(), Abi::WindowsMsvc2005Flavor,\n-                                     abi.binaryFormat(), abi.wordWidth()));\n+            searchAbis.push_back(Abi(abi.architecture(), abi.os(),\n+                Abi::WindowsMsvc2010Flavor, abi.binaryFormat(), abi.wordWidth()));\n+            searchAbis.push_back(Abi(abi.architecture(), abi.os(),\n+                Abi::WindowsMsvc2008Flavor, abi.binaryFormat(), abi.wordWidth()));\n+            searchAbis.push_back(Abi(abi.architecture(), abi.os(),\n+                Abi::WindowsMsvc2005Flavor, abi.binaryFormat(), abi.wordWidth()));\n             break;\n         case GdbEngineType:\n             searchAbis.clear();\n-            searchAbis.push_back(Abi(abi.architecture(), abi.os(), Abi::WindowsMSysFlavor,\n-                                     abi.binaryFormat(), abi.wordWidth()));\n+            searchAbis.push_back(Abi(abi.architecture(), abi.os(),\n+                Abi::WindowsMSysFlavor, abi.binaryFormat(), abi.wordWidth()));\n             break;\n         default:\n             break;\n@@ -2657,7 +2671,8 @@ QString DebuggerPluginPrivate::debuggerForAbi(const Abi &abi, DebuggerEngineType\n                  << searchAbis.front().toString() << et;\n \n     foreach (const Abi &searchAbi, searchAbis) {\n-        const QList<ToolChain *> toolchains = ToolChainManager::instance()->findToolChains(searchAbi);\n+        const QList<ToolChain *> toolchains =\n+            ToolChainManager::instance()->findToolChains(searchAbi);\n         // Find manually configured ones first\n         for (int i = toolchains.size() - 1; i >= 0; i--) {\n             const QString debugger = toolchains.at(i)->debuggerCommand();\n"", ""debuggerstartparameters.h"": ""@@ -108,8 +108,9 @@ public:\n     bool useServerStartScript;\n     QString serverStartScript;\n     QString sysroot;\n-    QString debugInfoLocation;\n-    QStringList debugSourceLocation;\n+    QString debugInfoLocation; // Gdb \""set-debug-file-directory\"".\n+    QString solibSearchPath; // Gdb \""set solib-search-path\"".\n+    QStringList debugSourceLocation; // Gdb \""directory\""\n     QByteArray remoteDumperLib;\n     QByteArray remoteSourcesDir;\n     QString remoteMountPoint;\n"", ""gdbengine.cpp"": ""@@ -4763,8 +4763,11 @@ void GdbEngine::setupInferior()\n     const QByteArray debugInfoLocation = sp.debugInfoLocation.toLocal8Bit();\n     if (!debugInfoLocation.isEmpty())\n         postCommand(\""set debug-file-directory \"" + debugInfoLocation);\n+    // Spaces just will not work.\n     foreach (const QString &src, sp.debugSourceLocation)\n-        postCommand(\""directory \"" + src.toLocal8Bit());\n+        postCommand(\""directory \"" + src.toLocal8Bit()); \n+    if (!sp.solibSearchPath.isEmpty())\n+        postCommand(\""set solib-search-path \"" + sp.solibSearchPath.toLocal8Bit());\n     m_gdbAdapter->setupInferior();\n }\n \n"", ""remotegdbserveradapter.cpp"": ""@@ -169,10 +169,8 @@ void RemoteGdbServerAdapter::setupInferior()\n         fileName = fi.absoluteFilePath();\n     }\n     const QByteArray sysroot = sp.sysroot.toLocal8Bit();\n-    const QByteArray debugInfoLocation = sp.debugInfoLocation.toLocal8Bit();\n     const QByteArray remoteArch = sp.remoteArchitecture.toLatin1();\n     const QByteArray gnuTarget = sp.gnuTarget.toLatin1();\n-    const QByteArray solibPath = QFileInfo(sp.dumperLibrary).path().toLocal8Bit();\n     const QString args = sp.processArgs;\n \n     if (!remoteArch.isEmpty())\n@@ -181,12 +179,6 @@ void RemoteGdbServerAdapter::setupInferior()\n         m_engine->postCommand(\""set gnutarget \"" + gnuTarget);\n     if (!sysroot.isEmpty())\n         m_engine->postCommand(\""set sysroot \"" + sysroot);\n-    if (!debugInfoLocation.isEmpty())\n-        m_engine->postCommand(\""set debug-file-directory \"" + debugInfoLocation);\n-    foreach (const QString &src, sp.debugSourceLocation)\n-        m_engine->postCommand(\""directory \"" + src.toLocal8Bit());\n-    if (!solibPath.isEmpty())\n-        m_engine->postCommand(\""set solib-search-path \"" + solibPath);\n     if (!args.isEmpty())\n         m_engine->postCommand(\""-exec-arguments \"" + args.toLocal8Bit());\n \n""}",feature,"bug 
",bug;
10867.0,10867.0,test; refactor,Friedemann Kleint,ActiveQt/Testcon: Replace (long obsolete) QWorkspace by QMdiArea.,"ActiveQt/Testcon: Replace (long obsolete) QWorkspace by QMdiArea.

Preparing removal of QWorkspace.

Change-Id: I2f141df364cf45ddddd09ed8fb5687e7854599df","['tools/testcon/mainwindow.cpp', 'tools/testcon/ambientproperties.cpp', 'tools/testcon/docuwindow.cpp', 'tools/testcon/ambientproperties.h', 'tools/testcon/docuwindow.h', 'tools/testcon/mainwindow.h']","{""ambientproperties.cpp"": ""@@ -70,31 +70,38 @@ void AmbientProperties::setControl(QWidget *widget)\n \n void AmbientProperties::on_buttonBackground_clicked()\n {\n-    QColor c = QColorDialog::getColor(backSample->palette().color(backSample->backgroundRole()), this);\n-    QPalette p = backSample->palette(); p.setColor(backSample->backgroundRole(), c); backSample->setPalette(p);\n-    p = container->palette(); p.setColor(container->backgroundRole(), c); container->setPalette(p);\n-\n-    if (QWorkspace *ws = qobject_cast<QWorkspace*>(container)) {\n-\tQWidgetList list( ws->windowList() );\n-\tfor (int i = 0; i < list.count(); ++i) {\n-\t    QWidget *widget = list.at(i);\n-\t    p = widget->palette(); p.setColor(widget->backgroundRole(), c); widget->setPalette(p);\n+    const QColor c = QColorDialog::getColor(backSample->palette().color(backSample->backgroundRole()), this);\n+    QPalette p = backSample->palette();\n+    p.setColor(backSample->backgroundRole(), c);\n+    backSample->setPalette(p);\n+\n+    p = container->palette();\n+    p.setColor(container->backgroundRole(), c);\n+    container->setPalette(p);\n+\n+    foreach (QWidget *widget, mdiAreaWidgets()) {\n+        p = widget->palette();\n+        p.setColor(widget->backgroundRole(), c);\n+        widget->setPalette(p);\n \t}\n-    }\n }\n \n void AmbientProperties::on_buttonForeground_clicked()\n {\n-    QColor c = QColorDialog::getColor(foreSample->palette().color(foreSample->backgroundRole()), this);\n-    QPalette p = foreSample->palette(); p.setColor(foreSample->backgroundRole(), c); foreSample->setPalette(p);\n-    p = container->palette(); p.setColor(container->foregroundRole(), c); container->setPalette(p);\n-\n-    if (QWorkspace *ws = qobject_cast<QWorkspace*>(container)) {\n-\tQWidgetList list( ws->windowList() );\n-\tfor (int i = 0; i < list.count(); ++i) {\n-\t    QWidget *widget = list.at(i);\n-\t    p = widget->palette(); p.setColor(widget->foregroundRole(), c); widget->setPalette(p);\n-\t}\n+    const QColor c = QColorDialog::getColor(foreSample->palette().color(foreSample->backgroundRole()), this);\n+\n+    QPalette p = foreSample->palette();\n+    p.setColor(foreSample->backgroundRole(), c);\n+    foreSample->setPalette(p);\n+\n+    p = container->palette();\n+    p.setColor(container->foregroundRole(), c);\n+    container->setPalette(p);\n+\n+    foreach (QWidget *widget, mdiAreaWidgets()) {\n+        p = widget->palette();\n+        p.setColor(widget->foregroundRole(), c);\n+        widget->setPalette(p);\n     }\n }\n \n@@ -107,13 +114,8 @@ void AmbientProperties::on_buttonFont_clicked()\n     fontSample->setFont( f );\n     container->setFont( f );\n \n-    if (QWorkspace *ws = qobject_cast<QWorkspace*>(container)) {\n-\tQWidgetList list( ws->windowList() );\n-\tfor (int i = 0; i < list.count(); ++i) {\n-\t    QWidget *widget = list.at(i);\n-\t    widget->setFont( f );\n-\t}\n-    }\n+    foreach (QWidget *widget, mdiAreaWidgets())\n+        widget->setFont( f );\n }\n \n void AmbientProperties::on_buttonEnabled_toggled(bool on)\n@@ -122,4 +124,13 @@ void AmbientProperties::on_buttonEnabled_toggled(bool on)\n     container->setEnabled( on );\n }\n \n+QWidgetList AmbientProperties::mdiAreaWidgets() const\n+{\n+    QWidgetList result;\n+    if (QMdiArea *mdiArea = qobject_cast<QMdiArea*>(container))\n+        foreach (QMdiSubWindow *subWindow, mdiArea->subWindowList())\n+            result.push_back(subWindow->widget());\n+    return result;\n+}\n+\n QT_END_NAMESPACE\n"", ""ambientproperties.h"": ""@@ -63,6 +63,8 @@ public slots:\n     void on_buttonEnabled_toggled(bool on);\n \n private:\n+    QWidgetList mdiAreaWidgets() const;\n+\n     QWidget *container;\n };\n \n"", ""docuwindow.cpp"": ""@@ -101,12 +101,9 @@ static const char *fileprint[] = {\n };\n \n \n-DocuWindow::DocuWindow(const QString& docu, QWidget *parent, QWidget *source)\n+DocuWindow::DocuWindow(const QString& docu, QWidget *parent)\n     : QMainWindow(parent)\n {\n-    setAttribute(Qt::WA_DeleteOnClose);\n-    setWindowTitle(tr(\""%1 - Documentation\"").arg(source->windowTitle()));\n-\n     browser = new QTextBrowser(this);\n     browser->setHtml(docu);\n \n"", ""docuwindow.h"": ""@@ -52,7 +52,7 @@ class DocuWindow : public QMainWindow\n {\n     Q_OBJECT\n public:\n-    DocuWindow( const QString& docu, QWidget *parent, QWidget *source );\n+    DocuWindow(const QString& docu, QWidget *parent = 0);\n \n public slots:\n     void save();\n"", ""mainwindow.cpp"": ""@@ -82,11 +82,11 @@ MainWindow::MainWindow(QWidget *parent)\n     debuglog = logDebug;\n     oldDebugHandler = qInstallMsgHandler(redirectDebugOutput);\n     QHBoxLayout *layout = new QHBoxLayout(Workbase);\n-    workspace = new QWorkspace(Workbase);\n-    layout->addWidget(workspace);\n+    mdiArea = new QMdiArea(Workbase);\n+    layout->addWidget(mdiArea);\n     layout->setMargin(0);\n \n-    connect(workspace, SIGNAL(windowActivated(QWidget*)), this, SLOT(updateGUI()));\n+    connect(mdiArea, SIGNAL(subWindowActivated(QMdiSubWindow*)), this, SLOT(updateGUI()));\n     connect(actionFileExit, SIGNAL(triggered()), qApp, SLOT(quit()));\n }\n \n@@ -96,22 +96,38 @@ MainWindow::~MainWindow()\n     debuglog = 0;\n }\n \n+QAxWidget *MainWindow::activeAxWidget() const\n+{\n+    if (const QMdiSubWindow *activeSubWindow = mdiArea->currentSubWindow())\n+        return qobject_cast<QAxWidget*>(activeSubWindow->widget());\n+    return 0;\n+}\n+\n+QList<QAxWidget *> MainWindow::axWidgets() const\n+{\n+    QList<QAxWidget *> result;\n+    foreach (const QMdiSubWindow *subWindow, mdiArea->subWindowList())\n+        if (QAxWidget *axWidget = qobject_cast<QAxWidget *>(subWindow->widget()))\n+            result.push_back(axWidget);\n+    return result;\n+}\n \n void MainWindow::on_actionFileNew_triggered()\n {\n     QAxSelect select(this);\n     if (select.exec()) {\n-        QAxWidget *container = new QAxWidget(workspace);\n-        container->setAttribute(Qt::WA_DeleteOnClose);\n+        QAxWidget *container = new QAxWidget;\n+        mdiArea->addSubWindow(container);\n         container->setControl(select.clsid());\n-\tcontainer->setObjectName(container->windowTitle());\n-        workspace->addWindow(container);\n+        container->setObjectName(container->windowTitle());\n         container->show();\n     }\n     updateGUI();\n }\n \n-void MainWindow::on_actionFileLoad_triggered()\n+void MainWindow::on_actionFileLoad_tri()\n+{\n+    ggered()\n {\n     QString fname = QFileDialog::getOpenFileName(this, tr(\""Load\""), QString(), QLatin1String(\""*.qax\""));\n     if (fname.isEmpty())\n@@ -123,13 +139,13 @@ void MainWindow::on_actionFileLoad_triggered()\n \treturn;\n     }\n \n-    QAxWidget *container = new QAxWidget(workspace);\n-    workspace->addWindow(container);\n-    \n+    QAxWidget *container = new QAxWidget(mdiArea);\n+    container->setObjectName(container->windowTitle());\n+\n     QDataStream d(&file);\n     d >> *container;\n \n-    container->setObjectName(container->windowTitle());\n+    mdiArea->addSubWindow(container);\n     container->show();\n \n     updateGUI();\n@@ -137,7 +153,7 @@ void MainWindow::on_actionFileLoad_triggered()\n \n void MainWindow::on_actionFileSave_triggered()\n {\n-    QAxWidget *container = qobject_cast<QAxWidget*>(workspace->activeWindow());\n+    QAxWidget *container = activeAxWidget();\n     if (!container)\n         return;\n \n@@ -157,7 +173,7 @@ void MainWindow::on_actionFileSave_triggered()\n \n void MainWindow::on_actionContainerSet_triggered()\n {\n-    QAxWidget *container = qobject_cast<QAxWidget*>(workspace->activeWindow());\n+    QAxWidget *container = activeAxWidget();\n     if (!container)\n         return;\n \n@@ -169,7 +185,7 @@ void MainWindow::on_actionContainerSet_triggered()\n \n void MainWindow::on_actionContainerClear_triggered()\n {\n-    QAxWidget *container = qobject_cast<QAxWidget*>(workspace->activeWindow());\n+    QAxWidget *container = activeAxWidget();\n     if (container)\n \tcontainer->clear();\n     updateGUI();\n@@ -179,7 +195,7 @@ void MainWindow::on_actionContainerProperties_triggered()\n {\n     if (!dlgAmbient) {\n \tdlgAmbient = new AmbientProperties(this);\n-\tdlgAmbient->setControl(workspace);\n+        dlgAmbient->setControl(mdiArea);\n     }\n     dlgAmbient->show();\n }\n@@ -187,7 +203,7 @@ void MainWindow::on_actionContainerProperties_triggered()\n \n void MainWindow::on_actionControlInfo_triggered()\n {\n-    QAxWidget *container = qobject_cast<QAxWidget*>(workspace->activeWindow());\n+    QAxWidget *container = activeAxWidget();\n     if (!container)\n         return;\n \n@@ -198,7 +214,7 @@ void MainWindow::on_actionControlInfo_triggered()\n \n void MainWindow::on_actionControlProperties_triggered()\n {\n-    QAxWidget *container = qobject_cast<QAxWidget*>(workspace->activeWindow());\n+    QAxWidget *container = activeAxWidget();\n     if (!container)\n         return;\n \n@@ -212,7 +228,7 @@ void MainWindow::on_actionControlProperties_triggered()\n \n void MainWindow::on_actionControlMethods_triggered()\n {\n-    QAxWidget *container = qobject_cast<QAxWidget*>(workspace->activeWindow());\n+    QAxWidget *container = activeAxWidget();\n     if (!container)\n         return;\n \n@@ -226,7 +242,7 @@ void MainWindow::on_VerbMenu_aboutToShow()\n {\n     VerbMenu->clear();\n \n-    QAxWidget *container = qobject_cast<QAxWidget*>(workspace->activeWindow());\n+    QAxWidget *container = activeAxWidget();\n     if (!container)\n         return;\n \n@@ -242,7 +258,7 @@ void MainWindow::on_VerbMenu_aboutToShow()\n \n void MainWindow::on_VerbMenu_triggered(QAction *action)\n {\n-    QAxWidget *container = qobject_cast<QAxWidget*>(workspace->activeWindow());\n+    QAxWidget *container = activeAxWidget();\n     if (!container)\n         return;\n \n@@ -251,34 +267,30 @@ void MainWindow::on_VerbMenu_triggered(QAction *action)\n \n void MainWindow::on_actionControlDocumentation_triggered()\n {\n-    QAxWidget *container = qobject_cast<QAxWidget*>(workspace->activeWindow());\n+    QAxWidget *container = activeAxWidget();\n     if (!container)\n         return;\n     \n-    QString docu = container->generateDocumentation();\n+    const QString docu = container->generateDocumentation();\n     if (docu.isEmpty())\n \treturn;\n \n-    DocuWindow *docwindow = new DocuWindow(docu, workspace, container);\n-    workspace->addWindow(docwindow);\n+    DocuWindow *docwindow = new DocuWindow(docu);\n+    QMdiSubWindow *subWindow = mdiArea->addSubWindow(docwindow);\n+    subWindow->setWindowTitle(DocuWindow::tr(\""%1 - Documentation\"").arg(container->windowTitle()));\n     docwindow->show();\n }\n \n-\n void MainWindow::on_actionControlPixmap_triggered()\n {\n-    QAxWidget *container = qobject_cast<QAxWidget*>(workspace->activeWindow());\n+    QAxWidget *container = activeAxWidget();\n     if (!container)\n-\treturn;\n-\n-    QPixmap pm = QPixmap::grabWidget(container);\n-\n-    QLabel *label = new QLabel(workspace);\n-    label->setAttribute(Qt::WA_DeleteOnClose);\n-    label->setPixmap(pm);\n-    label->setWindowTitle(tr(\""%1 - Pixmap\"").arg(container->windowTitle()));\n+        return;\n \n-    workspace->addWindow(label);\n+    QLabel *label = new QLabel;\n+    label->setPixmap(QPixmap::grabWidget(container));\n+    QMdiSubWindow *subWindow = mdiArea->addSubWindow(label);\n+    subWindow->setWindowTitle(tr(\""%1 - Pixmap\"").arg(container->windowTitle()));\n     label->show();\n }\n \n@@ -317,21 +329,16 @@ void MainWindow::on_actionScriptingLoad_triggered()\n     QString file = QFileDialog::getOpenFileName(this, tr(\""Open Script\""), QString(), QAxScriptManager::scriptFileFilter());\n \n     if (file.isEmpty())\n-\treturn;\n+    return;\n \n     if (!scripts) {\n \tscripts = new QAxScriptManager(this);\n \tscripts->addObject(this);\n     }\n \n-    QWidgetList widgets = workspace->windowList();\n-    QWidgetList::Iterator it(widgets.begin());\n-    while (it != widgets.end()) {\n-\tQAxBase *ax = (QAxBase*)(*it)->qt_metacast(\""QAxBase\"");\n-\t++it;\n-\tif (!ax)\n-\t    continue;\n-\tscripts->addObject(ax);\n+    foreach (QAxWidget *axWidget, axWidgets()) {\n+        QAxBase *ax = axWidget;\n+        scripts->addObject(ax);\n     }\n \n     QAxScript *script = scripts->load(file, file);\n@@ -348,7 +355,7 @@ void MainWindow::on_actionScriptingLoad_triggered()\n \n void MainWindow::updateGUI()\n {\n-    QAxWidget *container = qobject_cast<QAxWidget*>(workspace->activeWindow());\n+    QAxWidget *container = activeAxWidget();\n \n     bool hasControl = container && !container->isNull();\n     actionFileNew->setEnabled(true);\n@@ -367,14 +374,8 @@ void MainWindow::updateGUI()\n     if (dlgProperties)\n \tdlgProperties->setControl(hasControl ? container : 0);\n \n-    QWidgetList list = workspace->windowList();\n-    QWidgetList::Iterator it = list.begin();\n-    while (it != list.end()) {\n-\tQWidget *container = *it;\n-\n-\tQAxWidget *ax = qobject_cast<QAxWidget*>(container);\n-\tif (ax) {\n-\t    container->disconnect(SIGNAL(signal(QString,int,void*)));\n+    foreach (QAxWidget *container, axWidgets()) {\n+        container->disconnect(SIGNAL(signal(QString,int,void*)));\n \t    if (actionLogSignals->isChecked())\n \t\tconnect(container, SIGNAL(signal(QString,int,void*)), this, SLOT(logSignal(QString,int,void*)));\n \n@@ -387,15 +388,11 @@ void MainWindow::updateGUI()\n \t\tconnect(container, SIGNAL(propertyChanged(QString)), this, SLOT(logPropertyChanged(QString)));\n \t    container->blockSignals(actionFreezeEvents->isChecked());\n \t}\n-\n-\t++it;\n-    }\n }\n \n-\n void MainWindow::logPropertyChanged(const QString &prop)\n {\n-    QAxWidget *container = qobject_cast<QAxWidget*>(workspace->activeWindow());\n+    QAxWidget *container = activeAxWidget();\n     if (!container)\n         return;\n \n@@ -405,7 +402,7 @@ void MainWindow::logPropertyChanged(const QString &prop)\n \n void MainWindow::logSignal(const QString &signal, int argc, void *argv)\n {\n-    QAxWidget *container = qobject_cast<QAxWidget*>(workspace->activeWindow());\n+    QAxWidget *container = activeAxWidget();\n     if (!container)\n         return;\n \n"", ""mainwindow.h"": ""@@ -50,8 +50,8 @@ class InvokeMethod;\n class ChangeProperties;\n class AmbientProperties;\n class QAxScriptManager;\n-\n-class QWorkspace;\n+class QAxWidget;\n+class QMdiArea;\n \n QT_END_NAMESPACE\n \n@@ -85,11 +85,14 @@ protected slots:\n     void on_actionScriptingRun_triggered();\n \n private:\n+    QAxWidget *activeAxWidget() const;\n+    QList<QAxWidget *> axWidgets() const;\n+\n     InvokeMethod *dlgInvoke;\n     ChangeProperties *dlgProperties;\n     AmbientProperties *dlgAmbient;\n     QAxScriptManager *scripts;\n-    QWorkspace *workspace;\n+    QMdiArea *mdiArea;\n \n     QtMsgHandler oldDebugHandler;\n \n""}",test; refactor,"refactor,deprecate 
",test;
17594.0,17594.0,deprecat,Tobias Hunger,Remove dependency on Qt4ProjectManager,"Remove dependency on Qt4ProjectManager

Remove dependency on Qt4ProjectManager from QtSupport. It is not declared
and not necessary either.

Change-Id: I3b31425f23c37e995191fe8c28503cfac7c34c56",['src/plugins/qtsupport/qtoutputformatter.cpp'],"{""qtoutputformatter.cpp"": ""@@ -33,7 +33,7 @@\n #include \""qtoutputformatter.h\""\n \n #include <texteditor/basetexteditor.h>\n-#include <qt4projectmanager/qt4project.h>\n+#include <projectexplorer/project.h>\n #include <utils/qtcassert.h>\n \n #include <QFileInfo>\n""}",deprecat,"refactor, deprecate 
",deprecat;
11966.0,11966.0,resource;,Kai Köhne,Examples: Remove commented out 'plugins' list from .qmlproject files,"Examples: Remove commented out 'plugins' list from .qmlproject files

Change-Id: I24bacdd52f2f191dde8e0a2fa9718b38ab329597","['examples/tutorials/gettingStartedQml/parts/part1/qml-texteditor.qmlproject', 'examples/declarative/qtquick1/modelviews/parallax/parallax.qmlproject', 'examples/declarative/qtquick1/ui-components/ui-components.qmlproject', 'examples/declarative/qtquick1/threading/threadedlistmodel/threadedlistmodel.qmlproject', 'examples/declarative/qtquick1/modelviews/pathview/pathview.qmlproject', 'examples/declarative/qtquick1/touchinteraction/pincharea/pincharea.qmlproject', 'examples/declarative/qtquick1/xml/xml.qmlproject', 'examples/declarative/qtquick1/toys/tvtennis/tvtennis.qmlproject', 'examples/tutorials/gettingStartedQml/parts/part4/qml-texteditor4.qmlproject', 'examples/declarative/qtquick1/tutorials/samegame/samegame3/samegame3.qmlproject', 'examples/declarative/qtquick1/ui-components/searchbox/searchbox.qmlproject', 'examples/declarative/qtquick1/toys/tic-tac-toe/tic-tac-toe.qmlproject', 'examples/declarative/qtquick1/imageelements/imageelements.qmlproject', 'examples/declarative/qtquick1/cppextensions/imageprovider/imageprovider.qmlproject', 'examples/declarative/cppextensions/referenceexamples/referenceexamples.qmlproject', 'examples/declarative/tutorials/samegame/samegame1/samegame1.qmlproject', 'examples/declarative/ui-components/searchbox/searchbox.qmlproject', 'examples/tutorials/gettingStartedQml/parts/part3/qml-texteditor3.qmlproject', 'examples/declarative/qtquick1/cppextensions/plugins/plugins.qmlproject', 'examples/declarative/modelviews/objectlistmodel/objectlistmodel.qmlproject', 'examples/declarative/qtquick1/threading/workerscript/workerscript.qmlproject', 'examples/declarative/qtquick1/animation/animation.qmlproject', 'examples/declarative/qtquick1/ui-components/slideswitch/slideswitch.qmlproject', 'examples/declarative/qtquick1/threading/threading.qmlproject', 'examples/declarative/qtquick1/modelviews/modelviews.qmlproject', 'examples/declarative/rssnews/rssnews.qmlproject', 'examples/declarative/minehunt/minehunt.qmlproject', 'examples/declarative/qtquick1/ui-components/flipable/flipable.qmlproject', 'examples/declarative/righttoleft/layoutmirroring/layoutmirroring.qmlproject', 'examples/declarative/qtquick1/modelviews/package/package.qmlproject', 'examples/declarative/ui-components/tabwidget/tabwidget.qmlproject', 'examples/declarative/qtquick1/examples.qmlproject', 'examples/declarative/qtquick1/ui-components/tabwidget/tabwidget.qmlproject', 'examples/declarative/qtquick1/toys/dynamicscene/dynamicscene.qmlproject', 'examples/declarative/ui-components/scrollbar/scrollbar.qmlproject', 'examples/declarative/qtquick1/righttoleft/textalignment/textalignment.qmlproject', 'examples/declarative/qtquick1/tutorials/tutorials.qmlproject', 'examples/declarative/qtquick1/xml/xmlhttprequest/xmlhttprequest.qmlproject', 'examples/declarative/snake/snake.qmlproject', 'examples/declarative/qtquick1/tutorials/samegame/samegame2/samegame2.qmlproject', 'examples/declarative/qtquick1/keyinteraction/keyinteraction.qmlproject', 'examples/declarative/qtquick1/ui-components/progressbar/progressbar.qmlproject', 'examples/declarative/tutorials/samegame/samegame2/samegame2.qmlproject', 'examples/declarative/flickr/flickr.qmlproject', 'examples/declarative/qtquick1/modelviews/listview/listview.qmlproject', 'examples/declarative/cppextensions/networkaccessmanagerfactory/networkaccessmanagerfactory.qmlproject', 'examples/declarative/qtquick1/touchinteraction/mousearea/mousearea.qmlproject', 'examples/declarative/qtquick1/touchinteraction/gestures/gestures.qmlproject', 'examples/declarative/righttoleft/layoutdirection/layoutdirection.qmlproject', 'examples/declarative/photoviewer/photoviewer.qmlproject', 'examples/declarative/qtquick1/keyinteraction/focus/focus.qmlproject', 'examples/declarative/tutorials/tutorials.qmlproject', 'examples/declarative/twitter/twitter.qmlproject', 'examples/declarative/qtquick1/touchinteraction/touchinteraction.qmlproject', 'examples/declarative/qtquick1/tutorials/samegame/samegame1/samegame1.qmlproject', 'examples/declarative/qtquick1/righttoleft/layoutmirroring/layoutmirroring.qmlproject', 'examples/declarative/threading/workerscript/workerscript.qmlproject', 'examples/declarative/particles/plasmapatrol/PlasmaPatrol.qmlproject', 'examples/declarative/qtquick1/animation/states/states.qmlproject', 'examples/declarative/qtquick1/toys/corkboards/corkboards.qmlproject', 'examples/declarative/qtquick1/cppextensions/referenceexamples/referenceexamples.qmlproject', 'examples/declarative/cppextensions/plugins/plugins.qmlproject', 'examples/declarative/qtquick1/text/text.qmlproject', 'examples/declarative/draganddrop/dragtarget.qmlproject', 'examples/declarative/qtquick1/cppextensions/qgraphicslayouts/qgraphicslayouts.qmlproject', 'examples/declarative/tutorials/samegame/samegame3/samegame3.qmlproject', 'examples/declarative/qtquick1/cppextensions/qgraphicslayouts/layoutitem/layoutitem.qmlproject', 'examples/declarative/qtquick1/modelviews/visualitemmodel/visualitemmodel.qmlproject', 'examples/declarative/qtquick1/text/textselection/textselection.qmlproject', 'examples/declarative/qtquick1/ui-components/scrollbar/scrollbar.qmlproject', 'examples/declarative/modelviews/visualdatamodel/visualdatamodel.qmlproject', 'examples/declarative/qtquick1/toys/toys.qmlproject', 'examples/declarative/ui-components/spinner/spinner.qmlproject', 'examples/declarative/qtquick1/ui-components/spinner/spinner.qmlproject', 'examples/declarative/qtquick1/imageelements/borderimage/borderimage.qmlproject', 'examples/declarative/qtquick1/imageelements/image/image.qmlproject', 'examples/declarative/qtquick1/text/fonts/fonts.qmlproject', 'examples/declarative/qtquick1/ui-components/dialcontrol/dialcontrol.qmlproject', 'examples/declarative/qtquick1/i18n/i18n.qmlproject', 'examples/declarative/qtquick1/positioners/positioners.qmlproject', 'examples/declarative/cppextensions/imageprovider/imageprovider.qmlproject', 'examples/declarative/tutorials/samegame/samegame4/samegame4.qmlproject', 'examples/tutorials/gettingStartedQml/parts/part5/qml-texteditor5.qmlproject', 'examples/declarative/qtquick1/righttoleft/layoutdirection/layoutdirection.qmlproject', 'examples/declarative/qtquick1/modelviews/gridview/gridview.qmlproject', 'examples/declarative/qtquick1/screenorientation/screenorientation.qmlproject', 'examples/declarative/qtquick1/animation/easing/easing.qmlproject', 'examples/declarative/qtquick1/toys/clocks/clocks.qmlproject', 'examples/declarative/threading/threadedlistmodel/threadedlistmodel.qmlproject', 'examples/declarative/qtquick1/sqllocalstorage/sqllocalstorage.qmlproject', 'examples/tutorials/gettingStartedQml/parts/part2/qml-texteditor2.qmlproject', 'examples/declarative/qtquick1/animation/behaviors/behaviors.qmlproject', 'examples/declarative/righttoleft/textalignment/textalignment.qmlproject', 'examples/declarative/qtquick1/cppextensions/qwidgets/qwidgets.qmlproject', 'examples/declarative/qtquick1/tutorials/samegame/samegame4/samegame4.qmlproject', 'examples/declarative/samegame/samegame.qmlproject', 'examples/declarative/qtquick1/modelviews/objectlistmodel/objectlistmodel.qmlproject', 'examples/declarative/qtquick1/cppextensions/networkaccessmanagerfactory/networkaccessmanagerfactory.qmlproject', 'examples/declarative/qtquick1/animation/basics/basics.qmlproject']","{""imageprovider.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""networkaccessmanagerfactory.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""plugins.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""referenceexamples.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""dragtarget.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""flickr.qmlproject"": ""@@ -14,6 +14,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""minehunt.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""objectlistmodel.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""visualdatamodel.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""PlasmaPatrol.qmlproject"": ""@@ -1,5 +1,3 @@\n-/* File generated by QtCreator */\n-\n import QmlProject 1.1\n \n Project {\n@@ -18,7 +16,4 @@ Project {\n     Files {\n         paths: [\""TODO\""]\n     }\n-\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \""../exampleplugin\"" ]\n }\n"", ""photoviewer.qmlproject"": ""@@ -17,7 +17,4 @@ Project {\n         filter: \""*.ts\""\n         directory: \""i18n\""\n     }\n-\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""animation.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""basics.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""behaviors.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""easing.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""states.qmlproject"": ""@@ -14,6 +14,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""layoutitem.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""qgraphicslayouts.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""qwidgets.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""examples.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""i18n.qmlproject"": ""@@ -17,7 +17,4 @@ Project {\n         filter: \""*.ts\""\n         directory: \""i18n\""\n     }\n-\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""borderimage.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""image.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""imageelements.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""focus.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""keyinteraction.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""gridview.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""listview.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""modelviews.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""package.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""parallax.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""pathview.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""visualitemmodel.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""positioners.qmlproject"": ""@@ -1,5 +1,3 @@\n-/* File generated by QtCreator */\n-\n import QmlProject 1.0\n \n Project {\n@@ -13,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""layoutdirection.qmlproject"": ""@@ -1,5 +1,3 @@\n-/* File generated by QtCreator */\n-\n import QmlProject 1.1\n \n Project {\n@@ -15,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""layoutmirroring.qmlproject"": ""@@ -1,5 +1,3 @@\n-/* File generated by QtCreator */\n-\n import QmlProject 1.1\n \n Project {\n@@ -15,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""textalignment.qmlproject"": ""@@ -1,5 +1,3 @@\n-/* File generated by QtCreator */\n-\n import QmlProject 1.1\n \n Project {\n@@ -15,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""screenorientation.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""sqllocalstorage.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""fonts.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""text.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""textselection.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""threadedlistmodel.qmlproject"": ""@@ -53,6 +53,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""threading.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""workerscript.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""gestures.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""mousearea.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""pincharea.qmlproject"": ""@@ -1,5 +1,3 @@\n-/* File generated by QtCreator */\n-\n import QmlProject 1.1\n \n Project {\n@@ -15,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""touchinteraction.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""clocks.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""corkboards.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""dynamicscene.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""tic-tac-toe.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""toys.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""tvtennis.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""samegame1.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""samegame2.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""samegame3.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""samegame4.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""tutorials.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""dialcontrol.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""flipable.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""progressbar.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""scrollbar.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""searchbox.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""slideswitch.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""spinner.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""tabwidget.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""ui-components.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""xml.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""xmlhttprequest.qmlproject"": ""@@ -16,7 +16,4 @@ Project {\n     Files {\n         paths: [\""data.xml\""]\n     }\n-\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""rssnews.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""samegame.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""snake.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""twitter.qmlproject"": ""@@ -13,6 +13,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""qml-texteditor.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""qml-texteditor2.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""qml-texteditor3.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""qml-texteditor4.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    // importPaths: [ \"" ../exampleplugin \"" ]\n }\n"", ""qml-texteditor5.qmlproject"": ""@@ -11,6 +11,4 @@ Project {\n     ImageFiles {\n         directory: \"".\""\n     }\n-    /* List of plugin directories passed to QML runtime */\n-    importPaths: [ \"" ./plugins \"" ]\n }\n""}",resource;,"Categories: resource
",deprecat;resource;
24245.0,24245.0,refactor,Thiago Macieira,Optimise use of QUrl now that QUrl::toString() is permitted,"Optimise use of QUrl now that QUrl::toString() is permitted

Change-Id: Iea86229c986a5bb1c45c8b65dc04fd367bfcf6f6",['src/gallery/tracker/qgallerytrackerschema.cpp'],"{""qgallerytrackerschema.cpp"": ""@@ -535,14 +535,14 @@ static bool qt_writeCondition(\n \n static QString qt_encodedFilePathUrl(const QString &filePath)\n {\n-    QString encodedUrl = QString::fromUtf8(QUrl::fromLocalFile(filePath).toEncoded());\n+    QString encodedUrl = QUrl::fromLocalFile(filePath).toString(QUrl::FullyEncoded);\n     encodedUrl.replace(QLatin1Char('\\''), QLatin1String(\""\\\\\\'\""));\n     return encodedUrl;\n }\n \n static QString qt_encodedFilePathFragment(const QString &fragment)\n {\n-    QString encodedFragment = QString::fromUtf8(QUrl(fragment).toEncoded());\n+    QString encodedFragment = QUrl(fragment).toString(QUrl::FullyEncoded);\n     encodedFragment.replace(QLatin1Char('\\''), QLatin1String(\""\\\\\\'\""));\n     return encodedFragment;\n }\n""}",refactor,"refactor 
",others;
5599.0,5599.0,resource,Friedemann Kleint,"L10n: First German translation for 2.4 except QtTest, purged.","L10n: First German translation for 2.4 except QtTest, purged.

Change-Id: I4351643ae55dd15a48021d35792f07e040f1c721",['share/qtcreator/translations/qtcreator_de.ts'],,resource,"resource 
",resource;test;
21060.0,21060.0,"feature,bug",Thiago Macieira,QUrl: Always lowercase the scheme,"QUrl: Always lowercase the scheme

Change-Id: I8d467014d22384f1be15fdd746e20b1153a82a4e",['src/corelib/io/qurl.cpp'],"{""qurl.cpp"": ""@@ -497,6 +497,7 @@ bool QUrlPrivate::setScheme(const QString &value, int len, bool decoded)\n     //    scheme        = ALPHA *( ALPHA / DIGIT / \""+\"" / \""-\"" / \"".\"" )\n     // but we need to decode any percent-encoding sequences that fall on\n     // those characters\n+    // we also lowercase the scheme\n \n     scheme.clear();\n     sectionIsPresent |= Scheme;\n@@ -505,12 +506,15 @@ bool QUrlPrivate::setScheme(const QString &value, int len, bool decoded)\n         return false;\n \n     // validate it:\n+    int needsLowercasing = -1;\n     const ushort *p = reinterpret_cast<const ushort *>(value.constData());\n     for (int i = 0; i < len; ++i) {\n         if (p[i] >= 'a' && p[i] <= 'z')\n             continue;\n-        if (p[i] >= 'A' && p[i] <= 'Z')\n+        if (p[i] >= 'A' && p[i] <= 'Z') {\n+            needsLowercasing = i;\n             continue;\n+        }\n         if (p[i] >= '0' && p[i] <= '9' && i > 0)\n             continue;\n         if (p[i] == '+' || p[i] == '-' || p[i] == '.')\n@@ -534,6 +538,15 @@ bool QUrlPrivate::setScheme(const QString &value, int len, bool decoded)\n \n     scheme = value.left(len);\n     sectionHasError &= ~Scheme;\n+\n+    if (needsLowercasing != -1) {\n+        // schemes are ASCII only, so we don't need the full Unicode toLower\n+        for (int i = needsLowercasing; i >= 0; --i) {\n+            register ushort c = scheme.at(i).unicode();\n+            if (c >= 'A' && c <= 'Z')\n+                scheme[i] = c + 0x20;\n+        }\n+    }\n     return true;\n }\n \n@@ -2265,7 +2278,7 @@ bool QUrl::isLocalFile() const\n {\n     if (!d) return false;\n \n-    if (d->scheme.compare(fileScheme(), Qt::CaseInsensitive) != 0)\n+    if (d->scheme != fileScheme())\n         return false;   // not file\n     return true;\n }\n""}","feature,bug","bug, refactor 
",others;
22224.0,22224.0,resource,Mark Brand,add change log entry for QTBUG-23895,"add change log entry for QTBUG-23895

Change-Id: Ib44a274148631fe96e13b8fe29436b556c14d34d",['dist/changes-5.0.0'],"{""changes-5.0.0"": ""@@ -470,6 +470,11 @@ side effect of submitting the cached row when invoked on a different row.\n *                          Database Drivers                                *\n ****************************************************************************\n \n+sqlite\n+------\n+QVariant::Bool type now mapped to integers 0/1 in SQL instead of strings\n+'true' and 'false'. Sqlite does not have a boolean column type and it is\n+customary to use integer. QTBUG-23895\n \n ****************************************************************************\n *                      Platform Specific Changes                           *\n""}",resource,"resource 
",bug;resource;
12527.0,12527.0,bug,Laszlo Agocs (DO NOT ADD TO REVIEWS),Remove logging of key presses in qwindow-compositor.,"Remove logging of key presses in qwindow-compositor.

Change-Id: I505b262687bb32853a69c4dccb79a05f68b1dced",['examples/qwindow-compositor/qwindowcompositor.cpp'],"{""qwindowcompositor.cpp"": ""@@ -98,7 +98,8 @@ WaylandSurface *QWindowCompositor::surfaceAt(const QPoint &point, QPoint *local)\n     return 0;\n }\n \n-GLuint QWindowCompositor::composeSurface(WaylandSurface *surface) {\n+GLuint QWindowCompositor::composeSurface(WaylandSurface *surface)\n+{\n     GLuint texture = 0;\n \n     glBindFramebuffer(GL_FRAMEBUFFER, m_surface_fbo);\n@@ -226,7 +227,6 @@ bool QWindowCompositor::eventFilter(QObject *obj, QEvent *event)\n     }\n     case QEvent::KeyPress: {\n         QKeyEvent *ke = static_cast<QKeyEvent *>(event);\n-        qDebug() << ke->key();\n         if (ke->key() == Qt::Key_Meta || ke->key() == Qt::Key_Super_L) {\n             m_dragKeyIsPressed = true;\n         }\n""}",bug,"bug 
",deprecat;
13356.0,13356.0,test,Jason McDonald,Change QSKIP to fail for outdated tests.,"Change QSKIP to fail for outdated tests.

Be more insistent that tests using the old two-argument version of QSKIP
should be updated.  After a grace period the warning will be removed and
incorrect usage of QSKIP will revert to a compilation failure.

Change-Id: Ifa19b856d9f45738bd9d790bb65a8741f965d0f4",['src/testlib/qtestcase.h'],"{""qtestcase.h"": ""@@ -128,8 +128,8 @@ do {\\\n #define QSKIP(statement, ...) \\\n do {\\\n     if (strcmp(#__VA_ARGS__, \""\"") != 0)\\\n-        QTest::qWarn(\""The two argument version of QSKIP is deprecated and will be removed soon. \""\\\n-                     \""Please update this test by removing the second parameter.\"", __FILE__, __LINE__);\\\n+        QTest::qFail(\""The two argument version of QSKIP is no longer available. \""\\\n+                     \""Please update this test by removing the second argument in each QSKIP.\"", __FILE__, __LINE__);\\\n     QTest::qSkip(statement, __FILE__, __LINE__);\\\n     return;\\\n } while (0)\n""}",test,"test 
",deprecat;test;
8716.0,8716.0,refactor,Hugues Delorme,Bazaar: whitespace and indentation fixes,"Bazaar: whitespace and indentation fixes

Change-Id: I31258a10bd79a047f25787d38c070b0c95ed9f78","['src/plugins/bazaar/clonewizardpage.h', 'src/plugins/bazaar/annotationhighlighter.h', 'src/plugins/bazaar/bazaarsettings.cpp', 'src/plugins/bazaar/optionspage.cpp', 'src/plugins/bazaar/bazaarclient.h', 'src/plugins/bazaar/clonewizard.h', 'src/plugins/bazaar/commiteditor.cpp', 'src/plugins/bazaar/pullorpushdialog.h', 'src/plugins/bazaar/pullorpushdialog.cpp', 'src/plugins/bazaar/branchinfo.cpp', 'src/plugins/bazaar/bazaarcontrol.h', 'src/plugins/bazaar/bazaarplugin.h', 'src/plugins/bazaar/clonewizard.cpp', 'src/plugins/bazaar/bazaareditor.cpp', 'src/plugins/bazaar/commiteditor.h', 'src/plugins/bazaar/bazaarcontrol.cpp', 'src/plugins/bazaar/cloneoptionspanel.cpp', 'src/plugins/bazaar/bazaarclient.cpp', 'src/plugins/bazaar/bazaarplugin.cpp']","{""annotationhighlighter.h"": ""@@ -50,6 +50,7 @@ private:\n     QRegExp m_changeset;\n };\n \n-} //namespace Internal\n-}// namespace Bazaar\n+} // namespace Internal\n+} // namespace Bazaar\n+\n #endif // ANNOTATIONHIGHLIGHTER_H\n"", ""bazaarclient.cpp"": ""@@ -231,7 +231,7 @@ public:\n         const QStringList formatArguments = VCSBaseEditorParameterWidget::arguments();\n         if (!formatArguments.isEmpty()) {\n             const QString a = QLatin1String(\""--diff-options=\"")\n-                              + formatArguments.join(QString(QLatin1Char(' ')));\n+                    + formatArguments.join(QString(QLatin1Char(' ')));\n             args.append(a);\n         }\n         return args;\n@@ -248,7 +248,7 @@ private:\n };\n \n VCSBase::VCSBaseEditorParameterWidget *BazaarClient::createDiffEditor(\n-    const QString &workingDir, const QStringList &files, const QStringList &extraOptions)\n+        const QString &workingDir, const QStringList &files, const QStringList &extraOptions)\n {\n     const BazaarCommandParameters parameters(workingDir, files, extraOptions);\n     return new BazaarDiffParameterWidget(this, parameters);\n@@ -292,13 +292,13 @@ private:\n };\n \n VCSBase::VCSBaseEditorParameterWidget *BazaarClient::createLogEditor(\n-    const QString &workingDir, const QStringList &files, const QStringList &extraOptions)\n+        const QString &workingDir, const QStringList &files, const QStringList &extraOptions)\n {\n     const BazaarCommandParameters parameters(workingDir, files, extraOptions);\n     return new BazaarLogParameterWidget(this, parameters);\n }\n \n-} //namespace Internal\n+} // namespace Internal\n } // namespace Bazaar\n \n #include \""bazaarclient.moc\""\n"", ""bazaarclient.h"": ""@@ -77,7 +77,7 @@ private:\n     friend class CloneWizard;\n };\n \n-} //namespace Internal\n+} // namespace Internal\n } // namespace Bazaar\n \n #endif // BAZAARCLIENT_H\n"", ""bazaarcontrol.cpp"": ""@@ -44,7 +44,7 @@\n using namespace Bazaar::Internal;\n \n BazaarControl::BazaarControl(BazaarClient *client)\n-    :   m_bazaarClient(client)\n+    : m_bazaarClient(client)\n {\n }\n \n@@ -120,8 +120,8 @@ bool BazaarControl::vcsMove(const QString &from, const QString &to)\n     const QFileInfo fromInfo(from);\n     const QFileInfo toInfo(to);\n     return m_bazaarClient->synchronousMove(fromInfo.absolutePath(),\n-                                         fromInfo.absoluteFilePath(),\n-                                         toInfo.absoluteFilePath());\n+                                           fromInfo.absoluteFilePath(),\n+                                           toInfo.absoluteFilePath());\n }\n \n bool BazaarControl::vcsCreateRepository(const QString &directory)\n"", ""bazaarcontrol.h"": ""@@ -83,7 +83,7 @@ private:\n     BazaarClient *m_bazaarClient;\n };\n \n-} //namespace Internal\n-} //namespace Bazaar\n+} // namespace Internal\n+} // namespace Bazaar\n \n #endif // BAZAARCONTROL_H\n"", ""bazaareditor.cpp"": ""@@ -48,7 +48,7 @@\n #include <QtCore/QFileInfo>\n #include <QtCore/QDebug>\n \n-# define BZR_CHANGE_PATTERN \""[0-9]+\""\n+#define BZR_CHANGE_PATTERN \""[0-9]+\""\n \n using namespace Bazaar::Internal;\n using namespace Bazaar;\n"", ""bazaarplugin.cpp"": ""@@ -120,16 +120,16 @@ static const VCSBase::VCSBaseSubmitEditorParameters submitEditorParameters = {\n \n BazaarPlugin *BazaarPlugin::m_instance = 0;\n \n-BazaarPlugin::BazaarPlugin() :\n-    VCSBase::VCSBasePlugin(QLatin1String(Constants::COMMIT_ID)),\n-    m_optionsPage(0),\n-    m_client(0),\n-    m_core(0),\n-    m_commandLocator(0),\n-    m_changeLog(0),\n-    m_addAction(0),\n-    m_deleteAction(0),\n-    m_menuAction(0)\n+BazaarPlugin::BazaarPlugin()\n+    : VCSBase::VCSBasePlugin(QLatin1String(Constants::COMMIT_ID)),\n+      m_optionsPage(0),\n+      m_client(0),\n+      m_core(0),\n+      m_commandLocator(0),\n+      m_changeLog(0),\n+      m_addAction(0),\n+      m_deleteAction(0),\n+      m_menuAction(0)\n {\n     m_instance = this;\n }\n"", ""bazaarplugin.h"": ""@@ -68,7 +68,7 @@ class VCSBaseSubmitEditor;\n }\n \n namespace Locator {\n-    class CommandLocator;\n+class CommandLocator;\n }\n \n namespace Bazaar {\n@@ -166,7 +166,7 @@ private:\n     QString m_submitRepository;\n };\n \n-} //namespace Internal\n-} //namespace Bazaar\n+} // namespace Internal\n+} // namespace Bazaar\n \n #endif // BAZAARPLUGIN_H\n"", ""bazaarsettings.cpp"": ""@@ -60,8 +60,8 @@ BazaarSettings::BazaarSettings()\n \n bool BazaarSettings::sameUserId(const BazaarSettings &other) const\n {\n-    return stringValue(userNameKey) == other.stringValue(userNameKey) &&\n-            stringValue(userEmailKey) == other.stringValue(userEmailKey);\n+    return stringValue(userNameKey) == other.stringValue(userNameKey)\n+            && stringValue(userEmailKey) == other.stringValue(userEmailKey);\n }\n \n } // namespace Internal\n"", ""branchinfo.cpp"": ""@@ -35,11 +35,11 @@\n namespace Bazaar {\n namespace Internal {\n \n-BranchInfo::BranchInfo(const QString &branchLoc, bool isBound) :\n-    branchLocation(branchLoc),\n-    isBoundToBranch(isBound)\n+BranchInfo::BranchInfo(const QString &branchLoc, bool isBound)\n+    : branchLocation(branchLoc),\n+      isBoundToBranch(isBound)\n {\n }\n \n-} //namespace Internal\n+} // namespace Internal\n } // namespace Bazaar\n"", ""cloneoptionspanel.cpp"": ""@@ -38,9 +38,9 @@\n namespace Bazaar {\n namespace Internal {\n \n-CloneOptionsPanel::CloneOptionsPanel(QWidget *parent) :\n-    QWidget(parent),\n-    m_ui(new Ui::CloneOptionsPanel)\n+CloneOptionsPanel::CloneOptionsPanel(QWidget *parent)\n+    : QWidget(parent),\n+      m_ui(new Ui::CloneOptionsPanel)\n {\n     m_ui->setupUi(this);\n }\n"", ""clonewizard.cpp"": ""@@ -47,8 +47,8 @@\n using namespace Bazaar::Internal;\n \n CloneWizard::CloneWizard(QObject *parent)\n-        :   VCSBase::BaseCheckoutWizard(parent),\n-        m_icon(QIcon(QLatin1String(\"":/bazaar/images/bazaar.png\"")))\n+    : VCSBase::BaseCheckoutWizard(parent),\n+      m_icon(QIcon(QLatin1String(\"":/bazaar/images/bazaar.png\"")))\n {\n     setId(QLatin1String(VCSBase::Constants::VCS_ID_BAZAAR));\n }\n"", ""clonewizard.h"": ""@@ -60,7 +60,7 @@ private:\n     const QIcon m_icon;\n };\n \n-} //namespace Internal\n-} //namespace Bazaar\n+} // namespace Internal\n+} // namespace Bazaar\n \n #endif // CLONEWIZARD_H\n"", ""clonewizardpage.h"": ""@@ -42,16 +42,19 @@ class CloneOptionsPanel;\n class CloneWizardPage : public VCSBase::BaseCheckoutWizardPage\n {\n     Q_OBJECT\n+\n public:\n     CloneWizardPage(QWidget *parent = 0);\n     const CloneOptionsPanel *cloneOptionsPanel() const;\n+\n protected:\n     QString directoryFromRepository(const QString &repository) const;\n+\n private:\n     CloneOptionsPanel *m_optionsPanel;\n };\n \n-} //namespace Internal\n-} //namespace Bazaar\n+} // namespace Internal\n+} // namespace Bazaar\n \n #endif // CLONEWIZARDPAGE_H\n"", ""commiteditor.cpp"": ""@@ -43,8 +43,8 @@\n using namespace Bazaar::Internal;\n \n CommitEditor::CommitEditor(const VCSBase::VCSBaseSubmitEditorParameters *parameters, QWidget *parent)\n-        : VCSBase::VCSBaseSubmitEditor(parameters, new BazaarCommitWidget(parent)),\n-        m_fileModel(0)\n+    : VCSBase::VCSBaseSubmitEditor(parameters, new BazaarCommitWidget(parent)),\n+      m_fileModel(0)\n {\n     setDisplayName(tr(\""Commit Editor\""));\n }\n"", ""commiteditor.h"": ""@@ -67,4 +67,5 @@ private:\n \n }\n }\n+\n #endif // COMMITEDITOR_H\n"", ""optionspage.cpp"": ""@@ -44,8 +44,8 @@\n using namespace Bazaar::Internal;\n using namespace Bazaar;\n \n-OptionsPageWidget::OptionsPageWidget(QWidget *parent) :\n-    QWidget(parent)\n+OptionsPageWidget::OptionsPageWidget(QWidget *parent)\n+    : QWidget(parent)\n {\n     m_ui.setupUi(this);\n     m_ui.commandChooser->setExpectedKind(Utils::PathChooser::ExistingCommand);\n"", ""pullorpushdialog.cpp"": ""@@ -36,10 +36,10 @@\n \n using namespace Bazaar::Internal;\n \n-PullOrPushDialog::PullOrPushDialog(Mode mode, QWidget *parent) :\n-    QDialog(parent),\n-    m_mode(mode),\n-    m_ui(new Ui::PullOrPushDialog)\n+PullOrPushDialog::PullOrPushDialog(Mode mode, QWidget *parent)\n+    : QDialog(parent),\n+      m_mode(mode),\n+      m_ui(new Ui::PullOrPushDialog)\n {\n     m_ui->setupUi(this);\n     m_ui->localPathChooser->setExpectedKind(Utils::PathChooser::Directory);\n"", ""pullorpushdialog.h"": ""@@ -60,8 +60,10 @@ public:\n     bool isRememberOptionEnabled() const;\n     bool isOverwriteOptionEnabled() const;\n     QString revision() const;\n+\n     // Pull-specific options\n     bool isLocalOptionEnabled() const;\n+\n     // Push-specific options\n     bool isUseExistingDirectoryOptionEnabled() const;\n     bool isCreatePrefixOptionEnabled() const;\n""}",refactor,"refactor
",bug;
20785.0,20785.0,resource ,Marius Storm-Olsen,Only add dependency to qtactiveqt if it's available,"Only add dependency to qtactiveqt if it's available

Don't need to be platform specific about it.

Change-Id: I3ca981ec03b977961afaa18f09cde10b8b99c64e",['qt.pro'],"{""qt.pro"": ""@@ -43,7 +43,6 @@ module_qtwebkit_examples_and_demos.depends = module_qtwebkit\n module_qttools.subdir = $$IN_PWD/qttools\n module_qttools.target = module-qttools\n module_qttools.depends = module_qtbase module_qtscript module_qtquick1 module_qtdeclarative\n-win32:module_qttools.depends += module_qtactiveqt\n \n module_qttranslations.subdir = $$IN_PWD/qttranslations\n module_qttranslations.target = module-qttranslations\n@@ -147,7 +146,10 @@ exists(qtdoc/qtdoc.pro): SUBDIRS += module_qtdoc\n exists(qlalr/qlalr.pro): SUBDIRS += module_qlalr\n exists(qtqa/qtqa.pro): SUBDIRS += module_qtqa\n exists(qtlocation/qtlocation.pro): SUBDIRS += module_qtlocation\n-exists(qtactiveqt/qtactiveqt.pro): SUBDIRS += module_qtactiveqt\n+exists(qtactiveqt/qtactiveqt.pro) {\n+    SUBDIRS += module_qtactiveqt\n+    module_qttools.depends += module_qtactiveqt\n+}\n exists(qtsensors/qtsensors.pro): SUBDIRS += module_qtsensors\n exists(qtsystems/qtsystems.pro): SUBDIRS += module_qtsystems\n exists(qtmultimedia/qtmultimedia.pro): SUBDIRS += module_qtmultimedia\n""}",resource,"refactor 
",resource;
11141.0,11141.0,bug,Oswald Buddenhagen,Work around MinGW GCC version >=4.5 always_inline+dllexport bug.,"Work around MinGW GCC version >=4.5 always_inline+dllexport bug.

Use regular inline instead of always_inline for MinGW GCC build. GCC 4.5
and later spit out an error on always_inline dllexport functions, which
breaks the build for these versions of GCC (see bug 5938).

Change-Id: I444380ff98071b4653a91d074494ace579b4a622
Reviewed-by: Oswald Buddenhagen <oswald.buddenhagen@nokia.com>
(cherry picked from commit 310b446a81dd927739e503b03389641f1aa13ab4)",['src/linguist/shared/profileparser.h'],"{""profileparser.h"": ""@@ -52,7 +52,8 @@\n #endif\n \n // Be fast even for debug builds\n-#ifdef __GNUC__\n+// MinGW GCC 4.5+ has a problem with always_inline putTok and putBlockLen\n+#if defined(__GNUC__) && !(defined(__MINGW32__) && __GNUC__ == 4 && __GNUC_MINOR__ >= 5)\n # define ALWAYS_INLINE inline __attribute__((always_inline))\n #elif defined(_MSC_VER)\n # define ALWAYS_INLINE __forceinline\n""}",bug,"bug 
",bug;
7521.0,7521.0,feature;test ,Peng Wu,Add attendee detail to organizer c++ API,"Add attendee details and annivesary tag C++ features for birthday use case

1, Add attendee details c++ API and Jsondb backend implementation
2, Add annivesary tag constant string for birthday use case
3, Add c++ unit test cases
4, QML API is on going
5, Changed some constant static strings' definition

Change-Id: Ibc77fa930b4999b302d24c9f1a748279a4ab8e2c","['src/plugins/organizer/jsondb/qorganizerjsondbconverter.h', 'src/organizer/items/qorganizerevent.h', 'tests/auto/qorganizermanager/tst_qorganizermanager.cpp', 'src/plugins/organizer/jsondb/qorganizerjsondbstring_p.h', 'src/organizer/details/qorganizeritemtag.h', 'src/organizer/details/qorganizeritemdetails.h', 'src/plugins/organizer/jsondb/qorganizerjsondbconverter.cpp', 'src/plugins/organizer/jsondb/qorganizerjsondbstring.cpp', 'tests/auto/qorganizeritemdetails/tst_qorganizeritemdetails.cpp', 'src/organizer/details/details.pri', 'src/organizer/details/qorganizeritemdetails.cpp', 'src/organizer/details/qorganizereventattendee.h']","{""details.pri"": ""@@ -22,6 +22,8 @@ PUBLIC_HEADERS += \\\n     details/qorganizerjournaltime.h \\\n     details/qorganizertodoprogress.h \\\n     details/qorganizertodotime.h \\\n-    details/qorganizeritemextendeddetail.h\n+    details/qorganizeritemextendeddetail.h \\\n+    details/qorganizereventattendee.h\n \n SOURCES += details/qorganizeritemdetails.cpp\n+\n"", ""qorganizereventattendee.h"": ""@@ -0,0 +1,104 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the Qt Mobility Components.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** No Commercial Usage\n+** This file contains pre-release code and may not be distributed.\n+** You may use this file in accordance with the terms and conditions\n+** contained in the Technology Preview License Agreement accompanying\n+** this package.\n+**\n+** GNU Lesser General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU Lesser\n+** General Public License version 2.1 as published by the Free Software\n+** Foundation and appearing in the file LICENSE.LGPL included in the\n+** packaging of this file.  Please review the following information to\n+** ensure the GNU Lesser General Public License version 2.1 requirements\n+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights.  These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** If you have questions regarding the use of this file, please contact\n+** Nokia at qt-info@nokia.com.\n+**\n+**\n+**\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#ifndef QORGANIZEREVENTATTENDEE_H\n+#define QORGANIZEREVENTATTENDEE_H\n+\n+#include <QString>\n+\n+#include \""qorganizerglobal.h\""\n+#include \""qorganizeritemdetail.h\""\n+#include \""qorganizeritemfilter.h\""\n+\n+QTORGANIZER_BEGIN_NAMESPACE\n+\n+/* Leaf class */\n+class Q_ORGANIZER_EXPORT QOrganizerEventAttendee : public QOrganizerItemDetail\n+{\n+public:\n+    Q_DECLARE_CUSTOM_ORGANIZER_DETAIL(QOrganizerEventAttendee, \""Attendee\"")\n+    const static QString FieldName;\n+    const static QString FieldEmailAddress;\n+    const static QString FieldContactId;\n+    const static QString FieldParticipationStatus;\n+    const static QString FieldParticipationRole;\n+\n+    enum ParticipationStatus {\n+        StatusUnknown = 0,\n+        StatusAccepted,\n+        StatusDeclined,\n+        StatusTentative,\n+        StatusDelegated,\n+        StatusInProcess,\n+        StatusCompleted\n+    };\n+\n+    enum ParticipationRole {\n+        RoleUnknown = 0,\n+        RoleOrganizer,\n+        RoleChairperson,\n+        RoleHost,\n+        RoleRequiredParticipant,\n+        RoleParticipant,\n+        RoleNonParticipant\n+    };\n+\n+    void setName(const QString& name);\n+    QString name() const;\n+\n+    void setEmailAddress(const QString& emailAddress);\n+    QString emailAddress() const;\n+\n+    void setParticipationStatus(ParticipationStatus status);\n+    ParticipationStatus participationStatus() const;\n+\n+    void setParticipationRole(ParticipationRole role);\n+    ParticipationRole participationRole() const;\n+\n+    void setContactId(const QString& contactId);\n+    QString contactId() const;\n+};\n+\n+QTORGANIZER_END_NAMESPACE\n+\n+#endif\n+\n+\n"", ""qorganizeritemdetails.cpp"": ""@@ -137,6 +137,182 @@ QString QOrganizerItemDisplayLabel::label() const\n  */\n const QString QOrganizerItemDisplayLabel::DefinitionName(QStringLiteral(\""DisplayLabel\""));\n \n+\n+/* ==================== QOrganizerEventAttendee ======================= */\n+/*!\n+    \\class QOrganizerEventAttendee\n+    \\brief The QOrganizerEventAttendee class contains information about an attendee of an event\n+    \\inmodule QtOrganizer\n+    \\ingroup organizer-details\n+\n+    Attendee details contain information such as the display label (name) of an attendee, their\n+    role in the event, and their participation status.\n+\n+ */\n+\n+/*!\n+    \\variable QOrganizerEventAttendee::DefinitionName\n+    The constant string which identifies the definition of details which are long descriptions.\n+ */\n+const QString QOrganizerEventAttendee::DefinitionName(QStringLiteral(\""Attendee\""));\n+\n+/*!\n+    \\variable QOrganizerEventAttendee::FieldName\n+\n+    The constant key for which the name (or title or other label) of the attendee is stored in\n+    details of the QOrganizerEventAttendee type.\n+ */\n+const QString QOrganizerEventAttendee::FieldName(QStringLiteral(\""Name\""));\n+\n+/*!\n+    \\variable QOrganizerEventAttendee::FieldEmailAddress\n+\n+    The constant key for which the email address of the attendee is stored in\n+    details of the QOrganizerEventAttendee type.\n+ */\n+const QString QOrganizerEventAttendee::FieldEmailAddress(QStringLiteral(\""EmailAddress\""));\n+\n+/*!\n+    \\variable QOrganizerEventAttendee::FieldContactId\n+    \\preliminary\n+\n+    The constant key for which the string which identifies the attendee is stored in\n+    details of the QOrganizerEventAttendee type.  It contains a free-form string which\n+    may be a serialized contact id, vCard UID, or other platform-specific identifier.\n+\n+    This field is under discussion and subject to change.\n+ */\n+// XXX TODO: review and finalise this constant.  Is it really needed?\n+const QString QOrganizerEventAttendee::FieldContactId(QStringLiteral(\""ContactId\""));\n+\n+/*!\n+    \\variable QOrganizerEventAttendee::FieldParticipationStatus\n+\n+    The constant key for which the participation status of the attendee is stored in\n+    details of the QOrganizerEventAttendee type.\n+ */\n+const QString QOrganizerEventAttendee::FieldParticipationStatus(QStringLiteral(\""ParticipationStatus\""));\n+\n+/*!\n+    \\variable QOrganizerEventAttendee::FieldParticipationRole\n+\n+    The constant key for which the participation role of the attendee is stored in\n+    details of the QOrganizerEventAttendee type.\n+ */\n+const QString QOrganizerEventAttendee::FieldParticipationRole(QStringLiteral(\""ParticipationRole\""));\n+\n+/*!\n+    \\enum QOrganizerEventAttendee::ParticipationStatus\n+    \\value StatusUnknown The status of the attendee is unknown or they have yet to respond\n+    \\value StatusAccepted The attendee has responded that they will be attending the event\n+    \\value StatusDeclined The attendee has responded that they will not be attending the event\n+    \\value StatusTentative The attendee has responded that they may be attending the event\n+    \\value StatusDelegated The attendee has delegated attendance at the event to another person\n+    \\value StatusInProcess The attendee is currently attending the event\n+    \\value StatusCompleted The attendee attended the event\n+*/\n+\n+/*!\n+    \\enum QOrganizerEventAttendee::ParticipationRole\n+    \\value RoleUnknown The role of the attendee is unknown or they have yet to respond\n+    \\value RoleOrganizer The attendee is the organizer of the event\n+    \\value RoleChairperson The attendee is the chairperson of the event\n+    \\value RoleHost The attendee is the host of the event\n+    \\value RoleRequiredParticipant The attendee is a required participant of the event\n+    \\value RoleParticipant The attendee is an optional participant of the event\n+    \\value RoleNonParticipant The attendee is not participating in the event (value included for informational purposes only, as per iCalendar specification)\n+*/\n+\n+/*!\n+    \\fn QOrganizerEventAttendee::setName(const QString& name)\n+    Sets the name (or title or other label) of the attendee to \\a name.\n+ */\n+void QOrganizerEventAttendee::setName(const QString& name)\n+{\n+    setValue(FieldName, name);\n+}\n+/*!\n+    \\fn QOrganizerEventAttendee::name() const\n+    Returns the name (or title or other label) of the attendee.\n+ */\n+QString QOrganizerEventAttendee::name() const\n+{\n+    return value<QString>(FieldName);\n+}\n+\n+/*!\n+    \\fn QOrganizerEventAttendee::setEmailAddress(const QString& emailAddress)\n+    Sets the email address of the attendee to \\a emailAddress.\n+ */\n+void QOrganizerEventAttendee::setEmailAddress(const QString& emailAddress)\n+{\n+    setValue(FieldEmailAddress, emailAddress);\n+}\n+\n+/*!\n+    \\fn QOrganizerEventAttendee::emailAddress() const\n+    Returns the email address of the attendee.\n+ */\n+QString QOrganizerEventAttendee::emailAddress() const\n+{\n+    return value<QString>(FieldEmailAddress);\n+}\n+\n+/*!\n+    \\fn QOrganizerEventAttendee::setContactId(const QString& contactId)\n+    Sets the unique identifier of the attendee to \\a contactId.\n+ */\n+void QOrganizerEventAttendee::setContactId(const QString& contactId)\n+{\n+    setValue(FieldContactId, contactId);\n+}\n+\n+/*!\n+    \\fn QOrganizerEventAttendee::contactId() const\n+    Returns the unique identifier of the attendee.  The format of the identifier\n+    is platform specific and may be a serialized id, a vCard UID, or something else.\n+ */\n+QString QOrganizerEventAttendee::contactId() const\n+{\n+    return value<QString>(FieldContactId);\n+}\n+\n+/*!\n+    \\fn QOrganizerEventAttendee::setParticipationStatus(QOrganizerEventAttendee::Status status)\n+    Sets the participation status of the attendee in the event to \\a status.\n+ */\n+void QOrganizerEventAttendee::setParticipationStatus(ParticipationStatus status)\n+{\n+    setValue(FieldParticipationStatus, status);\n+}\n+\n+/*!\n+    \\fn QOrganizerEventAttendee::participationStatus() const\n+    Returns the participation status of the attendee in the event.\n+ */\n+QOrganizerEventAttendee::ParticipationStatus QOrganizerEventAttendee::participationStatus() const\n+{\n+    return static_cast<ParticipationStatus>(value<int>(FieldParticipationStatus));\n+}\n+\n+/*!\n+    \\fn QOrganizerEventAttendee::setParticipationRole(QOrganizerEventAttendee::ParticipationRole role)\n+    Sets the role of the attendee in the event to \\a role.\n+ */\n+void QOrganizerEventAttendee::setParticipationRole(ParticipationRole role)\n+{\n+    setValue(FieldParticipationRole, static_cast<int>(role));\n+}\n+\n+/*!\n+    \\fn QOrganizerEventAttendee::participationRole() const\n+    Returns the participation role of the attendee in the event.\n+ */\n+QOrganizerEventAttendee::ParticipationRole QOrganizerEventAttendee::participationRole() const\n+{\n+    return static_cast<ParticipationRole>(value<int>(FieldParticipationRole));\n+}\n+\n /*!\n     \\variable QOrganizerItemDisplayLabel::FieldLabel\n \n@@ -698,10 +874,10 @@ const QString QOrganizerItemRecurrence::DefinitionName(QStringLiteral(\""Recurrenc\n bool QOrganizerItemRecurrence::operator==(const QOrganizerItemRecurrence &other) const\n {\n     return accessConstraints() == other.accessConstraints()\n-           && recurrenceRules() == other.recurrenceRules()\n-           && exceptionRules() == other.exceptionRules()\n-           && recurrenceDates() == other.recurrenceDates()\n-           && exceptionDates() == other.exceptionDates();\n+            && recurrenceRules() == other.recurrenceRules()\n+            && exceptionRules() == other.exceptionRules()\n+            && recurrenceDates() == other.recurrenceDates()\n+            && exceptionDates() == other.exceptionDates();\n }\n \n /*!\n@@ -1166,6 +1342,13 @@ const QString QOrganizerItemVisualReminder::FieldMessage(QStringLiteral(\""Message\n  */\n const QString QOrganizerItemVisualReminder::FieldDataUrl(QStringLiteral(\""DataUrl\""));\n \n+/*!\n+    \\variable QOrganizerItemTag::Annivesary\n+\n+    The constant string for annivesary and birthday tag.\n+ */\n+const QString QOrganizerItemTag::Annivesary(QStringLiteral(\""Anniversay\""));\n+\n /*!\n     \\fn QOrganizerItemVisualReminder::setMessage(const QString& message)\n \n"", ""qorganizeritemdetails.h"": ""@@ -64,5 +64,6 @@\n #include <qorganizeritemvisualreminder.h>\n \n #include <qorganizeritemextendeddetail.h>\n+#include <qorganizereventattendee.h>\n \n #endif // QORGANIZERITEMDETAILS_H\n"", ""qorganizeritemtag.h"": ""@@ -53,6 +53,8 @@ public:\n     Q_DECLARE_CUSTOM_ORGANIZER_DETAIL(QOrganizerItemTag, \""Tag\"")\n     const static QString FieldTag;\n \n+    static const QString Annivesary;//Anniversay const string for birthday and annivesary\n+\n     void setTag(const QString &tag);\n     QString tag() const;\n \n"", ""qorganizerevent.h"": ""@@ -90,7 +90,7 @@ public:\n     QString location() const;\n     void setLocation(const QString& location);\n \n-    // TODO attendees?  How to handle non-unique details?\n+    //How to handle non-unique details?\n };\n \n QTORGANIZER_END_NAMESPACE\n"", ""qorganizerjsondbconverter.cpp"": ""@@ -291,6 +291,14 @@ bool QOrganizerJsonDbConverter::jsonDbObjectToItem(const QVariantMap& object, QO\n                 todoTime.setAllDay(isAllDay);\n                 item->saveDetail(&todoTime);\n             }\n+        } else if (i.key() == QOrganizerJsonDbStr::attendee) {\n+            QVariantList attendeeObjectList = i.value().toList();\n+            foreach (const QVariant &attendeeObject, attendeeObjectList) {\n+                QOrganizerEventAttendee attendee;\n+                jsonDbObjectToAttendeeDetail(attendeeObject.toMap(), attendee);\n+                if (!attendee.isEmpty())\n+                    item->saveDetail(&attendee);\n+            }\n         } else if (i.key() == QOrganizerJsonDbStr::ItemLocation\n                    || i.key() == QOrganizerJsonDbStr::ItemVisualReminder\n                    || i.key() == QOrganizerJsonDbStr::ItemAudibleReminder\n@@ -525,6 +533,20 @@ bool QOrganizerJsonDbConverter::itemToJsonDbObject(const QOrganizerItem& item, Q\n         object->insert(QOrganizerJsonDbStr::ItemExceptioneDates, exceptionDatesList);\n     }\n \n+    // attendee\n+    QList<QOrganizerEventAttendee> attendees = item.details<QOrganizerEventAttendee>();\n+    if (!attendees.isEmpty()) {\n+        QVariantList attendeeObjectList;\n+        foreach (const QOrganizerEventAttendee &attendee, attendees) {\n+            QVariantMap attendeeObject;\n+            attendeeDetailToJsonDbObject(attendee, attendeeObject);\n+            if (!attendeeObject.isEmpty())\n+                attendeeObjectList.append(attendeeObject);\n+        }\n+        if (!attendeeObjectList.isEmpty())\n+            object->insert(QOrganizerJsonDbStr::attendee, attendeeObjectList);\n+    }\n+\n     // extended details\n     QList<QOrganizerItemExtendedDetail> extendedDetails = item.details<QOrganizerItemExtendedDetail>();\n     foreach (const QOrganizerItemExtendedDetail &detail, extendedDetails) {\n@@ -541,6 +563,65 @@ bool QOrganizerJsonDbConverter::itemToJsonDbObject(const QOrganizerItem& item, Q\n     return true;\n }\n \n+void QOrganizerJsonDbConverter::attendeeDetailToJsonDbObject(const QOrganizerEventAttendee& attendeeDetail, QVariantMap& object) const\n+{\n+    QVariantMap detailValues = attendeeDetail.values();\n+    QMap<QString, QVariant>::const_iterator i = detailValues.constBegin();\n+    while (i != detailValues.constEnd()) {\n+        if (i.key() == QOrganizerEventAttendee::FieldName) {\n+            QString name = i.value().toString();\n+            if (!name.isEmpty())\n+                object.insert(QOrganizerJsonDbStr::attendeeName, name);\n+        } else if (i.key() == QOrganizerEventAttendee::FieldEmailAddress) {\n+            QString email = i.value().toString();\n+            if (!email.isEmpty())\n+                object.insert(QOrganizerJsonDbStr::attendeeEmailAddress, email);\n+        } else if (i.key() == QOrganizerEventAttendee::FieldContactId) {\n+            QString contactId = i.value().toString();\n+            if (!contactId.isEmpty())\n+                object.insert(QOrganizerJsonDbStr::attendeeContactId, contactId);\n+        } else if (i.key() == QOrganizerEventAttendee::FieldParticipationRole) {\n+            int partRole = i.value().toInt();\n+            if (QOrganizerEventAttendee::RoleNonParticipant > partRole && partRole > 0)\n+                object.insert(QOrganizerJsonDbStr::attendeeParticipationRole, partRole);\n+        } else if (i.key() == QOrganizerEventAttendee::FieldParticipationStatus) {\n+            int partStatus = i.value().toInt();\n+            if (QOrganizerEventAttendee::StatusCompleted > partStatus && partStatus > 0)\n+                object.insert(QOrganizerJsonDbStr::attendeeParticipationStatus, partStatus);\n+        }\n+        i++;\n+    }\n+}\n+\n+void QOrganizerJsonDbConverter::jsonDbObjectToAttendeeDetail(const QVariantMap& object, QOrganizerEventAttendee& attendeeDetail) const\n+{\n+    QMap<QString, QVariant>::const_iterator i = object.constBegin();\n+    while (i != object.constEnd()) {\n+        if (i.key() == QOrganizerJsonDbStr::attendeeName) {\n+            QString name = i.value().toString();\n+            if (!name.isEmpty())\n+                attendeeDetail.setName(name);\n+        } else if (i.key() == QOrganizerJsonDbStr::attendeeEmailAddress) {\n+            QString email = i.value().toString();\n+            if (!email.isEmpty())\n+                attendeeDetail.setEmailAddress(email);\n+        } else if (i.key() == QOrganizerJsonDbStr::attendeeContactId) {\n+            QString contactId = i.value().toString();\n+            if (!contactId.isEmpty())\n+                attendeeDetail.setContactId(contactId);\n+        } else if (i.key() == QOrganizerJsonDbStr::attendeeParticipationRole) {\n+            int partRole = i.value().toInt();\n+            if (QOrganizerEventAttendee::RoleNonParticipant > partRole && partRole > QOrganizerEventAttendee::RoleUnknown)\n+                attendeeDetail.setParticipationRole(static_cast<QOrganizerEventAttendee::ParticipationRole>(partRole));\n+        } else if (i.key() == QOrganizerJsonDbStr::attendeeParticipationStatus) {\n+            int partStatus = i.value().toInt();\n+            if (QOrganizerEventAttendee::StatusCompleted > partStatus && partStatus > QOrganizerEventAttendee::StatusUnknown)\n+                attendeeDetail.setParticipationStatus(static_cast<QOrganizerEventAttendee::ParticipationStatus>(partStatus));\n+        }\n+        i++;\n+    }\n+}\n+\n bool QOrganizerJsonDbConverter::jsonDbObjectToCollection(const QVariantMap& object, QOrganizerCollection* collection, bool& isDefaultCollection)\n {\n     QString jsonUuid = object.value(JsonDbString::kUuidStr).toString();\n"", ""qorganizerjsondbconverter.h"": ""@@ -83,6 +83,10 @@ private:\n     QString enumToString(const QOrganizerJsonDbEnumConversionData* const conversionData, int enumValue) const;\n \n     void extendedDetailToJsonDbProperty(const QOrganizerItemExtendedDetail &extendedDetail, QVariant& property) const;\n+\n+    void attendeeDetailToJsonDbObject(const QOrganizerEventAttendee& attendeeDetail, QVariantMap& object) const;\n+    void jsonDbObjectToAttendeeDetail(const QVariantMap& object, QOrganizerEventAttendee& attendeeDetail) const;\n+\n     void dataToList(const QVariant &data, QVariantList &list) const;\n     void dataToMap(const QVariant &data, QVariantMap &map) const;\n };\n"", ""qorganizerjsondbstring.cpp"": ""@@ -44,94 +44,102 @@\n QTORGANIZER_BEGIN_NAMESPACE\n \n //Jsondb manager name\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ManagerName,    \""qtorganizer:jsondb::\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ManagerUri,     \""qtorganizer:jsondb:\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::JsonDbEngineId, \""jsondb\"");\n+const QString QOrganizerJsonDbStr::ManagerName(QStringLiteral(\""qtorganizer:jsondb::\""));\n+const QString QOrganizerJsonDbStr::ManagerUri(QStringLiteral(\""qtorganizer:jsondb:\""));\n+const QString QOrganizerJsonDbStr::JsonDbEngineId(QStringLiteral(\""jsondb\""));\n \n //Organizer item string\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemName,         \""displayName\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemCollectionId, \""collectionId\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemDescription,  \""description\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemComments,     \""comments\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemLocation,     \""location\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemPriority,     \""Priority\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemTags,         \""tags\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemVisualReminder, \""visualReminder\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemAudibleReminder,\""audibleReminder\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemEmailReminder,  \""emailReminder\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemGuid,         \""guid\"");\n+const QString QOrganizerJsonDbStr::ItemName(QStringLiteral(\""displayName\""));\n+const QString QOrganizerJsonDbStr::ItemCollectionId(QStringLiteral(\""collectionId\""));\n+const QString QOrganizerJsonDbStr::ItemDescription(QStringLiteral(\""description\""));\n+const QString QOrganizerJsonDbStr::ItemComments(QStringLiteral(\""comments\""));\n+const QString QOrganizerJsonDbStr::ItemLocation(QStringLiteral(\""location\""));\n+const QString QOrganizerJsonDbStr::ItemPriority(QStringLiteral(\""Priority\""));\n+const QString QOrganizerJsonDbStr::ItemTags(QStringLiteral(\""tags\""));\n+const QString QOrganizerJsonDbStr::ItemVisualReminder(QStringLiteral(\""visualReminder\""));\n+const QString QOrganizerJsonDbStr::ItemAudibleReminder(QStringLiteral(\""audibleReminder\""));\n+const QString QOrganizerJsonDbStr::ItemEmailReminder(QStringLiteral(\""emailReminder\""));\n+const QString QOrganizerJsonDbStr::ItemGuid(QStringLiteral(\""guid\""));\n \n //Location sub properties\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemLocationLabel,    \""label\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemLocationLatitude, \""latitude\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemLocationLongitude,\""longitude\"");\n+const QString QOrganizerJsonDbStr::ItemLocationLabel(QStringLiteral(\""label\""));\n+const QString QOrganizerJsonDbStr::ItemLocationLatitude(QStringLiteral(\""latitude\""));\n+const QString QOrganizerJsonDbStr::ItemLocationLongitude(QStringLiteral(\""longitude\""));\n \n //Item reminder properties\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemReminderSecBeforeStart,  \""secondsBeforeStart\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemReminderRepCount,        \""repetitionCount\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemReminderRepDelay,        \""repetitionDelay\"");\n+const QString QOrganizerJsonDbStr::ItemReminderSecBeforeStart(QStringLiteral(\""secondsBeforeStart\""));\n+const QString QOrganizerJsonDbStr::ItemReminderRepCount(QStringLiteral(\""repetitionCount\""));\n+const QString QOrganizerJsonDbStr::ItemReminderRepDelay(QStringLiteral(\""repetitionDelay\""));\n //Item audible remibder\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemAudibleReminderDataUrl,  \""dataUrl\"");\n+const QString QOrganizerJsonDbStr::ItemAudibleReminderDataUrl(QStringLiteral(\""dataUrl\""));\n //Item email reminder\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemEmailReminderSubject,    \""subject\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemEmailReminderBody,       \""body\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemEmailReminderAttachments,\""attachments\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemEmailReminderRecipients, \""recipients\"");\n+const QString QOrganizerJsonDbStr::ItemEmailReminderSubject(QStringLiteral(\""subject\""));\n+const QString QOrganizerJsonDbStr::ItemEmailReminderBody(QStringLiteral(\""body\""));\n+const QString QOrganizerJsonDbStr::ItemEmailReminderAttachments(QStringLiteral(\""attachments\""));\n+const QString QOrganizerJsonDbStr::ItemEmailReminderRecipients(QStringLiteral(\""recipients\""));\n //Item visual reminder\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemVisualReminderMessage,   \""message\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemVisualReminderDataUrl,   \""dataUrl\"");\n+const QString QOrganizerJsonDbStr::ItemVisualReminderMessage(QStringLiteral(\""message\""));\n+const QString QOrganizerJsonDbStr::ItemVisualReminderDataUrl(QStringLiteral(\""dataUrl\""));\n \n //Event item\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::Event, \""com.nokia.mp.organizer.Event\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::EventStartDateTime,  \""startDateTime\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::EventEndDateTime,    \""endDateTime\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::EventIsAllDay,       \""isAllDay\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::EventLocation,       \""\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::EventInviter,        \""\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::EventAttendees,      \""\"");\n+const QString QOrganizerJsonDbStr::Event(QStringLiteral(\""com.nokia.mp.organizer.Event\""));\n+const QString QOrganizerJsonDbStr::EventStartDateTime(QStringLiteral(\""startDateTime\""));\n+const QString QOrganizerJsonDbStr::EventEndDateTime(QStringLiteral(\""endDateTime\""));\n+const QString QOrganizerJsonDbStr::EventIsAllDay(QStringLiteral(\""isAllDay\""));\n+const QString QOrganizerJsonDbStr::EventLocation(QStringLiteral(\""\""));\n+const QString QOrganizerJsonDbStr::EventInviter(QStringLiteral(\""\""));\n+const QString QOrganizerJsonDbStr::EventAttendees(QStringLiteral(\""\""));\n \n //To-do item\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::Todo, \""com.nokia.mp.organizer.Todo\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::TodoStartDateTime, \""startDateTime\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::TodoDueDateTime,   \""dueDateTime\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::TodoIsAllDay,      \""isAllDay\"");\n+const QString QOrganizerJsonDbStr::Todo(QStringLiteral(\""com.nokia.mp.organizer.Todo\""));\n+const QString QOrganizerJsonDbStr::TodoStartDateTime(QStringLiteral(\""startDateTime\""));\n+const QString QOrganizerJsonDbStr::TodoDueDateTime(QStringLiteral(\""dueDateTime\""));\n+const QString QOrganizerJsonDbStr::TodoIsAllDay(QStringLiteral(\""isAllDay\""));\n \n //Collection properties\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::Collection, \""com.nokia.mp.organizer.Collection\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::CollectionDefaultFlag,  \""isDefaultCollection\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::CollectionName,         \""displayName\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::CollectionDescription,  \""description\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::CollectionColor,        \""color\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::CollectionImage,        \""image\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::CollectionCustomFields, \""customFields\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::DefaultCollectionName, \""defaultCollection\"");\n+const QString QOrganizerJsonDbStr::Collection(QStringLiteral(\""com.nokia.mp.organizer.Collection\""));\n+const QString QOrganizerJsonDbStr::CollectionDefaultFlag(QStringLiteral(\""isDefaultCollection\""));\n+const QString QOrganizerJsonDbStr::CollectionName(QStringLiteral(\""displayName\""));\n+const QString QOrganizerJsonDbStr::CollectionDescription(QStringLiteral(\""description\""));\n+const QString QOrganizerJsonDbStr::CollectionColor(QStringLiteral(\""color\""));\n+const QString QOrganizerJsonDbStr::CollectionImage(QStringLiteral(\""image\""));\n+const QString QOrganizerJsonDbStr::CollectionCustomFields(QStringLiteral(\""customFields\""));\n+const QString QOrganizerJsonDbStr::DefaultCollectionName(QStringLiteral(\""defaultCollection\""));\n \n // Recurrence sub properties\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemRecurrenceDates,\""recurrenceDates\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemExceptioneDates,\""exceptionDates\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemExceptionRules, \""exceptionRules\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::ItemRecurrenceRules,\""recurrenceRules\"");\n+const QString QOrganizerJsonDbStr::ItemRecurrenceDates(QStringLiteral(\""recurrenceDates\""));\n+const QString QOrganizerJsonDbStr::ItemExceptioneDates(QStringLiteral(\""exceptionDates\""));\n+const QString QOrganizerJsonDbStr::ItemExceptionRules(QStringLiteral(\""exceptionRules\""));\n+const QString QOrganizerJsonDbStr::ItemRecurrenceRules(QStringLiteral(\""recurrenceRules\""));\n \n \n // Recurrence rule properties\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::RuleFirstDayOfWeek,\""firstDayOfWeek\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::RuleFrequency,\""frequency\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::RuleInterval, \""interval\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::RuleLimitCount,\""limitCount\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::RuleLimitDate,\""limitDate\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::RulePositions,\""positions\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::RuleDaysOfWeek,\""daysOfWeek\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::RuleDaysOfMonth,\""daysOfMonth\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::RuleDaysOfYear,\""daysOfYear\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::RuleWeeksOfYear,\""weeksOfYear\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::RuleMonthsOfYear,\""monthsOfYear\"");\n+const QString QOrganizerJsonDbStr::RuleFirstDayOfWeek(QStringLiteral(\""firstDayOfWeek\""));\n+const QString QOrganizerJsonDbStr::RuleFrequency(QStringLiteral(\""frequency\""));\n+const QString QOrganizerJsonDbStr::RuleInterval(QStringLiteral(\""interval\""));\n+const QString QOrganizerJsonDbStr::RuleLimitCount(QStringLiteral(\""limitCount\""));\n+const QString QOrganizerJsonDbStr::RuleLimitDate(QStringLiteral(\""limitDate\""));\n+const QString QOrganizerJsonDbStr::RulePositions(QStringLiteral(\""positions\""));\n+const QString QOrganizerJsonDbStr::RuleDaysOfWeek(QStringLiteral(\""daysOfWeek\""));\n+const QString QOrganizerJsonDbStr::RuleDaysOfMonth(QStringLiteral(\""daysOfMonth\""));\n+const QString QOrganizerJsonDbStr::RuleDaysOfYear(QStringLiteral(\""daysOfYear\""));\n+const QString QOrganizerJsonDbStr::RuleWeeksOfYear(QStringLiteral(\""weeksOfYear\""));\n+const QString QOrganizerJsonDbStr::RuleMonthsOfYear(QStringLiteral(\""monthsOfYear\""));\n+\n+// attendee string\n+const QString QOrganizerJsonDbStr::attendee(QStringLiteral(\""attendee\""));\n+const QString QOrganizerJsonDbStr::attendeeName(QStringLiteral(\""name\""));\n+const QString QOrganizerJsonDbStr::attendeeEmailAddress(QStringLiteral(\""emailAddress\""));\n+const QString QOrganizerJsonDbStr::attendeeContactId(QStringLiteral(\""contactId\""));\n+const QString QOrganizerJsonDbStr::attendeeParticipationStatus(QStringLiteral(\""partStatus\""));\n+const QString QOrganizerJsonDbStr::attendeeParticipationRole(QStringLiteral(\""partRole\""));\n \n //warning string\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::WarningMoreItemDelete, \""Items are delete from jsondb!!\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::WarningCollectionMissing, \""No default collection! error code:\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::WarningCollectionRemove, \"" Number of items deleted from jsondb is not equal to request !!\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::WarningDefaultCollectionRemove, \""Default collection can not be removed!\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::WarningDefaultCollectionChange, \""Default collection can not be changed!\"");\n-Q_DEFINE_LATIN1_CONSTANT(QOrganizerJsonDbStr::WarningDefaultCollectionCreate, \""Same name as default collection!\"");\n+const QString QOrganizerJsonDbStr::WarningMoreItemDelete(QStringLiteral(\""Items are delete from jsondb!!\""));\n+const QString QOrganizerJsonDbStr::WarningCollectionMissing(QStringLiteral(\""No default collection! error code:\""));\n+const QString QOrganizerJsonDbStr::WarningCollectionRemove(QStringLiteral(\"" Number of items deleted from jsondb is not equal to request !!\""));\n+const QString QOrganizerJsonDbStr::WarningDefaultCollectionRemove(QStringLiteral(\""Default collection can not be removed!\""));\n+const QString QOrganizerJsonDbStr::WarningDefaultCollectionChange(QStringLiteral(\""Default collection can not be changed!\""));\n+const QString QOrganizerJsonDbStr::WarningDefaultCollectionCreate(QStringLiteral(\""Same name as default collection!\""));\n \n QTORGANIZER_END_NAMESPACE\n"", ""qorganizerjsondbstring_p.h"": ""@@ -60,98 +60,106 @@ QTORGANIZER_BEGIN_NAMESPACE\n \n class QOrganizerJsonDbStr\n {\n-public:\n+    public:\n     //Jsondb manager name\n-    Q_DECLARE_LATIN1_CONSTANT(ManagerName,    \""qtorganizer:jsondb::\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ManagerUri,     \""qtorganizer:jsondb:\"");\n-    Q_DECLARE_LATIN1_CONSTANT(JsonDbEngineId, \""jsondb\"");\n+    const static QString ManagerName;\n+    const static QString ManagerUri;\n+    const static QString JsonDbEngineId;\n \n     //Organizer item string\n-    Q_DECLARE_LATIN1_CONSTANT(ItemName,         \""displayName\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemCollectionId, \""collectionId\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemDescription,  \""description\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemComments,     \""comments\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemLocation,     \""location\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemPriority,     \""Priority\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemVisualReminder, \""visualReminder\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemAudibleReminder,\""audibleReminder\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemEmailReminder,  \""emailReminder\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemTags,         \""tags\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemGuid,         \""guid\"");\n+    const static QString ItemName;\n+    const static QString ItemCollectionId;\n+    const static QString ItemDescription;\n+    const static QString ItemComments;\n+    const static QString ItemLocation;\n+    const static QString ItemPriority;\n+    const static QString ItemVisualReminder;\n+    const static QString ItemAudibleReminder;\n+    const static QString ItemEmailReminder;\n+    const static QString ItemTags;\n+    const static QString ItemGuid;\n \n     //Location sub properties\n-    Q_DECLARE_LATIN1_CONSTANT(ItemLocationLabel,    \""label\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemLocationLatitude, \""latitude\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemLocationLongitude,\""longitude\"");\n+    const static QString ItemLocationLabel;\n+    const static QString ItemLocationLatitude;\n+    const static QString ItemLocationLongitude;\n \n     //Item reminder properties\n-    Q_DECLARE_LATIN1_CONSTANT(ItemReminderSecBeforeStart,  \""secondsBeforeStart\""); //SecondsBeforeStart\n-    Q_DECLARE_LATIN1_CONSTANT(ItemReminderRepCount,        \""repetitionCount\""); //RepetitionCount\n-    Q_DECLARE_LATIN1_CONSTANT(ItemReminderRepDelay,        \""repetitionDelay\""); //RepetitionDelay\n+    const static QString ItemReminderSecBeforeStart;\n+    const static QString ItemReminderRepCount;\n+    const static QString ItemReminderRepDelay;\n     //Item audible remibder\n-    Q_DECLARE_LATIN1_CONSTANT(ItemAudibleReminderDataUrl,  \""dataUrl\"");\n+    const static QString ItemAudibleReminderDataUrl;\n     //Item email reminder\n-    Q_DECLARE_LATIN1_CONSTANT(ItemEmailReminderSubject,    \""subject\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemEmailReminderBody,       \""body\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemEmailReminderAttachments,\""attachments\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemEmailReminderRecipients, \""recipients\"");\n+    const static QString ItemEmailReminderSubject;\n+    const static QString ItemEmailReminderBody;\n+    const static QString ItemEmailReminderAttachments;\n+    const static QString ItemEmailReminderRecipients;\n     //Item visual reminder\n-    Q_DECLARE_LATIN1_CONSTANT(ItemVisualReminderMessage,   \""message\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemVisualReminderDataUrl,   \""dataUrl\"");\n+    const static QString ItemVisualReminderMessage;\n+    const static QString ItemVisualReminderDataUrl;\n \n     //Event item\n-    Q_DECLARE_LATIN1_CONSTANT(Event, \""com.nokia.mp.organizer.Event\"");\n-    Q_DECLARE_LATIN1_CONSTANT(EventStartDateTime,  \""startDateTime\"");\n-    Q_DECLARE_LATIN1_CONSTANT(EventEndDateTime,    \""endDateTime\"");\n-    Q_DECLARE_LATIN1_CONSTANT(EventIsAllDay,       \""isAllDay\"");\n-    Q_DECLARE_LATIN1_CONSTANT(EventLocation,       \""\"");\n-    Q_DECLARE_LATIN1_CONSTANT(EventInviter,        \""\"");\n-    Q_DECLARE_LATIN1_CONSTANT(EventAttendees,      \""\"");\n+    const static QString Event;\n+    const static QString EventStartDateTime;\n+    const static QString EventEndDateTime;\n+    const static QString EventIsAllDay;\n+    const static QString EventLocation;\n+    const static QString EventInviter;\n+    const static QString EventAttendees;\n \n     //To-do item\n-    Q_DECLARE_LATIN1_CONSTANT(Todo, \""com.nokia.mp.organizer.Todo\"");\n-    Q_DECLARE_LATIN1_CONSTANT(TodoStartDateTime, \""startDateTime\"");\n-    Q_DECLARE_LATIN1_CONSTANT(TodoDueDateTime,   \""dueDateTime\"");\n-    Q_DECLARE_LATIN1_CONSTANT(TodoIsAllDay,      \""isAllDay\"");\n+    const static QString Todo;\n+    const static QString TodoStartDateTime;\n+    const static QString TodoDueDateTime;\n+    const static QString TodoIsAllDay;\n \n     //Collection properties\n-    Q_DECLARE_LATIN1_CONSTANT(Collection, \""com.nokia.mp.organizer.Collection\"");\n-    Q_DECLARE_LATIN1_CONSTANT(CollectionDefaultFlag,  \""isDefaultCollection\"");\n-    Q_DECLARE_LATIN1_CONSTANT(CollectionName,         \""displayName\"");\n-    Q_DECLARE_LATIN1_CONSTANT(CollectionDescription,  \""description\"");\n-    Q_DECLARE_LATIN1_CONSTANT(CollectionColor,        \""color\"");\n-    Q_DECLARE_LATIN1_CONSTANT(CollectionImage,        \""image\"");\n-    Q_DECLARE_LATIN1_CONSTANT(CollectionCustomFields, \""customFields\"");\n+    const static QString Collection;\n+    const static QString CollectionDefaultFlag;\n+    const static QString CollectionName;\n+    const static QString CollectionDescription;\n+    const static QString CollectionColor;\n+    const static QString CollectionImage;\n+    const static QString CollectionCustomFields;\n \n-    Q_DECLARE_LATIN1_CONSTANT(DefaultCollectionName, \""defaultCollection\"");\n+    const static QString DefaultCollectionName;\n \n     // Recurrence sub properties\n-    Q_DECLARE_LATIN1_CONSTANT(ItemRecurrenceDates,\""recurrenceDates\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemExceptioneDates,\""exceptionDates\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemExceptionRules, \""exceptionRules\"");\n-    Q_DECLARE_LATIN1_CONSTANT(ItemRecurrenceRules,\""recurrenceRules\"");\n+    const static QString ItemRecurrenceDates;\n+    const static QString ItemExceptioneDates;\n+    const static QString ItemExceptionRules;\n+    const static QString ItemRecurrenceRules;\n \n \n     // Recurrence rule properties\n-    Q_DECLARE_LATIN1_CONSTANT(RuleFirstDayOfWeek,\""firstDayOfWeek\"");\n-    Q_DECLARE_LATIN1_CONSTANT(RuleFrequency,\""frequency\"");\n-    Q_DECLARE_LATIN1_CONSTANT(RuleInterval, \""interval\"");\n-    Q_DECLARE_LATIN1_CONSTANT(RuleLimitCount,\""limitCount\"");\n-    Q_DECLARE_LATIN1_CONSTANT(RuleLimitDate,\""limitDate\"");\n-    Q_DECLARE_LATIN1_CONSTANT(RulePositions,\""positions\"");\n-    Q_DECLARE_LATIN1_CONSTANT(RuleDaysOfWeek,\""daysOfWeek\"");\n-    Q_DECLARE_LATIN1_CONSTANT(RuleDaysOfMonth,\""daysOfMonth\"");\n-    Q_DECLARE_LATIN1_CONSTANT(RuleDaysOfYear,\""daysOfYear\"");\n-    Q_DECLARE_LATIN1_CONSTANT(RuleWeeksOfYear,\""weeksOfYear\"");\n-    Q_DECLARE_LATIN1_CONSTANT(RuleMonthsOfYear,\""monthsOfYear\"");\n+    const static QString RuleFirstDayOfWeek;\n+    const static QString RuleFrequency;\n+    const static QString RuleInterval;\n+    const static QString RuleLimitCount;\n+    const static QString RuleLimitDate;\n+    const static QString RulePositions;\n+    const static QString RuleDaysOfWeek;\n+    const static QString RuleDaysOfMonth;\n+    const static QString RuleDaysOfYear;\n+    const static QString RuleWeeksOfYear;\n+    const static QString RuleMonthsOfYear;\n+\n+    //attendee string\n+    const static QString attendee;\n+    const static QString attendeeName;\n+    const static QString attendeeEmailAddress;\n+    const static QString attendeeContactId;\n+    const static QString attendeeParticipationStatus;\n+    const static QString attendeeParticipationRole;\n \n     //warning string\n-    Q_DECLARE_LATIN1_CONSTANT(WarningMoreItemDelete, \""Items are delete from jsondb!!\"");\n-    Q_DECLARE_LATIN1_CONSTANT(WarningCollectionMissing, \""No default collection! error code:\"");\n-    Q_DECLARE_LATIN1_CONSTANT(WarningCollectionRemove, \"" Number of items deleted from jsondb is not equal to request !!\"");\n-    Q_DECLARE_LATIN1_CONSTANT(WarningDefaultCollectionRemove, \""Default collection can not be removed!\"");\n-    Q_DECLARE_LATIN1_CONSTANT(WarningDefaultCollectionChange, \""Default collection can not be changed!\"");\n-    Q_DECLARE_LATIN1_CONSTANT(WarningDefaultCollectionCreate, \""Same name as default collection!\"");\n+    const static QString WarningMoreItemDelete;\n+    const static QString WarningCollectionMissing;\n+    const static QString WarningCollectionRemove;\n+    const static QString WarningDefaultCollectionRemove;\n+    const static QString WarningDefaultCollectionChange;\n+    const static QString WarningDefaultCollectionCreate;\n \n };\n \n"", ""tst_qorganizeritemdetails.cpp"": ""@@ -86,6 +86,8 @@ private slots:\n     void emailReminder();\n     void visualReminder();\n \n+    void attendee();\n+\n     // custom definition testing\n     void custom();\n };\n@@ -798,7 +800,56 @@ void tst_QOrganizerItemDetails::visualReminder()\n     QVERIFY(oi.details<QOrganizerItemVisualReminder>().size() == 0);\n }\n \n+void tst_QOrganizerItemDetails::attendee()\n+{\n+    QOrganizerEventAttendee a;\n+    QOrganizerItem oi;\n+\n+    QVERIFY(a.isEmpty());\n+    QVERIFY(a.name().isEmpty());\n+    QVERIFY(a.emailAddress().isEmpty());\n+    QVERIFY(a.contactId().isEmpty());\n+    QVERIFY(a.participationRole() == 0);\n+    QVERIFY(a.participationStatus() == 0);\n+\n+    a.setContactId(\""123456\"");\n+    QVERIFY(a.contactId() == QString(\""123456\""));\n+    a.setEmailAddress(\""people@nokia.com\"");\n+    QVERIFY(a.emailAddress() == QString(\""people@nokia.com\""));\n+    a.setName(\""people\"");\n+    QVERIFY(a.name() == QString(\""people\""));\n+    a.setParticipationRole(QOrganizerEventAttendee::RoleParticipant);\n+    QVERIFY(a.participationRole() == QOrganizerEventAttendee::RoleParticipant);\n+    a.setParticipationStatus(QOrganizerEventAttendee::StatusAccepted);\n+    QVERIFY(a.participationStatus() == QOrganizerEventAttendee::StatusAccepted);\n+    // add\n+    QVERIFY(oi.details<QOrganizerEventAttendee>().size() == 0);\n+    QVERIFY(oi.saveDetail(&a));\n+    QVERIFY(oi.details<QOrganizerEventAttendee>().size() == 1);\n+    QVERIFY(oi.detail<QOrganizerEventAttendee>() == a);\n+    // update\n+    a.setContactId(\""54321\"");\n+    a.setName(\""newpeople\"");\n+    a.setEmailAddress(\""newpeople@nokia.com\"");\n+    QVERIFY(oi.detail<QOrganizerEventAttendee>() != a);\n+    QVERIFY(oi.saveDetail(&a));\n+    QVERIFY(oi.details<QOrganizerEventAttendee>().size() == 1);\n+    QVERIFY(oi.detail<QOrganizerEventAttendee>() == a);\n+\n+    // add one more attendee\n+    QOrganizerEventAttendee a1;\n+    a1.setContactId(\""777777\"");\n+    a1.setName(\""people1\"");\n+    a1.setEmailAddress(\""people1@nokia.com\"");\n+    QVERIFY(oi.saveDetail(&a1));\n+    QVERIFY(oi.details<QOrganizerEventAttendee>().size() == 2);\n \n+    // remove\n+    QVERIFY(oi.removeDetail(&a));\n+    QVERIFY(oi.details<QOrganizerEventAttendee>().size() == 1);\n+    QVERIFY(oi.removeDetail(&a1));\n+    QVERIFY(oi.details<QOrganizerEventAttendee>().size() == 0);\n+}\n \n \n \n"", ""tst_qorganizermanager.cpp"": ""@@ -251,6 +251,9 @@ private slots:\n \n     void testExtendedDetail_data() { addManagers(); }\n     void testExtendedDetail();\n+\n+    void testAttendee_data() { addManagers(); }\n+    void testAttendee();\n };\n \n class BasicItemLocalId : public QOrganizerItemEngineId\n@@ -4465,6 +4468,13 @@ void tst_QOrganizerManager::testTags()\n     QVERIFY(item2.tags().contains(QString::fromAscii(\""Tag1\"")));\n     QVERIFY(item2.tags().contains(QString::fromAscii(\""Tag222\"")));\n     QVERIFY(item2.tags().contains(QString::fromAscii(\""Tag4\"")));\n+\n+    // Annivesary\n+    event.addTag(QOrganizerItemTag::Annivesary);\n+    QVERIFY(mgr->saveItem(&event));\n+    item = mgr->item(event.id());\n+    QVERIFY(item.tags().contains(QOrganizerItemTag::Annivesary));\n+\n }\n \n void tst_QOrganizerManager::testExtendedDetail()\n@@ -4561,6 +4571,58 @@ void tst_QOrganizerManager::testExtendedDetail()\n \n     QVERIFY(mgr->removeItem(event.id()));\n }\n+void tst_QOrganizerManager::testAttendee()\n+{\n+    QFETCH(QString, uri);\n+    QScopedPointer<QOrganizerManager> mgr(QOrganizerManager::fromUri(uri));\n+    QOrganizerEvent event;\n+\n+    // Save item and verify\n+    QOrganizerEventAttendee attendee;\n+    attendee.setName(\""people\"");\n+    attendee.setContactId(\""123456\"");\n+    attendee.setEmailAddress(\""people@nokia.com\"");\n+    attendee.setParticipationRole(QOrganizerEventAttendee::RoleParticipant);\n+    attendee.setParticipationStatus(QOrganizerEventAttendee::StatusAccepted);\n+    event.saveDetail(&attendee);\n+    QVERIFY(mgr->saveItem(&event));\n+    QOrganizerItemId id = event.id();\n+    QOrganizerItem item = mgr->item(id);\n+    QVERIFY(item.details<QOrganizerEventAttendee>().count() == 1);\n+    QVERIFY(item == event);//This will compare all details and their values\n+\n+    // Update\n+    attendee.setName(\""newpeople\"");\n+    attendee.setContactId(\""54321\"");\n+    attendee.setEmailAddress(\""newpeople@nokia.com\"");\n+    event.saveDetail(&attendee);\n+    QVERIFY(item != event);\n+    QVERIFY(mgr->saveItem(&event));\n+    item = mgr->item(id);\n+    QVERIFY(item.details<QOrganizerEventAttendee>().count() == 1);\n+    QVERIFY(item == event);//This will compare all details and their values\n+\n+    // Add one more attendee\n+    QOrganizerEventAttendee a1;\n+    a1.setContactId(\""777777\"");\n+    a1.setName(\""people1\"");\n+    a1.setEmailAddress(\""people1@nokia.com\"");\n+    event.saveDetail(&a1);\n+    QVERIFY(item != event);\n+    QVERIFY(mgr->saveItem(&event));\n+    item = mgr->item(id);\n+    QVERIFY(item.details<QOrganizerEventAttendee>().count() == 2);\n+\n+    // Remove\n+    QVERIFY(event.removeDetail(&attendee));\n+    QVERIFY(event.details<QOrganizerEventAttendee>().size() == 1);\n+    QVERIFY(event.removeDetail(&a1));\n+    QVERIFY(event.details<QOrganizerEventAttendee>().size() == 0);\n+    QVERIFY(mgr->saveItem(&event));\n+    item = mgr->item(id);\n+    QVERIFY(item.details<QOrganizerEventAttendee>().count() == 0);\n+}\n+\n \n #if defined(QT_NO_JSONDB)\n class errorSemanticsTester : public QObject {\n""}",feature;test,"feature,test 
",feature;test;
19311.0,19311.0,bug,hjk,debugger: allow cleaner abort of autotest runs,"debugger: allow cleaner abort of autotest runs

Change-Id: I1dbfc5870fa86787975574a6b8e88ebbc8dfc322",['src/plugins/debugger/debuggerengine.cpp'],"{""debuggerengine.cpp"": ""@@ -1934,11 +1934,16 @@ void DebuggerEnginePrivate::handleAutoTestLine(int line)\n         }\n         handleAutoTestLine(line + 1);\n     } else if (cmd == QLatin1String(\""Continue\"")) {\n-        m_engine->showMessage(_(\""Continue in line %1 processed.\"").arg(line));\n-        if (!m_breakOnError || !m_foundError)\n-            m_engine->continueInferior();\n-        else\n-            m_foundError = false;\n+        if (state() == InferiorStopOk) {\n+            m_engine->showMessage(_(\""Continue in line %1 processed.\"").arg(line));\n+            if (!m_breakOnError || !m_foundError)\n+                m_engine->continueInferior();\n+            else\n+                m_foundError = false;\n+        } else {\n+            m_engine->showMessage(_(\""Auto-run aborted in line %1. State is %2.\"")\n+                .arg(line).arg(state()));\n+        }\n     }\n }\n \n""}",bug,"bug 
",bug;test;
18726.0,18726.0,test;,Rohan McGovern [inactive],QtDocGallery: set autotests enforcing on Windows,"QtDocGallery: set autotests enforcing on Windows

win32-msvc2010 Windows 7 tests are passing.
Make sure they stay that way.

Change-Id: I028b110fedc0f2319bb6115e61d387dec5bcb375",['projects/QtDocGallery_master_Integration/stages/win32-msvc2010_Windows_7/properties/qt.tests.insignificant'],"{""qt.tests.insignificant"": ""@@ -1 +0,0 @@\n-1\n""}",test;,"test 
",resource;test;
6671.0,6671.0,"bug,resource",Thomas Hartmann,QmlDesigner.desktopWidgetsPlugin: fix for metainfo,"QmlDesigner.desktopWidgetsPlugin: fix for metainfo

Keep default size of TextField and add Label.

Change-Id: I65a90c810b1ec9a105992ee976b6c9c99aa272bc",['src/plugins/qmldesigner/desktopplugin/desktop.metainfo'],"{""desktop.metainfo"": ""@@ -128,8 +128,12 @@\n   <node name=\""QtDesktop.TextField\"" icon=\"":/desktopplugin/images/textfield16.png\"">\n     <itemlibraryentry name=\""TextField\"" category=\""Components Desktop\"" libraryIcon=\"":/desktopplugin/images/textfield.png\""  version=\""0.1\"" requiredImport=\""QtDesktop\"">\n       <property name=\""width\"" type=\""int\"" value=\""180\""/>\n-      <property name=\""height\"" type=\""int\"" value=\""50\""/>\n       <property name=\""text\"" type=\""QString\"" value=\""TextField\""/>\n     </itemlibraryentry>\n   </node>\n+  <node name=\""QtDesktop.Label\"" icon=\"":/desktopplugin/images/window16.png.png\"">\n+    <itemlibraryentry name=\""Label\"" category=\""Components Desktop\"" libraryIcon=\"":/desktopplugin/images/window.png\""  version=\""0.1\"" requiredImport=\""QtDesktop\"">\n+      <property name=\""text\"" type=\""QString\"" value=\""Label\""/>\n+    </itemlibraryentry>\n+  </node>\n </metainfo>\n""}","bug,resource","bug, resource 
",bug;resource;
11931.0,11931.0,refactor,Holger Freyther,blitter: Move the definition out of the class,"blitter: Move the definition out of the class

Cosmetic change to remove four spaces of indention from some of the
deeply nested methods.

Change-Id: I67fdd0ab722b7c7c67c4da7a0a0bd86459751700",['src/gui/painting/qpaintengine_blitter.cpp'],"{""qpaintengine_blitter.cpp"": ""@@ -194,65 +194,10 @@ public:\n         raster.reset(new QRasterPaintEngine(p->buffer()));\n     }\n \n-    inline void lock() {\n-        if (!pmData->blittable()->isLocked())\n-            raster->d_func()->rasterBuffer->prepare(pmData->buffer());\n-    }\n-\n-    inline void unlock() {\n-        pmData->blittable()->unlock();\n-    }\n-\n-    void fillRect(const QRectF &rect, const QColor &color) {\n-        Q_Q(QBlitterPaintEngine);\n-        pmData->unmarkRasterOverlay(rect);\n-        QRectF targetRect = rect;\n-        if (hasXForm)\n-            targetRect = q->state()->matrix.mapRect(rect);\n-        const QClipData *clipData = q->clipData();;\n-        if (clipData) {\n-            if (clipData->hasRectClip) {\n-                unlock();\n-                pmData->blittable()->fillRect(targetRect & clipData->clipRect, color);\n-            } else if (clipData->hasRegionClip) {\n-                QVector<QRect> rects = clipData->clipRegion.rects();\n-                for (int i = 0; i < rects.size(); ++i) {\n-                    QRect intersectRect = rects.at(i).intersected(targetRect.toRect());\n-                    if (!intersectRect.isEmpty()) {\n-                        unlock();\n-                        pmData->blittable()->fillRect(intersectRect, color);\n-                    }\n-                }\n-            }\n-        } else {\n-            if (targetRect.x() >= 0 && targetRect.y() >= 0\n-                && targetRect.width() <= raster->paintDevice()->width()\n-                && targetRect.height() <= raster->paintDevice()->height()) {\n-                unlock();\n-                pmData->blittable()->fillRect(targetRect, color);\n-            } else {\n-                QRectF deviceRect(0, 0, raster->paintDevice()->width(), raster->paintDevice()->height());\n-                unlock();\n-                pmData->blittable()->fillRect(deviceRect & targetRect, color);\n-            }\n-        }\n-    }\n-\n-    void clipAndDrawPixmap(const QRectF &clip, const QRectF &target, const QPixmap &pm, const QRectF &sr) {\n-        QRectF intersectedRect = clip.intersected(target);\n-        if (intersectedRect.isEmpty())\n-            return;\n-        QRectF source = sr;\n-        if (intersectedRect.size() != target.size()) {\n-            qreal deltaTop = target.top() - intersectedRect.top();\n-            qreal deltaLeft = target.left() - intersectedRect.left();\n-            qreal deltaBottom = target.bottom() - intersectedRect.bottom();\n-            qreal deltaRight = target.right() - intersectedRect.right();\n-            source.adjust(-deltaLeft, -deltaTop, -deltaRight, -deltaBottom);\n-        }\n-        pmData->unmarkRasterOverlay(intersectedRect);\n-        pmData->blittable()->drawPixmap(intersectedRect, pm, source);\n-    }\n+    void lock();\n+    void unlock();\n+    void fillRect(const QRectF &rect, const QColor &color);\n+    void clipAndDrawPixmap(const QRectF &clip, const QRectF &target, const QPixmap &pm, const QRectF &sr);\n \n     void updateClip() {\n         Q_Q(QBlitterPaintEngine);\n@@ -272,6 +217,74 @@ public:\n     uint hasXForm;\n };\n \n+\n+inline void QBlitterPaintEnginePrivate::lock()\n+{\n+    if (!pmData->blittable()->isLocked())\n+        raster->d_func()->rasterBuffer->prepare(pmData->buffer());\n+}\n+\n+inline void QBlitterPaintEnginePrivate::unlock()\n+{\n+    pmData->blittable()->unlock();\n+}\n+\n+void QBlitterPaintEnginePrivate::fillRect(const QRectF &rect, const QColor &color)\n+{\n+    Q_Q(QBlitterPaintEngine);\n+    pmData->unmarkRasterOverlay(rect);\n+    QRectF targetRect = rect;\n+    if (hasXForm)\n+        targetRect = q->state()->matrix.mapRect(rect);\n+    const QClipData *clipData = q->clipData();;\n+    if (clipData) {\n+        if (clipData->hasRectClip) {\n+            unlock();\n+            pmData->blittable()->fillRect(targetRect & clipData->clipRect, color);\n+        } else if (clipData->hasRegionClip) {\n+            QVector<QRect> rects = clipData->clipRegion.rects();\n+            for (int i = 0; i < rects.size(); ++i) {\n+                QRect intersectRect = rects.at(i).intersected(targetRect.toRect());\n+                if (!intersectRect.isEmpty()) {\n+                    unlock();\n+                    pmData->blittable()->fillRect(intersectRect, color);\n+                }\n+            }\n+        }\n+    } else {\n+        if (targetRect.x() >= 0 && targetRect.y() >= 0\n+            && targetRect.width() <= raster->paintDevice()->width()\n+            && targetRect.height() <= raster->paintDevice()->height()) {\n+            unlock();\n+            pmData->blittable()->fillRect(targetRect, color);\n+        } else {\n+            QRectF deviceRect(0, 0, raster->paintDevice()->width(), raster->paintDevice()->height());\n+            unlock();\n+            pmData->blittable()->fillRect(deviceRect & targetRect, color);\n+        }\n+    }\n+}\n+\n+void QBlitterPaintEnginePrivate::clipAndDrawPixmap(const QRectF &clip,\n+                                                   const QRectF &target,\n+                                                   const QPixmap &pm,\n+                                                   const QRectF &sr)\n+{\n+    QRectF intersectedRect = clip.intersected(target);\n+    if (intersectedRect.isEmpty())\n+        return;\n+    QRectF source = sr;\n+    if (intersectedRect.size() != target.size()) {\n+        qreal deltaTop = target.top() - intersectedRect.top();\n+        qreal deltaLeft = target.left() - intersectedRect.left();\n+        qreal deltaBottom = target.bottom() - intersectedRect.bottom();\n+        qreal deltaRight = target.right() - intersectedRect.right();\n+        source.adjust(-deltaLeft, -deltaTop, -deltaRight, -deltaBottom);\n+    }\n+    pmData->unmarkRasterOverlay(intersectedRect);\n+    pmData->blittable()->drawPixmap(intersectedRect, pm, source);\n+}\n+\n QBlitterPaintEngine::QBlitterPaintEngine(QBlittablePlatformPixmap *p)\n     : QPaintEngineEx(*(new QBlitterPaintEnginePrivate(p)))\n {}\n""}",refactor,"refactor 
",deprecat;
6188.0,6188.0,"test,bug",Jason McDonald,No need to return after QSKIP.,"No need to return after QSKIP.

QSKIP already causes the test function that calls it to return, so the
returns removed by this commit were unreachable.

Change-Id: I1fa2f3a3271927d8a600b02d8b31bd81db9146b1","['tests/auto/qgraphicsitem/tst_qgraphicsitem.cpp', 'tests/auto/gui/text/qfontdatabase/tst_qfontdatabase.cpp', 'tests/auto/qgraphicseffect/tst_qgraphicseffect.cpp', 'tests/auto/qplaintextedit/tst_qplaintextedit.cpp', 'tests/auto/sql/kernel/qsqlquery/tst_qsqlquery.cpp', 'tests/auto/sql/models/qsqlrelationaltablemodel/tst_qsqlrelationaltablemodel.cpp', 'tests/auto/sql/kernel/qsqldatabase/tst_databases.h']","{""tst_qfontdatabase.cpp"": ""@@ -253,10 +253,8 @@ void tst_QFontDatabase::addAppFont()\n     QCOMPARE(fontDbChangedSpy.count(), 1);\n // addApplicationFont is supported on Mac, don't skip the test if it breaks.\n #ifndef Q_WS_MAC\n-    if (id == -1) {\n+    if (id == -1)\n         QSKIP(\""Skip the test since app fonts are not supported on this system\"", SkipSingle);\n-        return;\n-    }\n #endif\n \n     const QStringList addedFamilies = QFontDatabase::applicationFontFamilies(id);\n"", ""tst_qgraphicseffect.cpp"": ""@@ -423,10 +423,8 @@ void tst_QGraphicsEffect::opacity()\n \n void tst_QGraphicsEffect::grayscale()\n {\n-    if (qApp->desktop()->depth() < 24) {\n+    if (qApp->desktop()->depth() < 24)\n         QSKIP(\""Test only works on 32 bit displays\"", SkipAll);\n-        return;\n-    }\n \n     QGraphicsScene scene(0, 0, 100, 100);\n \n@@ -472,10 +470,8 @@ void tst_QGraphicsEffect::grayscale()\n \n void tst_QGraphicsEffect::colorize()\n {\n-    if (qApp->desktop()->depth() < 24) {\n+    if (qApp->desktop()->depth() < 24)\n         QSKIP(\""Test only works on 32 bit displays\"", SkipAll);\n-        return;\n-    }\n \n     QGraphicsScene scene(0, 0, 100, 100);\n \n"", ""tst_qgraphicsitem.cpp"": ""@@ -10519,7 +10519,6 @@ void tst_QGraphicsItem::updateMicroFocus()\n {\n #if defined Q_OS_WIN || defined Q_OS_MAC\n     QSKIP(\""QTBUG-9578\"", SkipAll);\n-    return;\n #endif\n     QGraphicsScene scene;\n     QWidget parent;\n"", ""tst_qplaintextedit.cpp"": ""@@ -339,10 +339,8 @@ void tst_QPlainTextEdit::paragSeparatorOnPlaintextAppend()\n #ifndef QT_NO_CLIPBOARD\n void tst_QPlainTextEdit::selectAllSetsNotSelection()\n {\n-    if (!QApplication::clipboard()->supportsSelection()) {\n+    if (!QApplication::clipboard()->supportsSelection())\n         QSKIP(\""Test only relevant for systems with selection\"", SkipAll);\n-        return;\n-    }\n \n     QApplication::clipboard()->setText(QString(\""foobar\""), QClipboard::Selection);\n     QVERIFY(QApplication::clipboard()->text(QClipboard::Selection) == QString(\""foobar\""));\n"", ""tst_databases.h"": ""@@ -71,7 +71,7 @@\n #define QFAIL_SQL(q, stmt) QVERIFY2(!(q).stmt, tst_Databases::printError((q).lastError(), db))\n \n #define DBMS_SPECIFIC(db, driver) \\\n-    if (!db.driverName().startsWith(driver)) { QSKIP(driver \"" specific test\"", SkipSingle); return; }\n+    if (!db.driverName().startsWith(driver)) { QSKIP(driver \"" specific test\"", SkipSingle); }\n \n // ### use QSystem::hostName if it is integrated in qtest/main\n static QString qGetHostName()\n"", ""tst_qsqlquery.cpp"": ""@@ -571,10 +571,8 @@ void tst_QSqlQuery::oraOutValues()\n     CHECK_DATABASE( db );\n     const QString tst_outValues(qTableName(\""tst_outValues\"", __FILE__));\n \n-    if ( !db.driver()->hasFeature( QSqlDriver::PreparedQueries ) ) {\n+    if ( !db.driver()->hasFeature( QSqlDriver::PreparedQueries ) )\n         QSKIP( \""Test requires prepared query support\"", SkipSingle );\n-        return;\n-    }\n \n     QSqlQuery q( db );\n \n@@ -755,10 +753,8 @@ void tst_QSqlQuery::outValuesDB2()\n     QSqlDatabase db = QSqlDatabase::database( dbName );\n     CHECK_DATABASE( db );\n \n-    if ( !db.driver()->hasFeature( QSqlDriver::PreparedQueries ) ) {\n+    if ( !db.driver()->hasFeature( QSqlDriver::PreparedQueries ) )\n         QSKIP( \""Test requires prepared query support\"", SkipSingle );\n-        return;\n-    }\n \n     QSqlQuery q( db );\n \n@@ -794,10 +790,8 @@ void tst_QSqlQuery::outValues()\n     CHECK_DATABASE( db );\n     const QString tst_outValues(qTableName(\""tst_outValues\"", __FILE__));\n \n-    if ( !db.driver()->hasFeature( QSqlDriver::PreparedQueries ) ) {\n+    if ( !db.driver()->hasFeature( QSqlDriver::PreparedQueries ) )\n         QSKIP( \""Test requires prepared query support\"", SkipSingle );\n-        return;\n-    }\n \n     QSqlQuery q( db );\n \n@@ -824,10 +818,8 @@ void tst_QSqlQuery::outValues()\n                                 \""    set @x = 42\\n\""\n                                 \""end\\n\"" ) );\n         QVERIFY( q.prepare( \""{call \"" + tst_outValues + \""(?)}\"" ) );\n-    } else {\n+    } else\n         QSKIP( \""Don't know how to create a stored procedure for this database server, please fix this test\"", SkipSingle );\n-        return;\n-    }\n \n     q.addBindValue( 0, QSql::Out );\n \n@@ -1600,12 +1592,10 @@ void tst_QSqlQuery::joins()\n     if ( db.driverName().startsWith( \""QOCI\"" )\n             || db.driverName().startsWith( \""QTDS\"" )\n             || db.driverName().startsWith( \""QODBC\"" )\n-            || db.driverName().startsWith( \""QIBASE\"" ) ) {\n+            || db.driverName().startsWith( \""QIBASE\"" ) )\n         // Oracle broken beyond recognition - cannot outer join on more than\n         // one table.\n         QSKIP( \""DBMS cannot understand standard SQL\"", SkipSingle );\n-        return;\n-    }\n \n     QSqlQuery q( db );\n \n@@ -2222,10 +2212,8 @@ void tst_QSqlQuery::bindWithDoubleColonCastOperator()\n \n     // Only PostgreSQL support the double-colon cast operator\n \n-    if ( !db.driverName().startsWith( \""QPSQL\"" ) ) {\n+    if ( !db.driverName().startsWith( \""QPSQL\"" ) )\n         QSKIP( \""Test requires PostgreSQL\"", SkipSingle );\n-        return;\n-    }\n \n     const QString tablename(qTableName( \""bindtest\"", __FILE__ ));\n \n@@ -2292,10 +2280,8 @@ void tst_QSqlQuery::createQueryOnClosedDatabase()\n     if ( !db.driverName().startsWith( \""QPSQL\"" )\n             && !db.driverName().startsWith( \""QOCI\"" )\n             && !db.driverName().startsWith( \""QMYSQL\"" )\n-            && !db.driverName().startsWith( \""QDB2\"" ) ) {\n+            && !db.driverName().startsWith( \""QDB2\"" ) )\n         QSKIP( \""Test is specific for PostgreSQL, Oracle, MySql and DB2\"", SkipSingle );\n-        return;\n-    }\n \n     db.close();\n \n@@ -2380,10 +2366,8 @@ void tst_QSqlQuery::sqlite_finish()\n     QFETCH( QString, dbName );\n     QSqlDatabase db = QSqlDatabase::database( dbName );\n     CHECK_DATABASE( db );\n-    if (db.driverName() != QLatin1String(\""QSQLITE\"")) {\n+    if (db.driverName() != QLatin1String(\""QSQLITE\""))\n         QSKIP(\""Sqlite3 specific test\"", SkipSingle);\n-        return;\n-    }\n \n     if ( db.databaseName().startsWith( ':' ) )\n         QSKIP( \""This test requires a database on the filesystem, not in-memory\"", SkipAll );\n@@ -3214,10 +3198,8 @@ void tst_QSqlQuery::sqlite_constraint()\n     QSqlDatabase db = QSqlDatabase::database( dbName );\n     CHECK_DATABASE( db );\n \n-    if (db.driverName() != QLatin1String(\""QSQLITE\"")) {\n+    if (db.driverName() != QLatin1String(\""QSQLITE\""))\n         QSKIP(\""Sqlite3 specific test\"", SkipSingle);\n-        return;\n-    }\n \n     QSqlQuery q(db);\n     const QString trigger(qTableName(\""test_constraint\"", __FILE__));\n"", ""tst_qsqlrelationaltablemodel.cpp"": ""@@ -1449,10 +1449,9 @@ void tst_QSqlRelationalTableModel::psqlSchemaTest()\n     QSqlDatabase db = QSqlDatabase::database(dbName);\n     CHECK_DATABASE(db);\n \n-    if(!tst_Databases::isPostgreSQL(db)) {\n+    if(!tst_Databases::isPostgreSQL(db))\n         QSKIP(\""Postgresql specific test\"", SkipSingle);\n-        return;\n-    }\n+\n     QSqlRelationalTableModel model(0, db);\n     QSqlQuery q(db);\n     QVERIFY_SQL(q, exec(\""create schema \""+qTableName(\""QTBUG_5373\"", __FILE__)));\n""}","test,bug","test, refactor 
",deprecat;test;
25473.0,25473.0,feature; test,Cristiano di Flora,"Ignore ""almost empty"" details instead of marking them as invalid.","Ignore ""almost empty"" details instead of marking them as invalid.

The sanitation code for string details was marking as invalid those
fields containing only characters that are removed by
QString::simplified() method. With this change, those fields are only
ignored, thus allowing the jsondb backend to tolerate such ""almost
empty"" details.

Change-Id: I8e006b2804eddb02a6037865efd2800886c13d06","['tests/auto/contacts/qcontactasync/jsondbtests/tst_qcontactjsondbasync.cpp', 'tests/auto/contacts/qcontactjsondbconverter/tst_qcontactjsondbconverter.cpp', 'src/plugins/contacts/jsondb/qcontactjsondbconverter.cpp']","{""qcontactjsondbconverter.cpp"": ""@@ -1420,7 +1420,7 @@ QContactJsonDbConverter::SanitizeError QContactJsonDbConverter::sanitizeContactD\n         QString cleaned;\n         const int len = simplified.length();\n         if (!len)\n-            return InvalidArgumentError; // The string is empty after being simplified, return error\n+            return EmptyArgumentError; // The string is empty after being simplified, return error\n         cleaned.reserve(int(len));\n         QString::ConstIterator numberCharsIterator = simplified.constBegin();\n         while (numberCharsIterator != simplified.constEnd()) {\n"", ""tst_qcontactjsondbasync.cpp"": ""@@ -926,7 +926,7 @@ void tst_QContactJsonDbAsync::contactSaveErrorHandling()\n     QCOMPARE(csr.errorMap().value(4), QContactManager::NoError);\n     QCOMPARE(csr.errorMap().value(5), QContactManager::InvalidContactTypeError);\n     QCOMPARE(csr.errorMap().value(6), QContactManager::BadArgumentError);\n-    QCOMPARE(csr.errorMap().value(7), QContactManager::BadArgumentError);\n+    QCOMPARE(csr.errorMap().value(7), QContactManager::NoError);\n     QVERIFY(csr.contacts()[5].id().isNull());\n     QCOMPARE(csr.error(), QContactManager::BadArgumentError);\n }\n"", ""tst_qcontactjsondbconverter.cpp"": ""@@ -168,11 +168,12 @@ void tst_QcontactJsondbConverter::toQContactTest()\n     jsonData.insert(\""firstName\"", QString(\""   John   \""));\n     jsonData.insert(\""lastName\"", invalidName);\n     jsonContact.insert(QContactJsonDbStr::nameDefinitionName(), jsonData);\n-    QVERIFY(!converter.toQContact(jsonContact, &contact, m_partitionName));\n+    QVERIFY(converter.toQContact(jsonContact, &contact, m_partitionName));\n     detail = contact.detail(QContactName::Type);\n-    QVERIFY(detail.isEmpty());\n+    QVERIFY(!detail.isEmpty());\n     name = static_cast<QContactName*>(&detail);\n-    QVERIFY(name->isEmpty());\n+    QVERIFY(!name->isEmpty());\n+    QVERIFY(name->lastName().isEmpty());\n     // cleanup\n     jsonData = QJsonObject();\n     contact.clearDetails();\n@@ -268,12 +269,12 @@ void tst_QcontactJsondbConverter::toQContactTest()\n     // cleanup\n     jsonData = QJsonObject();\n     contact.clearDetails();\n-    // test with a string which becomes empty after sanitizing it: invalid, contact not saved\n+    // test with a string which becomes empty after sanitizing it: detail is ignored\n     jsonData.insert(\""name\"", invalidName);\n     QJsonArray organizationData3;\n     organizationData3.append(jsonData);\n     jsonContact.insert(QContactJsonDbStr::organizationDefinitionName(), organizationData3);\n-    QVERIFY(!converter.toQContact(jsonContact, &contact, m_partitionName));\n+    QVERIFY(converter.toQContact(jsonContact, &contact, m_partitionName));\n     detail = contact.detail(QContactOrganization::Type);\n     QVERIFY(detail.isEmpty());\n     org = static_cast<QContactOrganization*>(&detail);\n@@ -372,10 +373,10 @@ void tst_QcontactJsondbConverter::toQContactTest()\n     // cleanup\n     jsonData = QJsonObject();\n     contact.clearDetails();\n-    // test with a string which becomes empty after sanitizing it: invalid, contact not saved\n+    // test with a string which becomes empty after sanitizing it: invalid, detail ignored\n     jsonData.insert(\""nickname\"", invalidName);\n     jsonContact.insert(\""details\"", jsonData);\n-    QVERIFY(!converter.toQContact(jsonContact, &contact, m_partitionName));\n+    QVERIFY(converter.toQContact(jsonContact, &contact, m_partitionName));\n     detail = contact.detail(QContactNickname::Type);\n     QVERIFY(detail.isEmpty());\n     nick = static_cast<QContactNickname*>(&detail);\n@@ -435,10 +436,10 @@ void tst_QcontactJsondbConverter::toQContactTest()\n     // cleanup\n     jsonData = QJsonObject();\n     contact.clearDetails();\n-    // test with a string which becomes empty after sanitizing it: invalid, contact not saved\n+    // test with a string which becomes empty after sanitizing it: invalid, detail ignored\n     jsonData.insert(\""note\"", invalidName);\n     jsonContact.insert(\""details\"", jsonData);\n-    QVERIFY(!converter.toQContact(jsonContact, &contact, m_partitionName));\n+    QVERIFY(converter.toQContact(jsonContact, &contact, m_partitionName));\n     detail = contact.detail(QContactNote::Type);\n     QVERIFY(detail.isEmpty());\n     note = static_cast<QContactNote*>(&detail);\n@@ -521,7 +522,7 @@ void tst_QcontactJsondbConverter::toQContactTest()\n     jsonData.insert(\""context\"", QString(\""home\""));\n     emails.append(jsonData);\n     jsonContact.insert(\""emails\"", emails);\n-    QVERIFY(!converter.toQContact(jsonContact, &contact, m_partitionName));\n+    QVERIFY(converter.toQContact(jsonContact, &contact, m_partitionName));\n     detail = contact.detail(QContactEmailAddress::Type);\n     QVERIFY(detail.isEmpty());\n     email = static_cast<QContactEmailAddress*>(&detail);\n@@ -694,7 +695,7 @@ void tst_QcontactJsondbConverter::toQContactTest()\n     QJsonArray addressData3;\n     addressData3.append(jsonData);\n     jsonContact.insert(QContactJsonDbStr::addressDefinitionName(), addressData3);\n-    QVERIFY(!converter.toQContact(jsonContact, &contact, m_partitionName));\n+    QVERIFY(converter.toQContact(jsonContact, &contact, m_partitionName));\n     detail = contact.detail(QContactAddress::Type);\n     QVERIFY(detail.isEmpty());\n     addr = static_cast<QContactAddress*>(&detail);\n""}",feature; test,"bug, test 
",others;
690.0,690.0,fefactor,Christian Kandeler,Remote Linux: Get rid of indirection when setting up deployables.,"Remote Linux: Get rid of indirection when setting up deployables.

It might have been useful at some point, but certainly isn't now.

Change-Id: Ibb5d2d1133a6022617336be78f1ff23a3d734a2f","['src/plugins/remotelinux/maemodeployables.cpp', 'src/plugins/remotelinux/maemodeployables.h']","{""maemodeployables.cpp"": ""@@ -48,25 +48,17 @@ namespace Internal {\n MaemoDeployables::MaemoDeployables(const Qt4BaseTarget *target)\n     : m_target(target), m_updateTimer(new QTimer(this))\n {\n-    QTimer::singleShot(0, this, SLOT(init()));\n+    Qt4Project * const pro = m_target->qt4Project();\n+    connect(pro, SIGNAL(proFileUpdated(Qt4ProjectManager::Qt4ProFileNode*,bool,bool)),\n+            this, SLOT(startTimer(Qt4ProjectManager::Qt4ProFileNode*,bool,bool)));\n     m_updateTimer->setInterval(1500);\n     m_updateTimer->setSingleShot(true);\n     connect(m_updateTimer, SIGNAL(timeout()), this, SLOT(createModels()));\n+    createModels();\n }\n \n MaemoDeployables::~MaemoDeployables() {}\n \n-void MaemoDeployables::init()\n-{\n-    Qt4Project * const pro = m_target->qt4Project();\n-    connect(pro, SIGNAL(proFileUpdated(Qt4ProjectManager::Qt4ProFileNode*,bool,bool)),\n-            this, SLOT(startTimer(Qt4ProjectManager::Qt4ProFileNode*,bool,bool)));\n-\n-    // TODO do we want to disable the view\n-\n-    createModels();\n-}\n-\n void MaemoDeployables::startTimer(Qt4ProjectManager::Qt4ProFileNode*, bool success, bool parseInProgress)\n {\n     Q_UNUSED(success)\n"", ""maemodeployables.h"": ""@@ -74,7 +74,6 @@ private:\n     virtual QVariant data(const QModelIndex &index, int role) const;\n \n     Q_SLOT void createModels();\n-    Q_SLOT void init();\n     void createModels(const Qt4ProjectManager::Qt4ProFileNode *proFileNode);\n \n     QList<MaemoDeployableListModel *> m_listModels;\n""}",fefactor,"refactor 
",others;
15972.0,15972.0,bug,Andreas Holzammer,Don't build printer plugins for Windows CE.,"Don't build printer plugins for Windows CE.

Windows CE does not support printing.

Change-Id: Ia00296fe05b460e9f78c60f8d0400698c6f6b3f3",['src/plugins/plugins.pro'],"{""plugins.pro"": ""@@ -4,4 +4,6 @@ SUBDIRS *= sqldrivers bearer\n !contains(QT_CONFIG, no-gui): SUBDIRS *= imageformats\n !isEmpty(QT.widgets.name):    SUBDIRS += accessible\n \n-SUBDIRS += platforms platforminputcontexts printsupport generic\n+SUBDIRS += platforms platforminputcontexts generic\n+\n+!wince*:SUBDIRS += printsupport\n""}",bug,"bug, resource 
",resource;
8572.0,8572.0,deprecat;feature  ,Eirik Aavitsland,Add isDebugBuild() query function to QLibraryInfo,"Add isDebugBuild() query function to QLibraryInfo

Also cleaned up the doc, removing references to the buildkey() function
that has been removed.

Change-Id: I2cb403f93d93c0b2f71c8502818d669f7bfbfbec","['src/corelib/global/qlibraryinfo.cpp', 'src/corelib/global/qlibraryinfo.h']","{""qlibraryinfo.cpp"": ""@@ -139,22 +139,11 @@ QSettings *QLibraryInfoPrivate::findConfiguration()\n     \\class QLibraryInfo\n     \\brief The QLibraryInfo class provides information about the Qt library.\n \n-    Many pieces of information are established when Qt is configured.\n-    Installation paths, license information, and even a unique build\n-    key. This class provides an abstraction for accessing this\n-    information.\n-\n-    \\table\n-    \\header \\o Function           \\o Return value\n-    \\row    \\o buildKey()         \\o A string that identifies the Qt version and\n-                                     the configuration. This key is used to ensure\n-                                     that \\l{plugins} link against the same version\n-                                     of Qt as the application.\n-    \\row    \\o location()         \\o The path to a certain Qt\n-                                     component (e.g., documentation, header files).\n-    \\row    \\o licensee(),\n-               licensedProducts() \\o Licensing information.\n-    \\endtable\n+    Many pieces of information are established when Qt is configured and built.\n+    This class provides an abstraction for accessing that information.\n+    By using the static functions of this class, an application can obtain\n+    information about the instance of the Qt library which the application\n+    is using at run-time.\n \n     You can also use a \\c qt.conf file to override the hard-coded paths\n     that are compiled into the Qt library. For more information, see\n@@ -211,6 +200,20 @@ QLibraryInfo::buildDate()\n }\n #endif //QT_NO_DATESTRING\n \n+/*!\n+    \\since 5.0\n+    Returns true if this build of Qt was built with debugging enabled, or\n+    false if it was built in release mode.\n+*/\n+bool\n+QLibraryInfo::isDebugBuild()\n+{\n+#ifdef QT_DEBUG\n+    return true;\n+#endif\n+    return false;\n+}\n+\n /*!\n   Returns the location specified by \\a loc.\n \n"", ""qlibraryinfo.h"": ""@@ -63,6 +63,8 @@ public:\n     static QDate buildDate();\n #endif //QT_NO_DATESTRING\n \n+    static bool isDebugBuild();\n+\n     enum LibraryLocation\n     {\n         PrefixPath,\n""}",deprecat;feature,"feature 
",bug;deprecat;
8246.0,8246.0,bug,Jonathan Liu,SVN: Fix Subversion 1.6 and earlier support after refactoring,"SVN: Fix Subversion 1.6 and earlier support after refactoring

After refactoring in fa2c24d92b23b23d0548c4cdcd653d7adc6326cc,
Subversion 1.6 and earlier working copies are not detected properly
which results in the Subversion menu missing. This fixes the
detection by correcting a typo in the last return statement.

Change-Id: I64334a3f46e94b2b36e8a83b1833cf899fdb58c6",['src/plugins/subversion/subversionplugin.cpp'],"{""subversionplugin.cpp"": ""@@ -1393,7 +1393,7 @@ bool SubversionPlugin::managesDirectory(const QString &directory, QString *topLe\n             }\n         }\n     }\n-    return false;\n+    return true;\n }\n \n // Check whether SVN management subdirs exist.\n""}",bug,"bug 
",bug;refactor;
14898.0,14898.0,test,"NOT IN USE, DO NOT ADD (was Bradley T. Hughes)",Run tst_QEventDispatcher with the GUI event dispatchers as well,"Run tst_QEventDispatcher with the GUI event dispatchers as well

Since some GUI event dispatchers are complete reimplementations and do
not build on the corelib ones, we want to run the same tests with the
other dispatcher.

Since this is a GUI test now, we need to make sure to drain system
events queued during application startup to make sure we can reliably
run the test functions.

Change-Id: I4905db70bc8f8584c4ef1f4d767824040281452c","['tests/auto/gui/kernel/qguieventdispatcher/qguieventdispatcher.pro', 'tests/auto/corelib/kernel/qeventdispatcher/tst_qeventdispatcher.cpp', 'tests/auto/gui/kernel/kernel.pro']","{""tst_qeventdispatcher.cpp"": ""@@ -38,7 +38,11 @@\n **\n ****************************************************************************/\n \n-#include <QtCore/QCoreApplication>\n+#ifdef QT_GUI_LIB\n+#  include <QtGui/QGuiApplication>\n+#else\n+#  include <QtCore/QCoreApplication>\n+#endif\n #include <QtTest/QtTest>\n \n enum {\n@@ -67,6 +71,7 @@ public:\n     { }\n \n private slots:\n+    void initTestCase();\n     void registerTimer();\n     /* void registerSocketNotifier(); */ // Not implemented here, see tst_QSocketNotifier instead\n     /* void registerEventNotifiier(); */ // Not implemented here, see tst_QWinEventNotifier instead\n@@ -87,6 +92,16 @@ bool tst_QEventDispatcher::event(QEvent *e)\n     return QObject::event(e);\n }\n \n+// drain the system event queue after the test starts to avoid destabilizing the test functions\n+void tst_QEventDispatcher::initTestCase()\n+{\n+    QElapsedTimer elapsedTimer;\n+    elapsedTimer.start();\n+    while (!elapsedTimer.hasExpired(CoarseTimerInterval) && eventDispatcher->processEvents(QEventLoop::AllEvents)) {\n+            ;\n+    }\n+}\n+\n // test that the eventDispatcher's timer implementation is complete and working\n void tst_QEventDispatcher::registerTimer()\n {\n"", ""kernel.pro"": ""@@ -4,6 +4,7 @@ SUBDIRS=\\\n    qdrag \\\n    qevent \\\n    qfileopenevent \\\n+   qguieventdispatcher \\\n    qguimetatype \\\n    qguivariant \\\n    qinputpanel \\\n"", ""qguieventdispatcher.pro"": ""@@ -0,0 +1,4 @@\n+CONFIG += testcase\n+TARGET = tst_qguieventdispatcher\n+QT = core gui testlib\n+SOURCES += ../../../corelib/kernel/qeventdispatcher/tst_qeventdispatcher.cpp\n""}",test,"test 
",feature;test;
15368.0,15368.0,refactor,Xizhi Zhu,Clean-up header inclusion for JsonDb backend.,"Clean-up header inclusion for JsonDb backend.

Change-Id: I088b40e03a03c71197ecebbf41ea7b2698192296","['src/plugins/organizer/jsondb/qorganizerjsondbconverter.h', 'src/plugins/organizer/jsondb/qorganizerjsondbid.h', 'src/plugins/organizer/jsondb/qorganizerjsondbrequestthread.cpp', 'src/plugins/organizer/jsondb/qorganizerjsondbdatastorage.h', 'src/plugins/organizer/jsondb/qorganizerjsondbengine.h', 'src/plugins/organizer/jsondb/qorganizerjsondbrequestthread.h', 'src/plugins/organizer/jsondb/qorganizerjsondbengine.cpp', 'src/plugins/organizer/jsondb/qorganizerjsondbdatastorage.cpp', 'src/plugins/organizer/jsondb/qorganizerjsondbconverter.cpp', 'src/plugins/organizer/jsondb/qorganizerjsondbstring.cpp', 'src/plugins/organizer/jsondb/qorganizerjsondbrequestmanager.h', 'src/plugins/organizer/jsondb/qorganizerjsondbenginefactory.h', 'src/plugins/organizer/jsondb/qorganizerjsondbstring.h']","{""qorganizerjsondbconverter.cpp"": ""@@ -42,7 +42,9 @@\n #include \""qorganizerjsondbconverter.h\""\n #include \""qorganizerjsondbid.h\""\n #include \""qorganizerjsondbstring.h\""\n-#include \""qorganizer.h\""\n+\n+#include <QtOrganizer/qorganizermanagerengine.h>\n+#include <QtOrganizer/qorganizeritemfilters.h>\n \n Q_USE_JSONDB_NAMESPACE\n \n"", ""qorganizerjsondbconverter.h"": ""@@ -42,11 +42,11 @@\n #ifndef QORGANIZERJSONDBCONVERTER_H\n #define QORGANIZERJSONDBCONVERTER_H\n \n-#include <QVariant>\n+#include <QtOrganizer/qorganizermanager.h>\n+#include <QtOrganizer/qorganizeritemdetails.h>\n+#include <QtOrganizer/qorganizeritemdetailfilter.h>\n \n-#include \""qorganizer.h\""\n-\n-#include <jsondb-error.h>\n+#include <QtAddOnJsonDb/jsondb-error.h>\n \n Q_USE_JSONDB_NAMESPACE\n \n"", ""qorganizerjsondbdatastorage.cpp"": ""@@ -38,17 +38,19 @@\n ** $QT_END_LICENSE$\n **\n ****************************************************************************/\n-#include \""qorganizerjsondbdatastorage.h\""\n-\n-#include <QMutexLocker>\n \n+#include \""qorganizerjsondbdatastorage.h\""\n #include \""qorganizerjsondbid.h\""\n #include \""qorganizerjsondbstring.h\""\n \n-#include <jsondb-client.h>\n-#include <jsondb-error.h>\n+#include <QtOrganizer/qorganizeritemcollectionfilter.h>\n+#include <QtOrganizer/qorganizermanagerengine.h>\n+\n+#include <QtCore/qmutex.h>\n+#include <QtAddOnJsonDb/jsondb-client.h>\n \n Q_USE_JSONDB_NAMESPACE\n+\n QTORGANIZER_BEGIN_NAMESPACE\n \n QOrganizerJsonDbDataStorage::QOrganizerJsonDbDataStorage()\n"", ""qorganizerjsondbdatastorage.h"": ""@@ -42,22 +42,16 @@\n #ifndef QORGANIZERJSONDBDATASTORAGE_H\n #define QORGANIZERJSONDBDATASTORAGE_H\n \n-#include <QThread>\n-#include <QWaitCondition>\n-#include <QList>\n-\n-#include \""qorganizer.h\""\n #include \""qorganizerjsondbconverter.h\""\n \n-#include <jsondb-error.h>\n-#include <jsondb-global.h>\n-#include <jsondb-notification.h>\n+#include <QtCore/qthread.h>\n+#include <QtCore/qwaitcondition.h>\n+#include <QtAddOnJsonDb/jsondb-notification.h>\n \n Q_ADDON_JSONDB_BEGIN_NAMESPACE\n class JsonDbClient;\n-class JsonDbConnection;\n Q_ADDON_JSONDB_END_NAMESPACE\n-Q_USE_JSONDB_NAMESPACE\n+\n QTORGANIZER_BEGIN_NAMESPACE\n \n // The purpose of this class is to provide synchronous access to jsondb and also hide jsondb\n@@ -74,7 +68,6 @@ class QOrganizerJsonDbDataStorage: public QThread\n     Q_OBJECT\n \n public:\n-\n     enum FetchType {\n         NoFetch,\n         FetchItems,\n"", ""qorganizerjsondbengine.cpp"": ""@@ -39,12 +39,14 @@\n **\n ****************************************************************************/\n \n-#include <QEventLoop>\n-#include <QAbstractSocket>\n-\n #include \""qorganizerjsondbengine.h\""\n+#include \""qorganizerjsondbrequestthread.h\""\n #include \""qorganizerjsondbstring.h\""\n-#include \""qorganizer.h\""\n+\n+#include <QtOrganizer/qorganizeritemdetails.h>\n+\n+#include <QtCore/qeventloop.h>\n+#include <QtNetwork/qabstractsocket.h>\n \n QTORGANIZER_BEGIN_NAMESPACE\n \n"", ""qorganizerjsondbengine.h"": ""@@ -53,29 +53,12 @@\n // We mean it.\n //\n \n-#include <QSharedData>\n-#include <QMap>\n-#include <QMultiMap>\n-#include <QList>\n-#include <QQueue>\n-#include <QPair>\n-#include <QSet>\n-#include <QDateTime>\n-#include <QString>\n-#include <QObject>\n-\n-#include \""qorganizeritem.h\""\n-#include \""qorganizermanager.h\""\n-#include \""qorganizermanagerengine.h\""\n-#include \""qorganizermanagerenginefactory.h\""\n-#include \""qorganizerabstractrequest.h\""\n-#include \""qorganizeritemchangeset.h\""\n-#include \""qorganizeritemengineid.h\""\n-#include \""qorganizercollectionengineid.h\""\n-#include \""qorganizerjsondbrequestthread.h\""\n+#include <QtOrganizer/qorganizermanagerengine.h>\n \n QTORGANIZER_BEGIN_NAMESPACE\n \n+class QOrganizerJsonDbRequestThread;\n+\n class QOrganizerJsonDbEngine : public QOrganizerManagerEngine\n {\n     Q_OBJECT\n"", ""qorganizerjsondbenginefactory.h"": ""@@ -53,7 +53,7 @@\n // We mean it.\n //\n \n-#include <qorganizermanagerenginefactory.h>\n+#include <QtOrganizer/qorganizermanagerenginefactory.h>\n \n QTORGANIZER_BEGIN_NAMESPACE\n \n"", ""qorganizerjsondbid.h"": ""@@ -53,8 +53,8 @@\n // We mean it.\n //\n \n-#include <qorganizeritemengineid.h>\n-#include <qorganizercollectionengineid.h>\n+#include <QtOrganizer/qorganizeritemengineid.h>\n+#include <QtOrganizer/qorganizercollectionengineid.h>\n \n #include <QtCore/qdebug.h>\n \n"", ""qorganizerjsondbrequestmanager.h"": ""@@ -53,7 +53,7 @@\n // We mean it.\n //\n \n-#include <qorganizerabstractrequest.h>\n+#include <QtOrganizer/qorganizerabstractrequest.h>\n \n #include <QtCore/qwaitcondition.h>\n \n"", ""qorganizerjsondbrequestthread.cpp"": ""@@ -39,17 +39,15 @@\n **\n ****************************************************************************/\n \n-#include <QCoreApplication>\n-\n #include \""qorganizerjsondbrequestthread.h\""\n-#include \""qorganizerjsondbid.h\""\n #include \""qorganizerjsondbengine.h\""\n #include \""qorganizerjsondbrequestmanager.h\""\n #include \""qorganizerjsondbdatastorage.h\""\n #include \""qorganizerjsondbstring.h\""\n-#include \""qorganizer.h\""\n \n #include <QtCore/qdebug.h>\n+#include <QtCore/qeventloop.h>\n+#include <QtCore/qmutex.h>\n #include <QtCore/qtimer.h>\n #include <QtCore/quuid.h>\n \n"", ""qorganizerjsondbrequestthread.h"": ""@@ -42,14 +42,14 @@\n #ifndef QORGANIZERJSONDBREQUESTTHREAD_H\n #define QORGANIZERJSONDBREQUESTTHREAD_H\n \n-#include <QThread>\n-#include <QMutex>\n-#include <QWaitCondition>\n+#include <QtOrganizer/qorganizercollectionchangeset.h>\n+#include <QtOrganizer/qorganizeritemchangeset.h>\n+#include <QtOrganizer/qorganizeritemrequests.h>\n \n-#include \""qorganizer.h\""\n-#include \""qorganizerjsondbconverter.h\""\n+#include <QtCore/qthread.h>\n \n QT_BEGIN_NAMESPACE\n+class QMutex;\n class QTimer;\n QT_END_NAMESPACE\n \n"", ""qorganizerjsondbstring.cpp"": ""@@ -39,4 +39,4 @@\n **\n ****************************************************************************/\n \n-#include <qorganizerjsondbstring.h>\n+#include \""qorganizerjsondbstring.h\""\n"", ""qorganizerjsondbstring.h"": ""@@ -42,7 +42,7 @@\n #ifndef QORGANIZERJSONDBSTRING_H\n #define QORGANIZERJSONDBSTRING_H\n \n-#include <qorganizerglobal.h>\n+#include <QtOrganizer/qorganizerglobal.h>\n \n #include <QtCore/qstring.h>\n \n""}",refactor,"refactor 
",others;
7811.0,7811.0,"test,refactor",Jason McDonald,Remove disabled code in QItemView test.,"Remove disabled code in QItemView test.

The removed code was disabled in January 2007.  The commit history does
not make clear what the code was supposed to achieve and the code
doesn't do what the comment at the top says (that looks like a TODO).
Best to delete it and start again.

Change-Id: I42b6b1d865c96518d74dc189a4a41d0d2776e5bc",['tests/auto/widgets/itemviews/qitemview/tst_qitemview.cpp'],"{""tst_qitemview.cpp"": ""@@ -866,62 +866,6 @@ void tst_QItemView::moveCursor()\n         events.push(Event(Qt::Key_Right, firstRow.sibling(0, 2),        firstRow.sibling(0, 3), \""first_2, first_3\""));\n         events.push(Event(Qt::Key_Right, firstRow.sibling(0, treeModel->columnCount()-1), firstRow.sibling(0, treeModel->columnCount()-1), \""first_3, sec\""));\n     }\n-\n-#if 0 // ### disable this part for now\n-\n-    // ### hide the first/last row,column and re-run all of these tests\n-    // ### Not 100% sure, but I think the next to are tableview specific only and everyone else just does up/down\n-    // QAbstractItemView::MoveNext, AbstractItemView::MovePrevious\n-\n-    while (!events.isEmpty()) {\n-        Event event = events.pop();\n-        view->setCurrentIndex(event.start);\n-        QCOMPARE(view->currentIndex(), event.start);\n-\n-        if (event.key == Qt::Key_PageUp && event.end == QModelIndex()) {\n-            QModelIndex x = view->indexAt(QPoint(1,1));\n-            if (x.row() == 0)\n-                event.end = x;\n-            else\n-                event.end = x.sibling(x.row() - 1, x.column());\n-        }\n-        if (event.key == Qt::Key_PageDown && event.end == QModelIndex()) {\n-            QModelIndex x = view->indexAt(QPoint(1, view->viewport()->height() - 10));\n-            if (x.row() == view->model()->rowCount() - 1)\n-                event.end = x;\n-            else\n-                event.end = x.sibling(x.row() + 1, x.column());\n-        }\n-\n-        QTest::keyPress(view, event.key);\n-        QTest::keyRelease(view, event.key);\n-        QModelIndex current = view->currentIndex();\n-        if (event.key == Qt::Key_PageUp) {\n-            int diff = event.end.row() - current.row();\n-            QVERIFY(diff <= 2);\n-            continue;\n-        }\n-        if (event.key == Qt::Key_PageDown) {\n-            int diff = current.row() - event.end.row();\n-            QVERIFY(diff <= 2);\n-            continue;\n-        }\n-\n-        if (current != event.end) {\n-            QString k;\n-            if (event.key == Qt::Key_Up) k = \""up\"";\n-            if (event.key == Qt::Key_Right) k = \""right\"";\n-            if (event.key == Qt::Key_Left) k = \""left\"";\n-            if (event.key == Qt::Key_PageUp) k = \""page up\"";\n-            if (event.key == Qt::Key_PageDown) k = \""page down\"";\n-            if (event.key == Qt::Key_Down) k = \""down\"";\n-            if (event.key == Qt::Key_Home) k = \""home\"";\n-            if (event.key == Qt::Key_End) k = \""end\"";\n-            qDebug() << k << event.name << event.start << event.end << current;\n-        }\n-        QCOMPARE(current, event.end);\n-    }\n-#endif\n }\n \n QTEST_MAIN(tst_QItemView)\n""}","test,refactor","test, refactor 
",deprecat;test;
9620.0,9620.0,refactor,Eike Ziller,Coding style (d_ptr --> d),"Coding style (d_ptr --> d)

Change-Id: Iec0d827040f1ac679c8a34a3292c3fc91067e70c","['src/libs/utils/historycompleter.cpp', 'src/libs/utils/historycompleter.h']","{""historycompleter.cpp"": ""@@ -202,31 +202,31 @@ bool HistoryListModel::eventFilter(QObject *obj, QEvent *event)\n \n HistoryCompleter::HistoryCompleter(QSettings *settings, QObject *parent)\n     : QCompleter(parent)\n-    , d_ptr(new HistoryCompleterPrivate(this))\n+    , d(new HistoryCompleterPrivate(this))\n {\n-    d_ptr->model->settings = settings;\n+    d->model->settings = settings;\n     // make an assumption to allow pressing of the down\n     // key, before the first model run:\n     // parent is likely the lineedit\n     QWidget *p = qobject_cast<QWidget *>(parent);\n     if (p) {\n-        p->installEventFilter(d_ptr->model);\n+        p->installEventFilter(d->model);\n         QString objectName = p->objectName();\n         if (objectName.isEmpty())\n             return;\n-        if (d_ptr->model->settings) {\n-            d_ptr->model->list = d_ptr->model->settings->value(\n+        if (d->model->settings) {\n+            d->model->list = d->model->settings->value(\n                         QLatin1String(SETTINGS_PREFIX) + objectName).toStringList();\n         }\n     }\n \n     QLineEdit *l = qobject_cast<QLineEdit *>(parent);\n-    if (l && d_ptr->model->list.count())\n-        l->setText(d_ptr->model->list.at(0));\n+    if (l && d->model->list.count())\n+        l->setText(d->model->list.at(0));\n \n-    setModel(d_ptr->model);\n+    setModel(d->model);\n     HistoryLineDelegate *delegate = new HistoryLineDelegate;\n-    HistoryLineView *view = new HistoryLineView(d_ptr, delegate->pixmap.width());\n+    HistoryLineView *view = new HistoryLineView(d, delegate->pixmap.width());\n     setPopup(view);\n     view->setItemDelegate(delegate);\n }\n"", ""historycompleter.h"": ""@@ -58,7 +58,7 @@ public Q_SLOTS:\n     void saveHistory();\n \n protected:\n-    HistoryCompleterPrivate *d_ptr;\n+    HistoryCompleterPrivate *d;\n \n private:\n     Q_DECLARE_PRIVATE(HistoryCompleter)\n""}",refactor,"refactor 
",refactor;
6144.0,6144.0,bug,Christian Kamm,qmlplugindump: Don't dump implicit signals.,"qmlplugindump: Don't dump implicit signals.

Every property automatically has a xyzChanged signal anyway.

Change-Id: I470875a94792c0fc5a6378c8be1e0eddc24a1d5a",['tools/qmlplugindump/main.cpp'],"{""main.cpp"": ""@@ -306,11 +306,15 @@ public:\n         for (int index = meta->enumeratorOffset(); index < meta->enumeratorCount(); ++index)\n             dump(meta->enumerator(index));\n \n-        for (int index = meta->propertyOffset(); index < meta->propertyCount(); ++index)\n-            dump(meta->property(index));\n+        QSet<QString> implicitSignals;\n+        for (int index = meta->propertyOffset(); index < meta->propertyCount(); ++index) {\n+            const QMetaProperty &property = meta->property(index);\n+            dump(property);\n+            implicitSignals.insert(QString(\""%1Changed\"").arg(QString::fromUtf8(property.name())));\n+        }\n \n         for (int index = meta->methodOffset(); index < meta->methodCount(); ++index)\n-            dump(meta->method(index));\n+            dump(meta->method(index), implicitSignals);\n \n         qml->writeEndObject();\n     }\n@@ -378,7 +382,7 @@ private:\n         qml->writeEndObject();\n     }\n \n-    void dump(const QMetaMethod &meth)\n+    void dump(const QMetaMethod &meth, const QSet<QString> &implicitSignals)\n     {\n         if (meth.methodType() == QMetaMethod::Signal) {\n             if (meth.access() != QMetaMethod::Protected)\n@@ -393,6 +397,16 @@ private:\n             return; // invalid signature\n         }\n         name = name.left(lparenIndex);\n+        const QString typeName = convertToId(meth.typeName());\n+\n+        if (implicitSignals.contains(name)\n+                && !meth.revision()\n+                && meth.methodType() == QMetaMethod::Signal\n+                && meth.parameterNames().isEmpty()\n+                && typeName.isEmpty()) {\n+            // don't mention implicit signals\n+            return;\n+        }\n \n         if (meth.methodType() == QMetaMethod::Signal)\n             qml->writeStartObject(QLatin1String(\""Signal\""));\n@@ -406,7 +420,6 @@ private:\n             qml->writeScriptBinding(QLatin1String(\""revision\""), QString::number(revision));\n #endif\n \n-        const QString typeName = convertToId(meth.typeName());\n         if (! typeName.isEmpty())\n             qml->writeScriptBinding(QLatin1String(\""type\""), enquote(typeName));\n \n""}",bug,"bug, refactor 
",others;
187.0,187.0,refactor,Daniel Teske,Remove BuildConfiguration parameter from RunConfiguration::isEnabled,"Remove BuildConfiguration parameter from RunConfiguration::isEnabled

Noone used it anyway, makes the code easier to refactor later.

Change-Id: I367c3f15ec5034740760dfe1becd3063b2e19dc1","['src/plugins/projectexplorer/runconfiguration.cpp', 'src/plugins/remotelinux/maemorunconfiguration.cpp', 'src/plugins/projectexplorer/runconfiguration.h', 'src/plugins/qmlprojectmanager/qmlprojectrunconfiguration.h', 'src/plugins/cmakeprojectmanager/cmakerunconfiguration.h', 'src/plugins/qt4projectmanager/qt-s60/s60emulatorrunconfiguration.cpp', 'src/plugins/qt4projectmanager/qt-s60/s60devicerunconfiguration.h', 'src/plugins/remotelinux/maemorunconfiguration.h', 'src/plugins/qmlprojectmanager/qmlprojectrunconfiguration.cpp', 'src/plugins/cmakeprojectmanager/cmakerunconfiguration.cpp', 'src/plugins/qt4projectmanager/qt-s60/s60devicerunconfiguration.cpp', 'src/plugins/qt4projectmanager/qt-desktop/qt4runconfiguration.cpp', 'src/plugins/qt4projectmanager/qt-desktop/qt4runconfiguration.h', 'src/plugins/qt4projectmanager/qt-s60/s60emulatorrunconfiguration.h', 'src/plugins/projectexplorer/projectexplorer.cpp']","{""cmakerunconfiguration.cpp"": ""@@ -319,9 +319,9 @@ void CMakeRunConfiguration::setEnabled(bool b)\n     setDefaultDisplayName(defaultDisplayName());\n }\n \n-bool CMakeRunConfiguration::isEnabled(ProjectExplorer::BuildConfiguration *bc) const\n+bool CMakeRunConfiguration::isEnabled() const\n {\n-    return m_enabled && LocalApplicationRunConfiguration::isEnabled(bc);\n+    return m_enabled;\n }\n \n // Configuration widget\n"", ""cmakerunconfiguration.h"": ""@@ -90,8 +90,7 @@ public:\n \n     void setEnabled(bool b);\n \n-    bool isEnabled(ProjectExplorer::BuildConfiguration *bc) const;\n-    using LocalApplicationRunConfiguration::isEnabled;\n+    bool isEnabled() const;\n \n signals:\n     void baseEnvironmentChanged();\n"", ""projectexplorer.cpp"": ""@@ -2262,7 +2262,6 @@ QString ProjectExplorerPlugin::pathFor(Node *node)\n     return pathOrDirectoryFor(node, false);\n }\n \n-\n QString ProjectExplorerPlugin::directoryFor(Node *node)\n {\n     return pathOrDirectoryFor(node, true);\n"", ""runconfiguration.cpp"": ""@@ -198,13 +198,11 @@ void RunConfiguration::addExtraAspects()\n }\n \n /*!\n-    \\brief Used to find out whether a runconfiguration works with the given buildconfiguration.\n-    \\note bc may be 0!\n+    \\brief Used to find out whether a runconfiguration is enabled\n */\n \n-bool RunConfiguration::isEnabled(BuildConfiguration *bc) const\n+bool RunConfiguration::isEnabled() const\n {\n-    Q_UNUSED(bc);\n     return true;\n }\n \n@@ -214,18 +212,6 @@ bool RunConfiguration::isEnabled(BuildConfiguration *bc) const\n     \\brief Returns the widget used to configure this run configuration. Ownership is transferred to the caller\n */\n \n-/*!\n-    \\brief Used to find out whether a runconfiguration works with the active buildconfiguration.\n-*/\n-\n-bool RunConfiguration::isEnabled() const\n-{\n-    if (target()->project()->hasActiveBuildSettings()\n-        && !activeBuildConfiguration())\n-        return false;\n-    return isEnabled(activeBuildConfiguration());\n-}\n-\n BuildConfiguration *RunConfiguration::activeBuildConfiguration() const\n {\n     if (!target())\n"", ""runconfiguration.h"": ""@@ -59,8 +59,7 @@ class PROJECTEXPLORER_EXPORT RunConfiguration : public ProjectConfiguration\n public:\n     virtual ~RunConfiguration();\n \n-    virtual bool isEnabled(BuildConfiguration *bc) const;\n-    bool isEnabled() const;\n+    virtual bool isEnabled() const;\n     virtual QWidget *createConfigurationWidget() = 0;\n \n     Target *target() const;\n"", ""qmlprojectrunconfiguration.cpp"": ""@@ -86,10 +86,8 @@ QmlProjectRunConfiguration::QmlProjectRunConfiguration(QmlProjectTarget *parent,\n     updateQtVersions();\n }\n \n-bool QmlProjectRunConfiguration::isEnabled(ProjectExplorer::BuildConfiguration *bc) const\n+bool QmlProjectRunConfiguration::isEnabled() const\n {\n-    Q_UNUSED(bc);\n-\n     return m_isEnabled;\n }\n \n"", ""qmlprojectrunconfiguration.h"": ""@@ -97,7 +97,7 @@ public:\n     Utils::Environment environment() const;\n \n     // RunConfiguration\n-    bool isEnabled(ProjectExplorer::BuildConfiguration *bc) const;\n+    bool isEnabled() const;\n     virtual QWidget *createConfigurationWidget();\n     Utils::OutputFormatter *createOutputFormatter() const;\n     QVariantMap toMap() const;\n"", ""qt4runconfiguration.cpp"": ""@@ -138,11 +138,9 @@ Qt4DesktopTarget *Qt4RunConfiguration::qt4Target() const\n     return static_cast<Qt4DesktopTarget *>(target());\n }\n \n-bool Qt4RunConfiguration::isEnabled(ProjectExplorer::BuildConfiguration * /* configuration */) const\n+bool Qt4RunConfiguration::isEnabled() const\n {\n-    if (!m_parseSuccess)\n-        return false;\n-    return true;\n+    return m_parseSuccess;\n }\n \n void Qt4RunConfiguration::handleParseState(bool success)\n"", ""qt4runconfiguration.h"": ""@@ -82,8 +82,7 @@ public:\n \n     Qt4DesktopTarget *qt4Target() const;\n \n-    virtual bool isEnabled(ProjectExplorer::BuildConfiguration *configuration) const;\n-    using ProjectExplorer::LocalApplicationRunConfiguration::isEnabled;\n+    virtual bool isEnabled() const;\n     virtual QWidget *createConfigurationWidget();\n \n     virtual QString executable() const;\n"", ""s60devicerunconfiguration.cpp"": ""@@ -156,16 +156,9 @@ Qt4SymbianTarget *S60DeviceRunConfiguration::qt4Target() const\n     return static_cast<Qt4SymbianTarget *>(target());\n }\n \n-bool S60DeviceRunConfiguration::isEnabled(ProjectExplorer::BuildConfiguration *configuration) const\n+bool S60DeviceRunConfiguration::isEnabled() const\n {\n-    if (!m_validParse)\n-        return false;\n-\n-    Q_ASSERT(configuration->target() == target());\n-    Q_ASSERT(target()->id() == Constants::S60_DEVICE_TARGET_ID);\n-\n-    const Qt4BuildConfiguration *qt4bc = qobject_cast<const Qt4BuildConfiguration *>(configuration);\n-    return qt4bc && qt4bc->toolChain();\n+    return m_validParse;\n }\n \n QWidget *S60DeviceRunConfiguration::createConfigurationWidget()\n"", ""s60devicerunconfiguration.h"": ""@@ -67,8 +67,7 @@ public:\n     Qt4SymbianTarget *qt4Target() const;\n     SymbianQtVersion *qtVersion() const;\n \n-    using ProjectExplorer::RunConfiguration::isEnabled;\n-    bool isEnabled(ProjectExplorer::BuildConfiguration *configuration) const;\n+    bool isEnabled() const;\n     QWidget *createConfigurationWidget();\n \n     Utils::OutputFormatter *createOutputFormatter() const;\n"", ""s60emulatorrunconfiguration.cpp"": ""@@ -140,15 +140,9 @@ Qt4SymbianTarget *S60EmulatorRunConfiguration::qt4Target() const\n     return static_cast<Qt4SymbianTarget *>(target());\n }\n \n-bool S60EmulatorRunConfiguration::isEnabled(ProjectExplorer::BuildConfiguration *configuration) const\n+bool S60EmulatorRunConfiguration::isEnabled() const\n {\n-    if (!m_validParse)\n-        return false;\n-    Q_ASSERT(configuration->target() == target());\n-    Q_ASSERT(target()->id() == Constants::S60_EMULATOR_TARGET_ID);\n-\n-    const Qt4BuildConfiguration *qt4bc = qobject_cast<const Qt4BuildConfiguration *>(configuration);\n-    return qt4bc && qt4bc->toolChain();\n+    return m_validParse;\n }\n \n QWidget *S60EmulatorRunConfiguration::createConfigurationWidget()\n"", ""s60emulatorrunconfiguration.h"": ""@@ -68,8 +68,7 @@ public:\n \n     Qt4SymbianTarget *qt4Target() const;\n \n-    using ProjectExplorer::RunConfiguration::isEnabled;\n-    bool isEnabled(ProjectExplorer::BuildConfiguration *configuration) const;\n+    bool isEnabled() const;\n     QWidget *createConfigurationWidget();\n \n     Utils::OutputFormatter *createOutputFormatter() const;\n"", ""maemorunconfiguration.cpp"": ""@@ -129,11 +129,9 @@ Qt4BuildConfiguration *MaemoRunConfiguration::activeQt4BuildConfiguration() cons\n     return static_cast<Qt4BuildConfiguration *>(activeBuildConfiguration());\n }\n \n-bool MaemoRunConfiguration::isEnabled(ProjectExplorer::BuildConfiguration * /* config */) const\n+bool MaemoRunConfiguration::isEnabled() const\n {\n-    if (!m_validParse)\n-        return false;\n-    return true;\n+    return m_validParse;\n }\n \n QWidget *MaemoRunConfiguration::createConfigurationWidget()\n"", ""maemorunconfiguration.h"": ""@@ -80,8 +80,7 @@ public:\n         const QString &proFilePath);\n     virtual ~MaemoRunConfiguration();\n \n-    using ProjectExplorer::RunConfiguration::isEnabled;\n-    bool isEnabled(ProjectExplorer::BuildConfiguration *config) const;\n+    bool isEnabled() const;\n     QWidget *createConfigurationWidget();\n     Utils::OutputFormatter *createOutputFormatter() const;\n     Qt4ProjectManager::Qt4BaseTarget *qt4Target() const;\n""}",refactor,"refactor
",deprecat;refactor;resource;
14612.0,14612.0,bug,Janne Anttila,Fixed CeTest remotelib build for WinCE 5.,"Fixed CeTest remotelib build for WinCE 5.

WinCE 5 does not have PPN_POWERBUTTONPRESSED but PPN_SUSPENDKEYPRESSED.
Newer WinCE version have both, but PPN_POWERBUTTONPRESSED is defined
to same as PPN_SUSPENKEYPRESSED, that's why it is safe to use
PPN_SUSPENKEYPRESSED in all WinCE versions.

Change-Id: Ida0604f86330c3e833a1ad41a88db55aa6a625fa",['tools/qtestlib/wince/remotelib/commands.cpp'],"{""commands.cpp"": ""@@ -202,7 +202,7 @@ int qRemotePowerButton(DWORD, BYTE*, DWORD*, BYTE**, IRAPIStream* stream)\n     //PPN_OEMBASE Greater than or equal to 0x10000 \n     //You can define higher values, such as 0x10001, 0x10002, and so on.\n     // Reserved. Set dwData to zero (0). \n-    returnValue = PowerPolicyNotify(PPN_POWERBUTTONPRESSED, 0);\n+    returnValue = PowerPolicyNotify(PPN_SUSPENDKEYPRESSED, 0);\n \n     if (S_OK != stream->Write(&returnValue, sizeof(returnValue), &bytesRead))\n         return -3;\n""}",bug,"bug 
",bug;test;
2789.0,2789.0,bug ,Christian Kandeler,RemoteLinux: Fix crash introduced by merge.,"RemoteLinux: Fix crash introduced by merge artifact.

Change-Id: Iea18410bc812fb5c27442ae01c408113e6bceece",['src/plugins/remotelinux/maemodeploystepfactory.cpp'],"{""maemodeploystepfactory.cpp"": ""@@ -103,6 +103,8 @@ QString MaemoDeployStepFactory::displayNameForId(const QString &id) const\n         return MaemoCopyToSysrootStep::displayName();\n     else if (id == MaemoMakeInstallToSysrootStep::Id)\n         return MaemoMakeInstallToSysrootStep::displayName();\n+    else if (id == GenericDirectUploadStep::stepId())\n+        return GenericDirectUploadStep::displayName();\n     return QString();\n }\n \n@@ -134,6 +136,8 @@ BuildStep *MaemoDeployStepFactory::create(BuildStepList *parent, const QString &\n     } else if (id == MeegoUploadAndInstallPackageStep::stepId()\n         || (id == OldMaemoDeployStepId && (qobject_cast<const Qt4MeegoTarget *>(t)))) {\n         return new MeegoUploadAndInstallPackageStep(parent);\n+    } else if (id == GenericDirectUploadStep::stepId()) {\n+        return new GenericDirectUploadStep(parent, id);\n     }\n \n     return 0;\n@@ -188,6 +192,9 @@ BuildStep *MaemoDeployStepFactory::clone(BuildStepList *parent, BuildStep *produ\n     } else if (product->id() == MaemoMakeInstallToSysrootStep::Id) {\n         return new MaemoMakeInstallToSysrootStep(parent,\n             qobject_cast<MaemoMakeInstallToSysrootStep *>(product));\n+    } else if (product->id() == GenericDirectUploadStep::stepId()) {\n+        return new GenericDirectUploadStep(parent,\n+             qobject_cast<GenericDirectUploadStep *>(product));\n     }\n     return 0;\n }\n""}",bug,"bug 
",bug;
17826.0,17826.0,bug,Marc Mutz,QVector: fix initializer_list constructor implementation,"QVector: fix initializer_list constructor implementation

The old implementation didn't compile.

Change-Id: I9892e1fff11b3a03607c468c9091eebea7e62584",['src/corelib/tools/qvector.h'],"{""qvector.h"": ""@@ -449,9 +449,17 @@ QVector<T>::QVector(std::initializer_list<T> args)\n     d->alloc = d->size = int(args.size());\n     d->capacityReserved = false;\n     d->offset = offsetOfTypedData();\n-    T* i = d->end();\n-    auto it = args.end();\n-    while (i != d->begin())\n+    if (QTypeInfo<T>::isComplex) {\n+        T* b = d->begin();\n+        T* i = d->end();\n+        const T* s = args.end();\n+        while (i != b)\n+            new(--i) T(*--s);\n+    } else {\n+        // std::initializer_list<T>::iterator is guaranteed to be\n+        // const T* ([support.initlist]/1), so can be memcpy'ed away from:\n+        ::memcpy(d->begin(), args.begin(), args.size() * sizeof(T));\n+    }\n }\n #endif\n \n""}",bug,"bug 
",bug;feature;
18977.0,18977.0,bug,Shawn Rutledge,Fix the bit test for ABS_MT_SLOT to detect protocol B,"Fix the bit test for ABS_MT_SLOT to detect protocol B

I tested, it didn't work.  This is from a previous patch I had
already gotten working before 40a5ba4d3fccb449dcfd8d9a0deaf4c7f0fe12bc
was submitted.

Change-Id: I868f069fe834b3122ed9b5b3dc9af0781d6e1d0d",['src/plugins/generic/evdevtouch/qevdevtouch.cpp'],"{""qevdevtouch.cpp"": ""@@ -134,7 +134,7 @@ void QTouchScreenData::registerDevice()\n \n static inline bool testBit(long bit, const long *array)\n {\n-    return array[bit / LONG_BITS] & (1 << (bit & (LONG_BITS - 1)));\n+    return (array[bit / LONG_BITS] >> bit % LONG_BITS) & 1;\n }\n \n QTouchScreenHandler::QTouchScreenHandler(const QString &spec)\n""}",bug,"bug 
",bug;test;
19484.0,19484.0,"bug,deprecat",Andrew Christian,"Revert ""Cpu polling for prelaunch""","Revert ""Cpu polling for prelaunch""

This reverts commit 9181b78247567f1c21b9f85a9eb149133425941a

Inappropriate implementation.  Having two PrelaunchProcessBackendFactories will result in extraneous polling.  Autotests now only succeed if you run on a machine with low CPU load.  Autotests on Macintosh platform simply fail.","['src/core/core-lib.pri', 'src/core/prelaunchprocessbackendfactory.cpp', 'src/core/cpuload.cpp', 'src/core/cpuload.h', 'src/core/prelaunchprocessbackendfactory.h']","{""core-lib.pri"": ""@@ -37,8 +37,7 @@ PUBLIC_HEADERS += \\\n \n HEADERS += \\\n   $$PUBLIC_HEADERS \\\n-  $$PWD/unixsandboxprocess.h \\\n-  $$PWD/cpuload.h\n+  $$PWD/unixsandboxprocess.h\n \n SOURCES += \\\n   $$PWD/process.cpp \\\n@@ -69,5 +68,4 @@ SOURCES += \\\n   $$PWD/socketlauncher.cpp \\\n   $$PWD/procutils.cpp \\\n   $$PWD/forklauncher.cpp \\\n-  $$PWD/prefork.cpp \\\n-  $$PWD/cpuload.cpp\n+  $$PWD/prefork.cpp\n"", ""cpuload.cpp"": ""@@ -1,79 +0,0 @@\n-#include \""cpuload.h\""\n-#include <QFile>\n-#include <QDebug>\n-\n-/*!\n- * \\class CPULoad\n- * \\brief CPULoad calculates the current CPU load.\n- */\n-int CPULoad::m_forcedLoad = -1;\n-\n-//! Constructor\n-CPULoad::CPULoad() :\n-    m_load(-1)\n-{}\n-\n-/*!\n- * Reads /proc/stat file\n- * ToDo: use sscanf if it faster\n- */\n-CPULoad::TimeList CPULoad::readTimeList()\n-{\n-#ifdef Q_OS_LINUX\n-    QFile fin(QStringLiteral(\""/proc/stat\""));\n-    if (fin.open(QIODevice::ReadOnly | QIODevice::Text))\n-        return fin.readLine().split(' ');\n-#endif\n-    return TimeList();\n-}\n-\n-/*!\n- * Initialize. Currently only sets the value to -1.\n- */\n-void CPULoad::init()\n-{\n-    m_load = -1;\n-}\n-\n-/*!\n- * Update the value.\n- * This must be called periodically (e.g. 1 - 5 seconds) in order to update the measurement.\n- * The data is obtained from first line of /proc/stat file\n- */\n-void CPULoad::update()\n-{\n-    // Read timing from the file\n-    TimeList v(readTimeList());\n-\n-    if (m_timeList.length()) {\n-        // Take delta with the previous timing\n-        int sum  = 0;\n-        int idle = 0;\n-        int iowait = 0;\n-        int cpu = 0;\n-\n-        for (int i = 2; i < 7 && i < v.length(); i++)\n-            sum += v.at(i).toInt() - m_timeList.at(i).toInt();\n-\n-        idle = v.at(5).toInt() - m_timeList.at(5).toInt();\n-        iowait = v.at(6).toInt() - m_timeList.at(6).toInt();\n-        cpu = sum - idle - iowait;\n-\n-        // Calculate load\n-        m_load = 100.0 - (100.0 * idle / sum);\n-    } else {\n-        m_load = -1;\n-    }\n-\n-    // Store the current timing\n-    m_timeList = v;\n-}\n-\n-/*!\n- * Returns The current value of the load in the range of 0 to 100\n- * or -1 if nothing measured.\n- */\n-int CPULoad::cpuLoad() const\n-{\n-    return m_forcedLoad > -1 ? m_forcedLoad : m_load;\n-}\n"", ""cpuload.h"": ""@@ -1,30 +0,0 @@\n-#ifndef CPULOAD_H\n-#define CPULOAD_H\n-\n-#include <QList>\n-#include <QByteArray>\n-\n-class CPULoad\n-{\n-public:\n-\n-    CPULoad();\n-\n-    void init();\n-    void update();\n-    int  cpuLoad() const;\n-\n-private:\n-    typedef QList<QByteArray> TimeList;\n-\n-    CPULoad(const CPULoad &);\n-    CPULoad & operator= (const CPULoad &);\n-    TimeList  readTimeList();\n-\n-private:\n-    TimeList   m_timeList;\n-    int        m_load;\n-    static int m_forcedLoad;\n-};\n-\n-#endif // CPULOAD_H\n"", ""prelaunchprocessbackendfactory.cpp"": ""@@ -42,21 +42,10 @@\n #include \""prelaunchprocessbackendfactory.h\""\n #include \""prelaunchprocessbackend.h\""\n #include \""processinfo.h\""\n-#include \""cpuload.h\""\n \n QT_BEGIN_NAMESPACE_PROCESSMANAGER\n \n-const int kPrelaunchCpuPollingInterval = 1000;\n-const int kPrelaunchDefaultTimeout     = 20000;\n-const int kPrelaunchCpuThreshold       = 50;\n-const int kPrelaunchStablilityInterval = 2;\n-\n-#ifdef Q_OS_LINUX\n-    const bool kCpuPollingEnabled = true;\n-#else\n-    const bool kCpuPollingEnabled = false;\n-#endif\n-\n+const int kPrelaunchTimerInterval = 1000;\n \n /*!\n   \\class PrelaunchProcessBackendFactory\n@@ -81,29 +70,20 @@ PrelaunchProcessBackendFactory::PrelaunchProcessBackendFactory(QObject *parent)\n     , m_prelaunch(NULL)\n     , m_info(NULL)\n     , m_prelaunchEnabled(true)\n-    , m_pollingCpu(false)\n-    , m_prelaunchDelay(kPrelaunchDefaultTimeout)\n-#ifdef Q_OS_LINUX\n-    , m_cpuLoad(new CPULoad)\n-#else\n-    , m_cpuLoad(NULL)\n-#endif\n {\n+    connect(&m_timer, SIGNAL(timeout()), SLOT(timeout()));\n+    m_timer.setSingleShot(true);\n+    m_timer.setInterval(kPrelaunchTimerInterval);\n }\n \n /*!\n- *  Destroy this and child objects.\n- */\n+   Destroy this and child objects.\n+*/\n \n PrelaunchProcessBackendFactory::~PrelaunchProcessBackendFactory()\n {\n-    delete m_cpuLoad;\n }\n \n-/*!\n- * Returns true if corresponding prelaunch can be created\n- */\n-\n bool PrelaunchProcessBackendFactory::canCreate(const ProcessInfo &info) const\n {\n     if (!m_info)\n@@ -113,8 +93,8 @@ bool PrelaunchProcessBackendFactory::canCreate(const ProcessInfo &info) const\n }\n \n /*!\n- * Construct a PrelaunchProcessBackend from a ProcessInfo \\a info record with \\a parent.\n- */\n+  Construct a PrelaunchProcessBackend from a ProcessInfo \\a info record with \\a parent.\n+*/\n \n ProcessBackend * PrelaunchProcessBackendFactory::create(const ProcessInfo &info, QObject *parent)\n {\n@@ -125,7 +105,7 @@ ProcessBackend * PrelaunchProcessBackendFactory::create(const ProcessInfo &info,\n     if (hasPrelaunchedProcess()) {\n         // qDebug() << \""Using existing prelaunch\"";\n         m_prelaunch = NULL;\n-        prelaunchWhenPossible();\n+        startPrelaunchTimer();\n         prelaunch->setInfo(info);\n         prelaunch->setParent(parent);\n         prelaunch->disconnect(this);\n@@ -139,7 +119,7 @@ ProcessBackend * PrelaunchProcessBackendFactory::create(const ProcessInfo &info,\n }\n \n /*!\n- * If there is a prelaunched process running, it will be return here.\n+  If there is a prelaunched process running, it will be return here.\n  */\n \n QList<Q_PID> PrelaunchProcessBackendFactory::internalProcesses()\n@@ -150,103 +130,93 @@ QList<Q_PID> PrelaunchProcessBackendFactory::internalProcesses()\n     return list;\n }\n \n-/*!\n- * Returns ProcessInfo object\n- */\n-\n ProcessInfo *PrelaunchProcessBackendFactory::processInfo() const\n {\n     return m_info;\n }\n \n /*!\n- * Return the current launch interval in milliseconds.\n+  Return the current launch interval in milliseconds\n  */\n \n int PrelaunchProcessBackendFactory::launchInterval() const\n {\n-    return m_prelaunchDelay;\n+    return m_timer.interval();\n }\n \n /*!\n- * Set the current launch interval to \\a interval milliseconds.\n- * If the timer is ticking, the new value will affect the next round.\n- */\n+  Set the current launch interval to \\a interval milliseconds\n+*/\n \n void PrelaunchProcessBackendFactory::setLaunchInterval(int interval)\n {\n-    if (m_prelaunchDelay != interval) {\n-        m_prelaunchDelay = interval;\n+    if (m_timer.interval() != interval) {\n+        bool active = m_timer.isActive();\n+        m_timer.stop();\n+        m_timer.setInterval(interval);\n+        if (active)\n+            startPrelaunchTimer();\n         emit launchIntervalChanged();\n     }\n }\n \n /*!\n- *  Returns whether prelaunching is enabled for this factory.\n- */\n-\n+    Returns whether prelaunching is enabled for this factory.\n+*/\n bool PrelaunchProcessBackendFactory::prelaunchEnabled() const\n {\n     return m_prelaunchEnabled;\n }\n \n-/*!\n- * Enables and disables prelaunch\n- */\n-\n void PrelaunchProcessBackendFactory::setPrelaunchEnabled(bool value)\n {\n     if (m_prelaunchEnabled != value) {\n         m_prelaunchEnabled = value;\n-\n-        if (m_prelaunchEnabled) {\n-            prelaunchWhenPossible();\n+        if (!m_prelaunchEnabled) {\n+            m_timer.stop();\n         } else {\n-            disablePrelaunch();\n+            startPrelaunchTimer();\n         }\n         emit prelaunchEnabledChanged();\n     }\n }\n \n /*!\n- *   Returns whether there is a prelaunched process which is ready to be consumed.\n- */\n-\n+    Returns whether there is a prelaunched process which is ready to be consumed.\n+*/\n bool PrelaunchProcessBackendFactory::hasPrelaunchedProcess() const\n {\n     return (m_prelaunch && m_prelaunch->isReady());\n }\n \n /*!\n- *  Under memory restriction, terminate the prelaunch process.\n- */\n-\n+    Under memory restriction, terminate the prelaunch process.\n+*/\n void PrelaunchProcessBackendFactory::handleMemoryRestrictionChange()\n {\n     if (m_memoryRestricted) {\n-        setPrelaunchEnabled(false);\n+        m_timer.stop();\n         if (m_prelaunch) {\n             delete m_prelaunch;   // This will kill the child process as well\n             m_prelaunch = NULL;\n         }\n     } else {\n         Q_ASSERT(m_prelaunch == NULL);\n-        setPrelaunchEnabled(true);\n+        startPrelaunchTimer();\n     }\n }\n \n /*!\n- *  Returns the prelaunched process backend, or null if none is created.\n+    Returns the prelaunched process backend, or null if none is created.\n  */\n-\n PrelaunchProcessBackend *PrelaunchProcessBackendFactory::prelaunchProcessBackend() const\n {\n     return m_prelaunch;\n }\n \n /*!\n- * Launch a new prelaunched process backend.\n- * In the future, it would be useful if the launch didn't require a timeout.\n+  Launch a new prelaunched process backend.\n+  In the future, it would be useful if the launch didn't require a timeout.\n  */\n \n void PrelaunchProcessBackendFactory::timeout()\n@@ -265,8 +235,8 @@ void PrelaunchProcessBackendFactory::timeout()\n }\n \n /*!\n- * Handle a surprise termination condition - the prelaunched process died\n- * unexpectedly.\n+  Handle a surprise termination condition - the prelaunched process died\n+  unexpectedly.\n  */\n \n void PrelaunchProcessBackendFactory::prelaunchFinished(int exitCode, QProcess::ExitStatus status)\n@@ -276,11 +246,11 @@ void PrelaunchProcessBackendFactory::prelaunchFinished(int exitCode, QProcess::E\n         m_prelaunch->deleteLater();\n         m_prelaunch = NULL;\n     }\n-    prelaunchWhenPossible();\n+    startPrelaunchTimer();\n }\n \n /*!\n- * Handle surprise error conditions on the prelaunched process.\n+  Handle surprise error conditions on the prelaunched process.\n  */\n \n void PrelaunchProcessBackendFactory::prelaunchError(QProcess::ProcessError err)\n@@ -293,19 +263,28 @@ void PrelaunchProcessBackendFactory::prelaunchError(QProcess::ProcessError err)\n \n     if (err == QProcess::FailedToStart) {\n         qWarning() << Q_FUNC_INFO << \""disabling prelaunch because of process errors\"";\n-        setPrelaunchEnabled(false);\n+        m_prelaunchEnabled = false;\n+\n     }\n     else {\n         // ### TODO: This isn't optimal\n-        prelaunchWhenPossible();\n+        startPrelaunchTimer();\n     }\n }\n \n /*!\n- *  Sets the ProcessInfo that is used to determine the prelaunched runtime to \\a processInfo.\n- *  An internal copy is made of the \\a processInfo object.\n- */\n+    Starts the prelaunch timer only if prelaunching is enabled.\n+*/\n+void PrelaunchProcessBackendFactory::startPrelaunchTimer()\n+{\n+    if (m_prelaunchEnabled)\n+        m_timer.start();\n+}\n \n+/*!\n+    Sets the ProcessInfo that is used to determine the prelaunched runtime to \\a processInfo.\n+    An internal copy is made of the \\a processInfo object.\n+ */\n void PrelaunchProcessBackendFactory::setProcessInfo(ProcessInfo *processInfo)\n {\n     if (m_info != processInfo) {\n@@ -317,113 +296,26 @@ void PrelaunchProcessBackendFactory::setProcessInfo(ProcessInfo *processInfo)\n         if (processInfo) {\n             m_info = new ProcessInfo(*processInfo);\n             m_info->setParent(this);\n-            prelaunchWhenPossible();\n+            startPrelaunchTimer();\n         } else {\n-            disablePrelaunch();\n+            m_timer.stop();\n         }\n         emit processInfoChanged();\n     }\n }\n \n /*!\n- *  Sets the ProcessInfo that is used to determine the prelaunched runtime to \\a processInfo.\n+    Sets the ProcessInfo that is used to determine the prelaunched runtime to \\a processInfo.\n  */\n-\n void PrelaunchProcessBackendFactory::setProcessInfo(ProcessInfo& processInfo)\n {\n     setProcessInfo(&processInfo);\n }\n \n-/*!\n- * Prelaunch runtime when cpu load is low or by timer\n- */\n-\n-void PrelaunchProcessBackendFactory::prelaunchWhenPossible()\n-{\n-    if (m_prelaunchEnabled) {\n-        if (kCpuPollingEnabled) {\n-            m_accu = 0;\n-            m_waitTime = 0;\n-            enableCPULoadPolling(true);\n-            // qDebug() << \""(cpu) start cpu polling, max waiting time \"" << (m_prelaunchDelay/1000) << \"" seconds\"";\n-        } else {\n-            m_timer.singleShot(m_prelaunchDelay, this, SLOT(timeout()));\n-        }\n-    }\n-}\n-\n-/*!\n- * disable prelaunch process and stops timers\n- */\n-\n-void PrelaunchProcessBackendFactory::disablePrelaunch()\n-{\n-    if (kCpuPollingEnabled) {\n-        enableCPULoadPolling(false);\n-    } else {\n-        m_timer.stop();\n-    }\n-}\n-\n-/*!\n- * Update cpu load information, triggers prelaunch start\n- */\n-\n-void PrelaunchProcessBackendFactory::checkCPULoadUpdated()\n-{\n-    Q_ASSERT(kCpuPollingEnabled);\n-\n-    m_cpuLoad->update();\n-    m_waitTime += kPrelaunchCpuPollingInterval;\n-    int curLoad = m_cpuLoad->cpuLoad();\n-\n-    if (m_prelaunchDelay != 0 && m_waitTime >= (m_prelaunchDelay)) {\n-        // qDebug() << \""(cpu) can't wait low cpu load any longer\"";\n-        m_accu = kPrelaunchStablilityInterval;\n-    } else {\n-        if (curLoad < kPrelaunchCpuThreshold)\n-            m_accu++;\n-        else\n-            m_accu = 0;\n-    }\n-\n-    // qDebug() << \""(cpu) load is \"" << curLoad << \"" wait time \"" << m_waitTime/1000 << \"" seconds\"";\n-\n-    if (m_accu >= kPrelaunchStablilityInterval) {\n-        // qDebug() << \""(cpu) stop cpu polling, start runtimes prelaunching\"";\n-        enableCPULoadPolling(false);\n-        timeout();\n-    }\n-}\n-\n-/*!\n- * Enables or disables cpu load polling\n- */\n-\n-void PrelaunchProcessBackendFactory::enableCPULoadPolling(bool enable)\n-{\n-    Q_ASSERT(kCpuPollingEnabled);\n-\n-    if (enable) {\n-        if (m_pollingCpu)\n-            return;\n-\n-        connect(&m_timer, SIGNAL(timeout()), this, SLOT(checkCPULoadUpdated()));\n-        m_cpuLoad->init();\n-        m_timer.setInterval(kPrelaunchCpuPollingInterval);\n-        m_timer.start();\n-        m_pollingCpu = true;\n-\n-    } else {\n-        disconnect(&m_timer, SIGNAL(timeout()), this, SLOT(checkCPULoadUpdated()));\n-        m_timer.stop();\n-        m_pollingCpu = false;\n-    }\n-}\n \n /*!\n- * \\fn void PrelaunchProcessBackendFactory::launchIntervalChanged()\n- * This signal is emitted when the launchInterval is changed.\n+  \\fn void PrelaunchProcessBackendFactory::launchIntervalChanged()\n+  This signal is emitted when the launchInterval is changed.\n  */\n \n #include \""moc_prelaunchprocessbackendfactory.cpp\""\n"", ""prelaunchprocessbackendfactory.h"": ""@@ -44,8 +44,6 @@\n #include \""processmanager-global.h\""\n #include <QTimer>\n \n-class CPULoad;\n-\n QT_BEGIN_NAMESPACE_PROCESSMANAGER\n \n class ProcessInfo;\n@@ -93,24 +91,15 @@ private slots:\n     void timeout();\n     void prelaunchFinished(int, QProcess::ExitStatus);\n     void prelaunchError(QProcess::ProcessError);\n-    void checkCPULoadUpdated();\n \n private:\n     void startPrelaunchTimer();\n-    void enableCPULoadPolling(bool enable);\n-    void prelaunchWhenPossible();\n-    void disablePrelaunch();\n \n private:\n     PrelaunchProcessBackend *m_prelaunch;\n     ProcessInfo             *m_info;\n-    bool                     m_prelaunchEnabled;\n     QTimer                   m_timer;\n-    bool                     m_pollingCpu;\n-    int                      m_accu;\n-    int                      m_waitTime;\n-    int                      m_prelaunchDelay;\n-    CPULoad                 *m_cpuLoad;\n+    bool                     m_prelaunchEnabled;\n };\n \n QT_END_NAMESPACE_PROCESSMANAGER\n""}","bug,deprecat","bug, refactor 
",others;
15646.0,15646.0,bug ,John Tapsell,Harfbuzz-thai - When calling HB_OpenTypePosition we must set doLogClusters to true for thai,"Harfbuzz-thai - When calling HB_OpenTypePosition we must set doLogClusters to true for thai

This bug resulted in word wrapping not working correctly for thai.

Change-Id: I676deb12258beb224736414712a32e23513f406e",['src/3rdparty/harfbuzz/src/harfbuzz-thai.c'],"{""harfbuzz-thai.c"": ""@@ -353,7 +353,7 @@ HB_Bool HB_ThaiShape (HB_ShaperItem *shaper_item)\n     const int availableGlyphs = shaper_item->num_glyphs;\n     if ( HB_SelectScript (shaper_item, thai_features) ) {\n         HB_OpenTypeShape (shaper_item, /*properties*/0);\n-        return HB_OpenTypePosition (shaper_item, availableGlyphs, /*doLogClusters*/false);\n+        return HB_OpenTypePosition (shaper_item, availableGlyphs, /*doLogClusters*/true);\n     }\n #endif\n \n""}",bug,"bug 
",bug;
5432.0,5432.0,resource; test,Rohan McGovern [inactive],"testrunner: use non-full backtraces, instead of full.","testrunner: use non-full backtraces, instead of full.

A full backtrace potentially generates a _lot_ of information, as well
as warnings from gdb.  In theory, the information can be useful; in
practice, at least in the CI context, the extra info is probably rarely
used and may make the genuinely useful information more difficult to
extract.

Change-Id: I023aff9b97db94b0070e6959f1645a1624f55493",['scripts/generic/testrunner-plugins/core.pm'],"{""core.pm"": ""@@ -287,7 +287,7 @@ sub _get_backtrace\n     # pass commands through the command line, but we want to support some\n     # older gdb (e.g. on mac) which only have `-x'\n     my $cmd_file = File::Temp->new( 'qtqa-testrunner-gdb.XXXXXX', TMPDIR => 1 );\n-    $cmd_file->printflush( 'thread apply all bt full' );\n+    $cmd_file->printflush( 'thread apply all bt' );\n \n     my $command = ($self->{ testrunner }->command( ))[0];\n     return capture_merged {\n""}",resource; test,"**test** 
",resource;test;
13240.0,13240.0,bug,Pasi Pentikäinen,Using samples=0 to turn multisampling off,"Using samples=0 to turn multisampling off

Change 54613aec was using the value 1 for QGLFormat::samples when it
wanted multisampling off. But this was actually resulting in
multisampling being turned on. It should have been using 0, which it
now does.

Task-number: ou1cimx1#951223
Change-Id: Ie68367f083f7ab4bae4143a59996c71add3e5c06
Reviewed-by: Pasi Pentikäinen <ext-pasi.a.pentikainen@nokia.com>
(cherry picked from commit 0ce52668616eba11de6c8255ec5319db3405483a)","['src/opengl/qgl_egl.cpp', 'src/opengl/qgl_symbian.cpp']","{""qgl_egl.cpp"": ""@@ -81,7 +81,7 @@ void qt_eglproperties_set_glformat(QEglProperties& eglProperties, const QGLForma\n     alphaSize = alphaSize > 0 ? alphaSize : 8;\n     depthSize = depthSize > 0 ? depthSize : 24;\n     stencilSize = stencilSize > 0 ? stencilSize : 8;\n-    sampleCount = sampleCount > 0 ? sampleCount : 4;\n+    sampleCount = sampleCount >= 0 ? sampleCount : 4;\n #else\n     // QGLFormat uses a magic value of -1 to indicate \""don't care\"", even when a buffer of that\n     // type has been requested. So we must check QGLFormat's booleans too if size is -1:\n"", ""qgl_symbian.cpp"": ""@@ -192,7 +192,7 @@ bool QGLContext::chooseContext(const QGLContext* shareContext) // almost same as\n                 d->glFormat.setSamples(4);\n             } else {\n                 d->glFormat.setSampleBuffers(0);\n-                d->glFormat.setSamples(1);\n+                d->glFormat.setSamples(0);\n             }\n         }\n \n""}",bug,"bug 
",feature;
20277.0,20277.0,refactor,Kevin Simons,Dead code removal,"Dead code removal

Change-Id: I7b91f907ea7c0adb0af501f1f53e4e350f4d59a0",['src/daemon/jsondbpartition.cpp'],"{""jsondbpartition.cpp"": ""@@ -270,19 +270,6 @@ void memcpyFieldValue(QJsonValue::Type vt, QJsonValue &fieldValue, const char *d\n     }\n }\n \n-int objectKeyCmp(const char *aptr, size_t alen, const char *bptr, size_t blen, void *)\n-{\n-    Q_UNUSED(alen);\n-    Q_UNUSED(blen);\n-    quint32 a = qFromBigEndian<quint32>((const uchar *)aptr);\n-    quint32 b = qFromBigEndian<quint32>((const uchar *)bptr);\n-    if (a < b)\n-        return -1;\n-    if (a > b)\n-        return 1;\n-    return 0;\n-}\n-\n int intcmp(const uchar *aptr, const uchar *bptr)\n {\n     qint32 a = qFromBigEndian<qint32>((const uchar *)aptr);\n""}",refactor,"refactor 
",others;
10371.0,10371.0,test ,[BB] Sergio Ahumada,tst_licenses: Add `tests/auto/qtquick2' to the list of excludeFiles,"tst_licenses: Add `tests/auto/qtquick2' to the list of excludeFiles

These files are being moved by http://codereview.qt-project.org/9948

Change-Id: I77692398051e88021d694e0d4fc0b76366d40053",['tests/shared/license/tst_licenses.pl'],"{""tst_licenses.pl"": ""@@ -137,6 +137,7 @@ my %excludedFiles = (\n                           # need not have a license header.\n                           qr{^tests/auto/declarative/},\n                           qr{^tests/auto/qtquick1/},\n+                          qr{^tests/auto/qtquick2/},\n                           qr{^tests/benchmarks/declarative/javascript/data/},\n                         ],\n     \""qtdoc\""          => [\n""}",test,"test 
",resource;test;
110.0,110.0,bug,Kai Köhne,Qt4Target: Compile fix,"Qt4Target: Compile fix

Remove conflict markers.

Change-Id: Ie54881eff9df4966d093782841db4db5b4c4268f",['src/plugins/qt4projectmanager/qt4target.h'],"{""qt4target.h"": ""@@ -77,16 +77,10 @@ public:\n \n     // This is the same for almost all Qt4Targets\n     // so for now offer a convience function\n-<<<<<<< HEAD\n-    Qt4BuildConfiguration *addQt4BuildConfiguration(QString displayName,\n-                                                            QtSupport::BaseQtVersion *qtversion,\n-                                                            QtSupport::BaseQtVersion::QmakeBuildConfigs qmakeBuildConfiguration,\n-=======\n     Qt4BuildConfiguration *addQt4BuildConfiguration(QString defaultDisplayName,\n                                                             QString displayName,\n-                                                            BaseQtVersion *qtversion,\n-                                                            BaseQtVersion::QmakeBuildConfigs qmakeBuildConfiguration,\n->>>>>>> BuildConfiguration: Adapt name if Qt version changes\n+                                                            QtSupport::BaseQtVersion *qtversion,\n+                                                            QtSupport::BaseQtVersion::QmakeBuildConfigs qmakeBuildConfiguration,\n                                                             QString additionalArguments,\n                                                             QString directory);\n \n""}",bug,"bug 
",bug;deprecat;resource;
22155.0,22155.0,resource,Jason McDonald,Bump some Qt 5 to-do's to Qt 6.,"Bump some Qt 5 to-do's to Qt 6.

Source-incompatible changes are no longer desirable for Qt 5, so these
items must wait until at least Qt 6.

Task-number: QTBUG-23524
Change-Id: I0b9ae5f6f3a792e0169a4b0d3aefbdcb744acd2f","['src/corelib/io/qfileinfo.cpp', 'src/corelib/tools/qlocale.cpp', 'src/corelib/tools/qbytearray.h', 'src/widgets/widgets/qdockwidget.h', 'src/corelib/io/qsettings.h', 'src/corelib/global/qlibraryinfo.h', 'src/widgets/dialogs/qwizard.h', 'src/corelib/tools/qline.h', 'src/corelib/itemmodels/qitemselectionmodel.h', 'src/widgets/itemviews/qheaderview.cpp', 'src/widgets/widgets/qcombobox.h', 'tests/auto/xml/dom/qdom/tst_qdom.cpp', 'src/corelib/tools/qchar.h', 'src/widgets/styles/qstyle.h', 'src/corelib/global/qnamespace.h', 'src/widgets/widgets/qstatusbar.h']","{""qlibraryinfo.h"": ""@@ -88,7 +88,7 @@ public:\n #endif\n         SettingsPath = 100\n     };\n-    static QString location(LibraryLocation); // ### Qt 5: consider renaming it to path()\n+    static QString location(LibraryLocation); // ### Qt 6: consider renaming it to path()\n #ifdef QT_BUILD_QMAKE\n     static QString rawLocation(LibraryLocation);\n #endif\n"", ""qnamespace.h"": ""@@ -153,7 +153,7 @@ public:\n         NoButton         = 0x00000000,\n         LeftButton       = 0x00000001,\n         RightButton      = 0x00000002,\n-        MidButton        = 0x00000004, // ### Qt 5: remove me\n+        MidButton        = 0x00000004, // ### Qt 6: remove me\n         MiddleButton     = MidButton,\n         XButton1         = 0x00000008,\n         BackButton       = XButton1,\n"", ""qfileinfo.cpp"": ""@@ -830,7 +830,7 @@ QString QFileInfo::suffix() const\n QDir QFileInfo::dir() const\n {\n     Q_D(const QFileInfo);\n-    // ### Qt5: Maybe rename this to parentDirectory(), considering what it actually do?\n+    // ### Qt 6: Maybe rename this to parentDirectory(), considering what it actually does?\n     return QDir(d->fileEntry.path());\n }\n \n"", ""qsettings.h"": ""@@ -173,8 +173,8 @@ public:\n \n     static void setDefaultFormat(Format format);\n     static Format defaultFormat();\n-    static void setSystemIniPath(const QString &dir); // ### remove in 5.0 (use setPath() instead)\n-    static void setUserIniPath(const QString &dir);   // ### remove in 5.0 (use setPath() instead)\n+    static void setSystemIniPath(const QString &dir); // ### Qt 6: remove (use setPath() instead)\n+    static void setUserIniPath(const QString &dir);   // ### Qt 6: remove (use setPath() instead)\n     static void setPath(Format format, Scope scope, const QString &path);\n \n     typedef QMap<QString, QVariant> SettingsMap;\n"", ""qitemselectionmodel.h"": ""@@ -92,7 +92,7 @@ public:\n     }\n \n     bool intersects(const QItemSelectionRange &other) const;\n-    QItemSelectionRange intersect(const QItemSelectionRange &other) const; // ### Qt 5: make QT4_SUPPORT\n+    QItemSelectionRange intersect(const QItemSelectionRange &other) const; // ### Qt 6: remove\n     inline QItemSelectionRange intersected(const QItemSelectionRange &other) const\n         { return intersect(other); }\n \n"", ""qbytearray.h"": ""@@ -339,7 +339,7 @@ public:\n     QByteArray &setNum(qulonglong, int base = 10);\n     QByteArray &setNum(float, char f = 'g', int prec = 6);\n     QByteArray &setNum(double, char f = 'g', int prec = 6);\n-    QByteArray &setRawData(const char *a, uint n); // ### Qt 5: use an int\n+    QByteArray &setRawData(const char *a, uint n); // ### Qt 6: use an int\n \n     static QByteArray number(int, int base = 10);\n     static QByteArray number(uint, int base = 10);\n"", ""qchar.h"": ""@@ -190,7 +190,7 @@ public:\n     };\n \n     enum UnicodeVersion {\n-        Unicode_Unassigned,    // ### Qt 5: assign with some constantly big value\n+        Unicode_Unassigned,    // ### Qt 6: assign with some constantly big value\n         Unicode_1_1,\n         Unicode_2_0,\n         Unicode_2_1_2,\n"", ""qline.h"": ""@@ -245,7 +245,7 @@ public:\n     QLineF unitVector() const;\n     Q_DECL_CONSTEXPR inline QLineF normalVector() const;\n \n-    // ### Qt 5: rename intersects() or intersection() and rename IntersectType IntersectionType\n+    // ### Qt 6: rename intersects() or intersection() and rename IntersectType IntersectionType\n     IntersectType intersect(const QLineF &l, QPointF *intersectionPoint) const;\n \n     qreal angle(const QLineF &l) const;\n"", ""qlocale.cpp"": ""@@ -1139,7 +1139,7 @@ qlonglong QLocale::toLongLong(const QString &s, bool *ok) const\n     return d()->stringToLongLong(s, 10, ok, mode);\n }\n \n-// ### Qt5: make the return type for toULongLong() qulonglong.\n+// ### Qt6: make the return type for toULongLong() qulonglong.\n \n /*!\n     Returns the unsigned long long int represented by the localized\n"", ""qwizard.h"": ""@@ -130,7 +130,7 @@ public:\n     void removePage(int id);\n     QWizardPage *page(int id) const;\n     bool hasVisitedPage(int id) const;\n-    QList<int> visitedPages() const;    // ### visitedIds()?\n+    QList<int> visitedPages() const;    // ### Qt 6: visitedIds()?\n     QList<int> pageIds() const;\n     void setStartId(int id);\n     int startId() const;\n"", ""qheaderview.cpp"": ""@@ -291,7 +291,7 @@ QDataStream &operator>>(QDataStream &in, QHeaderViewPrivate::SectionSpan &span)\n \n     \\sa setResizeMode(), stretchLastSection()\n */\n-// ### Qt 5: change to sectionAutoResized()\n+// ### Qt 6: change to sectionAutoResized()\n \n /*!\n     \\fn void QHeaderView::geometriesChanged()\n"", ""qstyle.h"": ""@@ -194,7 +194,7 @@ public:\n         PE_IndicatorItemViewItemDrop,\n \n         PE_PanelItemViewItem,\n-        PE_PanelItemViewRow, // ### Qt 5: remove\n+        PE_PanelItemViewRow, // ### Qt 6: remove\n \n         PE_PanelStatusBar,\n \n@@ -303,7 +303,7 @@ public:\n         SE_ProgressBarContents,\n         SE_ProgressBarLabel,\n \n-        // ### Qt 5: These values are unused; eliminate them\n+        // ### Qt 6: These values are unused; eliminate them\n         SE_DialogButtonAccept,\n         SE_DialogButtonReject,\n         SE_DialogButtonApply,\n@@ -343,7 +343,7 @@ public:\n         SE_CheckBoxLayoutItem,\n         SE_ComboBoxLayoutItem,\n         SE_DateTimeEditLayoutItem,\n-        SE_DialogButtonBoxLayoutItem, // ### remove\n+        SE_DialogButtonBoxLayoutItem, // ### Qt 6: remove\n         SE_LabelLayoutItem,\n         SE_ProgressBarLayoutItem,\n         SE_PushButtonLayoutItem,\n"", ""qcombobox.h"": ""@@ -131,7 +131,7 @@ public:\n     enum SizeAdjustPolicy {\n         AdjustToContents,\n         AdjustToContentsOnFirstShow,\n-        AdjustToMinimumContentsLength, // ### Qt 5: remove\n+        AdjustToMinimumContentsLength, // ### Qt 6: remove\n         AdjustToMinimumContentsLengthWithIcon\n     };\n \n"", ""qdockwidget.h"": ""@@ -82,7 +82,7 @@ public:\n         DockWidgetVerticalTitleBar = 0x08,\n \n         DockWidgetFeatureMask = 0x0f,\n-        AllDockWidgetFeatures = DockWidgetClosable|DockWidgetMovable|DockWidgetFloatable, // ### remove in 5.0\n+        AllDockWidgetFeatures = DockWidgetClosable|DockWidgetMovable|DockWidgetFloatable, // ### Qt 6: remove\n         NoDockWidgetFeatures  = 0x00,\n \n         Reserved              = 0xff\n"", ""qstatusbar.h"": ""@@ -87,7 +87,7 @@ protected:\n     void paintEvent(QPaintEvent *);\n     void resizeEvent(QResizeEvent *);\n \n-    // ### Qt 5: consider making reformat() and hideOrShow() private\n+    // ### Qt 6: consider making reformat() and hideOrShow() private\n     void reformat();\n     void hideOrShow();\n     bool event(QEvent *);\n"", ""tst_qdom.cpp"": ""@@ -1405,7 +1405,7 @@ void tst_QDom::normalizeEndOfLine() const\n \n     const QString expected(QLatin1String(\""<a>\\nc\\nc\\na\\na</a>\""));\n \n-    // ### Qt 5: fix this, if we keep QDom at all\n+    // ### Qt 6: fix this, if we keep QDom at all\n     QEXPECT_FAIL(\""\"", \""The parser doesn't perform newline normalization. Fixing that would change behavior.\"", Continue);\n     QCOMPARE(doc.documentElement().text(), expected);\n }\n""}",resource,"feature
",bug;
9021.0,9021.0,resource,Joona Petrell,Document new input method hints introduced in Qt 5,"Document new input method hints introduced in Qt 5

Change-Id: Ic6aa77b410ed8189c2b100ca527a7019cdaf3b8b",['src/corelib/global/qnamespace.qdoc'],"{""qnamespace.qdoc"": ""@@ -2423,6 +2423,8 @@\n \n     \\value ImhHiddenText             Characters should be hidden, as is typically used when entering passwords.\n                                      This is automatically set when setting QLineEdit::echoMode to \\c Password.\n+    \\value ImhSensitiveData          Typed text should not be stored by the active input method\n+                                     in any persistent storage like predictive user dictionary.\n     \\value ImhNoAutoUppercase        The input method should not try to automatically switch to upper case\n                                      when a sentence ends.\n     \\value ImhPreferNumbers          Numbers are preferred (but not required).\n@@ -2430,6 +2432,10 @@\n     \\value ImhPreferLowercase        Lower case letters are preferred (but not required).\n     \\value ImhNoPredictiveText       Do not use predictive text (i.e. dictionary lookup) while typing.\n \n+    \\value ImhDate                   The text editor functions as a date field.\n+    \\value ImhTime                   The text editor functions as a time field.\n+    \\value ImhMultiLine              The text editor accepts multi-line content.\n+\n     Flags that restrict input (exclusive flags):\n \n     \\value ImhDigitsOnly             Only digits are allowed.\n""}",resource,"resource 
",feature;
12514.0,12514.0,refactor,Gunnar Sletta,Remove the use of QT_MODULE(),"Remove the use of QT_MODULE()

Change-Id: Ie234485162d162935e96adec388361b771342c86","['src/script/api/qscriptextensionplugin.h', 'src/script/api/qscriptcontext.h', 'src/script/api/qscriptcontextinfo.h', 'src/script/api/qscriptengine.h', 'src/script/api/qscriptengineagent.h', 'src/script/api/qscriptable.h', 'src/script/api/qscriptprogram.h', 'src/script/api/qscriptextensioninterface.h', 'src/script/api/qscriptvalue.h', 'src/script/api/qscriptvalueiterator.h', 'src/script/api/qscriptstring.h', 'src/script/api/qscriptclass.h', 'src/scripttools/debugging/qscriptenginedebugger.h', 'src/script/api/qscriptclasspropertyiterator.h']","{""qscriptable.h"": ""@@ -32,7 +32,6 @@ QT_BEGIN_HEADER\n \n QT_BEGIN_NAMESPACE\n \n-QT_MODULE(Script)\n \n #ifndef QT_NO_QOBJECT\n \n"", ""qscriptclass.h"": ""@@ -34,7 +34,6 @@ QT_BEGIN_HEADER\n \n QT_BEGIN_NAMESPACE\n \n-QT_MODULE(Script)\n \n class QScriptString;\n class QScriptClassPropertyIterator;\n"", ""qscriptclasspropertyiterator.h"": ""@@ -33,7 +33,6 @@ QT_BEGIN_HEADER\n \n QT_BEGIN_NAMESPACE\n \n-QT_MODULE(Script)\n \n class QScriptClassPropertyIteratorPrivate;\n class Q_SCRIPT_EXPORT QScriptClassPropertyIterator\n"", ""qscriptcontext.h"": ""@@ -32,7 +32,6 @@ QT_BEGIN_HEADER\n \n QT_BEGIN_NAMESPACE\n \n-QT_MODULE(Script)\n \n class QScriptContextPrivate;\n \n"", ""qscriptcontextinfo.h"": ""@@ -34,7 +34,6 @@ QT_BEGIN_HEADER\n \n QT_BEGIN_NAMESPACE\n \n-QT_MODULE(Script)\n \n class QScriptContext;\n #ifndef QT_NO_DATASTREAM\n"", ""qscriptengine.h"": ""@@ -44,7 +44,6 @@ QT_BEGIN_HEADER\n \n QT_BEGIN_NAMESPACE\n \n-QT_MODULE(Script)\n \n class QDateTime;\n class QScriptClass;\n"", ""qscriptengineagent.h"": ""@@ -33,7 +33,6 @@ QT_BEGIN_HEADER\n \n QT_BEGIN_NAMESPACE\n \n-QT_MODULE(Script)\n \n class QScriptEngine;\n class QScriptValue;\n"", ""qscriptextensioninterface.h"": ""@@ -32,7 +32,6 @@ QT_BEGIN_HEADER\n \n QT_BEGIN_NAMESPACE\n \n-QT_MODULE(Script)\n \n class QScriptEngine;\n \n"", ""qscriptextensionplugin.h"": ""@@ -32,7 +32,6 @@ QT_BEGIN_HEADER\n \n QT_BEGIN_NAMESPACE\n \n-QT_MODULE(Script)\n \n class QScriptValue;\n \n"", ""qscriptprogram.h"": ""@@ -32,7 +32,6 @@ QT_BEGIN_HEADER\n \n QT_BEGIN_NAMESPACE\n \n-QT_MODULE(Script)\n \n class QScriptProgramPrivate;\n class Q_SCRIPT_EXPORT QScriptProgram\n"", ""qscriptstring.h"": ""@@ -32,7 +32,6 @@ QT_BEGIN_HEADER\n \n QT_BEGIN_NAMESPACE\n \n-QT_MODULE(Script)\n \n class QScriptStringPrivate;\n class Q_SCRIPT_EXPORT QScriptString\n"", ""qscriptvalue.h"": ""@@ -33,7 +33,6 @@ QT_BEGIN_HEADER\n \n QT_BEGIN_NAMESPACE\n \n-QT_MODULE(Script)\n \n class QScriptClass;\n class QScriptValue;\n"", ""qscriptvalueiterator.h"": ""@@ -32,7 +32,6 @@ QT_BEGIN_HEADER\n \n QT_BEGIN_NAMESPACE\n \n-QT_MODULE(Script)\n \n class QString;\n class QScriptString;\n"", ""qscriptenginedebugger.h"": ""@@ -48,7 +48,6 @@ QT_BEGIN_HEADER\n \n QT_BEGIN_NAMESPACE\n \n-QT_MODULE(ScriptTools)\n \n class QAction;\n class QScriptEngine;\n""}",refactor,"refactor, deprecate 
",deprecat;
20585.0,20585.0,resource,Marko Niemelä,ConicalGradient modified to produce sharp gradient edge.,"ConicalGradient modified to produce sharp gradient edge.

Previously ConicalGradient produced smooth antialiased transition
between gradient position 1.0 and 0.0. However this suffered
from accuracy problem and transition was spreading more at
pixels that were far away from the gradient center. Thus is is
better to produce sharp consistent transition. Anti-aliased
look can still be achieved by defining the gradient steps and
colors in suitable way near the 1.0 position.

Change-Id: I67040c5c56fdf855fe68d9b3f0d9fde0cc37b59f",['src/effects/ConicalGradient.qml'],"{""ConicalGradient.qml"": ""@@ -84,7 +84,6 @@ Item {\n             sourceItem: gradientRect\n             smooth: true\n             hideSource: true\n-            wrapMode: ShaderEffectSource.Repeat\n             visible: false\n         }\n         property variant maskSource: maskSourceProxy.output\n@@ -108,7 +107,7 @@ Item {\n                 const highp float PI = 3.14159265;\n                 const highp float PIx2inv = 0.1591549;\n                 highp float a = (atan((center.y - qt_TexCoord0.t), (center.x - qt_TexCoord0.s)) + PI - startAngle) * PIx2inv;\n-                gl_FragColor = texture2D(gradientSource, vec2(0.0, a)) * qt_Opacity;\n+                gl_FragColor = texture2D(gradientSource, vec2(0.0, fract(a))) * qt_Opacity;\n             }\n         \""\n \n@@ -125,7 +124,7 @@ Item {\n                 const highp float PI = 3.14159265;\n                 const highp float PIx2inv = 0.1591549;\n                 highp float a = (atan((center.y - qt_TexCoord0.t), (center.x - qt_TexCoord0.s)) + PI - startAngle) * PIx2inv;\n-                gl_FragColor = texture2D(gradientSource, vec2(0.0, a)) * maskAlpha * qt_Opacity;\n+                gl_FragColor = texture2D(gradientSource, vec2(0.0, fract(a))) * maskAlpha * qt_Opacity;\n             }\n         \""\n     }\n""}",resource,"bug, feature 
",resource;
5132.0,5132.0,feature  ,Kai Köhne,QDeclarativeDebug: Allow reconnects to QML debugger port,"QDeclarativeDebug: Allow reconnects to QML debugger port

Allow a new client to attach once the old one was disconnected.
Done by Aurinam Jana.

Change-Id: Id85045204cc011ec6e02db2658173e652b75c07e","['src/declarative/debugger/qdeclarativedebugserver.cpp', 'src/plugins/qmltooling/qmldbg_tcp/qtcpserverconnection.cpp', 'tests/auto/declarative/qdeclarativedebugclient/tst_qdeclarativedebugclient.cpp']","{""qdeclarativedebugserver.cpp"": ""@@ -240,75 +240,66 @@ void QDeclarativeDebugServer::receiveMessage(const QByteArray &message)\n     Q_D(QDeclarativeDebugServer);\n \n     QDataStream in(message);\n-    if (!d->gotHello) {\n-        QString name;\n-        int op;\n-        in >> name >> op;\n-\n-        if (name != QLatin1String(\""QDeclarativeDebugServer\"")\n-                || op != 0) {\n-            qWarning(\""QDeclarativeDebugServer: Invalid hello message\"");\n-            d->connection->disconnect();\n-            return;\n-        }\n-\n-        int version;\n-        in >> version >> d->clientPlugins;\n-\n-        // Send the hello answer immediately, since it needs to arrive before\n-        // the plugins below start sending messages.\n-        QByteArray helloAnswer;\n-        {\n-            QDataStream out(&helloAnswer, QIODevice::WriteOnly);\n-            out << QString(QLatin1String(\""QDeclarativeDebugClient\"")) << 0 << protocolVersion << d->plugins.keys();\n-        }\n-        d->connection->send(helloAnswer);\n-\n-        d->gotHello = true;\n-\n-        QHash<QString, QDeclarativeDebugService*>::Iterator iter = d->plugins.begin();\n-        for (; iter != d->plugins.end(); ++iter) {\n-            QDeclarativeDebugService::Status newStatus = QDeclarativeDebugService::Unavailable;\n-            if (d->clientPlugins.contains(iter.key()))\n-                newStatus = QDeclarativeDebugService::Enabled;\n-            iter.value()->d_func()->status = newStatus;\n-            iter.value()->statusChanged(newStatus);\n-        }\n+    QString name;\n+\n+    in >> name;\n+    if (name == QLatin1String(\""QDeclarativeDebugServer\"")) {\n+        int op = -1;\n+        in >> op;\n+        if (op == 0) {\n+            int version;\n+            in >> version >> d->clientPlugins;\n+\n+            // Send the hello answer immediately, since it needs to arrive before\n+            // the plugins below start sending messages.\n+            QByteArray helloAnswer;\n+            {\n+                QDataStream out(&helloAnswer, QIODevice::WriteOnly);\n+                out << QString(QLatin1String(\""QDeclarativeDebugClient\"")) << 0 << protocolVersion << d->plugins.keys();\n+            }\n+            d->connection->send(helloAnswer);\n \n-        qWarning(\""QDeclarativeDebugServer: Connection established\"");\n-    } else {\n+            d->gotHello = true;\n \n-        QString debugServer(QLatin1String(\""QDeclarativeDebugServer\""));\n+            QHash<QString, QDeclarativeDebugService*>::Iterator iter = d->plugins.begin();\n+            for (; iter != d->plugins.end(); ++iter) {\n+                QDeclarativeDebugService::Status newStatus = QDeclarativeDebugService::Unavailable;\n+                if (d->clientPlugins.contains(iter.key()))\n+                    newStatus = QDeclarativeDebugService::Enabled;\n+                iter.value()->d_func()->status = newStatus;\n+                iter.value()->statusChanged(newStatus);\n+            }\n \n-        QString name;\n-        in >> name;\n+            qWarning(\""QDeclarativeDebugServer: Connection established\"");\n \n-        if (name == debugServer) {\n-            int op = -1;\n-            in >> op;\n+        } else if (op == 1) {\n \n-            if (op == 1) {\n-                // Service Discovery\n-                QStringList oldClientPlugins = d->clientPlugins;\n-                in >> d->clientPlugins;\n+            // Service Discovery\n+            QStringList oldClientPlugins = d->clientPlugins;\n+            in >> d->clientPlugins;\n \n-                QHash<QString, QDeclarativeDebugService*>::Iterator iter = d->plugins.begin();\n-                for (; iter != d->plugins.end(); ++iter) {\n-                    const QString pluginName = iter.key();\n-                    QDeclarativeDebugService::Status newStatus = QDeclarativeDebugService::Unavailable;\n-                    if (d->clientPlugins.contains(pluginName))\n-                        newStatus = QDeclarativeDebugService::Enabled;\n+            QHash<QString, QDeclarativeDebugService*>::Iterator iter = d->plugins.begin();\n+            for (; iter != d->plugins.end(); ++iter) {\n+                const QString pluginName = iter.key();\n+                QDeclarativeDebugService::Status newStatus = QDeclarativeDebugService::Unavailable;\n+                if (d->clientPlugins.contains(pluginName))\n+                    newStatus = QDeclarativeDebugService::Enabled;\n \n-                    if (oldClientPlugins.contains(pluginName)\n-                            != d->clientPlugins.contains(pluginName)) {\n-                        iter.value()->d_func()->status = newStatus;\n-                        iter.value()->statusChanged(newStatus);\n-                    }\n+                if (oldClientPlugins.contains(pluginName)\n+                        != d->clientPlugins.contains(pluginName)) {\n+                    iter.value()->d_func()->status = newStatus;\n+                    iter.value()->statusChanged(newStatus);\n                 }\n-            } else {\n-                qWarning(\""QDeclarativeDebugServer: Invalid control message %d\"", op);\n             }\n+\n         } else {\n+            qWarning(\""QDeclarativeDebugServer: Invalid control message %d\"", op);\n+            d->connection->disconnect();\n+            return;\n+        }\n+\n+    } else {\n+        if (d->gotHello) {\n             QByteArray message;\n             in >> message;\n \n@@ -325,7 +316,10 @@ void QDeclarativeDebugServer::receiveMessage(const QByteArray &message)\n                                           Q_ARG(QString, name),\n                                           Q_ARG(QByteArray, message));\n             }\n+        } else {\n+            qWarning(\""QDeclarativeDebugServer: Invalid hello message\"");\n         }\n+\n     }\n }\n \n"", ""qtcpserverconnection.cpp"": ""@@ -168,13 +168,14 @@ void QTcpServerConnection::newConnection()\n {\n     Q_D(QTcpServerConnection);\n \n-    if (d->socket) {\n+    if (d->socket && d->socket->peerPort()) {\n         qWarning(\""QDeclarativeDebugServer: Another client is already connected\"");\n         QTcpSocket *faultyConnection = d->tcpServer->nextPendingConnection();\n         delete faultyConnection;\n         return;\n     }\n \n+    delete d->socket;\n     d->socket = d->tcpServer->nextPendingConnection();\n     d->socket->setParent(this);\n     d->protocol = new QPacketProtocol(d->socket, this);\n"", ""tst_qdeclarativedebugclient.cpp"": ""@@ -50,6 +50,8 @@\n #include \""../../../shared/util.h\""\n #include \""../shared/debugutil_p.h\""\n \n+const int port = 13770;\n+\n class tst_QDeclarativeDebugClient : public QObject\n {\n     Q_OBJECT\n@@ -63,11 +65,14 @@ private slots:\n     void name();\n     void status();\n     void sendMessage();\n+    void parallelConnect();\n+    void sequentialConnect();\n };\n \n void tst_QDeclarativeDebugClient::initTestCase()\n {\n-    QTest::ignoreMessage(QtWarningMsg, \""QDeclarativeDebugServer: Waiting for connection on port 13770...\"");\n+    const QString waitingMsg = QString(\""QDeclarativeDebugServer: Waiting for connection on port %1...\"").arg(port);\n+    QTest::ignoreMessage(QtWarningMsg, waitingMsg.toAscii().constData());\n     new QDeclarativeEngine(this);\n \n     m_conn = new QDeclarativeDebugConnection(this);\n@@ -75,7 +80,7 @@ void tst_QDeclarativeDebugClient::initTestCase()\n     QDeclarativeDebugTestClient client(\""tst_QDeclarativeDebugClient::handshake()\"", m_conn);\n     QDeclarativeDebugTestService service(\""tst_QDeclarativeDebugClient::handshake()\"");\n \n-    m_conn->connectToHost(\""127.0.0.1\"", 13770);\n+    m_conn->connectToHost(\""127.0.0.1\"", port);\n \n     QTest::ignoreMessage(QtWarningMsg, \""QDeclarativeDebugServer: Connection established\"");\n     bool ok = m_conn->waitForConnected();\n@@ -134,14 +139,47 @@ void tst_QDeclarativeDebugClient::sendMessage()\n     QCOMPARE(resp, msg);\n }\n \n+void tst_QDeclarativeDebugClient::parallelConnect()\n+{\n+    QDeclarativeDebugConnection connection2;\n+\n+    connection2.connectToHost(\""127.0.0.1\"", port);\n+    QTest::ignoreMessage(QtWarningMsg, \""QDeclarativeDebugServer: Another client is already connected\"");\n+    // will connect & immediately disconnect\n+    QVERIFY(connection2.waitForConnected());\n+    QTRY_COMPARE(connection2.state(), QAbstractSocket::UnconnectedState);\n+    QVERIFY(m_conn->isConnected());\n+}\n+\n+void tst_QDeclarativeDebugClient::sequentialConnect()\n+{\n+    QDeclarativeDebugConnection connection2;\n+    QDeclarativeDebugTestClient client2(\""tst_QDeclarativeDebugClient::handshake()\"", &connection2);\n+    QDeclarativeDebugTestService service(\""tst_QDeclarativeDebugClient::handshake()\"");\n+\n+    m_conn->close();\n+    QVERIFY(!m_conn->isConnected());\n+    QCOMPARE(m_conn->state(), QAbstractSocket::UnconnectedState);\n+\n+    // Make sure that the disconnect is actually delivered to the server\n+    QGuiApplication::processEvents();\n+\n+    connection2.connectToHost(\""127.0.0.1\"", port);\n+    QTest::ignoreMessage(QtWarningMsg, \""QDeclarativeDebugServer: Connection established\"");\n+    QVERIFY(connection2.waitForConnected());\n+    QVERIFY(connection2.isConnected());\n+    QTRY_VERIFY(client2.status() == QDeclarativeDebugClient::Enabled);\n+}\n+\n int main(int argc, char *argv[])\n {\n     int _argc = argc + 1;\n     char **_argv = new char*[_argc];\n     for (int i = 0; i < argc; ++i)\n         _argv[i] = argv[i];\n-    char arg[] = \""-qmljsdebugger=port:13770\"";\n-    _argv[_argc - 1] = arg;\n+\n+    const QString qmlJsArgument = QString(\""-qmljsdebugger=port:%1\"").arg(port);\n+    _argv[_argc - 1] = qmlJsArgument.toAscii().data();\n \n     QGuiApplication app(_argc, _argv);\n     tst_QDeclarativeDebugClient tc;\n""}",feature,"bug, feature 
",bug;
19051.0,19051.0,bug,Rohan McGovern [inactive],move postProcessProject() call to sane location,"qmake: don't overwrite QMAKE_EXT_CPP, QMAKE_EXT_C, QMAKE_EXT_H

postProcessProject would unnecessarily reset the QMAKE_EXT_* variables
to a default value containing less extensions than the default value set
in Option::init.  This didn't matter until
84ddc063805deaa6e76eeff56076f5f359635073, but now it can cause compile
failures in code using file extensions other than .cpp (e.g
qtjsbackend).

Change-Id: Idb7912a5404f6054010d2f29cce820a167de4f6f",['qmake/option.cpp'],"{""option.cpp"": ""@@ -687,15 +687,15 @@ bool Option::prepareProject(const QString &pfile)\n \n bool Option::postProcessProject(QMakeProject *project)\n {\n-    Option::cpp_ext = project->variables()[\""QMAKE_EXT_CPP\""];\n-    if(cpp_ext.isEmpty())\n-        cpp_ext << \"".cpp\""; //something must be there\n-    Option::h_ext = project->variables()[\""QMAKE_EXT_H\""];\n-    if(h_ext.isEmpty())\n-        h_ext << \"".h\"";\n-    Option::c_ext = project->variables()[\""QMAKE_EXT_C\""];\n-    if(c_ext.isEmpty())\n-        c_ext << \"".c\""; //something must be there\n+    QStringList new_cpp_ext = project->variables()[\""QMAKE_EXT_CPP\""];\n+    if(!new_cpp_ext.isEmpty())\n+        cpp_ext = new_cpp_ext;\n+    QStringList new_h_ext = project->variables()[\""QMAKE_EXT_H\""];\n+    if(!new_h_ext.isEmpty())\n+        h_ext = new_h_ext;\n+    QStringList new_c_ext = project->variables()[\""QMAKE_EXT_C\""];\n+    if(!new_c_ext.isEmpty())\n+        c_ext = new_c_ext;\n \n     if(!project->isEmpty(\""QMAKE_EXT_RES\""))\n         Option::res_ext = project->first(\""QMAKE_EXT_RES\"");\n""}",bug,"bug, refactor 
",others;
20556.0,20556.0,"test,feature",Rohan McGovern [inactive],"Add testplanner, testscheduler.","Add testplanner, testscheduler.

testplanner and testscheduler implement a new way of running tests,
outside of the `make' tool.

Thus far, `make' has been used to run all autotests.  Recently, the lack
of flexibility in this approach has become apparent: it's quite
difficult to have `make' do something intelligent with
CONFIG+=parallel_test.  Handling of CONFIG+=insignificant_test is also
suboptimal.

testscheduler has the immediate benefit over `make check' that it
is able to correctly handle CONFIG+=parallel_test for running autotests
in parallel.

Change-Id: I75d3b804b90cf25271027a4226d4b64933ceb61e","['scripts/generic/t/data/test_projects/src/pass.cpp', 'scripts/generic/t/data/test_projects/test_projects.pro', 'scripts/lib/perl5/QtQA/Test/More.pm', 'scripts/lib/perl5/QtQA/QMake/t/01-QtQA-QMake-Project.t', 'scripts/generic/t/data/test_projects/tests/failing_disabled_test/failing_disabled_test.pro', 'scripts/generic/t/data/test_projects/not_tests/not_tests.pro', 'scripts/generic/t/data/test_projects/tests/failing_insignificant_test/failing_insignificant_test.pro', 'scripts/qt/qtmod_test.pl', 'scripts/generic/t/50-testscheduler.t', 'scripts/generic/t/data/test_projects/not_tests/app2/app2.pro', 'scripts/generic/testplanner.pl', 'scripts/generic/t/data/test_projects/expected_testplan.txt', 'scripts/generic/testscheduler.pl', 'scripts/generic/t/data/test_projects/not_tests/app1/app1.pro', 'scripts/generic/t/data/test_projects/tests/passing_insignificant_test/passing_insignificant_test.pro', 'scripts/generic/t/data/test_projects/tests/failing_significant_test/failing_significant_test.pro', 'scripts/generic/t/data/test_projects/tests/passing_custom_check_target/passing_custom_check_target.pro', 'scripts/generic/t/data/test_projects/tests/tests.pro', 'scripts/generic/t/40-testplanner.t', 'scripts/generic/t/data/test_projects/src/fail.cpp', 'scripts/generic/t/data/test_projects/tests/passing_significant_test/passing_significant_test.pro', 'scripts/generic/t/data/test_projects/tests/failing_custom_check_target/failing_custom_check_target.pro']","{""40-testplanner.t"": ""@@ -0,0 +1,90 @@\n+#!/usr/bin/env perl\n+use 5.010;\n+use strict;\n+use warnings;\n+\n+=head1 NAME\n+\n+40-testplanner.t - basic test for testplanner.pl\n+\n+=cut\n+\n+use English qw(-no_match_vars);\n+use File::Spec::Functions;\n+use File::Temp;\n+use File::chdir;\n+use FindBin;\n+use Readonly;\n+use Test::More;\n+use Text::Diff;\n+\n+use lib \""$FindBin::Bin/../../lib/perl5\"";\n+use QtQA::Test::More qw(find_qmake);\n+\n+Readonly my $TESTPLANNER => catfile( $FindBin::Bin, qw(.. testplanner.pl) );\n+\n+Readonly my $TESTDATA_DIR => catfile( $FindBin::Bin, qw(data test_projects) );\n+\n+Readonly my $QMAKE => find_qmake( );\n+\n+sub test_testplanner_on_testdata\n+{\n+\n+    my $testplan = File::Temp->new(\n+        TEMPLATE => 'qtqa-testplan-XXXXXX',\n+        UNLINK => 1,\n+        TMPDIR => 1,\n+    );\n+\n+    my @cmd = (\n+        $EXECUTABLE_NAME,\n+        $TESTPLANNER,\n+        '--input',\n+        $TESTDATA_DIR,\n+        '--output',\n+        \""$testplan\"",\n+    );\n+\n+    my $status = system( @cmd );\n+    is( $status, 0, 'testplanner exit code OK' );\n+\n+    # Note we must open a new fh to the testplan file, since the testplanner\n+    # script overwrote it.\n+    my @lines;\n+    open( my $fh, '<', \""$testplan\"" ) || die \""open $testplan for read: $!\"";\n+    while (my $line = <$fh>) {\n+        $line =~ s{\\Q$TESTDATA_DIR\\E}{%TESTDATA_DIR%}g;\n+        push @lines, $line;\n+    }\n+\n+    # The order of output from testplanner is undefined.\n+    # We sort the lines for a stable comparison.\n+    @lines = sort @lines;\n+\n+    my $diff = diff( \\@lines, \""$TESTDATA_DIR/expected_testplan.txt\"" );\n+    ok( !$diff, 'testplanner output as expected' )\n+        || diag( \""diff between actual and expected:\\n$diff\"" );\n+\n+    return;\n+}\n+\n+sub run\n+{\n+    # qmake the testdata before doing anything else.\n+    ok( $QMAKE, 'found some qmake' );\n+\n+    {\n+        local $CWD = $TESTDATA_DIR;\n+        my $status = system( $QMAKE );\n+        is( $status, 0, 'qmake ran OK' );\n+    }\n+\n+    test_testplanner_on_testdata;\n+    done_testing;\n+\n+    return;\n+}\n+\n+run if (!caller);\n+1;\n+\n"", ""50-testscheduler.t"": ""@@ -0,0 +1,203 @@\n+#!/usr/bin/env perl\n+use 5.010;\n+use strict;\n+use warnings;\n+\n+=head1 NAME\n+\n+50-testplanner.t - basic test for testscheduler.pl\n+\n+=cut\n+\n+use English qw(-no_match_vars);\n+use File::Spec::Functions;\n+use File::Temp;\n+use File::chdir;\n+use FindBin;\n+use Readonly;\n+use Test::More;\n+use Text::Diff;\n+use Capture::Tiny qw(capture_merged);\n+\n+use lib \""$FindBin::Bin/../../lib/perl5\"";\n+use QtQA::Test::More qw(find_qmake);\n+\n+Readonly my $TESTPLANNER => catfile( $FindBin::Bin, qw(.. testplanner.pl) );\n+\n+Readonly my $TESTSCHEDULER => catfile( $FindBin::Bin, qw(.. testscheduler.pl) );\n+\n+Readonly my $TESTDATA_DIR => catfile( $FindBin::Bin, qw(data test_projects) );\n+\n+Readonly my $QMAKE => find_qmake( );\n+\n+# Given a $directory, returns a File::Temp object pointing to a created testplan.\n+# Only the filename value of the File::Temp should be used.\n+# Any additional @args are passed to testplanner.\n+sub make_testplan_from_directory\n+{\n+    my ($directory, @args) = @_;\n+\n+    my $testplan = File::Temp->new(\n+        TEMPLATE => 'qtqa-testplan-XXXXXX',\n+        UNLINK => 1,\n+        TMPDIR => 1,\n+    );\n+\n+    my @cmd = (\n+        $EXECUTABLE_NAME,\n+        $TESTPLANNER,\n+        '--input',\n+        $directory,\n+        '--output',\n+        \""$testplan\"",\n+        @args,\n+    );\n+\n+    my $status = system( @cmd );\n+    is( $status, 0, 'testplanner exit code OK' );\n+\n+    return $testplan;\n+}\n+\n+sub test_mixed\n+{\n+    my $testplan = make_testplan_from_directory $TESTDATA_DIR;\n+\n+    my $status;\n+    my $output = capture_merged {\n+        $status = system(\n+            $EXECUTABLE_NAME,\n+            $TESTSCHEDULER,\n+            '--plan',\n+            \""$testplan\"",\n+            '-j4',\n+            '--sync-output',\n+        );\n+    };\n+    isnt( $status, 0, 'testscheduler fails if some tests fail' );\n+    is( $output, <<'EOF', 'testscheduler output looks OK' );\n+failing. 1 arg(s)\n+passing. 1 arg(s)\n+QtQA::App::TestScheduler: ran 2 parallel tests.  Starting 5 serial tests.\n+Custom failing\n+failing. 1 arg(s)\n+failing. 1 arg(s)\n+Custom passing\n+passing. 1 arg(s)\n+Totals: 7 tests, 3 passes, 3 fails, 1 insignificant fail\n+EOF\n+\n+    return;\n+}\n+\n+# Test what happens with a directory containing no tests\n+sub test_none\n+{\n+    my $testplan = make_testplan_from_directory \""$TESTDATA_DIR/not_tests\"";\n+\n+    my $status;\n+    my $output = capture_merged {\n+        $status = system(\n+            $EXECUTABLE_NAME,\n+            $TESTSCHEDULER,\n+            '--plan',\n+            \""$testplan\"",\n+        );\n+    };\n+    is( $status, 0, 'testscheduler with no tests is a pass' );\n+    is( $output, <<'EOF', 'testscheduler output as expected' );\n+Totals: no tests, no passes\n+EOF\n+}\n+\n+sub test_single_fail\n+{\n+    my $testplan = make_testplan_from_directory \""$TESTDATA_DIR/tests/failing_significant_test\"";\n+\n+    my $status;\n+    my $output = capture_merged {\n+        $status = system(\n+            $EXECUTABLE_NAME,\n+            $TESTSCHEDULER,\n+            '--plan',\n+            \""$testplan\"",\n+        );\n+    };\n+    isnt( $status, 0, 'testscheduler with single fail is a fail' );\n+    is( $output, <<'EOF', 'testscheduler output as expected' );\n+failing. 1 arg(s)\n+Totals: 1 test, no passes, 1 fail\n+EOF\n+}\n+\n+sub test_single_insignificant_fail\n+{\n+    # Testing with some additional args\n+    my $testplan = make_testplan_from_directory(\n+        \""$TESTDATA_DIR/tests/failing_insignificant_test\"",\n+        '--',\n+        'arg1',\n+        'arg two',\n+    );\n+\n+    my $status;\n+    my $output = capture_merged {\n+        $status = system(\n+            $EXECUTABLE_NAME,\n+            $TESTSCHEDULER,\n+            '--plan',\n+            \""$testplan\"",\n+        );\n+    };\n+    is( $status, 0, 'testscheduler with single insignificant fail is a pass' );\n+    is( $output, <<'EOF', 'testscheduler output as expected' );\n+failing. 3 arg(s)\n+Totals: 1 test, no passes, 1 insignificant fail\n+EOF\n+}\n+\n+sub test_single_pass\n+{\n+    my $testplan = make_testplan_from_directory \""$TESTDATA_DIR/tests/passing_significant_test\"";\n+\n+    my $status;\n+    my $output = capture_merged {\n+        $status = system(\n+            $EXECUTABLE_NAME,\n+            $TESTSCHEDULER,\n+            '--plan',\n+            \""$testplan\"",\n+        );\n+    };\n+    is( $status, 0, 'testscheduler with single pass is a pass' );\n+    is( $output, <<'EOF', 'testscheduler output as expected' );\n+passing. 1 arg(s)\n+Totals: 1 test, 1 pass\n+EOF\n+}\n+\n+sub run\n+{\n+    # qmake the testdata before doing anything else.\n+    ok( $QMAKE, 'found some qmake' );\n+\n+    {\n+        local $CWD = $TESTDATA_DIR;\n+        # we use qmake -r so we can access the makefiles at any level\n+        my $status = system( $QMAKE, '-r' );\n+        is( $status, 0, 'qmake ran OK' );\n+    }\n+\n+    test_none;\n+    test_single_fail;\n+    test_single_insignificant_fail;\n+    test_single_pass;\n+    test_mixed;\n+    done_testing;\n+\n+    return;\n+}\n+\n+run if (!caller);\n+1;\n+\n"", ""expected_testplan.txt"": ""@@ -0,0 +1,7 @@\n+{\""TARGET\"" => \""failing_custom_check_target\"",\""args\"" => [\""perl\"",\""-E\"",\""say q{Custom failing}; exit 2\""],\""cwd\"" => \""%TESTDATA_DIR%/tests/failing_custom_check_target\"",\""insignificant_test\"" => 0,\""parallel_test\"" => 0}\n+{\""TARGET\"" => \""failing_disabled_test\"",\""args\"" => [\""./failing_disabled_test\""],\""cwd\"" => \""%TESTDATA_DIR%/tests/failing_disabled_test\"",\""insignificant_test\"" => 0,\""parallel_test\"" => 0}\n+{\""TARGET\"" => \""failing_insignificant_test\"",\""args\"" => [\""./failing_insignificant_test\""],\""cwd\"" => \""%TESTDATA_DIR%/tests/failing_insignificant_test\"",\""insignificant_test\"" => 1,\""parallel_test\"" => 0}\n+{\""TARGET\"" => \""failing_significant_test\"",\""args\"" => [\""./failing_significant_test\""],\""cwd\"" => \""%TESTDATA_DIR%/tests/failing_significant_test\"",\""insignificant_test\"" => 0,\""parallel_test\"" => 1}\n+{\""TARGET\"" => \""passing_custom_check_target\"",\""args\"" => [\""perl\"",\""-E\"",\""say q{Custom passing}; exit 0\""],\""cwd\"" => \""%TESTDATA_DIR%/tests/passing_custom_check_target\"",\""insignificant_test\"" => 0,\""parallel_test\"" => 0}\n+{\""TARGET\"" => \""passing_insignificant_test\"",\""args\"" => [\""./passing_insignificant_test\""],\""cwd\"" => \""%TESTDATA_DIR%/tests/passing_insignificant_test\"",\""insignificant_test\"" => 1,\""parallel_test\"" => 1}\n+{\""TARGET\"" => \""passing_significant_test\"",\""args\"" => [\""./passing_significant_test\""],\""cwd\"" => \""%TESTDATA_DIR%/tests/passing_significant_test\"",\""insignificant_test\"" => 0,\""parallel_test\"" => 0}\n"", ""app1.pro"": ""@@ -0,0 +1,3 @@\n+TEMPLATE=app\n+CONFIG-=qt\n+SOURCES=../../src/pass.cpp\n"", ""app2.pro"": ""@@ -0,0 +1,3 @@\n+TEMPLATE=app\n+CONFIG-=qt\n+SOURCES=../../src/pass.cpp\n"", ""not_tests.pro"": ""@@ -0,0 +1,4 @@\n+TEMPLATE=subdirs\n+SUBDIRS=\\\n+    app1\\\n+    app2\\\n"", ""fail.cpp"": ""@@ -0,0 +1,49 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n+** Contact: http://www.qt-project.org/\n+**\n+** This file is part of the test suite of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#include <stdio.h>\n+\n+int main(int argc, char**)\n+{\n+    printf( \""failing. %d arg(s)\\n\"", argc );\n+\n+    return 1;\n+}\n"", ""pass.cpp"": ""@@ -0,0 +1,55 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n+** Contact: http://www.qt-project.org/\n+**\n+** This file is part of the test suite of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#include <stdio.h>\n+#include <unistd.h>\n+\n+int main(int argc, char**)\n+{\n+    /*\n+        This sleep gives predictable timing for a \""fail\"" test vs a \""pass\"" test,\n+        for testing of parallel_test\n+    */\n+    sleep( 2 );\n+    printf( \""passing. %d arg(s)\\n\"", argc );\n+\n+    return 0;\n+}\n"", ""test_projects.pro"": ""@@ -0,0 +1,7 @@\n+# Under this directory are various test projects, used for testing\n+# testplanner / testscheduler.\n+\n+TEMPLATE=subdirs\n+SUBDIRS=\\\n+    tests \\\n+    not_tests \\\n"", ""failing_custom_check_target.pro"": ""@@ -0,0 +1,3 @@\n+TEMPLATE=subdirs\n+check.commands = $(TESTRUNNER) perl -E \\\""say q{Custom failing}; exit 2\\\"" $(TESTARGS)\n+QMAKE_EXTRA_TARGETS += check\n"", ""failing_disabled_test.pro"": ""@@ -0,0 +1,4 @@\n+TEMPLATE=app\n+CONFIG-=qt\n+CONFIG+=testcase\n+SOURCES=../../src/fail.cpp\n"", ""failing_insignificant_test.pro"": ""@@ -0,0 +1,5 @@\n+TEMPLATE=app\n+CONFIG-=qt\n+CONFIG+=testcase\n+CONFIG+=insignificant_test\n+SOURCES=../../src/fail.cpp\n"", ""failing_significant_test.pro"": ""@@ -0,0 +1,5 @@\n+TEMPLATE=app\n+CONFIG-=qt\n+CONFIG+=testcase\n+CONFIG+=parallel_test\n+SOURCES=../../src/fail.cpp\n"", ""passing_custom_check_target.pro"": ""@@ -0,0 +1,3 @@\n+TEMPLATE=subdirs\n+check.commands = $(TESTRUNNER) perl -E \\\""say q{Custom passing}; exit 0\\\"" $(TESTARGS)\n+QMAKE_EXTRA_TARGETS += check\n"", ""passing_insignificant_test.pro"": ""@@ -0,0 +1,6 @@\n+TEMPLATE=app\n+CONFIG-=qt\n+CONFIG+=testcase\n+CONFIG+=insignificant_test\n+CONFIG+=parallel_test\n+SOURCES=../../src/pass.cpp\n"", ""passing_significant_test.pro"": ""@@ -0,0 +1,4 @@\n+TEMPLATE=app\n+CONFIG-=qt\n+CONFIG+=testcase\n+SOURCES=../../src/pass.cpp\n"", ""tests.pro"": ""@@ -0,0 +1,11 @@\n+TEMPLATE=subdirs\n+SUBDIRS=\\\n+    passing_significant_test\\\n+    passing_insignificant_test\\\n+    failing_significant_test\\\n+    failing_insignificant_test\\\n+    failing_disabled_test\\\n+    passing_custom_check_target\\\n+    failing_custom_check_target\\\n+\n+disabled_test.CONFIG += no_check_target\n"", ""testplanner.pl"": ""@@ -0,0 +1,355 @@\n+#!/usr/bin/env perl\n+#############################################################################\n+##\n+## Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n+## Contact: http://www.qt-project.org/\n+##\n+## This file is part of the Quality Assurance module of the Qt Toolkit.\n+##\n+## $QT_BEGIN_LICENSE:LGPL$\n+## GNU Lesser General Public License Usage\n+## This file may be used under the terms of the GNU Lesser General Public\n+## License version 2.1 as published by the Free Software Foundation and\n+## appearing in the file LICENSE.LGPL included in the packaging of this\n+## file. Please review the following information to ensure the GNU Lesser\n+## General Public License version 2.1 requirements will be met:\n+## http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+##\n+## In addition, as a special exception, Nokia gives you certain additional\n+## rights. These rights are described in the Nokia Qt LGPL Exception\n+## version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+##\n+## GNU General Public License Usage\n+## Alternatively, this file may be used under the terms of the GNU General\n+## Public License version 3.0 as published by the Free Software Foundation\n+## and appearing in the file LICENSE.GPL included in the packaging of this\n+## file. Please review the following information to ensure the GNU General\n+## Public License version 3.0 requirements will be met:\n+## http://www.gnu.org/copyleft/gpl.html.\n+##\n+## Other Usage\n+## Alternatively, this file may be used in accordance with the terms and\n+## conditions contained in a signed written agreement between you and Nokia.\n+##\n+##\n+##\n+##\n+##\n+##\n+## $QT_END_LICENSE$\n+##\n+#############################################################################\n+\n+use 5.010;\n+use strict;\n+use warnings;\n+\n+package QtQA::App::TestPlanner;\n+\n+=head1 NAME\n+\n+testplanner - construct a test plan for a set of testcases\n+\n+=head1 SYNOPSIS\n+\n+  # Make a plan to run all available tests under this directory ...\n+  $ testplanner --input path/to/tests --output testplan.txt\n+\n+  # Then run them all\n+  $ testscheduler --timeout 120 -j4 --sync-output --plan testplan.txt\n+\n+testplanner will iterate through a build tree, collecting information\n+about autotests and preparing a test plan to be used by testrunner.\n+\n+=head2 OPTIONS\n+\n+=over\n+\n+=item B<--input> PATH (mandatory)\n+\n+Specifies the build tree from which a testplan should be created.\n+\n+=item B<--output> PATH (mandatory)\n+\n+Specifies the output test plan filename.\n+\n+=item B<--make> MAKE\n+\n+Customize the make command to be used for `make check'.\n+Defaults to `nmake' on Windows and `make' everywhere else.\n+\n+=back\n+\n+Further options may be passed to the testcases themselves.\n+These should be separated from testplanner options with a '--'.\n+For example:\n+\n+  testplanner --input . --output plan.txt -- -silent -no-crash-handler\n+\n+... to create a testplan which will run the tests with\n+\""-silent -no-crash-handler\"" arguments.\n+\n+=head1 DESCRIPTION\n+\n+testplanner creates a testplan according to the contents of a given\n+build tree.\n+\n+testplanner is primarily designed to work with qmake.\n+\n+Any test which would be run by the `make check' command under the\n+build tree will be included in the test plan.  This is normally\n+achieved by using CONFIG+=testcase in a testcase .pro file.\n+Custom `check' targets may also be used, but these B<must> support\n+the $(TESTRUNNER) parameter to `make check' as CONFIG+=testcase does.\n+\n+The precise output format of testplanner is undefined, but it\n+is plaintext and may be influenced by values from the buildsystem\n+such as:\n+\n+=over\n+\n+=item CONFIG+=insignificant_test\n+\n+Indicates the result of the test can be ignored.\n+\n+=item CONFIG+=parallel_test\n+\n+Indicates the test is safe to run in parallel with other tests.\n+\n+=back\n+\n+\n+\n+=cut\n+\n+use Data::Dumper;\n+use English qw(-no_match_vars);\n+use Fcntl qw(LOCK_EX LOCK_UN SEEK_END);\n+use File::Basename;\n+use File::Spec::Functions qw(:ALL);\n+use File::chdir;\n+use Getopt::Long;\n+use Lingua::EN::Inflect qw(inflect);\n+use List::MoreUtils qw(apply);\n+use Pod::Usage;\n+use Readonly;\n+\n+use FindBin;\n+use lib \""$FindBin::Bin/../lib/perl5\"";\n+\n+use autodie;\n+\n+use QtQA::QMake::Project;\n+\n+Readonly my $WINDOWS => ($OSNAME =~ m{win32}i);\n+\n+sub new\n+{\n+    my ($class) = @_;\n+    return bless {\n+        this_script => rel2abs( $0 ),\n+    }, $class;\n+}\n+\n+sub run\n+{\n+    my ($self, @args) = @_;\n+\n+    my $testcase;\n+\n+    local @ARGV = @args;\n+    GetOptions(\n+        'help|?' => sub { pod2usage(0) },\n+        'input=s' => \\$self->{ input },\n+        'output=s' => \\$self->{ output },\n+        'make=s' => \\$self->{ make },\n+        'testcase' => \\$testcase,\n+    ) || pod2usage(2);\n+\n+    # Testcase mode; we're calling ourselves for one specific testcase.\n+    # The remaining args are the testcase command and arguments.\n+    if ($testcase) {\n+        return $self->plan_testcase( @ARGV );\n+    }\n+\n+    foreach my $arg (qw(input output)) {\n+        $self->{ $arg } || die \""Missing mandatory --$arg argument\"";\n+    }\n+\n+    # We're going to pass output to subprocesses with a different\n+    # working directory, we'd better make it absolute\n+    $self->{ output } = rel2abs( $self->{ output } );\n+\n+    # And also delete it if it currently exists\n+    if (-e $self->{ output }) {\n+        unlink( $self->{ output } );\n+    }\n+\n+    if (!$self->{ make }) {\n+        $self->{ make } = $self->default_make( );\n+    }\n+\n+    $self->run_make_check( @ARGV );\n+    $self->finalize_test_plan( $self->{ output } );\n+\n+    return;\n+}\n+\n+# finalize the test plan;\n+# currently does not actually modify the test plan in any way,\n+# just does a basic sanity check that it exists, can be parsed,\n+# and summarizes it.\n+sub finalize_test_plan\n+{\n+    my ($self, $filename) = @_;\n+\n+    if (! -e $filename) {\n+        warn \""No tests found under $self->{ input }\\n\"";\n+\n+        # No tests? make an empty testplan.\n+        open( my $fh, '>', $filename ) || die \""open $filename for create: $!\"";\n+        close( $fh ) || die \""close $filename after create: $!\"";\n+\n+        return;\n+    }\n+\n+    my $count = 0;\n+    open( my $fh, '<', $filename );\n+    while (my $line = <$fh>) {\n+        ++$count;\n+        eval $line;\n+        if (my $error = $@) {\n+            die \""$filename:$count: error: $error\"";\n+        }\n+    }\n+\n+    print inflect \""Test plan generated for NO(test,$count) at $filename\\n\"";\n+\n+    return;\n+}\n+\n+sub default_make\n+{\n+    my ($self) = @_;\n+\n+    if ($WINDOWS) {\n+        return 'nmake';\n+    }\n+\n+    return 'make';\n+}\n+\n+sub plan_testcase\n+{\n+    my ($self, $testcase, @args) = @_;\n+\n+    my $make = $self->{ make };\n+    my $output = $self->{ output };\n+\n+    # FIXME: how to accurately figure out the calling Makefile on all\n+    # platforms?\n+    #\n+    # For GNU make, this could be done by using the $(MAKEFILE_LIST) variable.\n+    # For nmake, there doesn't seem a clear, generic solution.\n+    # The GNU make solution is deliberately unimplemented so that, if this\n+    # should ever start to cause problems, the problems will be reproducible\n+    # on all platforms.\n+    #\n+    # In practice this is not thought to be a problem - even qmake assumes\n+    # the makefile is always called \""Makefile\"" in various places.\n+\n+    my $prj = QtQA::QMake::Project->new( 'Makefile' );\n+    $prj->set_make( $make );\n+\n+    # Collect all interesting info about the tests.\n+    my @qmake_tests = qw(\n+        parallel_test\n+        insignificant_test\n+    );\n+    my @qmake_scalar_values = qw(\n+        TARGET\n+    );\n+    my @qmake_keys = (@qmake_tests, @qmake_scalar_values);\n+\n+    my %info = (\n+        args => [ $testcase, @args ],\n+        cwd => $CWD,\n+        map( { my $v = $prj->test( $_ ); $_ => $v } @qmake_tests),\n+        map( { my $v = $prj->values( $_ ); $_ => $v } @qmake_scalar_values),\n+    );\n+\n+    # flatten info before passing to Data::Dumper\n+    @info{ @qmake_keys } = apply { $_ = \""$_\"" } @info{ @qmake_keys };\n+\n+    my $dumper = Data::Dumper->new( [ \\%info ] );\n+    $dumper->Indent( 0 );   # all output on one line\n+    $dumper->Terse( 1 );    # omit leading $VAR1\n+    $dumper->Sortkeys( 1 ); # get a predictable order\n+    $dumper->Useqq( 1 );    # handle special characters safely (although none are expected)\n+\n+    my $info_string = $dumper->Dump( );\n+\n+    # trivial sanity check: should be just one line\n+    if ($info_string =~ m{\\n}) {\n+        die \""internal error: multiple lines in testcase info string:\\n$info_string\"";\n+    }\n+\n+    # Now write the info to the testplan (single line).\n+    open( my $fh, '>>', $output );\n+    flock( $fh, LOCK_EX );\n+    seek( $fh, 0, SEEK_END );\n+    print $fh \""$info_string\\n\"";\n+    flock( $fh, LOCK_UN );\n+    close( $fh );\n+\n+    warn \""  testplan: $info{ TARGET }\\n\"";\n+\n+    return;\n+}\n+\n+sub run_make_check\n+{\n+    my ($self, @args) = @_;\n+\n+    local $CWD = $self->{ input };\n+\n+    my $make = $self->{ make };\n+    my $output = $self->{ output };\n+    my $this_script = $self->{ this_script };\n+\n+    my @command = ( $make );\n+\n+    my %gnulike = map { $_ => 1 } qw(make gmake mingw32-make);\n+    my %mslike = map { $_ => 1 } qw(nmake jom);\n+\n+    if ($gnulike{ $make }) {\n+        push @command, '-s', '-j4';\n+    } elsif ($mslike{ $make }) {\n+        push @command, '/NOLOGO', '/S';\n+        if ($make eq 'jom') {\n+            push @command, '/J4';\n+        }\n+    } else {\n+        warn \""Unknown make command $make.  May be slow and noisy.\\n\"";\n+    }\n+\n+    my $subcmd = \""$EXECUTABLE_NAME $this_script --make $make --output $output --testcase\"";\n+\n+    push @command, (\n+        'check',\n+        \""TESTRUNNER=$subcmd --\"",\n+        \""TESTARGS=\"".join(' ', map { qq{\""$_\""} } @args),\n+    );\n+\n+    if (my $status = system( @command )) {\n+        die \""testplan generation failed; @command exited with status $status (exit code \"".($status >> 8).')';\n+    }\n+\n+    return;\n+}\n+\n+#==================================================================================================\n+\n+QtQA::App::TestPlanner->new( )->run( @ARGV ) if (!caller);\n+1;\n+\n"", ""testscheduler.pl"": ""@@ -0,0 +1,398 @@\n+#!/usr/bin/env perl\n+#############################################################################\n+##\n+## Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n+## Contact: http://www.qt-project.org/\n+##\n+## This file is part of the Quality Assurance module of the Qt Toolkit.\n+##\n+## $QT_BEGIN_LICENSE:LGPL$\n+## GNU Lesser General Public License Usage\n+## This file may be used under the terms of the GNU Lesser General Public\n+## License version 2.1 as published by the Free Software Foundation and\n+## appearing in the file LICENSE.LGPL included in the packaging of this\n+## file. Please review the following information to ensure the GNU Lesser\n+## General Public License version 2.1 requirements will be met:\n+## http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+##\n+## In addition, as a special exception, Nokia gives you certain additional\n+## rights. These rights are described in the Nokia Qt LGPL Exception\n+## version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+##\n+## GNU General Public License Usage\n+## Alternatively, this file may be used under the terms of the GNU General\n+## Public License version 3.0 as published by the Free Software Foundation\n+## and appearing in the file LICENSE.GPL included in the packaging of this\n+## file. Please review the following information to ensure the GNU General\n+## Public License version 3.0 requirements will be met:\n+## http://www.gnu.org/copyleft/gpl.html.\n+##\n+## Other Usage\n+## Alternatively, this file may be used in accordance with the terms and\n+## conditions contained in a signed written agreement between you and Nokia.\n+##\n+##\n+##\n+##\n+##\n+##\n+## $QT_END_LICENSE$\n+##\n+#############################################################################\n+\n+use 5.010;\n+use strict;\n+use warnings;\n+\n+package QtQA::App::TestScheduler;\n+\n+=head1 NAME\n+\n+testscheduler - run a set of autotests\n+\n+=head1 SYNOPSIS\n+\n+  # Run all tests mentioned in testplan.txt, up to 4 at a time\n+  $ ./testscheduler --plan testplan.txt -j4 -- --timeout 120\n+\n+Run a set of testcases and output a summary of the results.\n+\n+=head2 OPTIONS\n+\n+=over\n+\n+=item --plan FILENAME (Mandatory)\n+\n+Execute the test plan from this file.\n+The test plan should be generated by the \""testplanner\"" command.\n+\n+=item -j N\n+\n+=item --jobs N\n+\n+Execute tests in parallel, up to N concurrently.\n+\n+Note that only tests marked with parallel_test in the testplan\n+are permitted to run in parallel.\n+\n+=back\n+\n+All other arguments are passed to the \""testrunner\"" script,\n+which is invoked once for each test.\n+\n+=head1 DESCRIPTION\n+\n+testscheduler runs a set of autotests from a testplan.\n+\n+testscheduler implements appropriate handling of insignificant\n+tests and parallel tests according to the metadata in the\n+testplan (which generally comes from the build system):\n+\n+=over\n+\n+=item *\n+\n+Tests may be run in parallel if they are marked with\n+parallel_test and testscheduler is invoked with a -j option\n+higher than 1.\n+\n+=item *\n+\n+Test failures may be ignored if a test is marked with insignificant_test.\n+\n+=back\n+\n+=cut\n+\n+use threads;\n+use threads::shared;\n+\n+use English qw(-no_match_vars);\n+use File::Spec::Functions;\n+use FindBin;\n+use IO::File;\n+use Lingua::EN::Inflect qw(inflect);\n+use Pod::Usage;\n+use Readonly;\n+use Thread::Semaphore;\n+\n+use Getopt::Long qw(\n+    GetOptionsFromArray\n+    :config pass_through bundling\n+);\n+\n+# testrunner script\n+Readonly my $TESTRUNNER => catfile( $FindBin::Bin, 'testrunner.pl' );\n+\n+sub new\n+{\n+    my ($class) = @_;\n+\n+    return bless {\n+        jobs => 1,\n+    }, $class;\n+}\n+\n+sub run\n+{\n+    my ($self, @args) = @_;\n+\n+    GetOptionsFromArray( \\@args,\n+        'help|?'    =>  sub { pod2usage(0) },\n+        'plan=s'    =>  \\$self->{ testplan },\n+        'j|jobs=i'  =>  \\$self->{ jobs },\n+    ) || pod2usage(2);\n+\n+    # All remaining args are for testrunner\n+    $self->{ testrunner_args } = [ @args ];\n+\n+    if (!$self->{ testplan }) {\n+        die \""Missing mandatory --plan argument\"";\n+    }\n+\n+    my @tests_with_results = $self->do_testplan( $self->{ testplan } );\n+    $self->exit_appropriately( @tests_with_results );\n+\n+    return;\n+}\n+\n+sub do_testplan\n+{\n+    my ($self, $testplan) = @_;\n+\n+    my @tests = $self->read_tests_from_testplan( $testplan );\n+    @tests = sort { $a->{ TARGET } cmp $b->{ TARGET } } @tests;\n+\n+    my @tests_with_results = $self->execute_tests_from_testplan( @tests );\n+\n+    return @tests_with_results;\n+}\n+\n+sub read_tests_from_testplan\n+{\n+    my ($self, $testplan) = @_;\n+\n+    my @tests;\n+\n+    my $fh = IO::File->new( $testplan, '<' ) || die \""open $testplan for read: $!\"";\n+    my $line_no = 0;\n+    while (my $line = <$fh>) {\n+        ++$line_no;\n+        my $test = eval $line;\n+        if (my $error = $@) {\n+            die \""$testplan:$line_no: error: $error\"";\n+        }\n+        push @tests, $test;\n+    }\n+\n+    return @tests;\n+}\n+\n+sub execute_tests_from_testplan\n+{\n+    my ($self, @tests) = @_;\n+\n+    my $jobs = $self->{ jobs };\n+    my $results = [];\n+\n+    # Do all the parallel tests first, then serial.\n+    # However, if jobs are 1, all tests are serial.\n+    my @parallel_tests;\n+    my @serial_tests;\n+    foreach my $test (@tests) {\n+        if ($test->{ parallel_test } && $jobs > 1) {\n+            push @parallel_tests, $test;\n+        }\n+        else {\n+            push @serial_tests, $test;\n+        }\n+    }\n+\n+    # If there is only one parallel test, downgrade it to a serial test\n+    if (@parallel_tests == 1) {\n+        @serial_tests = (@parallel_tests, @serial_tests);\n+        @parallel_tests = ();\n+    }\n+\n+    local $SIG{ INT } = sub {\n+        die 'aborting due to SIGINT';\n+    };\n+\n+    $self->execute_parallel_tests( $results, @parallel_tests );\n+\n+    if (@parallel_tests && @serial_tests) {\n+        my $p = scalar( @parallel_tests );\n+        my $s = scalar( @serial_tests );\n+        # NO -> Number Of\n+        $self->print_info( inflect \""ran NO(parallel test,$p).  Starting NO(serial test,$s).\\n\"" );\n+    }\n+\n+    $self->execute_serial_tests( $results, @serial_tests );\n+\n+    my @tests_with_results = @{ $results };\n+\n+    # Sanity check\n+    if (scalar(@tests_with_results) != scalar(@tests)) {\n+        die 'internal error: I expected to run '.scalar(@tests).' tests, but only '\n+           .scalar(@tests_with_results).' tests reported results';\n+    }\n+\n+    return @tests_with_results;\n+}\n+\n+sub execute_parallel_tests\n+{\n+    my ($self, $results, @tests) = @_;\n+    return unless @tests;\n+\n+    while (my $test = shift @tests) {\n+        # execute_subtest asynchronously starts the test if there are available\n+        # job slots; otherwise it will block until there is a free slot\n+        $self->execute_subtest( test => $test, results_ref => $results );\n+    }\n+\n+    $self->wait_all_jobs_complete( );\n+\n+    return;\n+}\n+\n+sub execute_serial_tests\n+{\n+    my ($self, $results, @tests) = @_;\n+\n+    return unless @tests;\n+\n+    my $jobs = $self->{ jobs };\n+\n+    # Take all job slots except one, to make the tests serial\n+    for (1..($jobs-1)) {\n+        $self->take_job_slot( );\n+    }\n+\n+    while (my $test = shift @tests) {\n+        $self->execute_subtest( test => $test, results_ref => $results );\n+    }\n+\n+    # And take the very last job slot, to wait for all tests to be completed\n+    $self->take_job_slot( );\n+\n+    return;\n+}\n+\n+sub print_info\n+{\n+    my ($self, $info) = @_;\n+\n+    local $| = 1;\n+    print __PACKAGE__.': '.$info;\n+\n+    return;\n+}\n+\n+sub execute_subtest\n+{\n+    my ($self, %args) = @_;\n+\n+    my $test = $args{ test };\n+    my $results = $args{ results_ref };\n+\n+    my $testname = $test->{ TARGET };\n+    my @cmd_and_args = @{ $test->{ args } };\n+\n+    my @testrunner_cmd = (\n+        $EXECUTABLE_NAME,\n+        $TESTRUNNER,\n+        @{ $self->{ testrunner_args } },\n+        '--chdir',\n+        $test->{ cwd },\n+    );\n+\n+    my $status;\n+\n+    my @cmd = (@testrunner_cmd, '--', @cmd_and_args );\n+    my $test_with_result = shared_clone( $test );\n+    push @{ $results }, $test_with_result;\n+\n+    $self->take_job_slot( );\n+    share( $test_with_result->{ status } );\n+    my $thr = async {\n+        $test_with_result->{ status } = system( @cmd );\n+        $self->return_job_slot( );\n+    };\n+    $thr->detach();\n+\n+    return;\n+}\n+\n+sub take_job_slot\n+{\n+    my ($self) = @_;\n+    return $self->job_sema( )->down( );\n+}\n+\n+sub return_job_slot\n+{\n+    my ($self) = @_;\n+    return $self->job_sema( )->up( );\n+}\n+\n+# Block until all running jobs have completed\n+sub wait_all_jobs_complete\n+{\n+    my ($self) = @_;\n+\n+    # block until all jobs return their tokens ...\n+    $self->job_sema( )->down( $self->{ jobs } );\n+    # ... then release the tokens\n+    $self->job_sema( )->up( $self->{ jobs } );\n+    return;\n+}\n+\n+sub job_sema\n+{\n+    my ($self) = @_;\n+\n+    if (!$self->{ job_sema }) {\n+        $self->{ job_sema } = Thread::Semaphore->new( $self->{ jobs } );\n+    }\n+\n+    return $self->{ job_sema };\n+}\n+\n+sub exit_appropriately\n+{\n+    my ($self, @tests) = @_;\n+\n+    my $total = 0;\n+    my $pass = 0;\n+    my $fail = 0;\n+    my $insignificant_fail = 0;\n+\n+    foreach my $test (@tests) {\n+        ++$total;\n+        if ($test->{ status } == 0) {\n+            ++$pass;\n+        } elsif ($test->{ insignificant_test }) {\n+            ++$insignificant_fail;\n+        } else {\n+            ++$fail;\n+        }\n+    }\n+\n+    my $message = inflect \""Totals: NO(test,$total), NO(pass,$pass)\"";\n+    if ($fail) {\n+        $message .= inflect \"", NO(fail,$fail)\"";\n+    }\n+    if ($insignificant_fail) {\n+        $message .= inflect \"", NO(insignificant fail,$insignificant_fail)\"";\n+    }\n+\n+    print \""$message\\n\"";\n+\n+    exit( $fail ? 1 : 0 );\n+}\n+\n+#==================================================================================================\n+\n+QtQA::App::TestScheduler->new( )->run( @ARGV ) if (!caller);\n+1;\n"", ""01-QtQA-QMake-Project.t"": ""@@ -12,6 +12,7 @@ use FindBin;\n use lib \""$FindBin::Bin/../../..\"";\n \n use QtQA::QMake::Project;\n+use QtQA::Test::More qw(find_qmake);\n \n use English qw(-no_match_vars);\n use File::Spec::Functions;\n@@ -22,7 +23,6 @@ use Test::More;\n use Test::Warn;\n \n Readonly my $TESTDATA => catfile( $FindBin::Bin, 'test_projects' );\n-Readonly my $QT_VERSION => 5;\n Readonly my $QMAKE => find_qmake( );\n Readonly my $ERROR_RE => qr/^QtQA::QMake::Project:/;\n \n@@ -368,30 +368,6 @@ sub run_test\n     return;\n }\n \n-sub find_qmake\n-{\n-    # Try to find the \""right\"" qmake - not particularly easy.\n-    my $repo_base = catfile( $FindBin::Bin, qw(.. .. .. .. .. ..) );\n-    my $qmake = canonpath catfile( $repo_base, qw(.. qtbase bin qmake) );\n-    if ($OSNAME =~ m{win32}i) {\n-        $qmake .= '.exe';\n-    }\n-\n-    if (-f $qmake) {\n-        diag \""Using qmake from sibling qtbase: $qmake\"";\n-        return $qmake;\n-    }\n-\n-    # OK, then just try to use qmake from PATH\n-    my $output = qx(qmake -v 2>&1);\n-    if ($? == 0 && $output =~ m{Using Qt version $QT_VERSION}) {\n-        diag \""Using qmake from PATH\"";\n-        return 'qmake';\n-    }\n-\n-    return;\n-}\n-\n if (!caller) {\n     run_test;\n     done_testing;\n"", ""More.pm"": ""@@ -44,9 +44,11 @@ use strict;\n use warnings;\n \n use Carp;\n+use Cwd qw(abs_path);\n use Data::Dumper;\n use IO::File;\n use File::Basename;\n+use File::Spec::Functions;\n use List::MoreUtils qw( any );\n use Params::Validate qw( :all );\n use Readonly;\n@@ -57,9 +59,12 @@ use base 'Exporter';\n Readonly our @EXPORT_OK => qw(\n     is_or_like\n     create_mock_command\n+    find_qmake\n );\n Readonly our %EXPORT_TAGS => ( all => \\@EXPORT_OK );\n \n+Readonly my $QT_VERSION => 5;\n+\n ## no critic (Subroutines::RequireArgUnpacking)\n #  This policy does not work nicely with Params::Validate\n \n@@ -264,6 +269,40 @@ die \""no more test steps!\\n\""\n     return;\n }\n \n+sub find_qmake\n+{\n+    # Try to find the \""right\"" qmake - not particularly easy.\n+    my $this_dir = $INC{ 'QtQA/Test/More.pm' };\n+    if (!$this_dir) {\n+        diag \""Warning: can't find QtQA/Test/More.pm in %INC.  Included unusually?\\n\""\n+            .\""find_qmake() will probably fail.\"";\n+        $this_dir = '.';\n+    }\n+    $this_dir = dirname( $this_dir );\n+\n+    my $repo_base = catfile( $this_dir, qw(.. .. .. .. ..) );\n+    my $qmake = abs_path catfile( $repo_base, qw(.. qtbase bin qmake) );\n+    if ($OSNAME =~ m{win32}i) {\n+        $qmake .= '.exe';\n+    }\n+\n+    if (-f $qmake) {\n+        diag \""Using qmake from sibling qtbase: $qmake\"";\n+        return $qmake;\n+    }\n+\n+    # OK, then just try to use qmake from PATH\n+    my $output = qx(qmake -v 2>&1);\n+    if ($? == 0 && $output =~ m{Using Qt version $QT_VERSION}) {\n+        diag 'Using qmake from PATH';\n+        return 'qmake';\n+    }\n+\n+    diag 'Warning: no qmake found';\n+\n+    return;\n+}\n+\n \n \n =head1 NAME\n@@ -436,6 +475,28 @@ will die, noisily).\n \n =back\n \n+=item B<find_qmake>\n+\n+Attempts to find and return a qmake command string suitable for running from\n+within a test:\n+\n+=over\n+\n+=item *\n+\n+If the \""qtqa\"" directory has a sibling \""qtbase\"" directory, the qmake from that\n+qtbase will be used, if available.  The full path to qmake is returned.\n+\n+=item *\n+\n+Otherwise, if a qmake from Qt 5 is in PATH, it will be used.\n+The string \""qmake\"" is returned.\n+\n+=item *\n+\n+Otherwise, an undefined value is returned.\n+\n+=back\n \n =back\n \n"", ""qtmod_test.pl"": ""@@ -160,6 +160,14 @@ my @PROPERTIES = (\n                                 . q{uses gdb on Linux, CrashReporter on Mac, and does not work }\n                                 . q{on Windows},\n \n+    q{qt.tests.testscheduler}  => q{if 1, run the autotests via the testscheduler script, rather }\n+                                . q{than directly by `make check'; this is intended to eventually }\n+                                . q{become the default}\n+\n+    q{qt.tests.testscheduler.args}\n+                               => q{arguments to pass to testscheduler, if any; for example, -j4 }\n+                                . q{to run autotests in parallel}\n+\n     q{qt.tests.flaky_mode}     => q{how to handle flaky autotests (\""best\"", \""worst\"" or \""ignore\"")},\n \n     q{qt.qtqa-tests.enabled}   => q{if 1, run the shared autotests in qtqa (over this module }\n@@ -379,6 +387,8 @@ sub read_and_store_configuration\n         'qt.minimal_deps'         => \\&default_qt_minimal_deps                   ,\n         'qt.install.dir'          => \\&default_qt_install_dir                    ,\n         'qt.tests.enabled'        => \\&default_qt_tests_enabled                  ,\n+        'qt.tests.testscheduler'  => 0                                           ,\n+        'qt.tests.testscheduler.args' => q{}                                     ,\n         'qt.tests.insignificant'  => 0                                           ,\n         'qt.tests.timeout'        => 60*15                                       ,\n         'qt.tests.capture_logs'   => q{}                                         ,\n@@ -838,6 +848,25 @@ sub get_testrunner_command\n {\n     my ($self) = @_;\n \n+    my $testrunner = catfile( $FindBin::Bin, '..', '..', 'bin', 'testrunner' );\n+    $testrunner    = canonpath abs_path( $testrunner );\n+\n+    # sanity check\n+    confess( \""internal error: $testrunner does not exist\"" ) if (! -e $testrunner);\n+\n+    my @testrunner_with_args = (\n+        $testrunner,\n+        $self->get_testrunner_args( ),\n+    );\n+\n+    return join(' ', @testrunner_with_args);\n+}\n+\n+# Returns appropriate testrunner arguments\n+sub get_testrunner_args\n+{\n+    my ($self) = @_;\n+\n     my $qt_tests_timeout         = $self->{ 'qt.tests.timeout' };\n     my $qt_tests_capture_logs    = $self->{ 'qt.tests.capture_logs' };\n     my $qt_coverage_tool         = $self->{ 'qt.coverage.tool' };\n@@ -848,52 +877,45 @@ sub get_testrunner_command\n     my $qt_tests_backtraces      = $self->{ 'qt.tests.backtraces' };\n     my $qt_tests_flaky_mode      = $self->{ 'qt.tests.flaky_mode' };\n \n-    my $testrunner = catfile( $FindBin::Bin, '..', '..', 'bin', 'testrunner' );\n-    $testrunner    = canonpath abs_path( $testrunner );\n-\n-    # sanity check\n-    confess( \""internal error: $testrunner does not exist\"" ) if (! -e $testrunner);\n-\n-    my @testrunner_with_args = (\n-        $testrunner,        # run the tests through our testrunner script ...\n+    my @testrunner_args = (\n         '--timeout',\n         $qt_tests_timeout,  # kill any test which takes longer than this ...\n     );\n \n     # capture or tee logs to a given directory\n     if ($qt_tests_capture_logs) {\n-        push @testrunner_with_args, '--capture-logs', canonpath $qt_tests_capture_logs;\n+        push @testrunner_args, '--capture-logs', canonpath $qt_tests_capture_logs;\n     }\n     elsif ($qt_tests_tee_logs) {\n-        push @testrunner_with_args, '--tee-logs', canonpath $qt_tests_tee_logs;\n+        push @testrunner_args, '--tee-logs', canonpath $qt_tests_tee_logs;\n     }\n \n     if ($qt_tests_backtraces) {\n         if ($OSNAME =~ m{linux}i) {\n-            push @testrunner_with_args, '--plugin', 'core';\n+            push @testrunner_args, '--plugin', 'core';\n         }\n         elsif ($OSNAME =~ m{darwin}i) {\n-            push @testrunner_with_args, '--plugin', 'crashreporter';\n+            push @testrunner_args, '--plugin', 'crashreporter';\n         }\n     }\n \n     # give more info about unstable / flaky tests\n-    push @testrunner_with_args, '--plugin', 'flaky';\n+    push @testrunner_args, '--plugin', 'flaky';\n     if ($qt_tests_flaky_mode) {\n-        push @testrunner_with_args, '--flaky-mode', $qt_tests_flaky_mode;\n+        push @testrunner_args, '--flaky-mode', $qt_tests_flaky_mode;\n     }\n \n     if ($qt_coverage_tool) {\n-        push @testrunner_with_args, '--plugin', $qt_coverage_tool;\n-        push @testrunner_with_args, \""--${qt_coverage_tool}-qt-gitmodule-dir\"", canonpath $qt_gitmodule_dir;\n-        push @testrunner_with_args, \""--${qt_coverage_tool}-qt-gitmodule\"", $qt_gitmodule;\n+        push @testrunner_args, '--plugin', $qt_coverage_tool;\n+        push @testrunner_args, \""--${qt_coverage_tool}-qt-gitmodule-dir\"", canonpath $qt_gitmodule_dir;\n+        push @testrunner_args, \""--${qt_coverage_tool}-qt-gitmodule\"", $qt_gitmodule;\n     }\n \n     if ($qt_coverage_tests_output) {\n-        push @testrunner_with_args, \""--${qt_coverage_tool}-tests-output\"", $qt_coverage_tests_output;\n+        push @testrunner_args, \""--${qt_coverage_tool}-tests-output\"", $qt_coverage_tests_output;\n     }\n \n-    push @testrunner_with_args, '--'; # no more args\n+    push @testrunner_args, '--'; # no more args\n \n     # We cannot handle passing arguments with spaces into `make TESTRUNNER...',\n     # so detect and abort right now if that's the case.\n@@ -903,13 +925,13 @@ sub get_testrunner_command\n     # be affected by the value of the PATH environment variable when make is run, etc...),\n     # so we will not do it unless it becomes necessary.\n     #\n-    if (any { /\\s/ } @testrunner_with_args) {\n+    if (any { /\\s/ } @testrunner_args) {\n         confess( \""Some arguments to testrunner contain spaces, which is currently not supported.\\n\""\n                 .\""Try removing spaces from build / log paths, if there are any.\\n\""\n-                .'testrunner and arguments: '.Dumper(\\@testrunner_with_args).\""\\n\"" );\n+                .'testrunner arguments: '.Dumper(\\@testrunner_args).\""\\n\"" );\n     }\n \n-    return join(' ', @testrunner_with_args);\n+    return @testrunner_args;\n }\n \n sub run_autotests\n@@ -1024,6 +1046,8 @@ sub _run_autotests_impl\n     my $make_check_bin = $self->{ 'make-check.bin' };\n     my $make_check_args = $self->{ 'make-check.args' };\n     my $qt_tests_args  = $self->{ 'qt.tests.args' };\n+    my $qt_tests_testscheduler = $self->{ 'qt.tests.testscheduler' };\n+    my $qt_tests_testscheduler_args = $self->{ 'qt.tests.testscheduler.args' };\n \n     # settings for this autotest run\n     my $tests_dir            = $args{ tests_dir };\n@@ -1031,8 +1055,6 @@ sub _run_autotests_impl\n     my $do_compile           = $args{ do_compile };\n     my $insignificant        = $self->{ $insignificant_option };\n \n-    my $testrunner_command = $self->get_testrunner_command( );\n-\n     # Add tools from all the modules to PATH.\n     # If shadow-build with install enabled, then we need to add install path\n     # rather than build path into the PATH.\n@@ -1066,14 +1088,40 @@ sub _run_autotests_impl\n             $self->exe( $make_bin, '-k', @make_args );\n         }\n \n-        my @make_check_args = split(/ /, $make_check_args);\n+        if ($qt_tests_testscheduler) {\n+            my @testrunner_args = $self->get_testrunner_args( );\n \n-        $self->exe( $make_check_bin,\n-            @make_check_args,                   # include args requested by user\n-            \""TESTRUNNER=$testrunner_command\"",   # use our testrunner script\n-            \""TESTARGS=$qt_tests_args\"",          # and our test args (may be empty)\n-            'check',                            # run the autotests :)\n-        );\n+            $self->exe(\n+                $EXECUTABLE_NAME,\n+                catfile( \""$FindBin::Bin/../generic/testplanner.pl\"" ),\n+                '--input',\n+                '.',\n+                '--output',\n+                'testplan.txt',\n+            );\n+\n+            $self->exe(\n+                $EXECUTABLE_NAME,\n+                catfile( \""$FindBin::Bin/../generic/testscheduler.pl\"" ),\n+                '--plan',\n+                'testplan.txt',\n+                split( m{ }, $qt_tests_testscheduler_args ),\n+                '--',\n+                @testrunner_args,\n+            );\n+\n+        } else {\n+            my $testrunner_command = $self->get_testrunner_command( );\n+\n+            my @make_check_args = split(/ /, $make_check_args);\n+\n+            $self->exe( $make_check_bin,\n+                @make_check_args,                   # include args requested by user\n+                \""TESTRUNNER=$testrunner_command\"",   # use our testrunner script\n+                \""TESTARGS=$qt_tests_args\"",          # and our test args (may be empty)\n+                'check',                            # run the autotests :)\n+            );\n+        }\n     };\n \n     if ($insignificant) {\n""}","test,feature","test, feature 
",feature;resource;test;
24210.0,24210.0,bug ,Ian Dean,Fixed iOS compilation issues.,"Fixed iOS compilation issues.

Put MacOS-specific code in #ifdef blocks so that it is not compiled for
iOS.

Change-Id: I303b7dbb63eb298e92351951731868df6a38bffa",['src/network/access/qnetworkaccessmanager.cpp'],"{""qnetworkaccessmanager.cpp"": ""@@ -82,7 +82,7 @@ Q_GLOBAL_STATIC(QNetworkAccessFtpBackendFactory, ftpBackend)\n Q_GLOBAL_STATIC(QNetworkAccessDebugPipeBackendFactory, debugpipeBackend)\n #endif\n \n-#ifdef Q_OS_MAC\n+#if defined(Q_OS_MAC) && !defined(Q_OS_IOS)\n \n #include <CoreServices/CoreServices.h>\n #include <SystemConfiguration/SystemConfiguration.h>\n@@ -1186,7 +1186,7 @@ void QNetworkAccessManagerPrivate::authenticationRequired(QAuthenticator *authen\n             return;\n         }\n     }\n-#ifdef Q_OS_MAC\n+#if defined(Q_OS_MAC) && !defined(Q_OS_IOS)\n     //now we try to get the username and password from keychain\n     //if not successful signal will be emitted\n     QString username;\n""}",bug,"bug 
",bug;
18482.0,18482.0,bug,Jon Trulson,Start eventTime timer so that the .elapsed method will work.,"Start eventTime timer so that the .elapsed method will work.

QWindowSystemInterfacePrivate::eventTime.start() is never called,
resulting in all calls to
QWindowSystemInterfacePrivate::eventTime.elapsed() within
qwindowsysteminterface_qpa.cpp to return 0.  This could cause events
to be lost, such as mouse button press events from the evdevmouse
input plugin.

Change-Id: Iba9d23b51af80e8532d24ccf382e9077c06bb4be",['src/gui/kernel/qwindowsysteminterface_qpa.cpp'],"{""qwindowsysteminterface_qpa.cpp"": ""@@ -266,6 +266,10 @@ void QWindowSystemInterfacePrivate::queueWindowSystemEvent(QWindowSystemInterfac\n     windowSystemEventQueue.append(ev);\n     queueMutex.unlock();\n \n+    // Make sure the event timer is started.\n+    if (!QWindowSystemInterfacePrivate::eventTime.isValid())\n+      QWindowSystemInterfacePrivate::eventTime.start();\n+\n     QAbstractEventDispatcher *dispatcher = QGuiApplicationPrivate::qt_qpa_core_dispatcher();\n     if (dispatcher)\n         dispatcher->wakeUp();\n""}",bug,"bug
",others;
10746.0,10746.0,"bug,feature",Mikko Harju,QmlProfiler: stream snapshots to reduce memory footprint,"QmlProfiler: stream snapshots to reduce memory footprint

Taking a V8 heap snapshot with QV8ProfilerService created multiple
copies of the snapshot data, causing overhead of several megabytes.
This patch changes the snapshot protocol to stream the contents over
the debugger connection.

Change-Id: I90054210233d52dd02aa838201f9b024d578fcea","['src/declarative/debugger/qv8profilerservice.cpp', 'tests/auto/declarative/debugger/qv8profilerservice/tst_qv8profilerservice.cpp', 'src/declarative/debugger/qv8profilerservice_p.h']","{""qv8profilerservice.cpp"": ""@@ -50,18 +50,20 @@ QT_BEGIN_NAMESPACE\n \n Q_GLOBAL_STATIC(QV8ProfilerService, v8ProfilerInstance)\n \n-class ByteArrayOutputStream : public v8::OutputStream\n+class DebugServiceOutputStream : public v8::OutputStream\n {\n-    QByteArray *_buffer;\n+    QDeclarativeDebugService &_service;\n public:\n-    ByteArrayOutputStream(QByteArray *buffer)\n+    DebugServiceOutputStream(QDeclarativeDebugService &service)\n         : v8::OutputStream(),\n-          _buffer(buffer) {}\n+          _service(service) {}\n     void EndOfStream() {}\n-    WriteResult WriteAsciiChunk(char *data, int size)\n+    WriteResult WriteAsciiChunk(char *rawData, int size)\n     {\n-        QByteArray b(data, size);\n-        _buffer->append(b);\n+        QByteArray data;\n+        QDataStream ds(&data, QIODevice::WriteOnly);\n+        ds << QV8ProfilerService::V8Snapshot << QByteArray(rawData, size);\n+        _service.sendMessage(data);\n         return kContinue;\n     }\n };\n@@ -223,14 +225,14 @@ void QV8ProfilerServicePrivate::takeSnapshot(v8::HeapSnapshot::Type snapshotType\n     v8::HandleScope scope;\n     v8::Local<v8::String> title = v8::String::New(\""\"");\n \n-    QByteArray jsonSnapshot;\n-    ByteArrayOutputStream bos(&jsonSnapshot);\n+    DebugServiceOutputStream outputStream(*q);\n     const v8::HeapSnapshot *snapshot = v8::HeapProfiler::TakeSnapshot(title, snapshotType);\n-    snapshot->Serialize(&bos, v8::HeapSnapshot::kJSON);\n+    snapshot->Serialize(&outputStream, v8::HeapSnapshot::kJSON);\n \n+    //indicate completion\n     QByteArray data;\n     QDataStream ds(&data, QIODevice::WriteOnly);\n-    ds << (int)QV8ProfilerService::V8Snapshot << jsonSnapshot;\n+    ds << (int)QV8ProfilerService::V8SnapshotComplete;\n \n     q->sendMessage(data);\n }\n"", ""qv8profilerservice_p.h"": ""@@ -85,6 +85,7 @@ public:\n         V8Entry,\n         V8Complete,\n         V8Snapshot,\n+        V8SnapshotComplete,\n \n         V8MaximumMessage\n     };\n"", ""tst_qv8profilerservice.cpp"": ""@@ -88,9 +88,11 @@ public:\n     }\n \n     QList<QV8ProfilerData> traceMessages;\n+    QList<QByteArray> snapshotMessages;\n \n signals:\n     void complete();\n+    void snapshot();\n \n protected:\n     void messageReceived(const QByteArray &message);\n@@ -121,6 +123,7 @@ private slots:\n     void blockingConnectWithTraceEnabled();\n     void blockingConnectWithTraceDisabled();\n     void nonBlockingConnect();\n+    void snapshot();\n };\n \n void QV8ProfilerClient::messageReceived(const QByteArray &message)\n@@ -144,7 +147,14 @@ void QV8ProfilerClient::messageReceived(const QByteArray &message)\n     case QV8ProfilerService::V8Complete:\n         emit complete();\n         break;\n-    case QV8ProfilerService::V8Snapshot:\n+    case QV8ProfilerService::V8Snapshot: {\n+        QByteArray json;\n+        stream >> json;\n+        snapshotMessages.append(json);\n+        break;\n+    }\n+    case QV8ProfilerService::V8SnapshotComplete:\n+        emit snapshot();\n         break;\n     default:\n         QString failMessage = QString(\""Unknown message type: %1\"").arg(messageType);\n@@ -230,6 +240,19 @@ void tst_QV8ProfilerService::nonBlockingConnect()\n     }\n }\n \n+void tst_QV8ProfilerService::snapshot()\n+{\n+    connect(false);\n+    QTRY_COMPARE(m_client->status(), QDeclarativeDebugClient::Enabled);\n+\n+    m_client->takeSnapshot();\n+    if (!QDeclarativeDebugTest::waitForSignal(m_client, SIGNAL(snapshot()))) {\n+        QString failMsg\n+                = QString(\""No snapshot received in time. App output: %1\\n\\n\"").arg(m_process->output());\n+        QFAIL(qPrintable(failMsg));\n+    }\n+}\n+\n QTEST_MAIN(tst_QV8ProfilerService)\n \n #include \""tst_qv8profilerservice.moc\""\n""}","bug,feature","bug, feature 
",bug;
7098.0,7098.0,"feature,bug",Andrew den Exter (Closed Account),Insert items into VisualDataModel.,"Insert items into VisualDataModel.

Change-Id: I835f0e8d6c5edfb3a21029687de5b700f7400317","['src/declarative/items/qsgvisualdatamodel_p.h', 'src/declarative/util/qdeclarativelistcompositor.cpp', 'src/declarative/items/qsgvisualadaptormodel.cpp', 'src/declarative/items/qsgvisualadaptormodel_p.h', 'src/declarative/items/qsgvisualdatamodel.cpp', 'src/declarative/util/qdeclarativelistcompositor_p.h']","{""qsgvisualadaptormodel.cpp"": ""@@ -208,6 +208,52 @@ public:\n     QSGVisualAdaptorModelDataCache m_cache;\n };\n \n+class QSGVDMCachedModelData : public QSGVisualAdaptorModelData\n+{\n+public:\n+    void setValue(const QString &role, const QVariant &value)\n+    {\n+        QSGVisualAdaptorModelPrivate *d = QSGVisualAdaptorModelPrivate::get(model);\n+        QHash<QByteArray, int>::iterator it = d->m_roleNames.find(role.toUtf8());\n+        if (it != d->m_roleNames.end()) {\n+            for (int i = 0; i < d->m_propertyData.count(); ++i) {\n+                if (d->m_propertyData.at(i).role == *it) {\n+                    cachedData[i] = value;\n+                    return;\n+                }\n+            }\n+        }\n+    }\n+\n+    bool resolveIndex(int idx)\n+    {\n+        if (index[0] == -1) {\n+            Q_ASSERT(idx >= 0);\n+            QSGVisualAdaptorModelPrivate *d = QSGVisualAdaptorModelPrivate::get(model);\n+            index[0] = idx;\n+            cachedData.clear();\n+            emit modelIndexChanged();\n+            const QMetaObject *meta = metaObject();\n+            const int propertyCount = d->m_propertyData.count();\n+            for (int i = 0; i < propertyCount; ++i)\n+                QMetaObject::activate(this, meta, i, 0);\n+            return true;\n+        } else {\n+            return false;\n+        }\n+    }\n+\n+    QSGVDMCachedModelData(\n+            QSGVisualDataModelCacheMetaType *metaType, QSGVisualAdaptorModel *model, int index)\n+        : QSGVisualAdaptorModelData(metaType, model, index)\n+    {\n+        if (index == -1)\n+            cachedData.resize(QSGVisualAdaptorModelPrivate::get(model)->m_propertyData.count());\n+    }\n+\n+    QVector<QVariant> cachedData;\n+};\n+\n class QSGVisualAdaptorModelDataMetaObject : public QAbstractDynamicMetaObject\n {\n public:\n@@ -246,10 +292,20 @@ public:\n     {\n         if (call == QMetaObject::ReadProperty && id >= m_type->propertyOffset) {\n             QSGVisualAdaptorModelPrivate *model = QSGVisualAdaptorModelPrivate::get(m_data->model);\n-            if (m_data->index[0] == -1 || !model->m_abstractItemModel)\n-                return -1;\n-            *static_cast<QVariant *>(arguments[0]) = model->m_abstractItemModel->index(\n-                    m_data->index[0], 0, model->m_root).data(model->m_propertyData.at(id - m_type->propertyOffset).role);\n+            const int propertyIndex = id - m_type->propertyOffset;\n+            if (m_data->index[0] == -1) {\n+                QSGVDMCachedModelData *data = static_cast<QSGVDMCachedModelData *>(m_data);\n+                if (!data->cachedData.isEmpty()) {\n+                    *static_cast<QVariant *>(arguments[0]) = data->cachedData.count() > 1\n+                            ? data->cachedData.at(propertyIndex)\n+                            : data->cachedData.at(0);\n+                }\n+            } else if (model->m_abstractItemModel) {\n+                const QModelIndex index = model->m_abstractItemModel->index(\n+                        m_data->index[0], 0, model->m_root);\n+                *static_cast<QVariant *>(arguments[0]) = index.data(\n+                        model->m_propertyData.at(propertyIndex).role);\n+            }\n             return -1;\n         } else {\n             return m_data->qt_metacall(call, id, arguments);\n@@ -257,7 +313,7 @@ public:\n     }\n };\n \n-class QSGVDMAbstractItemModelData : public QSGVisualAdaptorModelData\n+class QSGVDMAbstractItemModelData : public QSGVDMCachedModelData\n {\n     Q_OBJECT\n     Q_PROPERTY(bool hasModelChildren READ hasModelChildren CONSTANT)\n@@ -272,14 +328,14 @@ public:\n             QSGVisualDataModelCacheMetaType *metaType, QSGVisualAdaptorModel *model, int index) {\n         return new QSGVDMAbstractItemModelData(metaType, model, index); }\n \n-    static QString stringValue(QSGVisualAdaptorModel *model, int index, const QString &name)\n+    static QString stringValue(QSGVisualAdaptorModel *model, int index, const QString &role)\n     {\n-        QSGVisualAdaptorModelPrivate *d = QSGVisualAdaptorModelPrivate::get(model);\n-        const int role = d->m_roleNames.value(name.toUtf8(), -1);\n+        const QSGVisualAdaptorModelPrivate *d = QSGVisualAdaptorModelPrivate::get(model);\n \n-        if (role != -1)\n-            return d->m_abstractItemModel->index(index, 0, d->m_root).data(role).toString();\n-        else if (name == QLatin1String(\""hasModelChildren\""))\n+        QHash<QByteArray, int>::const_iterator it = d->m_roleNames.find(role.toUtf8());\n+        if (it != d->m_roleNames.end())\n+            return d->m_abstractItemModel->index(index, 0, d->m_root).data(*it).toString();\n+        else if (role == QLatin1String(\""hasModelChildren\""))\n             return QVariant(d->m_abstractItemModel->hasChildren(d->m_abstractItemModel->index(index, 0, d->m_root))).toString();\n         else\n             return QString();\n@@ -292,12 +348,17 @@ public:\n             V8THROW_ERROR(\""Not a valid VisualData object\"");\n \n         QSGVisualAdaptorModelPrivate *model = QSGVisualAdaptorModelPrivate::get(data->model);\n-        if (data->index[0] == -1 || !model->m_abstractItemModel)\n-            return v8::Undefined();\n \n-        const int role = info.Data()->Int32Value();\n-        const QVariant value = model->m_abstractItemModel->index(data->index[0], 0, model->m_root).data(role);\n-        return data->engine->fromVariant(value);\n+        const int propertyId = info.Data()->Int32Value();\n+        if (data->index[0] == -1) {\n+            QSGVDMAbstractItemModelData *modelData = static_cast<QSGVDMAbstractItemModelData *>(data);\n+            if (!modelData->cachedData.isEmpty())\n+                return data->engine->fromVariant(modelData->cachedData.at(propertyId));\n+        } else if (model->m_abstractItemModel) {\n+            const QModelIndex index = model->m_abstractItemModel->index(data->index[0], 0, model->m_root);\n+            return data->engine->fromVariant(index.data(model->m_propertyData.at(propertyId).role));\n+        }\n+        return v8::Undefined();\n     }\n \n     static v8::Handle<v8::Value> get_hasModelChildren(v8::Local<v8::String>, const v8::AccessorInfo &info)\n@@ -324,7 +385,7 @@ public:\n private:\n     QSGVDMAbstractItemModelData(\n             QSGVisualDataModelCacheMetaType *metaType, QSGVisualAdaptorModel *model, int index)\n-        : QSGVisualAdaptorModelData(metaType, model, index)\n+        : QSGVDMCachedModelData(metaType, model, index)\n     {\n         new QSGVDMAbstractItemModelDataMetaObject(\n                 this, QSGVisualAdaptorModelPrivate::get(model)->m_delegateDataType);\n@@ -341,10 +402,18 @@ public:\n     {\n         if (call == QMetaObject::ReadProperty && id >= m_type->propertyOffset) {\n             QSGVisualAdaptorModelPrivate *model = QSGVisualAdaptorModelPrivate::get(m_data->model);\n-            if (m_data->index[0] == -1 || !model->m_listModelInterface)\n-                return -1;\n-            *static_cast<QVariant *>(arguments[0]) = model->m_listModelInterface->data(\n-                    m_data->index[0], model->m_propertyData.at(id - m_type->propertyOffset).role);\n+            const int propertyIndex = id - m_type->propertyOffset;\n+            if (m_data->index[0] == -1) {\n+                QSGVDMCachedModelData *data = static_cast<QSGVDMCachedModelData *>(m_data);\n+                if (!data->cachedData.isEmpty()) {\n+                    *static_cast<QVariant *>(arguments[0]) = data->cachedData.count() > 1\n+                            ? data->cachedData.at(propertyIndex)\n+                            : data->cachedData.at(0);\n+                }\n+            } else if (model->m_listModelInterface) {\n+                *static_cast<QVariant *>(arguments[0]) = model->m_listModelInterface->data(\n+                        m_data->index[0], model->m_propertyData.at(propertyIndex).role);\n+            }\n             return -1;\n         } else {\n             return m_data->qt_metacall(call, id, arguments);\n@@ -353,19 +422,20 @@ public:\n \n };\n \n-class QSGVDMListModelInterfaceData : public QSGVisualAdaptorModelData\n+class QSGVDMListModelInterfaceData : public QSGVDMCachedModelData\n {\n public:\n     static QSGVisualAdaptorModelData *create(\n             QSGVisualDataModelCacheMetaType *metaType, QSGVisualAdaptorModel *model, int index) {\n         return new QSGVDMListModelInterfaceData(metaType, model, index); }\n \n-    static QString stringValue(QSGVisualAdaptorModel *model, int index, const QString &name)\n+    static QString stringValue(QSGVisualAdaptorModel *model, int index, const QString &role)\n     {\n-        QSGVisualAdaptorModelPrivate *d = QSGVisualAdaptorModelPrivate::get(model);\n-        const int role = d->m_roleNames.value(name.toUtf8(), -1);\n-        return role != -1\n-                ? d->m_listModelInterface->data(index, role).toString()\n+\n+        const QSGVisualAdaptorModelPrivate *d = QSGVisualAdaptorModelPrivate::get(model);\n+        QHash<QByteArray, int>::const_iterator it = d->m_roleNames.find(role.toUtf8());\n+        return it != d->m_roleNames.end()\n+                ? d->m_listModelInterface->data(index, *it).toString()\n                 : QString();\n     }\n \n@@ -376,12 +446,16 @@ public:\n             V8THROW_ERROR(\""Not a valid VisualData object\"");\n \n         QSGVisualAdaptorModelPrivate *model = QSGVisualAdaptorModelPrivate::get(data->model);\n-        if (data->index[0] == -1 || !model->m_listModelInterface)\n-            return v8::Undefined();\n-\n-        const int role = info.Data()->Int32Value();\n-        const QVariant value = model->m_listModelInterface->data(data->index[0], role);\n-        return data->engine->fromVariant(value);\n+        const int propertyId = info.Data()->Int32Value();\n+        if (data->index[0] == -1) {\n+            QSGVDMListModelInterfaceData *modelData = static_cast<QSGVDMListModelInterfaceData *>(data);\n+            if (!modelData->cachedData.isEmpty())\n+                return data->engine->fromVariant(modelData->cachedData.at(propertyId));\n+        } else if (model->m_listModelInterface) {\n+            return data->engine->fromVariant(model->m_listModelInterface->data(\n+                    data->index[0], model->m_propertyData.at(propertyId).role));\n+        }\n+        return v8::Undefined();\n     }\n \n     v8::Handle<v8::Value> get()\n@@ -395,7 +469,7 @@ public:\n \n private:\n     QSGVDMListModelInterfaceData(QSGVisualDataModelCacheMetaType *metaType, QSGVisualAdaptorModel *model, int index)\n-        : QSGVisualAdaptorModelData(metaType, model, index)\n+        : QSGVDMCachedModelData(metaType, model, index)\n     {\n         new QSGVDMListModelInterfaceDataMetaObject(\n                 this, QSGVisualAdaptorModelPrivate::get(model)->m_delegateDataType);\n@@ -405,18 +479,23 @@ private:\n class QSGVDMListAccessorData : public QSGVisualAdaptorModelData\n {\n     Q_OBJECT\n-    Q_PROPERTY(QVariant modelData READ modelData CONSTANT)\n+    Q_PROPERTY(QVariant modelData READ modelData NOTIFY modelDataChanged)\n public:\n-    QVariant modelData() const {\n-        return QSGVisualAdaptorModelPrivate::get(model)->m_listAccessor->at(index[0]); }\n+    QVariant modelData() const\n+    {\n+        QSGVisualAdaptorModelPrivate *d = QSGVisualAdaptorModelPrivate::get(model);\n+        return index[0] != -1 && d->m_listAccessor\n+                ? d->m_listAccessor->at(index[0])\n+                : cachedData;\n+    }\n \n     static QSGVisualAdaptorModelData *create(\n             QSGVisualDataModelCacheMetaType *metaType, QSGVisualAdaptorModel *model, int index) {\n-        return new QSGVDMListAccessorData(metaType, model, index); }\n+        return index >= 0 ?  new QSGVDMListAccessorData(metaType, model, index) : 0; }\n \n-    static QString stringValue(QSGVisualAdaptorModel *model, int index, const QString &name)\n+    static QString stringValue(QSGVisualAdaptorModel *model, int index, const QString &role)\n     {\n-        return name == QLatin1String(\""modelData\"")\n+        return role == QLatin1String(\""modelData\"")\n                 ? QSGVisualAdaptorModelPrivate::get(model)->m_listAccessor->at(index).toString()\n                 : QString();\n     }\n@@ -429,15 +508,40 @@ public:\n \n         QSGVisualAdaptorModelPrivate *d = QSGVisualAdaptorModelPrivate::get(data->model);\n         if (data->index[0] == -1 || !d->m_listAccessor)\n-            return v8::Undefined();\n+            return data->engine->fromVariant(static_cast<QSGVDMListAccessorData *>(data)->cachedData);\n \n         return data->engine->fromVariant(d->m_listAccessor->at(data->index[0]));\n     }\n+\n+    void setValue(const QString &role, const QVariant &value)\n+    {\n+        if (role == QLatin1String(\""modelData\""))\n+            cachedData = value;\n+    }\n+\n+    bool resolveIndex(int idx)\n+    {\n+        if (index[0] == -1) {\n+            index[0] = idx;\n+            cachedData.clear();\n+            emit modelIndexChanged();\n+            emit modelDataChanged();\n+            return true;\n+        } else {\n+            return false;\n+        }\n+    }\n+\n+Q_SIGNALS:\n+    void modelDataChanged();\n+\n private:\n     QSGVDMListAccessorData(QSGVisualDataModelCacheMetaType *metaType, QSGVisualAdaptorModel *model, int index)\n         : QSGVisualAdaptorModelData(metaType, model, index)\n     {\n     }\n+\n+    QVariant cachedData;\n };\n \n class QSGVDMObjectDataMetaObject : public QSGVisualAdaptorModelDataMetaObject\n@@ -606,28 +710,30 @@ void QSGVisualAdaptorModelPrivate::createMetaObject()\n                     v8Engine->toString(roleName),\n                     QSGVDMListModelInterfaceData::get_property,\n                     0,\n-                    v8::Int32::New(role));\n+                    v8::Int32::New(propertyId));\n             m_roleNames.insert(propertyName, role);\n         }\n         if (m_propertyData.count() == 1) {\n             addProperty(roles.first(), 1, \""modelData\"", \""QVariant\"", true);\n             ft->PrototypeTemplate()->SetAccessor(\n-                    v8Engine->toString(\""modelData\""),\n+                    v8::String::New(\""modelData\""),\n                     QSGVDMListModelInterfaceData::get_property,\n                     0,\n-                    v8::Int32::New(roles.first()));\n+                    v8::Int32::New(0));\n+            m_roleNames.insert(\""modelData\"", roles.first());\n         }\n         m_flags = QSGVisualAdaptorModel::MetaObjectCacheable;\n     } else if (m_abstractItemModel) {\n         setModelDataType<QSGVDMAbstractItemModelData>();\n         QHash<int, QByteArray> roleNames = m_abstractItemModel->roleNames();\n         for (QHash<int, QByteArray>::const_iterator it = roleNames.begin(); it != roleNames.end(); ++it) {\n-            addProperty(it.key(), m_propertyData.count(), it.value(), \""QVariant\"");\n+            const int propertyId = m_propertyData.count();\n+            addProperty(it.key(), propertyId, it.value(), \""QVariant\"");\n             ft->PrototypeTemplate()->SetAccessor(\n                     v8::String::New(it.value().constData(), it.value().length()),\n                     QSGVDMAbstractItemModelData::get_property,\n                     0,\n-                    v8::Int32::New(it.key()));\n+                    v8::Int32::New(propertyId));\n             m_roleNames.insert(it.value(), it.key());\n         }\n         if (m_propertyData.count() == 1) {\n@@ -636,7 +742,8 @@ void QSGVisualAdaptorModelPrivate::createMetaObject()\n                     v8::String::New(\""modelData\""),\n                     QSGVDMAbstractItemModelData::get_property,\n                     0,\n-                    v8::Int32::New(roleNames.begin().key()));\n+                    v8::Int32::New(0));\n+            m_roleNames.insert(\""modelData\"", roleNames.begin().key());\n         }\n         ft->PrototypeTemplate()->SetAccessor(\n                 v8::String::New(\""hasModelChildren\""),\n"", ""qsgvisualadaptormodel_p.h"": ""@@ -70,9 +70,12 @@ public:\n \n     void referenceObject() { ++objectRef; }\n     bool releaseObject() { return --objectRef == 0 && !(groups & QDeclarativeListCompositor::PersistedFlag); }\n-    bool isObjectReferenced() const { return objectRef == 0 && !(groups & QDeclarativeListCompositor::PersistedFlag); }\n \n-    bool isReferenced() const { return objectRef || scriptRef || (groups & QDeclarativeListCompositor::PersistedFlag); }\n+    bool isReferenced() const {\n+        return scriptRef\n+                || ((groups & QDeclarativeListCompositor::UnresolvedFlag)\n+                    && (groups & QDeclarativeListCompositor::GroupMask));\n+    }\n \n     void Dispose();\n \n@@ -81,6 +84,9 @@ public:\n \n     virtual v8::Handle<v8::Value> get() { return engine->newQObject(this); }\n \n+    virtual void setValue(const QString &role, const QVariant &value) { Q_UNUSED(role); Q_UNUSED(value); }\n+    virtual bool resolveIndex(int) { return false; }\n+\n Q_SIGNALS:\n     void modelIndexChanged();\n \n"", ""qsgvisualdatamodel.cpp"": ""@@ -167,6 +167,31 @@ public:\n     void emitChanges();\n     void emitModelUpdated(const QDeclarativeChangeSet &changeSet, bool reset);\n \n+    bool insert(Compositor::insert_iterator &before, const v8::Local<v8::Object> &object, int groups);\n+\n+    bool verifyCacheIndexes() const\n+    {\n+        bool valid = true;\n+        for (int i = 0; i < m_cache.count(); ++i) {\n+            QSGVisualAdaptorModelData *cacheItem = m_cache.at(i);\n+            Compositor::iterator it = m_compositor.find(Compositor::Cache, i);\n+\n+            for (int j = 1; j < m_groupCount; ++j) {\n+                if (cacheItem->index[j] != it.index[j]) {\n+                    qWarning() << \""Index mismatch: Row\"" << i << (Compositor::Group(j)) << \""Expected\"" << it.index[j] << \""Actual\"" << cacheItem->index[j];\n+                    valid = false;\n+                }\n+            }\n+        }\n+        if (m_cache.count() != m_compositor.count(Compositor::Cache)) {\n+            qWarning() << \""Cache count mismatch\"";\n+            valid = false;\n+        }\n+        if (!valid) {\n+            qWarning() << m_compositor;\n+        }\n+        return valid;\n+    }\n \n     static void group_append(QDeclarativeListProperty<QSGVisualDataGroup> *property, QSGVisualDataGroup *group);\n     static int group_count(QDeclarativeListProperty<QSGVisualDataGroup> *property);\n@@ -396,7 +421,8 @@ QSGVisualDataModelPrivate::QSGVisualDataModelPrivate(QDeclarativeContext *ctxt)\n     , m_filterGroup(QStringLiteral(\""items\""))\n     , m_cacheItems(0)\n     , m_items(0)\n-    , m_groupCount(3)\n+    , m_persistedItems(0)\n+    , m_groupCount(Compositor::MinimumGroupCount)\n {\n }\n \n@@ -472,7 +498,7 @@ void QSGVisualDataModel::componentComplete()\n         defaultGroups |= Compositor::DefaultFlag;\n     if (QSGVisualDataGroupPrivate::get(d->m_persistedItems)->defaultInclude)\n         defaultGroups |= Compositor::PersistedFlag;\n-    for (int i = 3; i < d->m_groupCount; ++i) {\n+    for (int i = Compositor::MinimumGroupCount; i < d->m_groupCount; ++i) {\n         QString name = d->m_groups[i]->name();\n         if (name.isEmpty()) {\n             d->m_groups[i] = d->m_groups[d->m_groupCount - 1];\n@@ -944,7 +970,7 @@ QObject *QSGVisualDataModelPrivate::object(Compositor::Group group, int index, b\n         cacheItem = m_adaptorModel->createModelData(m_cacheMetaType, it.modelIndex());\n         for (int i = 1; i < m_groupCount; ++i)\n             cacheItem->index[i] = it.index[i];\n-        cacheItem->groups = it->flags & Compositor::GroupMask;\n+        cacheItem->groups = it->flags;\n     }\n \n     if (!cacheItem->object) {\n@@ -1086,14 +1112,17 @@ void QSGVisualDataModelPrivate::addGroups(Compositor::Group group, int index, in\n     QVector<Compositor::Insert> inserts;\n     m_compositor.setFlags(group, index, count, groupFlags, &inserts);\n     itemsInserted(inserts);\n+    Q_ASSERT(verifyCacheIndexes());\n     emitChanges();\n }\n \n void QSGVisualDataModelPrivate::removeGroups(Compositor::Group group, int index, int count, int groupFlags)\n {\n     QVector<Compositor::Remove> removes;\n+    Q_ASSERT(verifyCacheIndexes());\n     m_compositor.clearFlags(group, index, count, groupFlags, &removes);\n     itemsRemoved(removes);\n+    Q_ASSERT(verifyCacheIndexes());\n     emitChanges();\n }\n \n@@ -1102,12 +1131,12 @@ void QSGVisualDataModelPrivate::setGroups(Compositor::Group group, int index, in\n     QVector<Compositor::Insert> inserts;\n     m_compositor.setFlags(group, index, count, groupFlags, &inserts);\n     itemsInserted(inserts);\n-\n+    Q_ASSERT(verifyCacheIndexes());\n     const int removeFlags = ~groupFlags & Compositor::GroupMask;\n     QVector<Compositor::Remove> removes;\n     m_compositor.clearFlags(group, index, count, removeFlags, &removes);\n     itemsRemoved(removes);\n-\n+    Q_ASSERT(verifyCacheIndexes());\n     emitChanges();\n }\n \n@@ -1222,9 +1251,11 @@ void QSGVisualDataModel::_q_itemsInserted(int index, int count)\n     Q_D(QSGVisualDataModel);\n     if (count <= 0)\n         return;\n+    Q_ASSERT(d->verifyCacheIndexes());\n     QVector<Compositor::Insert> inserts;\n     d->m_compositor.listItemsInserted(d->m_adaptorModel, index, count, &inserts);\n     d->itemsInserted(inserts);\n+    Q_ASSERT(d->verifyCacheIndexes());\n     d->emitChanges();\n }\n \n@@ -1273,7 +1304,14 @@ void QSGVisualDataModelPrivate::itemsRemoved(\n                         emitDestroyingItem(item);\n                     cacheItem->object = 0;\n                 }\n-                if (remove.groups() == cacheItem->groups) {\n+                if (!cacheItem->isReferenced()) {\n+                    m_compositor.clearFlags(Compositor::Cache, cacheIndex, 1, Compositor::CacheFlag);\n+                    m_cache.removeAt(cacheIndex);\n+                    delete cacheItem;\n+                    --cacheIndex;\n+                    ++removedCache;\n+                    Q_ASSERT(m_cache.count() == m_compositor.count(Compositor::Cache));\n+                } else if (remove.groups() == cacheItem->groups) {\n                     cacheItem->groups = 0;\n                     for (int i = 1; i < m_groupCount; ++i)\n                         cacheItem->index[i] = -1;\n@@ -1316,6 +1354,8 @@ void QSGVisualDataModel::_q_itemsRemoved(int index, int count)\n     QVector<Compositor::Remove> removes;\n     d->m_compositor.listItemsRemoved(d->m_adaptorModel, index, count, &removes);\n     d->itemsRemoved(removes);\n+\n+    Q_ASSERT(d->verifyCacheIndexes());\n     d->emitChanges();\n }\n \n@@ -1424,6 +1464,37 @@ QSGVisualDataModelAttached *QSGVisualDataModel::qmlAttachedProperties(QObject *o\n     return QSGVisualDataModelAttached::properties(obj);\n }\n \n+bool QSGVisualDataModelPrivate::insert(\n+        Compositor::insert_iterator &before, const v8::Local<v8::Object> &object, int groups)\n+{\n+    QSGVisualAdaptorModelData *cacheItem = m_adaptorModel->createModelData(m_cacheMetaType, -1);\n+    if (!cacheItem)\n+        return false;\n+\n+    for (int i = 1; i < m_groupCount; ++i)\n+        cacheItem->index[i] = before.index[i];\n+\n+    v8::Local<v8::Array> propertyNames = object->GetPropertyNames();\n+    for (uint i = 0; i < propertyNames->Length(); ++i) {\n+        v8::Local<v8::String> propertyName = propertyNames->Get(i)->ToString();\n+        cacheItem->setValue(\n+                m_cacheMetaType->v8Engine->toString(propertyName),\n+                m_cacheMetaType->v8Engine->toVariant(object->Get(propertyName), QVariant::Invalid));\n+    }\n+\n+    cacheItem->groups = groups | Compositor::UnresolvedFlag | Compositor::CacheFlag;\n+\n+    // Must be before the new object is inserted into the cache or its indexes will be adjusted too.\n+    itemsInserted(QVector<Compositor::Insert>() << Compositor::Insert(before, 1, cacheItem->groups & ~Compositor::CacheFlag));\n+\n+    before = m_compositor.insert(before, 0, 0, 1, cacheItem->groups);\n+    m_cache.insert(before.cacheIndex, cacheItem);\n+\n+    before += 1;\n+\n+    return true;\n+}\n+\n //============================================================================\n \n QSGVisualDataModelCacheMetaType::QSGVisualDataModelCacheMetaType(\n@@ -1769,6 +1840,14 @@ void QSGVisualDataModelAttached::setGroups(const QStringList &groups)\n     model->setGroups(Compositor::Cache, cacheIndex, 1, groupFlags);\n }\n \n+bool QSGVisualDataModelAttached::isResolved() const\n+{\n+    if (!m_cacheItem)\n+        return false;\n+\n+    return !(m_cacheItem->groups & Compositor::UnresolvedFlag);\n+}\n+\n /*!\n     \\qmlattachedproperty int QtQuick2::VisualDataModel::inItems\n \n@@ -2020,7 +2099,7 @@ QDeclarativeV8Handle QSGVisualDataGroup::get(int index)\n         cacheItem = model->m_adaptorModel->createModelData(model->m_cacheMetaType, it.modelIndex());\n         for (int i = 1; i < model->m_groupCount; ++i)\n             cacheItem->index[i] = it.index[i];\n-        cacheItem->groups = it->flags & Compositor::GroupMask;\n+        cacheItem->groups = it->flags;\n \n         model->m_cache.insert(it.cacheIndex, cacheItem);\n         model->m_compositor.setFlags(it, 1, Compositor::CacheFlag);\n@@ -2039,6 +2118,7 @@ QDeclarativeV8Handle QSGVisualDataGroup::get(int index)\n \n         ++cacheItem->scriptRef;\n     }\n+\n     return QDeclarativeV8Handle::fromHandle(cacheItem->indexHandle);\n }\n \n@@ -2060,8 +2140,49 @@ bool QSGVisualDataGroupPrivate::parseIndex(\n     return false;\n }\n \n+void QSGVisualDataGroup::insert(QDeclarativeV8Function *args)\n+{\n+    Q_D(QSGVisualDataGroup);\n+    QSGVisualDataModelPrivate *model = QSGVisualDataModelPrivate::get(d->model);\n+\n+    int index = model->m_compositor.count(d->group);\n+    Compositor::Group group = d->group;\n+\n+    if (args->Length() == 0)\n+        return;\n+\n+    int  i = 0;\n+    v8::Local<v8::Value> v = (*args)[i];\n+    if (d->parseIndex(v, &index, &group)) {\n+        if (index < 0 || index > model->m_compositor.count(group)) {\n+            qmlInfo(this) << tr(\""insert: index out of range\"");\n+            return;\n+        }\n+        if (++i == args->Length())\n+            return;\n+        v = (*args)[i];\n+    }\n+\n+    Compositor::insert_iterator before = index < model->m_compositor.count(group)\n+            ? model->m_compositor.findInsertPosition(group, index)\n+            : model->m_compositor.end();\n+\n+    int groups = 1 << d->group;\n+    if (++i < args->Length())\n+        groups = model->m_cacheMetaType->parseGroups((*args)[i]);\n+\n+    if (v->IsArray()) {\n+        return;\n+    } else if (v->IsObject()) {\n+        model->insert(before, v->ToObject(), groups);\n+        model->emitChanges();\n+    }\n+}\n+\n /*!\n     \\qmlmethod QtQuick2::VisualDataGroup::create(var index)\n+    \\qmlmethod QtQuick2::VisualDataGroup::create(var index, jsdict data)\n+    \\qmlmethod QtQuick2::VisualDataGroup::create(jsdict data)\n \n     Returns a reference to the instantiated item at \\a index in the group.\n \n@@ -2078,23 +2199,146 @@ void QSGVisualDataGroup::create(QDeclarativeV8Function *args)\n     if (args->Length() == 0)\n         return;\n \n+    QSGVisualDataModelPrivate *model = QSGVisualDataModelPrivate::get(d->model);\n+\n+    int index = model->m_compositor.count(d->group);\n     Compositor::Group group = d->group;\n-    int index = -1;\n-    if (!d->parseIndex((*args)[0], &index, &group)) {\n-        qmlInfo(this) << tr(\""create: invalid index\"");\n-        return;\n-    }\n \n-    QSGVisualDataModelPrivate *model = QSGVisualDataModelPrivate::get(d->model);\n+    int  i = 0;\n+    v8::Local<v8::Value> v = (*args)[i];\n+    if (d->parseIndex(v, &index, &group))\n+        ++i;\n+\n+    if (i < args->Length() && index >= 0 && index <= model->m_compositor.count(group)) {\n+        v = (*args)[i];\n+        if (v->IsObject()) {\n+            int groups = 1 << d->group;\n+            if (++i < args->Length())\n+                groups = model->m_cacheMetaType->parseGroups((*args)[i]);\n+\n+            Compositor::insert_iterator before = index < model->m_compositor.count(group)\n+                    ? model->m_compositor.findInsertPosition(group, index)\n+                    : model->m_compositor.end();\n+\n+            index = before.index[d->group];\n+            group = d->group;\n+\n+            if (!model->insert(before, v->ToObject(), groups)) {\n+                return;\n+            }\n+        }\n+    }\n     if (index < 0 || index >= model->m_compositor.count(group)) {\n         qmlInfo(this) << tr(\""create: index out of range\"");\n         return;\n     }\n \n-    QObject *object = model->object(group, index, true, false);\n-    if (object)\n-        model->addGroups(group, index, 1, Compositor::PersistedFlag);\n+    QObject *object = model->object(d->group, index, true, false);\n+    if (object) {\n+        QVector<Compositor::Insert> inserts;\n+        model->m_compositor.setFlags(d->group, index, 1, Compositor::PersistedFlag, &inserts);\n+        model->itemsInserted(inserts);\n+    }\n+\n+    Q_ASSERT(model->verifyCacheIndexes());\n     args->returnValue(args->engine()->newQObject(object));\n+    model->emitChanges();\n+}\n+\n+void QSGVisualDataGroup::resolve(QDeclarativeV8Function *args)\n+{\n+    Q_D(QSGVisualDataGroup);\n+    if (!d->model)\n+        return;\n+\n+    QSGVisualDataModelPrivate *model = QSGVisualDataModelPrivate::get(d->model);\n+\n+    if (args->Length() < 2)\n+        return;\n+\n+    int from = -1;\n+    int to = -1;\n+    Compositor::Group fromGroup;\n+    Compositor::Group toGroup;\n+\n+    v8::Local<v8::Value> v = (*args)[0];\n+    if (d->parseIndex(v, &from, &fromGroup)) {\n+        if (from < 0 || from >= model->m_compositor.count(d->group)) {\n+            qmlInfo(this) << tr(\""insert: from index out of range\"");\n+            return;\n+        }\n+    } else {\n+        qmlInfo(this) << tr(\""resolve: from index invalid\"");\n+        return;\n+    }\n+\n+    v = (*args)[1];\n+    if (d->parseIndex(v, &to, &toGroup)) {\n+        if (to < 0 || to >= model->m_compositor.count(d->group)) {\n+            qmlInfo(this) << tr(\""insert: to index out of range\"");\n+            return;\n+        }\n+    } else {\n+        qmlInfo(this) << tr(\""resolve: to index invalid\"");\n+        return;\n+    }\n+\n+    Compositor::iterator fromIt = model->m_compositor.find(fromGroup, from);\n+    Compositor::iterator toIt = model->m_compositor.find(toGroup, to);\n+\n+    if (!fromIt->isUnresolved()) {\n+        qmlInfo(this) << tr(\""resolve: from is not an unresolved item\"");\n+        return;\n+    }\n+    if (!toIt->list) {\n+        qmlInfo(this) << tr(\""resolve: to is not a model item\"");\n+        return;\n+    }\n+\n+    const int unresolvedFlags = fromIt->flags;\n+    const int resolvedFlags = toIt->flags;\n+    const int resolvedIndex = toIt.modelIndex();\n+    void * const resolvedList = toIt->list;\n+\n+    QSGVisualAdaptorModelData *cacheItem = model->m_cache.at(fromIt.cacheIndex);\n+    cacheItem->groups &= ~Compositor::UnresolvedFlag;\n+\n+    if (toIt.cacheIndex > fromIt.cacheIndex)\n+        toIt.decrementIndexes(1, unresolvedFlags);\n+    if (!toIt->inGroup(fromGroup) || toIt.index[fromGroup] > from)\n+        from += 1;\n+\n+    model->itemsMoved(\n+            QVector<Compositor::Remove>() << Compositor::Remove(fromIt, 1, unresolvedFlags, 0),\n+            QVector<Compositor::Insert>() << Compositor::Insert(toIt, 1, unresolvedFlags, 0));\n+    model->itemsInserted(\n+            QVector<Compositor::Insert>() << Compositor::Insert(toIt, 1, (resolvedFlags & ~unresolvedFlags) | Compositor::CacheFlag));\n+    toIt.incrementIndexes(1, resolvedFlags | unresolvedFlags);\n+    model->itemsRemoved(QVector<Compositor::Remove>() << Compositor::Remove(toIt, 1, resolvedFlags));\n+\n+    model->m_compositor.setFlags(toGroup, to, 1, unresolvedFlags & ~Compositor::UnresolvedFlag);\n+    model->m_compositor.clearFlags(fromGroup, from, 1, unresolvedFlags);\n+\n+    if (resolvedFlags & Compositor::CacheFlag)\n+        model->m_compositor.insert(Compositor::Cache, toIt.cacheIndex, resolvedList, resolvedIndex, 1, Compositor::CacheFlag);\n+\n+    Q_ASSERT(model->m_cache.count() == model->m_compositor.count(Compositor::Cache));\n+\n+    if (!cacheItem->isReferenced()) {\n+        Q_ASSERT(toIt.cacheIndex == model->m_cache.indexOf(cacheItem));\n+        model->m_cache.removeAt(toIt.cacheIndex);\n+        model->m_compositor.clearFlags(Compositor::Cache, toIt.cacheIndex, 1, Compositor::CacheFlag);\n+        delete cacheItem;\n+        Q_ASSERT(model->m_cache.count() == model->m_compositor.count(Compositor::Cache));\n+    } else {\n+        cacheItem->resolveIndex(resolvedIndex);\n+        if (cacheItem->object)\n+            cacheItem->attached->emitResolvedChanged();\n+    }\n+\n+    Q_ASSERT(model->verifyCacheIndexes());\n+\n+    model->emitChanges();\n }\n \n /*!\n"", ""qsgvisualdatamodel_p.h"": ""@@ -167,7 +167,9 @@ public:\n     Q_INVOKABLE QDeclarativeV8Handle get(int index);\n \n public Q_SLOTS:\n+    void insert(QDeclarativeV8Function *);\n     void create(QDeclarativeV8Function *);\n+    void resolve(QDeclarativeV8Function *);\n     void remove(QDeclarativeV8Function *);\n     void addGroups(QDeclarativeV8Function *);\n     void removeGroups(QDeclarativeV8Function *);\n@@ -190,6 +192,7 @@ class QSGVisualDataModelAttached : public QObject\n     Q_OBJECT\n     Q_PROPERTY(QSGVisualDataModel *model READ model NOTIFY modelChanged)\n     Q_PROPERTY(QStringList groups READ groups WRITE setGroups NOTIFY groupsChanged)\n+    Q_PROPERTY(bool isResolved READ isResolved NOTIFY resolvedChanged)\n public:\n     QSGVisualDataModelAttached(QObject *parent)\n         : QObject(parent)\n@@ -204,8 +207,12 @@ public:\n     QStringList groups() const;\n     void setGroups(const QStringList &groups);\n \n+    bool isResolved() const;\n+\n     void emitChanges();\n \n+    void emitResolvedChanged() { emit resolvedChanged(); }\n+\n     static QSGVisualDataModelAttached *properties(QObject *obj)\n     {\n         QSGVisualDataModelAttached *rv = attachedProperties.value(obj);\n@@ -219,6 +226,7 @@ public:\n Q_SIGNALS:\n     void modelChanged();\n     void groupsChanged();\n+    void resolvedChanged();\n \n public:\n     QSGVisualAdaptorModelData *m_cacheItem;\n"", ""qdeclarativelistcompositor.cpp"": ""@@ -513,7 +513,7 @@ void QDeclarativeListCompositor::clearFlags(\n         count -= difference;\n \n         const int removeFlags = from->flags & flags & ~(AppendFlag | PrependFlag);\n-        const int clearedFlags = from->flags & ~(flags | AppendFlag);\n+        const int clearedFlags = from->flags & ~(flags | AppendFlag | UnresolvedFlag);\n         if (removeFlags && removes) {\n             const int maskedFlags = clearCache\n                     ? (removeFlags & ~CacheFlag)\n@@ -1099,6 +1099,7 @@ QDebug operator <<(QDebug debug, const QDeclarativeListCompositor::Range &range)\n             << range.list) << \"" \""\n             << range.index << \"" \""\n             << range.count << \"" \""\n+            << (range.isUnresolved() ? \""U\"" : \""0\"")\n             << (range.append() ? \""A\"" : \""0\"")\n             << (range.prepend() ? \""P\"" : \""0\"");\n     for (int i = QDeclarativeListCompositor::MaximumGroupCount - 1; i >= 2; --i)\n"", ""qdeclarativelistcompositor_p.h"": ""@@ -65,24 +65,25 @@ QT_BEGIN_NAMESPACE\n class Q_AUTOTEST_EXPORT QDeclarativeListCompositor\n {\n public:\n-    enum { MaximumGroupCount = 11 };\n+    enum { MinimumGroupCount = 3, MaximumGroupCount = 11 };\n \n     enum Group\n     {\n-        Cache   = 0,\n-        Default = 1,\n-        Persisted = 2\n+        Cache       = 0,\n+        Default     = 1,\n+        Persisted   = 2\n     };\n \n     enum Flag\n     {\n-        CacheFlag   = 0x000001,\n-        DefaultFlag = 0x000002,\n-        PersistedFlag = 0x000004,\n-        GroupMask   = 0x00FFFE,\n-        PrependFlag = 0x100000,\n-        AppendFlag  = 0x200000,\n-        MovedFlag   = 0x400000\n+        CacheFlag       = 1 << Cache,\n+        DefaultFlag     = 1 << Default,\n+        PersistedFlag   = 1 << Persisted,\n+        PrependFlag     = 0x100000,\n+        AppendFlag      = 0x200000,\n+        UnresolvedFlag  = 0x400000,\n+        MovedFlag       = 0x800000,\n+        GroupMask       = ~(PrependFlag | AppendFlag | UnresolvedFlag | MovedFlag | CacheFlag)\n     };\n \n     class Range\n@@ -108,6 +109,7 @@ public:\n         inline bool inGroup() const { return flags & GroupMask; }\n         inline bool inCache() const { return flags & CacheFlag; }\n         inline bool inGroup(int group) const { return flags & (1 << group); }\n+        inline bool isUnresolved() const { return flags & UnresolvedFlag; }\n \n         inline bool prepend() const { return flags & PrependFlag; }\n         inline bool append() const { return flags & AppendFlag; }\n""}","feature,bug","feature 
",bug;
7136.0,7136.0,test,Friedemann Kleint,"Tests: Remove Q_WS_QPA, qpa-sections from .profiles.","Tests: Remove Q_WS_QPA, qpa-sections from .profiles.

Compile without -qpa.

- Make Q_WS_QPA-#ifdefed sections the default in the code
- Replace some Q_WS_ by Q_OS_
- Add ### fixme for places that need checking
- Remove qpa conditionals from .pro files.

Change-Id: I6ea930afc0c236cc12a7b7e95f1b8a1c24b3a513","['tests/auto/integrationtests/macplist/app/app.pro', 'tests/auto/widgets/kernel/qsound/tst_qsound.cpp', 'tests/auto/gui/text/qstatictext/tst_qstatictext.cpp', 'tests/auto/widgets/kernel/qwidget/tst_qwidget.cpp', 'tests/auto/widgets/widgets/qtextedit/qtextedit.pro', 'tests/auto/widgets/dialogs/qfontdialog/qfontdialog.pro', 'tests/auto/gui/painting/qprinter/tst_qprinter.cpp', 'tests/auto/widgets/graphicsview/qgraphicsview/qgraphicsview.pro', 'tests/auto/integrationtests/integrationtests.pro', 'tests/auto/widgets/kernel/qsound/qsound.pro', 'tests/auto/qwindowsurface/tst_qwindowsurface.cpp', 'tests/auto/widgets/graphicsview/qgraphicsproxywidget/qgraphicsproxywidget.pro', 'tests/auto/widgets/graphicsview/qgraphicsscene/qgraphicsscene.pro', 'tests/auto/gui/kernel/qclipboard/tst_qclipboard.cpp', 'tests/auto/gui/text/qfont/tst_qfont.cpp', 'tests/auto/widgets/kernel/qaction/tst_qaction.cpp', 'tests/auto/widgets/util/qsystemtrayicon/tst_qsystemtrayicon.cpp', 'tests/auto/gui/text/qcssparser/tst_qcssparser.cpp', 'tests/auto/widgets/graphicsview/qgraphicsgridlayout/qgraphicsgridlayout.pro', 'tests/auto/widgets/kernel/qwidget/qwidget.pro', 'tests/auto/widgets/graphicsview/qgraphicsitem/qgraphicsitem.pro', 'tests/auto/widgets/widgets/qmenu/tst_qmenu.cpp', 'tests/auto/gui/image/qpixmap/tst_qpixmap.cpp', 'tests/auto/integrationtests/macplist/app/main.cpp']","{""tst_qpixmap.cpp"": ""@@ -52,6 +52,7 @@\n #include <qsplashscreen.h>\n \n #include <qplatformpixmap_qpa.h>\n+#include <private/qguiapplication_p.h>\n #include <private/qdrawhelper_p.h>\n \n #include <QSet>\n@@ -774,9 +775,8 @@ void tst_QPixmap::grabWidget()\n \n void tst_QPixmap::grabWindow()\n {\n-#ifdef Q_WS_QPA\n+//  ### fixme: Check platforms\n     QSKIP(\""QTBUG-20863 grabWindow is broken on most qpa backends\"");\n-#endif\n #ifdef Q_OS_WINCE\n     // We get out of memory, if the desktop itself is too big.\n     if (QApplication::desktop()->width() <= 480)\n@@ -1083,10 +1083,6 @@ void tst_QPixmap::fromWinHICON()\n \n void tst_QPixmap::onlyNullPixmapsOutsideGuiThread()\n {\n-#ifdef Q_WS_QPA\n-    QSKIP(\""QTBUG-20864 can't determine if threaded pixmaps are available for qpa\"");\n-#endif\n-#if !defined(Q_WS_WIN) && !defined(Q_WS_MAC)\n     class Thread : public QThread\n     {\n     public:\n@@ -1108,10 +1104,12 @@ void tst_QPixmap::onlyNullPixmapsOutsideGuiThread()\n             QVERIFY(pixmap2.isNull());\n         }\n     };\n+    if (!QGuiApplicationPrivate::platform_integration->hasCapability(QPlatformIntegration::ThreadedPixmaps))\n+        QSKIP(\""Threaded pixmaps not supported on this platform\"");\n+\n     Thread thread;\n     thread.start();\n     thread.wait();\n-#endif // !defined(Q_WS_WIN) && !defined(Q_WS_MAC)\n }\n \n void tst_QPixmap::refUnref()\n"", ""tst_qclipboard.cpp"": ""@@ -55,7 +55,7 @@ class tst_QClipboard : public QObject\n {\n     Q_OBJECT\n private slots:\n-#if !defined(Q_WS_X11) && !defined(Q_WS_QWS) && !defined(Q_WS_QPA) && !defined(QT_NO_PROCESS)\n+#if (defined(Q_OS_WIN) || defined(Q_OS_MAC)) && !defined(QT_NO_PROCESS)\n     void copy_exit_paste();\n #endif\n     void capabiliyFunctions();\n@@ -191,14 +191,14 @@ void tst_QClipboard::testSignals()\n // This test does not make sense on X11 and embedded, as copied data disappears\n // from the clipboard when the application exits.  It's still possible to test\n // copy/paste - just keep the apps running.\n-#if !defined(Q_WS_X11) && !defined(Q_WS_QWS) && !defined(Q_WS_QPA) && !defined(QT_NO_PROCESS)\n+#if (defined(Q_OS_WIN) || defined(Q_OS_MAC)) && !defined(QT_NO_PROCESS)\n void tst_QClipboard::copy_exit_paste()\n {\n     if (!nativeClipboardWorking())\n         QSKIP(\""Native clipboard not working in this setup\"");\n     const QStringList stringArgument = QStringList() << \""Test string.\"";\n     QCOMPARE(QProcess::execute(\""copier/copier\"", stringArgument), 0);\n-#ifdef Q_WS_MAC\n+#ifdef Q_OS_MAC\n     // The Pasteboard needs a moment to breathe (at least on older Macs).\n     QTest::qWait(100);\n #endif\n"", ""tst_qprinter.cpp"": ""@@ -82,9 +82,7 @@ private slots:\n     void testSetOptions();\n     void testMargins_data();\n     void testMargins();\n-#if !defined(Q_WS_X11) && !defined(Q_WS_QWS) && !defined(Q_WS_QPA) && !defined(Q_OS_MAC)\n     void testNonExistentPrinter();\n-#endif\n     void testPageSetupDialog();\n     void testMulitpleSets_data();\n     void testMulitpleSets();\n@@ -384,10 +382,11 @@ void tst_QPrinter::testMargins()\n         delete painter;\n }\n \n-// QPrinter::testNonExistentPrinter() is not relevant for some platforms.\n-#if !defined(Q_WS_X11) && !defined(Q_WS_QWS) && !defined(Q_WS_QPA) && !defined(Q_OS_MAC)\n void tst_QPrinter::testNonExistentPrinter()\n {\n+#if !defined(Q_OS_WIN)\n+    QSKIP(\""QPrinter::testNonExistentPrinter() is not relevant on this platform\"");\n+#endif\n     QPrinter printer;\n     QPainter painter;\n \n@@ -416,7 +415,6 @@ void tst_QPrinter::testNonExistentPrinter()\n \n     QVERIFY(!painter.begin(&printer));\n }\n-#endif\n \n void tst_QPrinter::testMulitpleSets_data()\n {\n"", ""tst_qcssparser.cpp"": ""@@ -1593,12 +1593,10 @@ void tst_QCssParser::extractFontFamily()\n     extractor.extractFont(&fnt, &adjustment);\n     QFontInfo info(fnt);\n \n-#ifdef Q_WS_QPA\n     // Note, we have to QSKIP rather than QEXPECT_FAIL because font lookup is broken\n     // such that it may work or not work depending on the order in which fonts were\n-    // loaded from disk\n+    // loaded from disk: ### fixme: Check platforms\n     QSKIP(\""QTBUG-20986 may fail on qpa\"");\n-#endif\n \n     QTEST(info.family(), \""expectedFamily\"");\n }\n"", ""tst_qfont.cpp"": ""@@ -80,9 +80,7 @@ private slots:\n     void italicOblique();\n     void insertAndRemoveSubstitutions();\n     void serializeSpacing();\n-#if !defined(Q_WS_QWS) && !defined(Q_WS_QPA)\n     void lastResortFont();\n-#endif\n #if defined(Q_WS_MAC)\n     void styleName();\n #endif\n@@ -611,13 +609,13 @@ void tst_QFont::serializeSpacing()\n // QFont::lastResortFont() may abort with qFatal() on QWS/QPA\n // if absolutely no font is found. Just as ducumented for QFont::lastResortFont().\n // This happens on our CI machines which run QWS autotests.\n-#if !defined(Q_WS_QWS) && !defined(Q_WS_QPA)\n+// ### fixme: Check platforms\n void tst_QFont::lastResortFont()\n {\n+    QSKIP(\""QFont::lastResortFont() may abort with qFatal() on QPA\"");\n     QFont font;\n     QVERIFY(!font.lastResortFont().isEmpty());\n }\n-#endif\n \n #if defined(Q_WS_MAC)\n void tst_QFont::styleName()\n"", ""tst_qstatictext.cpp"": ""@@ -388,18 +388,7 @@ bool tst_QStaticText::supportsTransformations() const\n {\n     QPixmap pm(10, 10);\n     QPainter p(&pm);\n-    QPaintEngine *engine = p.paintEngine();\n-\n-    QPaintEngine::Type type = engine->type();\n-\n-    if (type == QPaintEngine::OpenGL\n-#if !defined(Q_WS_WIN) && !defined(Q_WS_X11) && !defined(Q_WS_MAC) && !defined(Q_WS_QPA)\n-        || type == QPaintEngine::Raster\n-#endif\n-        )\n-        return false;\n-\n-    return true;\n+    return p.paintEngine()->type() != QPaintEngine::OpenGL;\n }\n \n void tst_QStaticText::rotatedPainter()\n"", ""integrationtests.pro"": ""@@ -6,9 +6,6 @@ SUBDIRS=\\\n    gestures \\\n    lancelot \\\n    languagechange \\\n-   macgui \\\n-   macnativeevents \\\n-   macplist \\\n    modeltest \\\n    networkselftest \\\n    qaccessibility \\\n@@ -22,10 +19,10 @@ SUBDIRS=\\\n \n wince*|!contains(QT_CONFIG, accessibility):SUBDIRS -= qaccessibility\n \n-!mac|qpa: SUBDIRS -= \\\n-           macgui \\\n-           macnativeevents \\\n-           macplist \\\n+mac:contains(QT_CONFIG, coreservices) {\n+SUBDIRS += macplist\n+# ### fixme: macgui macnativeevents ?\n+}\n \n !embedded|wince*: SUBDIRS -= \\\n            qdirectpainter \\\n"", ""app.pro"": ""@@ -9,3 +9,4 @@ INCLUDEPATH += .\n \n # Input\n SOURCES += main.cpp\n+QT += widgets\n"", ""main.cpp"": ""@@ -40,7 +40,7 @@\n ****************************************************************************/\n \n \n-#include <QtGui/QApplication>\n+#include <QtWidgets/QApplication>\n \n int main(int argc, char **argv)\n {\n"", ""tst_qwindowsurface.cpp"": ""@@ -125,9 +125,6 @@ static void VERIFY_COLOR(const QRegion &region, const QColor &color)\n             const QPixmap pixmap = QPixmap::grabWindow(QDesktopWidget().winId(),\n                                                    rect.left(), rect.top(),\n                                                    rect.width(), rect.height());\n-#ifdef Q_WS_QPA\n-            QEXPECT_FAIL(\""\"", \""QTBUG-20863 QPixmap::grabWindow unimplemented for qpa\"", Abort);\n-#endif\n             QCOMPARE(pixmap.size(), rect.size());\n             QPixmap expectedPixmap(pixmap); /* ensure equal formats */\n             expectedPixmap.fill(color);\n"", ""qfontdialog.pro"": ""@@ -5,8 +5,9 @@ QT += core-private gui-private\n \n SOURCES  += tst_qfontdialog.cpp\n \n-mac:!qpa {\n-    OBJECTIVE_SOURCES += tst_qfontdialog_mac_helpers.mm\n-    LIBS += -framework Cocoa\n+mac {\n+#    ### fixme\n+#    OBJECTIVE_SOURCES += tst_qfontdialog_mac_helpers.mm\n+#    LIBS += -framework Cocoa\n }\n \n"", ""qgraphicsgridlayout.pro"": ""@@ -3,4 +3,5 @@ load(qttest_p4)\n QT += widgets\n SOURCES  += tst_qgraphicsgridlayout.cpp\n CONFIG += parallel_test\n-contains(QT_CONFIG,xcb):qpa:CONFIG+=insignificant_test  # QTBUG-20756 crashes on qpa, xcb\n+# ### fixme: QTBUG-20756 crashes on xcb\n+contains(QT_CONFIG,xcb):CONFIG+=insignificant_test\n"", ""qgraphicsitem.pro"": ""@@ -6,4 +6,5 @@ DEFINES += QT_NO_CAST_TO_ASCII\n \n win32:!wince*: LIBS += -lUser32\n \n-contains(QT_CONFIG,xcb):qpa:CONFIG+=insignificant_test  # QTBUG-20756 crashes on qpa, xcb\n+# ### fixme: QTBUG-20756 crashes on xcb\n+contains(QT_CONFIG,xcb):CONFIG+=insignificant_test\n"", ""qgraphicsproxywidget.pro"": ""@@ -5,4 +5,5 @@ QT += core-private gui-private\n \n SOURCES  += tst_qgraphicsproxywidget.cpp\n \n-contains(QT_CONFIG,xcb):qpa:CONFIG+=insignificant_test  # QTBUG-20756 crashes on qpa, xcb\n+# ### fixme: QTBUG-20756 crashes on xcb\n+contains(QT_CONFIG,xcb):CONFIG+=insignificant_test\n"", ""qgraphicsscene.pro"": ""@@ -17,4 +17,5 @@ wince* {\n    DEFINES += SRCDIR=\\\\\\\"".\\\\\\\""\n }\n \n-contains(QT_CONFIG,xcb):qpa:CONFIG+=insignificant_test  # QTBUG-20756 crashes on qpa, xcb\n+# ### fixme: QTBUG-20756 crashes on xcb\n+contains(QT_CONFIG,xcb):CONFIG+=insignificant_test\n"", ""qgraphicsview.pro"": ""@@ -6,4 +6,5 @@ QT += core-private gui-private\n SOURCES  += tst_qgraphicsview.cpp tst_qgraphicsview_2.cpp\n DEFINES += QT_NO_CAST_TO_ASCII\n \n-contains(QT_CONFIG,xcb):qpa:CONFIG+=insignificant_test  # QTBUG-20756 crashes on qpa, xcb\n+# ### fixme: QTBUG-20756 crashes on xcb\n+contains(QT_CONFIG,xcb):CONFIG+=insignificant_test\n"", ""tst_qaction.cpp"": ""@@ -240,13 +240,13 @@ void tst_QAction::setStandardKeys()\n     QVERIFY(act.shortcut() == act.shortcuts().first());\n \n     QList<QKeySequence> expected;\n-#if defined(Q_WS_MAC)\n+#if defined(Q_OS_MAC)\n     expected  << QKeySequence(\""CTRL+C\"");\n-#elif defined(Q_WS_WIN) || defined(Q_WS_QWS) || defined(Q_WS_QPA)\n-    expected  << QKeySequence(\""CTRL+C\"") << QKeySequence(\""CTRL+INSERT\"");\n #else\n-    expected  << QKeySequence(\""CTRL+C\"") << QKeySequence(\""F16\"") << QKeySequence(\""CTRL+INSERT\"");\n+    expected  << QKeySequence(\""CTRL+C\"") << QKeySequence(\""CTRL+INSERT\"");\n #endif\n+//   ### fixme: Historical else branch. What platform is this?\n+//   expected  << QKeySequence(\""CTRL+C\"") << QKeySequence(\""F16\"") << QKeySequence(\""CTRL+INSERT\"");\n     QVERIFY(act.shortcuts() == expected);\n }\n \n"", ""qsound.pro"": ""@@ -1,6 +1,6 @@\n load(qttest_p4)\n SOURCES += tst_qsound.cpp\n-\n+QT += widgets\n wince* {\n     deploy.files += 4.wav\n     DEPLOYMENT += deploy\n"", ""tst_qsound.cpp"": ""@@ -41,7 +41,7 @@\n \n \n #include <QtTest/QtTest>\n-#include <QtGui>\n+#include <QtWidgets>\n \n class tst_QSound : public QObject\n {\n@@ -59,9 +59,7 @@ private slots:\n \n void tst_QSound::checkFinished()\n {\n-#if defined(Q_WS_QPA)\n     QSKIP(\""QSound is not implemented on Lighthouse\"");\n-#else\n     QSound sound(SRCDIR\""4.wav\"");\n     sound.setLoops(3);\n     sound.play();\n@@ -71,17 +69,14 @@ void tst_QSound::checkFinished()\n     QEXPECT_FAIL(\""\"", \""QSound buggy on embedded (task QTBUG-157)\"", Abort);\n #endif\n     QVERIFY(sound.isFinished() );\n-#endif\n }\n \n void tst_QSound::staticPlay()\n {\n     QSKIP(\""Test disabled -- only for manual purposes\"");\n-#if !defined(Q_WS_QPA)\n     // Check that you hear sound with static play also.\n     QSound::play(SRCDIR\""4.wav\"");\n     QTest::qWait(2000);\n-#endif\n }\n \n QTEST_MAIN(tst_QSound);\n"", ""qwidget.pro"": ""@@ -9,9 +9,10 @@ aix-g++*:QMAKE_CXXFLAGS+=-fpermissive\n \n CONFIG += x11inc\n \n-mac:!qpa {\n-    LIBS += -framework Security -framework AppKit -framework Carbon\n-    OBJECTIVE_SOURCES += tst_qwidget_mac_helpers.mm\n+mac {\n+# ### fixme\n+# LIBS += -framework Security -framework AppKit -framework Carbon\n+# OBJECTIVE_SOURCES += tst_qwidget_mac_helpers.mm\n }\n \n x11 {\n"", ""tst_qwidget.cpp"": ""@@ -380,7 +380,7 @@ private slots:\n \n     void setClearAndResizeMask();\n     void maskedUpdate();\n-#if defined(Q_WS_X11) || (defined(Q_WS_WIN) && !defined(Q_OS_WINCE_WM)) || defined(Q_WS_QWS) || defined(Q_WS_QPA)\n+#if !defined(Q_OS_WINCE_WM)\n     void syntheticEnterLeave();\n     void taskQTBUG_4055_sendSyntheticEnterLeave();\n #endif\n@@ -1931,8 +1931,9 @@ void tst_QWidget::showMaximized()\n     layouted.showNormal();\n     QVERIFY(!(layouted.windowState() & Qt::WindowMaximized));\n \n-#if !defined(Q_WS_QWS) && !defined(Q_OS_WINCE) && !defined(Q_WS_QPA)\n-//embedded may choose a different size to fit on the screen.\n+    // ### fixme: embedded may choose a different size to fit on the screen.\n+    // Check platforms.\n+#if 0\n     QCOMPARE(layouted.size(), layouted.sizeHint());\n #endif\n     layouted.showMaximized();\n@@ -2008,8 +2009,8 @@ void tst_QWidget::showFullScreen()\n     layouted.showNormal();\n     QVERIFY(!(layouted.windowState() & Qt::WindowFullScreen));\n \n-#if !defined(Q_WS_QWS) && !defined(Q_OS_WINCE) && !defined(Q_WS_QPA)\n-//embedded may choose a different size to fit on the screen.\n+    // ### fixme: embedded may choose a different size to fit on the screen.\n+#if 0\n     QCOMPARE(layouted.size(), layouted.sizeHint());\n #endif\n \n@@ -3278,9 +3279,8 @@ void tst_QWidget::widgetAt()\n #if defined(Q_OS_WINCE)\n     QEXPECT_FAIL(\""\"", \""Windows CE does only support rectangular regions\"", Continue); //See also task 147191\n #endif\n-#if defined(Q_WS_QPA)\n+    /// ### fixme: Check platforms\n     QEXPECT_FAIL(\""\"", \""Window mask not implemented on Lighthouse\"", Continue); \n-#endif\n \n     QTRY_COMPARE(QApplication::widgetAt(100,100)->objectName(), w1->objectName());\n     QTRY_COMPARE(QApplication::widgetAt(101,101)->objectName(), w2->objectName());\n@@ -3297,9 +3297,8 @@ void tst_QWidget::widgetAt()\n #if defined(Q_OS_WINCE)\n     QEXPECT_FAIL(\""\"", \""Windows CE does only support rectangular regions\"", Continue); //See also task 147191\n #endif\n-#if defined(Q_WS_QPA)\n+    /// ### fixme: Check platforms\n     QEXPECT_FAIL(\""\"", \""Window mask not implemented on Lighthouse\"", Continue); \n-#endif\n     QTRY_VERIFY(QApplication::widgetAt(100,100) == w1);\n     QTRY_VERIFY(QApplication::widgetAt(101,101) == w2);\n \n@@ -8632,7 +8631,7 @@ void tst_QWidget::maskedUpdate()\n }\n \n // Windows Mobile has no proper cursor support, so skip this test on that platform.\n-#if defined(Q_WS_X11) || (defined(Q_WS_WIN) && !defined(Q_OS_WINCE_WM)) || defined(Q_WS_QWS) || defined(Q_WS_QPA)\n+#if !defined(Q_OS_WINCE_WM)\n void tst_QWidget::syntheticEnterLeave()\n {\n     class MyWidget : public QWidget\n@@ -8737,7 +8736,7 @@ void tst_QWidget::syntheticEnterLeave()\n #endif\n \n // Windows Mobile has no proper cursor support, so skip this test on that platform.\n-#if defined(Q_WS_X11) || (defined(Q_WS_WIN) && !defined(Q_OS_WINCE_WM)) || defined(Q_WS_QWS) || defined(Q_WS_QPA)\n+#if !defined(Q_OS_WINCE_WM)\n void tst_QWidget::taskQTBUG_4055_sendSyntheticEnterLeave()\n {\n     class SELParent : public QWidget\n"", ""tst_qsystemtrayicon.cpp"": ""@@ -122,9 +122,8 @@ void tst_QSystemTrayIcon::getSetCheck()\n \n void tst_QSystemTrayIcon::supportsMessages()\n {\n-#ifdef Q_WS_QPA\n+    // ### fixme: Check platforms.\n     QEXPECT_FAIL(\""\"", \""QTBUG-20978 QSystemTrayIcon is unimplemented for qpa\"", Abort);\n-#endif\n \n #if !defined(Q_WS_QWS)\n     QCOMPARE(QSystemTrayIcon::supportsMessages(), true );\n"", ""tst_qmenu.cpp"": ""@@ -773,9 +773,9 @@ public:\n #ifndef Q_OS_WINCE_WM\n void tst_QMenu::task258920_mouseBorder()\n {\n-#ifdef Q_WS_QPA\n+    // ### fixme: Check platforms\n     QSKIP(\""QTBUG-20753 QCursor::setPos() / QTest::mouseMove() doesn't work on qpa\"");\n-#endif\n+\n     Menu258920 menu;\n     // For styles which inherit from QWindowsStyle, styleHint(QStyle::SH_Menu_MouseTracking) is true.\n     menu.setMouseTracking(true);\n"", ""qtextedit.pro"": ""@@ -15,4 +15,4 @@ wince* {\n     DEFINES += SRCDIR=\\\\\\\""$$PWD/\\\\\\\""\n }\n \n-contains(QT_CONFIG,xcb):qpa:CONFIG+=insignificant_test  # QTBUG-20756 crashes on qpa, xcb\n+contains(QT_CONFIG,xcb):CONFIG+=insignificant_test  # QTBUG-20756 crashes on xcb\n""}",test,"test, refactor 
",bug;deprecat;test;
26745.0,26745.0,feature,Girish Ramakrishnan,eglfs: use GL API directly in QEglFSCursor,"eglfs: use pure GL in shader programs

Change-Id: If47030d9a289686ebf2e758f90445323d1733dc0","['src/plugins/platforms/eglfs/qeglfscursor.cpp', 'src/plugins/platforms/eglfs/qeglfscursor.h']","{""qeglfscursor.cpp"": ""@@ -41,7 +41,6 @@\n \n #include \""qeglfscursor.h\""\n #include <QtGui/qwindowsysteminterface_qpa.h>\n-#include <QtGui/QOpenGLShaderProgram>\n #include <QtGui/QOpenGLContext>\n #include <QtCore/QJsonDocument>\n #include <QtCore/QJsonArray>\n@@ -89,15 +88,25 @@ void QEglFSCursor::createShaderPrograms()\n         \""   gl_FragColor = texture2D(texture, textureCoord).bgra;\\n\""\n         \""}\\n\"";\n \n-    m_program = new QOpenGLShaderProgram;\n+    m_vertexShader = glCreateShader(GL_VERTEX_SHADER);\n+    glShaderSource(m_vertexShader, 1, &textureVertexProgram, NULL /* lengths */);\n+    glCompileShader(m_vertexShader);\n \n-    m_program->addShaderFromSourceCode(QOpenGLShader::Vertex, textureVertexProgram);\n-    m_program->addShaderFromSourceCode(QOpenGLShader::Fragment, textureFragmentProgram);\n-    m_program->link();\n+    m_fragmentShader = glCreateShader(GL_FRAGMENT_SHADER);\n+    glShaderSource(m_fragmentShader, 1, &textureFragmentProgram, NULL /* lengths */);\n+    glCompileShader(m_fragmentShader);\n \n-    m_vertexCoordEntry = m_program->attributeLocation(\""vertexCoordEntry\"");\n-    m_textureCoordEntry = m_program->attributeLocation(\""textureCoordEntry\"");\n-    m_textureEntry = m_program->uniformLocation(\""texture\"");\n+    m_program = glCreateProgram();\n+    glAttachShader(m_program, m_vertexShader);\n+    glAttachShader(m_program, m_fragmentShader);\n+    glLinkProgram(m_program);\n+\n+    if (glGetError() != GL_NO_ERROR)\n+        qFatal(\""Error creating shader programs\"");\n+\n+    m_vertexCoordEntry = glGetAttribLocation(m_program, \""vertexCoordEntry\"");\n+    m_textureCoordEntry = glGetAttribLocation(m_program, \""textureCoordEntry\"");\n+    m_textureEntry = glGetUniformLocation(m_program, \""texture\"");\n }\n \n void QEglFSCursor::createCursorTexture(uint *texture, const QImage &image)\n@@ -203,7 +212,7 @@ void QEglFSCursor::pointerEvent(const QMouseEvent &event)\n \n void QEglFSCursor::render()\n {\n-    m_program->bind();\n+    glUseProgram(m_program);\n \n     const QRectF cr = cursorRect();\n     const QRect screenRect(m_screen->geometry());\n@@ -250,7 +259,7 @@ void QEglFSCursor::render()\n     glDisableVertexAttribArray(m_vertexCoordEntry);\n     glDisableVertexAttribArray(m_textureCoordEntry);\n \n-    m_program->release();\n+    glUseProgram(0);\n }\n \n QT_END_NAMESPACE\n"", ""qeglfscursor.h"": ""@@ -44,6 +44,7 @@\n \n #include <qpa/qplatformcursor.h>\n #include \""qeglfsscreen.h\""\n+#include <GLES2/gl2.h>\n \n QT_BEGIN_NAMESPACE\n \n@@ -94,7 +95,7 @@ private:\n \n     QPoint m_pos;\n \n-    QOpenGLShaderProgram *m_program;\n+    GLuint m_program, m_vertexShader, m_fragmentShader;\n     int m_vertexCoordEntry;\n     int m_textureCoordEntry;\n     int m_textureEntry;\n""}",feature,"refactor 
",feature;
21481.0,21481.0,bug,Stephen Kelly (Unused account),Prefix the variables for debug and release types properly.,"Prefix the variables for debug and release types properly.

Change-Id: I346992effa997f60a4fd20055f0af81d6a084095","['mkspecs/cmake/Qt5BasicConfig.cmake.in', 'mkspecs/features/create_cmake.prf', 'src/corelib/Qt5CoreConfigExtras.cmake.in']","{""Qt5BasicConfig.cmake.in"": ""@@ -98,7 +98,7 @@ if (NOT _Qt5$${CMAKE_MODULE_NAME}_target)\n !!ENDIF\n endif()\n \n-!!IF !isEmpty(debug_type)\n+!!IF !isEmpty(CMAKE_DEBUG_TYPE)\n set_property(TARGET Qt5::$${CMAKE_MODULE_NAME} APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)\n set_target_properties(Qt5::$${CMAKE_MODULE_NAME} PROPERTIES\n     IMPORTED_LINK_INTERFACE_LIBRARIES_DEBUG \\\""${Qt5$${CMAKE_MODULE_NAME}_LIB_DEPENDENCIES}\\\""\n@@ -115,7 +115,7 @@ set_target_properties(Qt5::$${CMAKE_MODULE_NAME} PROPERTIES\n !!ENDIF\n !!ENDIF\n \n-!!IF !isEmpty(release_type)\n+!!IF !isEmpty(CMAKE_RELEASE_TYPE)\n set_property(TARGET Qt5::$${CMAKE_MODULE_NAME} APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)\n set_target_properties(Qt5::$${CMAKE_MODULE_NAME} PROPERTIES\n     IMPORTED_LINK_INTERFACE_LIBRARIES_RELEASE \\\""${Qt5$${CMAKE_MODULE_NAME}_LIB_DEPENDENCIES}\\\""\n"", ""create_cmake.prf"": ""@@ -114,11 +114,11 @@ macx {\n     }\n }\n \n-debug_type =\n-release_type =\n+CMAKE_DEBUG_TYPE =\n+CMAKE_RELEASE_TYPE =\n \n-debug_and_release|debug:debug_type = debug\n-debug_and_release|release:release_type = release\n+debug_and_release|debug:CMAKE_DEBUG_TYPE = debug\n+debug_and_release|release:CMAKE_RELEASE_TYPE = release\n \n INSTALLS += cmake_qt5_module_files\n \n"", ""Qt5CoreConfigExtras.cmake.in"": ""@@ -41,7 +41,7 @@ if (NOT _Qt5WinMain_target)\n     add_library(Qt5::WinMain STATIC IMPORTED)\n endif()\n \n-!!IF !isEmpty(debug_type)\n+!!IF !isEmpty(CMAKE_DEBUG_TYPE)\n set_property(TARGET Qt5::WinMain APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)\n set_target_properties(Qt5::WinMain PROPERTIES\n !!IF isEmpty(CMAKE_LIB_DIR_IS_ABSOLUTE)\n@@ -52,7 +52,7 @@ set_target_properties(Qt5::WinMain PROPERTIES\n )\n !!ENDIF\n \n-!!IF !isEmpty(release_type)\n+!!IF !isEmpty(CMAKE_RELEASE_TYPE)\n set_property(TARGET Qt5::WinMain APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)\n set_target_properties(Qt5::WinMain PROPERTIES\n !!IF isEmpty(CMAKE_LIB_DIR_IS_ABSOLUTE)\n""}",bug,"refactor 
",bug;resource;
8721.0,8721.0,resource,Qt Submodule Update Bot,Updated submodules.,"Updated submodules.

Change-Id: Ie95a86cb565c269ef0ec91a858d196215c7cccb3","['qtbase', 'qtconnectivity', 'qtscript', 'qtlocation', 'qtxmlpatterns', 'qtdeclarative', 'qtjsondb', 'qtdoc', 'qtpim']","{""qtbase"": ""@@ -1 +1 @@\n-Subproject commit 582bb9e467d6bfca3a8a525e478c51cd645a4bc0\n+Subproject commit 9563367af262efa8f32c6372e531c7ea6f2a32bc\n"", ""qtconnectivity"": ""@@ -1 +1 @@\n-Subproject commit ae1cbc39bfdbf42a2788e8a94ca1e7f4e1058641\n+Subproject commit f0daca9ff8108b15e0ede3ea638393541d2149e0\n"", ""qtdeclarative"": ""@@ -1 +1 @@\n-Subproject commit 32bbe6d4d1ff53c7b2617a4bcbaf855731d8f8e7\n+Subproject commit 2557ff5a940242b398dee65c3c79cec088164e32\n"", ""qtdoc"": ""@@ -1 +1 @@\n-Subproject commit c854d491759db21beaaa99857d77d2fc2e828eb5\n+Subproject commit 86e74d7bcb8e87f556d8d75ecc57854ef4f5861d\n"", ""qtjsondb"": ""@@ -1 +1 @@\n-Subproject commit ebdd39db76c3133c63c4982401361c18df4c0d80\n+Subproject commit 4950c0644e0b8f338b0635faa663979ace9c7a5c\n"", ""qtlocation"": ""@@ -1 +1 @@\n-Subproject commit 598953a99f4ae15def34d3f796065f04f0732792\n+Subproject commit e02d56682c00439677721a1bcdeb18cbe404e22a\n"", ""qtpim"": ""@@ -1 +1 @@\n-Subproject commit 88734a0bf519eb575af96127b63a9dadb73cbe1b\n+Subproject commit d8b6ad2bd917d820d2eb64e89a758001c00221b7\n"", ""qtscript"": ""@@ -1 +1 @@\n-Subproject commit 385450bf154c33660e4790768feaf648cc929663\n+Subproject commit 124280b9a691b2118ef38e601fe356c8e21d2ac3\n"", ""qtxmlpatterns"": ""@@ -1 +1 @@\n-Subproject commit 3be13b50c0b100345a52d097908a33a52a5c374b\n+Subproject commit ede75fb49c9ed59304976b8ba1523874771f7c87\n""}",resource,"Categories: merge 
",feature;
8306.0,8306.0,"bug,test",Aaron Kennedy,Include correct line number when throwing an exception from a slot,"Include correct line number when throwing an exception from a slot

Task-number: QTBUG-20344
Change-Id: I25be1520b55ce13d4e1c75e06effa1dee8530a7a","['src/declarative/qml/v8/qv8qobjectwrapper.cpp', 'tests/auto/declarative/qdeclarativeecmascript/data/qtbug_20344.qml', 'tests/auto/declarative/qdeclarativeecmascript/testtypes.h', 'tests/auto/declarative/qdeclarativeecmascript/tst_qdeclarativeecmascript.cpp', 'tests/auto/declarative/qdeclarativeecmascript/testtypes.cpp']","{""qv8qobjectwrapper.cpp"": ""@@ -298,7 +298,8 @@ void QV8QObjectWrapper::init(QV8Engine *engine)\n     }\n     {\n     v8::ScriptOrigin origin(m_hiddenObject); // Hack to allow us to identify these functions\n-    v8::Local<v8::Script> script = v8::Script::New(v8::String::New(CREATE_FUNCTION), &origin);\n+    v8::Local<v8::Script> script = v8::Script::New(v8::String::New(CREATE_FUNCTION), &origin, 0,\n+                                                   v8::Handle<v8::String>(), v8::Script::NativeMode);\n     v8::Local<v8::Function> fn = v8::Local<v8::Function>::Cast(script->Run());\n     v8::Handle<v8::Value> invokeFn = v8::FunctionTemplate::New(Invoke)->GetFunction();\n     v8::Handle<v8::Value> args[] = { invokeFn };\n"", ""qtbug_20344.qml"": ""@@ -0,0 +1,6 @@\n+import QtQuick 2.0\n+import Qt.test 1.0\n+\n+MyQmlObject {\n+    Component.onCompleted: v8function()\n+}\n"", ""testtypes.cpp"": ""@@ -101,6 +101,12 @@ public:\n     void setWidth(int) { }\n };\n \n+void MyQmlObject::v8function(QDeclarativeV8Function *args)\n+{\n+    const char *error = \""Exception thrown from within QObject slot\"";\n+    v8::ThrowException(v8::Exception::Error(v8::String::New(error)));\n+}\n+\n static QJSValue script_api(QDeclarativeEngine *engine, QJSEngine *scriptEngine)\n {\n     Q_UNUSED(engine)\n"", ""testtypes.h"": ""@@ -59,6 +59,7 @@\n \n #include <private/qv8gccallback_p.h>\n #include <private/qdeclarativeengine_p.h>\n+#include <private/qv8engine_p.h>\n \n class MyQmlAttachedObject : public QObject\n {\n@@ -184,6 +185,7 @@ public slots:\n     void setString(const QString &s) { m_string = s; }\n     void myinvokable(MyQmlObject *o) { myinvokableObject = o; }\n     void variantMethod(const QVariant &v) { m_variant = v; }\n+    void v8function(QDeclarativeV8Function*);\n \n private:\n     friend class tst_qdeclarativeecmascript;\n"", ""tst_qdeclarativeecmascript.cpp"": ""@@ -222,7 +222,7 @@ private slots:\n     void callQtInvokables();\n     void invokableObjectArg();\n     void invokableObjectRet();\n-\n+    void qtbug_20344();\n     void revisionErrors();\n     void revision();\n \n@@ -4910,6 +4910,19 @@ void tst_qdeclarativeecmascript::aliasToCompositeElement()\n     delete object;\n }\n \n+void tst_qdeclarativeecmascript::qtbug_20344()\n+{\n+    QDeclarativeComponent component(&engine, TEST_FILE(\""qtbug_20344.qml\""));\n+\n+    QString warning = component.url().toString() + \"":5: Error: Exception thrown from within QObject slot\"";\n+    QTest::ignoreMessage(QtWarningMsg, qPrintable(warning));\n+\n+    QObject *object = component.create();\n+    QVERIFY(object != 0);\n+\n+    delete object;\n+}\n+\n void tst_qdeclarativeecmascript::revisionErrors()\n {\n     {\n""}","bug,test","Categories: bug, test 
",bug;
10020.0,10020.0,bug; merge,Christian Kamm,QmlJS: Add protection against attached types attaching to themselves.,"QmlJS: Add protection against attached types attaching to themselves.

Change-Id: Ib81d5e6baabf5ac8d18411e8936098908de2c2bb
Task-number: QTCREATORBUG-6635",['src/libs/qmljs/qmljsinterpreter.cpp'],"{""qmljsinterpreter.cpp"": ""@@ -285,7 +285,7 @@ void CppComponentValue::processMembers(MemberProcessor *processor) const\n     const QString &attachedTypeName = _metaObject->attachedTypeName();\n     if (!attachedTypeName.isEmpty()) {\n         const CppComponentValue *attachedType = valueOwner()->cppQmlTypes().objectByCppName(attachedTypeName);\n-        if (attachedType)\n+        if (attachedType && attachedType != this) // ### only weak protection against infinite loops\n             attachedType->processMembers(processor);\n     }\n \n""}",bug; merge,"bug 
",bug;
12295.0,12295.0,bug;test ,Aaron Kennedy,Skip failing autotests,"Skip failing autotests

Task-number: QTBUG-23481
Change-Id: I719cf1fa7cd3b1f3475a629312ed5fba1511c8ec",['tests/auto/qtquick2/qquicklistview/tst_qquicklistview.cpp'],"{""tst_qquicklistview.cpp"": ""@@ -3445,6 +3445,9 @@ void tst_QQuickListView::resizeViewAndRepaint()\n     QVERIFY(!findItem<QQuickItem>(contentItem, \""wrapper\"", 10));\n \n     listview->setHeight(320);\n+#ifdef Q_OS_MAC\n+    QEXPECT_FAIL(\""\"", \""QTBUG-23481\"", Abort);\n+#endif\n     QTRY_VERIFY(findItem<QQuickItem>(contentItem, \""wrapper\"", 10));\n \n     listview->setHeight(100);\n@@ -4405,6 +4408,11 @@ void tst_QQuickListView::snapOneItem()\n     QFETCH(qreal, endExtent);\n     QFETCH(qreal, startExtent);\n \n+#ifdef Q_OS_MAC\n+    // This test seems to be unreliable - different test data fails on different runs\n+    QSKIP(\""QTBUG-23481\"");\n+#endif\n+\n     QQuickView *canvas = createView();\n \n     canvas->setSource(testFileUrl(\""snapOneItem.qml\""));\n""}",bug;test,"test, bug 
",bug;test;
8328.0,8328.0,test,Aaron McCarthy,Add qmake option to disable system tests.,"Add qmake option to disable system tests.

Allow system tests to be disabled by passing CONFIG+=no_system_tests
when invoking qmake.

Change-Id: I619abcbb8140923cbde783d1b34e563ea0231ac3",['tests/auto/qplacemanager_jsondb/qplacemanager_jsondb.pro'],"{""qplacemanager_jsondb.pro"": ""@@ -1,4 +1,4 @@\n-CONFIG += testcase\n+!no_system_tests:CONFIG += testcase\n TARGET = tst_qplacemanager_jsondb\n \n HEADERS += jsondbcleaner.h\n""}",test,"test 
",deprecat;resource;test;
13585.0,13585.0,test;feature ,Kim M. Kalland,Allow Item components to be assigned to Item.layer.effect.,"Allow Item components to be assigned to Item.layer.effect.

Some complex effects are easier to implement as Items using
ShaderEffects internally rather than with a top-level ShaderEffect.
Auto-tests added.

Change-Id: I4b99811b87e7ca5054bf119b99207b7f5a7c666e","['src/quick/items/qquickitem.cpp', 'src/quick/items/qquickitem_p.h', 'tests/auto/qtquick2/qquickitemlayer/data/RectangleEffect.qml', 'tests/auto/qtquick2/qquickitemlayer/qquickitemlayer.pro', 'tests/auto/qtquick2/qquickitemlayer/tst_qquickitemlayer.cpp', 'tests/auto/qtquick2/qquickitemlayer/data/ItemEffect.qml']","{""qquickitem.cpp"": ""@@ -5472,9 +5472,9 @@ void QQuickItemLayer::activateEffect()\n     Q_ASSERT(!m_effect);\n \n     QObject *created = m_effectComponent->create();\n-    m_effect = qobject_cast<QQuickShaderEffect *>(created);\n+    m_effect = qobject_cast<QQuickItem *>(created);\n     if (!m_effect) {\n-        qWarning(\""Item: layer.effect is not a ShaderEffect.\"");\n+        qWarning(\""Item: layer.effect is not a QML Item.\"");\n         delete created;\n         return;\n     }\n@@ -5502,7 +5502,8 @@ void QQuickItemLayer::deactivateEffect()\n \n     Holds the effect that is applied to this layer.\n \n-    The effect must be a \\l ShaderEffect.\n+    The effect is typically a \\l ShaderEffect component, although any \\l Item component can be\n+    assigned. The effect should have a source texture property with a name matching \\l samplerName.\n \n     \\sa samplerName\n  */\n"", ""qquickitem_p.h"": ""@@ -225,7 +225,7 @@ private:\n     QRectF m_sourceRect;\n     QString m_name;\n     QDeclarativeComponent *m_effectComponent;\n-    QQuickShaderEffect *m_effect;\n+    QQuickItem *m_effect;\n     QQuickShaderEffectSource *m_effectSource;\n };\n \n"", ""ItemEffect.qml"": ""@@ -0,0 +1,23 @@\n+import QtQuick 2.0\n+\n+Item {\n+    width: 200\n+    height: 200\n+    Rectangle {\n+        anchors.fill: parent\n+        anchors.margins: 99\n+        gradient: Gradient {\n+            GradientStop { position: 0.3; color: \""red\"" }\n+            GradientStop { position: 0.7; color: \""blue\"" }\n+        }\n+        layer.enabled: true\n+        layer.effect: Item {\n+            property variant source\n+            ShaderEffect {\n+                anchors.fill: parent\n+                anchors.margins: -99\n+                property variant source: parent.source\n+            }\n+        }\n+    }\n+}\n"", ""RectangleEffect.qml"": ""@@ -0,0 +1,22 @@\n+import QtQuick 2.0\n+\n+Item {\n+    width: 200\n+    height: 200\n+    Rectangle {\n+        width: 100\n+        height: 100\n+        x: 50\n+        y: 50\n+        scale: 1.5\n+        z: 1\n+        rotation: 45\n+        color: \""#ff0000\""\n+        layer.enabled: true\n+        layer.effect: Rectangle { color: \""#0000ff\"" }\n+    }\n+    Rectangle {\n+        anchors.fill: parent\n+        color: \""#00ff00\""\n+    }\n+}\n"", ""qquickitemlayer.pro"": ""@@ -25,7 +25,9 @@ OTHER_FILES += \\\n     data/ZOrderChange.qml \\\n     data/ToggleLayerAndEffect.qml \\\n     data/DisableLayer.qml \\\n-    data/SamplerNameChange.qml\n+    data/SamplerNameChange.qml \\\n+    data/ItemEffect.qml \\\n+    data/RectangleEffect.qml\n \n \n \n"", ""tst_qquickitemlayer.cpp"": ""@@ -85,6 +85,8 @@ private slots:\n     void toggleLayerAndEffect();\n     void disableLayer();\n     void changeSamplerName();\n+    void itemEffect();\n+    void rectangleEffect();\n };\n \n tst_QQuickItemLayer::tst_QQuickItemLayer()\n@@ -347,6 +349,30 @@ void tst_QQuickItemLayer::changeSamplerName()\n     QCOMPARE(fb.pixel(0, 0), qRgb(0, 0, 0xff));\n }\n \n+void tst_QQuickItemLayer::itemEffect()\n+{\n+    QImage fb = runTest(testFile(\""ItemEffect.qml\""));\n+    QCOMPARE(fb.pixel(0, 0), qRgb(0xff, 0, 0));\n+    QCOMPARE(fb.pixel(199, 0), qRgb(0xff, 0, 0));\n+    QCOMPARE(fb.pixel(0, 199), qRgb(0, 0, 0xff));\n+    QCOMPARE(fb.pixel(199, 199), qRgb(0, 0, 0xff));\n+}\n+\n+void tst_QQuickItemLayer::rectangleEffect()\n+{\n+    QImage fb = runTest(testFile(\""RectangleEffect.qml\""));\n+    QCOMPARE(fb.pixel(0, 0), qRgb(0, 0xff, 0));\n+    QCOMPARE(fb.pixel(199, 0), qRgb(0, 0xff, 0));\n+    QCOMPARE(fb.pixel(0, 199), qRgb(0, 0xff, 0));\n+    QCOMPARE(fb.pixel(199, 199), qRgb(0, 0xff, 0));\n+\n+    QCOMPARE(fb.pixel(100, 0), qRgb(0, 0, 0xff));\n+    QCOMPARE(fb.pixel(199, 100), qRgb(0, 0, 0xff));\n+    QCOMPARE(fb.pixel(100, 199), qRgb(0, 0, 0xff));\n+    QCOMPARE(fb.pixel(0, 100), qRgb(0, 0, 0xff));\n+}\n+\n+\n QTEST_MAIN(tst_QQuickItemLayer)\n \n #include \""tst_qquickitemlayer.moc\""\n""}",test;feature,"Categories: feature, test 
",feature;test;
22418.0,22418.0,"test,bug",João Abecasis,"Revert ""Add tests to verify QByteArray's zero termination""","Revert ""Add tests to verify QByteArray's zero termination""

The approach used to verify for zero-termination is too intrusive and
requires additional maintenance work to ensure new zero-termination
tests are added with new functionality.

Zero-termination testing will be re-established in a subsequent commit.

This reverts commit 4ef5a6269c1465662ea3872596ba284a13cce25e.

Change-Id: I862434a072f447f7f0c4bbf8f757ba216212db3c",['tests/auto/corelib/tools/qbytearray/tst_qbytearray.cpp'],"{""tst_qbytearray.cpp"": ""@@ -147,40 +147,8 @@ private slots:\n     void movablity_data();\n     void movablity();\n     void literals();\n-\n-    void zeroTermination_data();\n-    void zeroTermination();\n };\n \n-// Except for QByteArrays initialized with fromRawData(), QByteArray ensures\n-// that data() is null-terminated. VERIFY_ZERO_TERMINATION checks that\n-// invariant and goes further by testing that the null-character is in writable\n-// memory allocated by QByteArray. If the invariant is broken, tools like\n-// valgrind should be able to detect this.\n-#define VERIFY_ZERO_TERMINATION(ba)                                             \\\n-    do {                                                                        \\\n-        /* Statics could be anything, as can fromRawData() strings */           \\\n-        QByteArray::DataPtr baDataPtr = ba.data_ptr();                          \\\n-        if (!baDataPtr->ref.isStatic()                                          \\\n-                && baDataPtr->offset == QByteArray().data_ptr()->offset) {      \\\n-            int baSize = ba.size();                                             \\\n-            QCOMPARE(ba.constData()[baSize], '\\0');                             \\\n-                                                                                \\\n-            QByteArray baCopy(ba.constData(), baSize);                          \\\n-            if (!baDataPtr->ref.isShared()) {                                   \\\n-                /* Don't detach, assumes no setSharable support */              \\\n-                char *baData = ba.data();                                       \\\n-                baData[baSize] = 'x';                                           \\\n-                                                                                \\\n-                QCOMPARE(ba.constData()[baSize], 'x');                          \\\n-                QCOMPARE(ba, baCopy);                                           \\\n-                                                                                \\\n-                baData[baSize] = '\\0'; /* Sanity restored */                    \\\n-            }                                                                   \\\n-        }                                                                       \\\n-    } while (false)                                                             \\\n-    /**/\n-\n static const struct StaticByteArrays {\n     struct Standard {\n         QByteArrayData data;\n@@ -256,13 +224,8 @@ void tst_QByteArray::qCompress_data()\n void tst_QByteArray::qCompress()\n {\n     QFETCH( QByteArray, ba );\n-\n     QByteArray compressed = ::qCompress( ba );\n-    QByteArray uncompressed = ::qUncompress(compressed);\n-\n-    QCOMPARE(uncompressed, ba);\n-    VERIFY_ZERO_TERMINATION(compressed);\n-    VERIFY_ZERO_TERMINATION(uncompressed);\n+    QTEST( ::qUncompress( compressed ), \""ba\"" );\n }\n \n void tst_QByteArray::qUncompressCorruptedData_data()\n@@ -294,11 +257,9 @@ void tst_QByteArray::qUncompressCorruptedData()\n     QByteArray res;\n     res = ::qUncompress(in);\n     QCOMPARE(res, QByteArray());\n-    VERIFY_ZERO_TERMINATION(res);\n \n     res = ::qUncompress(in + \""blah\"");\n     QCOMPARE(res, QByteArray());\n-    VERIFY_ZERO_TERMINATION(res);\n #else\n     QSKIP(\""This test freezes on this platform\"");\n #endif\n@@ -308,7 +269,7 @@ void tst_QByteArray::qCompressionZeroTermination()\n {\n     QString s = \""Hello, I'm a string.\"";\n     QByteArray ba = ::qUncompress(::qCompress(s.toLocal8Bit()));\n-    VERIFY_ZERO_TERMINATION(ba);\n+    QVERIFY((int) *(ba.data() + ba.size()) == 0);\n }\n \n #endif\n@@ -328,7 +289,6 @@ void tst_QByteArray::constByteArray()\n     QVERIFY(cba.constData()[1] == 'b');\n     QVERIFY(cba.constData()[2] == 'c');\n     QVERIFY(cba.constData()[3] == '\\0');\n-    VERIFY_ZERO_TERMINATION(cba);\n }\n \n void tst_QByteArray::leftJustified()\n@@ -546,11 +506,9 @@ void tst_QByteArray::base64()\n \n     QByteArray arr = QByteArray::fromBase64(base64);\n     QCOMPARE(arr, rawdata);\n-    VERIFY_ZERO_TERMINATION(arr);\n \n     QByteArray arr64 = rawdata.toBase64();\n     QCOMPARE(arr64, base64);\n-    VERIFY_ZERO_TERMINATION(arr64);\n }\n \n //different from the previous test as the input are invalid\n@@ -775,24 +733,17 @@ void tst_QByteArray::chop()\n \n     src.chop(choplength);\n     QCOMPARE(src, expected);\n-    VERIFY_ZERO_TERMINATION(src);\n }\n \n void tst_QByteArray::prepend()\n {\n     QByteArray ba(\""foo\"");\n     QCOMPARE(ba.prepend((char*)0), QByteArray(\""foo\""));\n-    VERIFY_ZERO_TERMINATION(ba);\n     QCOMPARE(ba.prepend(QByteArray()), QByteArray(\""foo\""));\n-    VERIFY_ZERO_TERMINATION(ba);\n     QCOMPARE(ba.prepend(\""1\""), QByteArray(\""1foo\""));\n-    VERIFY_ZERO_TERMINATION(ba);\n     QCOMPARE(ba.prepend(QByteArray(\""2\"")), QByteArray(\""21foo\""));\n-    VERIFY_ZERO_TERMINATION(ba);\n     QCOMPARE(ba.prepend('3'), QByteArray(\""321foo\""));\n-    VERIFY_ZERO_TERMINATION(ba);\n     QCOMPARE(ba.prepend(\""\\0 \"", 2), QByteArray::fromRawData(\""\\0 321foo\"", 8));\n-    VERIFY_ZERO_TERMINATION(ba);\n }\n \n void tst_QByteArray::prependExtended_data()\n@@ -816,17 +767,11 @@ void tst_QByteArray::prependExtended()\n     QCOMPARE(QByteArray(\""\"").prepend(array), QByteArray(\""data\""));\n \n     QCOMPARE(array.prepend((char*)0), QByteArray(\""data\""));\n-    VERIFY_ZERO_TERMINATION(array);\n     QCOMPARE(array.prepend(QByteArray()), QByteArray(\""data\""));\n-    VERIFY_ZERO_TERMINATION(array);\n     QCOMPARE(array.prepend(\""1\""), QByteArray(\""1data\""));\n-    VERIFY_ZERO_TERMINATION(array);\n     QCOMPARE(array.prepend(QByteArray(\""2\"")), QByteArray(\""21data\""));\n-    VERIFY_ZERO_TERMINATION(array);\n     QCOMPARE(array.prepend('3'), QByteArray(\""321data\""));\n-    VERIFY_ZERO_TERMINATION(array);\n     QCOMPARE(array.prepend(\""\\0 \"", 2), QByteArray::fromRawData(\""\\0 321data\"", 9));\n-    VERIFY_ZERO_TERMINATION(array);\n     QCOMPARE(array.size(), 9);\n }\n \n@@ -834,19 +779,12 @@ void tst_QByteArray::append()\n {\n     QByteArray ba(\""foo\"");\n     QCOMPARE(ba.append((char*)0), QByteArray(\""foo\""));\n-    VERIFY_ZERO_TERMINATION(ba);\n     QCOMPARE(ba.append(QByteArray()), QByteArray(\""foo\""));\n-    VERIFY_ZERO_TERMINATION(ba);\n     QCOMPARE(ba.append(\""1\""), QByteArray(\""foo1\""));\n-    VERIFY_ZERO_TERMINATION(ba);\n     QCOMPARE(ba.append(QByteArray(\""2\"")), QByteArray(\""foo12\""));\n-    VERIFY_ZERO_TERMINATION(ba);\n     QCOMPARE(ba.append('3'), QByteArray(\""foo123\""));\n-    VERIFY_ZERO_TERMINATION(ba);\n     QCOMPARE(ba.append(\""\\0\""), QByteArray(\""foo123\""));\n-    VERIFY_ZERO_TERMINATION(ba);\n     QCOMPARE(ba.append(\""\\0\"", 1), QByteArray::fromRawData(\""foo123\\0\"", 7));\n-    VERIFY_ZERO_TERMINATION(ba);\n     QCOMPARE(ba.size(), 7);\n }\n \n@@ -863,19 +801,12 @@ void tst_QByteArray::appendExtended()\n     QCOMPARE(QByteArray(\""\"").append(array), QByteArray(\""data\""));\n \n     QCOMPARE(array.append((char*)0), QByteArray(\""data\""));\n-    VERIFY_ZERO_TERMINATION(array);\n     QCOMPARE(array.append(QByteArray()), QByteArray(\""data\""));\n-    VERIFY_ZERO_TERMINATION(array);\n     QCOMPARE(array.append(\""1\""), QByteArray(\""data1\""));\n-    VERIFY_ZERO_TERMINATION(array);\n     QCOMPARE(array.append(QByteArray(\""2\"")), QByteArray(\""data12\""));\n-    VERIFY_ZERO_TERMINATION(array);\n     QCOMPARE(array.append('3'), QByteArray(\""data123\""));\n-    VERIFY_ZERO_TERMINATION(array);\n     QCOMPARE(array.append(\""\\0\""), QByteArray(\""data123\""));\n-    VERIFY_ZERO_TERMINATION(array);\n     QCOMPARE(array.append(\""\\0\"", 1), QByteArray::fromRawData(\""data123\\0\"", 8));\n-    VERIFY_ZERO_TERMINATION(array);\n     QCOMPARE(array.size(), 8);\n }\n \n@@ -883,28 +814,22 @@ void tst_QByteArray::insert()\n {\n     QByteArray ba(\""Meal\"");\n     QCOMPARE(ba.insert(1, QByteArray(\""ontr\"")), QByteArray(\""Montreal\""));\n-    VERIFY_ZERO_TERMINATION(ba);\n     QCOMPARE(ba.insert(ba.size(), \""foo\""), QByteArray(\""Montrealfoo\""));\n-    VERIFY_ZERO_TERMINATION(ba);\n \n     ba = QByteArray(\""13\"");\n     QCOMPARE(ba.insert(1, QByteArray(\""2\"")), QByteArray(\""123\""));\n-    VERIFY_ZERO_TERMINATION(ba);\n \n     ba = \""ac\"";\n     QCOMPARE(ba.insert(1, 'b'), QByteArray(\""abc\""));\n     QCOMPARE(ba.size(), 3);\n-    VERIFY_ZERO_TERMINATION(ba);\n \n     ba = \""ikl\"";\n     QCOMPARE(ba.insert(1, \""j\""), QByteArray(\""ijkl\""));\n     QCOMPARE(ba.size(), 4);\n-    VERIFY_ZERO_TERMINATION(ba);\n \n     ba = \""ab\"";\n     QCOMPARE(ba.insert(1, \""\\0X\\0\"", 3), QByteArray::fromRawData(\""a\\0X\\0b\"", 5));\n     QCOMPARE(ba.size(), 5);\n-    VERIFY_ZERO_TERMINATION(ba);\n }\n \n void tst_QByteArray::insertExtended_data()\n@@ -917,7 +842,6 @@ void tst_QByteArray::insertExtended()\n     QFETCH(QByteArray, array);\n     QCOMPARE(array.insert(1, \""i\""), QByteArray(\""diata\""));\n     QCOMPARE(array.size(), 5);\n-    VERIFY_ZERO_TERMINATION(array);\n }\n \n void tst_QByteArray::remove_data()\n@@ -948,7 +872,6 @@ void tst_QByteArray::remove()\n     QFETCH(int, length);\n     QFETCH(QByteArray, expected);\n     QCOMPARE(src.remove(position, length), expected);\n-    VERIFY_ZERO_TERMINATION(src);\n }\n \n void tst_QByteArray::replace_data()\n@@ -990,8 +913,6 @@ void tst_QByteArray::replace()\n \n     QCOMPARE(str1.replace(pos, len, after).constData(), expected.constData());\n     QCOMPARE(str2.replace(pos, len, after.data()), expected);\n-    VERIFY_ZERO_TERMINATION(str1);\n-    VERIFY_ZERO_TERMINATION(str2);\n }\n \n void tst_QByteArray::replaceWithSpecifiedLength()\n@@ -1004,7 +925,6 @@ void tst_QByteArray::replaceWithSpecifiedLength()\n     const char _expected[] = \""zxc\\0vbcdefghjk\"";\n     QByteArray expected(_expected,sizeof(_expected)-1);\n     QCOMPARE(ba,expected);\n-    VERIFY_ZERO_TERMINATION(ba);\n }\n \n void tst_QByteArray::indexOf_data()\n@@ -1307,7 +1227,6 @@ void tst_QByteArray::appendAfterFromRawData()\n         data[0] = 'Y';\n     }\n     QVERIFY(arr.at(0) == 'X');\n-    VERIFY_ZERO_TERMINATION(arr);\n }\n \n void tst_QByteArray::toFromHex_data()\n@@ -1379,17 +1298,15 @@ void tst_QByteArray::toFromHex()\n     QFETCH(QByteArray, hex_alt1);\n \n     {\n-        QByteArray th = str.toHex();\n+        const QByteArray th = str.toHex();\n         QCOMPARE(th.size(), hex.size());\n         QCOMPARE(th, hex);\n-        VERIFY_ZERO_TERMINATION(th);\n     }\n \n     {\n-        QByteArray fh = QByteArray::fromHex(hex);\n+        const QByteArray fh = QByteArray::fromHex(hex);\n         QCOMPARE(fh.size(), str.size());\n         QCOMPARE(fh, str);\n-        VERIFY_ZERO_TERMINATION(fh);\n     }\n \n     QCOMPARE(QByteArray::fromHex(hex_alt1), str);\n@@ -1402,17 +1319,14 @@ void tst_QByteArray::toFromPercentEncoding()\n     QByteArray data = arr.toPercentEncoding();\n     QCOMPARE(QString(data), QString(\""Qt%20is%20great%21\""));\n     QCOMPARE(QByteArray::fromPercentEncoding(data), arr);\n-    VERIFY_ZERO_TERMINATION(data);\n \n     data = arr.toPercentEncoding(\""! \"", \""Qt\"");\n     QCOMPARE(QString(data), QString(\""%51%74 is grea%74!\""));\n     QCOMPARE(QByteArray::fromPercentEncoding(data), arr);\n-    VERIFY_ZERO_TERMINATION(data);\n \n     data = arr.toPercentEncoding(QByteArray(), \""abcdefghijklmnopqrstuvwxyz\"", 'Q');\n     QCOMPARE(QString(data), QString(\""Q51Q74Q20Q69Q73Q20Q67Q72Q65Q61Q74Q21\""));\n     QCOMPARE(QByteArray::fromPercentEncoding(data, 'Q'), arr);\n-    VERIFY_ZERO_TERMINATION(data);\n \n     // verify that to/from percent encoding preserves nullity\n     arr = \""\"";\n@@ -1422,7 +1336,6 @@ void tst_QByteArray::toFromPercentEncoding()\n     QVERIFY(!arr.toPercentEncoding().isNull());\n     QVERIFY(QByteArray::fromPercentEncoding(\""\"").isEmpty());\n     QVERIFY(!QByteArray::fromPercentEncoding(\""\"").isNull());\n-    VERIFY_ZERO_TERMINATION(arr);\n \n     arr = QByteArray();\n     QVERIFY(arr.isEmpty());\n@@ -1431,7 +1344,6 @@ void tst_QByteArray::toFromPercentEncoding()\n     QVERIFY(arr.toPercentEncoding().isNull());\n     QVERIFY(QByteArray::fromPercentEncoding(QByteArray()).isEmpty());\n     QVERIFY(QByteArray::fromPercentEncoding(QByteArray()).isNull());\n-    VERIFY_ZERO_TERMINATION(arr);\n }\n \n void tst_QByteArray::fromPercentEncoding_data()\n@@ -1673,9 +1585,6 @@ void tst_QByteArray::repeated() const\n     QFETCH(int, count);\n \n     QCOMPARE(string.repeated(count), expected);\n-\n-    QByteArray repeats = string.repeated(count);\n-    VERIFY_ZERO_TERMINATION(repeats);\n }\n \n void tst_QByteArray::repeated_data() const\n@@ -1767,7 +1676,6 @@ void tst_QByteArray::byteRefDetaching() const\n         copy[0] = 'S';\n \n         QCOMPARE(str, QByteArray(\""str\""));\n-        VERIFY_ZERO_TERMINATION(copy);\n     }\n \n     {\n@@ -1776,7 +1684,6 @@ void tst_QByteArray::byteRefDetaching() const\n         str[0] = 'S';\n \n         QCOMPARE(buf[0], char('s'));\n-        VERIFY_ZERO_TERMINATION(str);\n     }\n \n     {\n@@ -1787,7 +1694,6 @@ void tst_QByteArray::byteRefDetaching() const\n         str[0] = 'S';\n \n         QCOMPARE(buf[0], char('s'));\n-        VERIFY_ZERO_TERMINATION(str);\n     }\n }\n \n@@ -1797,25 +1703,19 @@ void tst_QByteArray::reserve()\n     QByteArray qba;\n     qba.reserve(capacity);\n     QVERIFY(qba.capacity() == capacity);\n-    VERIFY_ZERO_TERMINATION(qba);\n-\n     char *data = qba.data();\n+\n     for (int i = 0; i < capacity; i++) {\n         qba.resize(i);\n         QVERIFY(capacity == qba.capacity());\n         QVERIFY(data == qba.data());\n-        VERIFY_ZERO_TERMINATION(qba);\n     }\n \n     QByteArray nil1, nil2;\n     nil1.reserve(0);\n-    VERIFY_ZERO_TERMINATION(nil1);\n     nil2.squeeze();\n-    VERIFY_ZERO_TERMINATION(nil2);\n     nil1.squeeze();\n-    VERIFY_ZERO_TERMINATION(nil1);\n     nil2.reserve(0);\n-    VERIFY_ZERO_TERMINATION(nil2);\n }\n \n void tst_QByteArray::reserveExtended_data()\n@@ -1826,16 +1726,12 @@ void tst_QByteArray::reserveExtended_data()\n void tst_QByteArray::reserveExtended()\n {\n     QFETCH(QByteArray, array);\n-\n     array.reserve(1024);\n     QVERIFY(array.capacity() == 1024);\n     QCOMPARE(array, QByteArray(\""data\""));\n-    VERIFY_ZERO_TERMINATION(array);\n-\n     array.squeeze();\n     QCOMPARE(array, QByteArray(\""data\""));\n     QCOMPARE(array.capacity(), array.size());\n-    VERIFY_ZERO_TERMINATION(array);\n }\n \n void tst_QByteArray::movablity_data()\n@@ -1928,7 +1824,6 @@ void tst_QByteArray::literals()\n     QVERIFY(str == \""abcd\"");\n     QVERIFY(str.data_ptr()->ref.isStatic());\n     QVERIFY(str.data_ptr()->offset == sizeof(QByteArrayData));\n-    VERIFY_ZERO_TERMINATION(str);\n \n     const char *s = str.constData();\n     QByteArray str2 = str;\n@@ -1936,27 +1831,14 @@ void tst_QByteArray::literals()\n \n     // detach on non const access\n     QVERIFY(str.data() != s);\n-    VERIFY_ZERO_TERMINATION(str);\n \n     QVERIFY(str2.constData() == s);\n     QVERIFY(str2.data() != s);\n-    VERIFY_ZERO_TERMINATION(str2);\n #else\n     QSKIP(\""Only tested on c++0x compliant compiler or gcc\"");\n #endif\n }\n \n-void tst_QByteArray::zeroTermination_data()\n-{\n-    movablity_data();\n-}\n-\n-void tst_QByteArray::zeroTermination()\n-{\n-    QFETCH(QByteArray, array);\n-    VERIFY_ZERO_TERMINATION(array);\n-}\n-\n const char globalChar = '1';\n \n QTEST_APPLESS_MAIN(tst_QByteArray)\n""}","test,bug","test,bug 
",others;
2460.0,2460.0,resource,Sarah Jane Smith,Add in Harmattan build instructions.,"Add in Harmattan build instructions.

Fix doc build for new tutorials directory.

Change-Id: I1a38884c8466b6b142680504caa103d4ee5a4208","['doc/src/tutorials/shaders.qdoc', 'doc/src/qt3d-building.qdoc', 'doc/config/qt3d-project.qdocconf', 'doc/src/tutorials/simpleobject.qdoc', 'doc/src/tutorials/penguin.qdoc', 'doc/src/examples/teapot-qml.qdoc']","{""qt3d-project.qdocconf"": ""@@ -28,6 +28,7 @@ sourcedirs = $TOPSRC/src/imports \\\n \n exampledirs = $TOPSRC/examples \\\n               $TOPSRC/demos \\\n+              $TOPSRC/tutorials \\\n               $TOPSRC/src/plugins\n \n imagedirs = $TOPSRC/doc/src/images \\\n"", ""teapot-qml.qdoc"": ""@@ -26,28 +26,28 @@\n ****************************************************************************/\n \n /*!\n-    \\example quick3d/tutorials/teapot_qml\n+    \\example quick3d/teapot_qml\n     \\title Teapot Example in QtQuick3D\n \n     This example shows to use QtQuick3D to display a teapot on\n     the screen.  The QML is fairly simple:\n \n-    \\snippet quick3d/tutorials/teapot_qml/qml/teapot.qml 1\n+    \\snippet quick3d/teapot_qml/qml/teapot.qml 1\n \n     \\image teapot-qml-screenshot.png\n \n     The example starts by importing the Qt and Qt3D QML modules:\n \n-    \\snippet quick3d/tutorials/teapot_qml/qml/teapot.qml 2\n+    \\snippet quick3d/teapot_qml/qml/teapot.qml 2\n \n     Then we create a viewport of size 640x480 to display the teapot:\n \n-    \\snippet quick3d/tutorials/teapot_qml/qml/teapot.qml 3\n+    \\snippet quick3d/teapot_qml/qml/teapot.qml 3\n \n     And now we create a \\l Item3D to display the teapot with a\n     default lit material effect:\n \n-    \\snippet quick3d/tutorials/teapot_qml/qml/teapot.qml 4\n+    \\snippet quick3d/teapot_qml/qml/teapot.qml 4\n \n     The teapot data itself is loaded from \\c{teapot.bez}, which contains\n     Bezier patch data that describes the geometry of the teapot.\n@@ -55,15 +55,15 @@\n     Let's make the teapot a little more interesting by adding a\n     material to simulate bone china:\n \n-    \\snippet quick3d/tutorials/teapot_bounce_qml/qml/teapot-bounce.qml 1\n-    \\snippet quick3d/tutorials/teapot_bounce_qml/qml/teapot-bounce.qml 2\n+    \\snippet quick3d/teapot_bounce_qml/qml/teapot-bounce.qml 1\n+    \\snippet quick3d/teapot_bounce_qml/qml/teapot-bounce.qml 2\n \n     \\image teapot-china-screenshot.png\n \n     To make the teapot even more interesting, we can cause it to\n     bounce up and down using a QML animation item:\n \n-    \\snippet quick3d/tutorials/teapot_bounce_qml/qml/teapot-bounce.qml 3\n+    \\snippet quick3d/teapot_bounce_qml/qml/teapot-bounce.qml 3\n \n     This QML teapot example can be compared with the \\l{qt3d/teapot}{C++ version}.\n     Using QML is briefer than C++, and easier to modify to adjust\n"", ""qt3d-building.qdoc"": ""@@ -87,6 +87,12 @@\n     version 2.0 on Mac OSX, but other operating systems and versions should\n     look similar.  Always use the latest release of QtCreator if possible.\n \n+    \\bold{Special note: Harmattan SDK.}  When using the Harmattan support in the Qt SDK:\n+    \\list\n+        \\o in Step 2 below ensure you choose the appropriate Qt Build eg \\c{Meego 1.2 Harmattan API}; and\n+        \\o in Step 3 under \\c{Build Steps > QMake > Additional arguments} add in \\c{CONFIG += qtc_harmattan}\n+    \\endlist\n+\n     \\image build-qt3d-qtcreator-1.png\n \n     \\bold{Step 1} - Open the QtQuick3D project.\n"", ""penguin.qdoc"": ""@@ -26,7 +26,7 @@\n ****************************************************************************/\n \n /*!\n-    \\example qt3d/tutorials/penguin\n+    \\example qt3d/penguin\n     \\title Loading a 3DS model with Qt3D\n \n     This tutorial shows how Qt3D can be used to load a simple\n@@ -36,7 +36,7 @@\n     We start by defining a class that inherits from QGLView, which\n     provides some basic scene setup logic and 3D camera navigation:\n \n-    \\snippet qt3d/tutorials/penguin/modelview.h class-defn\n+    \\snippet qt3d/penguin/modelview.h class-defn\n \n     Refer first to the \\l{Teapot Example} for the basics of using\n     the QGLView class, lighting and so on.\n@@ -45,12 +45,12 @@\n     resource file, and store the result in a member variable, so\n     we can refer to it in the paint function:\n \n-    \\snippet qt3d/tutorials/penguin/modelview.cpp initialize\n+    \\snippet qt3d/penguin/modelview.cpp initialize\n \n     In the teapot example we had to specify appropriate effects but\n     the model loader sets appropriate effects on the scene for us.\n \n-    \\snippet qt3d/tutorials/penguin/modelview.cpp paint\n+    \\snippet qt3d/penguin/modelview.cpp paint\n \n     Here in the paint function we call the \\c{draw()} function of\n     the scene's main object, in order to display the fully\n@@ -72,7 +72,7 @@\n     Let's make a few changes to have our penguin display nicely\n     when the application opens.\n \n-    \\snippet qt3d/tutorials/penguin_advanced/modelview.cpp initialize\n+    \\snippet qt3d/penguin_advanced/modelview.cpp initialize\n \n     First of all, let move the camera away from the penguin and up\n     so he fits in the frame and we can get a better angle on him,\n@@ -95,7 +95,7 @@\n     calculated and stored as a quaternion - we want the x twist first\n     so that goes last in the product of the two quaternions.\n \n-    \\snippet qt3d/tutorials/penguin_advanced/modelview.cpp paint\n+    \\snippet qt3d/penguin_advanced/modelview.cpp paint\n \n     Now all that remains in the updated paint function is to apply the\n     new pose, and then paint the penguin.\n"", ""shaders.qdoc"": ""@@ -27,7 +27,7 @@\n \n /*!\n     \\title Using GLSL shaders in QtQuick3D\n-    \\example quick3d/tutorials/shaders\n+    \\example quick3d/shaders\n \n \n     In this tutorial, we will show how to apply QML property animations to\n@@ -42,7 +42,7 @@\n         <table align=\""left\"" width=\""100%\"">\n         <tr class=\""qt-code\""><td>\n     \\endraw\n-    \\snippet quick3d/tutorials/shaders/shader-tutorial.qml 1\n+    \\snippet quick3d/shaders/shader-tutorial.qml 1\n     \\raw HTML\n         </td><td align=\""right\"">\n     \\endraw\n"", ""simpleobject.qdoc"": ""@@ -28,7 +28,7 @@\n /*!\n     \\title Applying Transformations and Materials\n     \\keyword Object Effects\n-    \\example qt3d/tutorials/cube4\n+    \\example qt3d/cube4\n \n     In this tutorial we will apply transformations and materials to a\n     simple cube object to demonstrate how to modify the QGLPainter\n@@ -45,7 +45,7 @@\n     In the C++ world we start by declaring a view class to show our cube\n     on the screen:\n \n-    \\snippet qt3d/tutorials/cube1/cubeview.h 1\n+    \\snippet qt3d/cube1/cubeview.h 1\n \n     QGLView provides most of the logic for initializing the view,\n     setting the camera position, and handling navigation via\n@@ -53,12 +53,12 @@\n     QGLBuilder to create the geometry for the cube object that\n     we will be using in later steps:\n \n-    \\snippet qt3d/tutorials/cube1/cubeview.cpp 1\n+    \\snippet qt3d/cube1/cubeview.cpp 1\n \n     Then it is a simple matter to draw the object in our \\c{paintGL()}\n     method:\n \n-    \\snippet qt3d/tutorials/cube1/cubeview.cpp 2\n+    \\snippet qt3d/cube1/cubeview.cpp 2\n \n     If we run the program now, we get the following output, which isn't\n     very cube-like:\n@@ -71,7 +71,7 @@\n     matrix a little bit to apply a 45 degree rotation around the\n     axis (1, 1, 1):\n \n-    \\snippet qt3d/tutorials/cube2/cubeview.cpp 2\n+    \\snippet qt3d/cube2/cubeview.cpp 2\n \n     Now the results are a little better:\n \n@@ -83,7 +83,7 @@\n     (white in this case).  So let's change to a lit material effect\n     with a nice green color:\n \n-    \\snippet qt3d/tutorials/cube3/cubeview.cpp 2\n+    \\snippet qt3d/cube3/cubeview.cpp 2\n \n     That's much better; now it looks like a cube:\n \n@@ -92,13 +92,13 @@\n     To complete this tutorial, let's make the cube a little more\n     interesting by adding a texture to the side:\n \n-    \\snippet qt3d/tutorials/cube4/cubeview.h 1\n+    \\snippet qt3d/cube4/cubeview.h 1\n     \\dots\n-    \\snippet qt3d/tutorials/cube4/cubeview.h 2\n-    \\snippet qt3d/tutorials/cube4/cubeview.cpp 1\n+    \\snippet qt3d/cube4/cubeview.h 2\n+    \\snippet qt3d/cube4/cubeview.cpp 1\n     \\dots\n-    \\snippet qt3d/tutorials/cube4/cubeview.cpp 2\n-    \\snippet qt3d/tutorials/cube4/cubeview.cpp 3\n+    \\snippet qt3d/cube4/cubeview.cpp 2\n+    \\snippet qt3d/cube4/cubeview.cpp 3\n \n     \\image tutorials/cube4-screenshot.png\n \n""}",resource,"resource
",bug;
516.0,516.0,bug ,Jarek Kobus,Fix behavior settings,"Fix behavior settings

Change-Id: Iefacbfeeff284c53b2edfd1c6c8a7fcb90348b54",['src/plugins/texteditor/behaviorsettingswidget.cpp'],"{""behaviorsettingswidget.cpp"": ""@@ -205,9 +205,9 @@ void BehaviorSettingsWidget::slotStorageSettingsChanged()\n \n void BehaviorSettingsWidget::slotBehaviorSettingsChanged()\n {\n-    StorageSettings settings;\n-    assignedStorageSettings(&settings);\n-    emit storageSettingsChanged(settings);\n+    BehaviorSettings settings;\n+    assignedBehaviorSettings(&settings);\n+    emit behaviorSettingsChanged(settings);\n }\n \n void BehaviorSettingsWidget::slotExtraEncodingChanged()\n""}",bug,"bug 
",bug;
5973.0,5973.0,bug ,Michael Zanetti,fix initialisation of service variable,"fix initialisation of service variable

Change-Id: I6f231ccd25f8441f699132fb22396fb03323e1fa",['src/bluetooth/qbluetoothtransferreply_bluez.cpp'],"{""qbluetoothtransferreply_bluez.cpp"": ""@@ -79,6 +79,7 @@ QBluetoothTransferReplyBluez::QBluetoothTransferReplyBluez(QIODevice *input, QOb\n         qDebug() << \""Failed Creating dbus objects\"";\n \n #ifdef NOKIA_BT_SERVICES\n+    m_obexService = NULL;\n     connectToObexServerService();\n #endif\n }\n@@ -133,11 +134,10 @@ void QBluetoothTransferReplyBluez::connectToObexServerService()\n     }\n     if (m_obexService) {\n         qDebug() << \""connected to service:\"" << m_obexService;\n+        connect(m_obexService, SIGNAL(errorUnrecoverableIPCFault(QService::UnrecoverableIPCError)), SLOT(sfwIPCError(QService::UnrecoverableIPCError)));\n     } else {\n         qDebug() << \""failed to connect to Obex server service\"";\n     }\n-\n-    connect(m_obexService, SIGNAL(errorUnrecoverableIPCFault(QService::UnrecoverableIPCError)), SLOT(sfwIPCError(QService::UnrecoverableIPCError)));\n }\n #endif\n \n""}",bug,"bug 
",bug;
3963.0,3963.0,feature ,Marco Bubke,Add bounding rectangle for rendering images in designer support,"Add bounding rectangle for rendering images in designer support

Elements can be outside the root items bounding rectange. So we compute
the bounding rectangle of an item and its children on the designer side. We
exclude all children which are the designer created.

Change-Id: I3c4f9ca5291c8f65e3670be1fd0900edf449b46f","['src/declarative/designer/designersupport.h', 'src/declarative/designer/designersupport.cpp']","{""designersupport.cpp"": ""@@ -101,7 +101,7 @@ void DesignerSupport::derefFromEffectItem(QSGItem *referencedItem, bool unhide)\n     QSGItemPrivate::get(referencedItem)->derefFromEffectItem(unhide);\n }\n \n-QImage DesignerSupport::renderImageForItem(QSGItem *referencedItem)\n+QImage DesignerSupport::renderImageForItem(QSGItem *referencedItem, const QRectF &boundingRect)\n {\n     if (referencedItem == 0 || referencedItem->parentItem() == 0) {\n         qDebug() << __FILE__ << __LINE__ << \""Warning: Item can be rendered.\"";\n@@ -113,8 +113,8 @@ QImage DesignerSupport::renderImageForItem(QSGItem *referencedItem)\n     Q_ASSERT(renderTexture);\n     if (renderTexture == 0)\n          return QImage();\n-    renderTexture->setRect(referencedItem->boundingRect());\n-    renderTexture->setSize(referencedItem->boundingRect().size().toSize());\n+    renderTexture->setRect(boundingRect);\n+    renderTexture->setSize(boundingRect.size().toSize());\n     renderTexture->updateTexture();\n \n     QImage renderImage = renderTexture->toImage();\n"", ""designersupport.h"": ""@@ -57,6 +57,7 @@\n \n #include <QtCore/QtGlobal>\n #include <QtCore/QHash>\n+#include <QtCore/QRectF>\n \n QT_BEGIN_NAMESPACE\n \n@@ -108,7 +109,7 @@ public:\n     void refFromEffectItem(QSGItem *referencedItem, bool hide = true);\n     void derefFromEffectItem(QSGItem *referencedItem, bool unhide = true);\n \n-    QImage renderImageForItem(QSGItem *referencedItem);\n+    QImage renderImageForItem(QSGItem *referencedItem, const QRectF &boundingRect);\n \n     static bool isDirty(QSGItem *referencedItem, DirtyType dirtyType);\n     static void resetDirty(QSGItem *referencedItem);\n""}",feature,"feature 
",feature;
16502.0,16502.0,"test,feature",Rohan McGovern [inactive],testrunner: add --sync-output option for parallel tests,"testrunner: add --sync-output option for parallel tests

When --sync-output is used and multiple tests are run in parallel, the
testrunner instances will co-operate with each other to ensure the
output from the tests is not interleaved.

As well as a new test added specifically for this feature, --sync-output
was added to a few existing tests to ensure it does not interfere with
existing features.

Change-Id: I24d57c36739edbc75d560ca5fe6e100adbfe74f5","['scripts/generic/t/20-testrunner-core.t', 'scripts/generic/t/22-testrunner-sync-output.t', 'scripts/generic/t/21-testrunner-flaky.t', 'scripts/generic/t/15-testrunner-capture-logs.t', 'scripts/generic/t/01-testrunner-testcocoon.t', 'scripts/generic/testrunner.pl']","{""01-testrunner-testcocoon.t"": ""@@ -271,7 +271,7 @@ sub test_merge_other_csmes_failure\n \n     test_run({\n         testname         => 'cmmerge other csmes failure',\n-        args             => [ '--plugin', 'testcocoon', '--testcocoon-tests-output', $tests_csmes, '--testcocoon-qt-gitmodule-dir', $module_gitdir, '--testcocoon-qt-gitmodule', 'module', '--', \""$tempdir/mytest\"",'testname' ],\n+        args             => [ '--sync-output', '--plugin', 'testcocoon', '--testcocoon-tests-output', $tests_csmes, '--testcocoon-qt-gitmodule-dir', $module_gitdir, '--testcocoon-qt-gitmodule', 'module', '--', \""$tempdir/mytest\"",'testname' ],\n         expected_success => 0,\n         expected_stdout  => $CMMERGE_OTHERCSMES,\n         expected_stderr  => qr{cmmerge failure other csmes\\n},\n@@ -371,7 +371,7 @@ sub test_cmcsexeimport_failure\n \n     test_run({\n         testname         => 'cmcsexeimport failure',\n-        args             => [ '--plugin', 'testcocoon', '--testcocoon-tests-output', $tests_csmes, '--testcocoon-qt-gitmodule-dir', $module_gitdir, '--testcocoon-qt-gitmodule', 'module', '--', \""$tempdir/mytest\"",'testname' ],\n+        args             => [ '--sync-output', '--plugin', 'testcocoon', '--testcocoon-tests-output', $tests_csmes, '--testcocoon-qt-gitmodule-dir', $module_gitdir, '--testcocoon-qt-gitmodule', 'module', '--', \""$tempdir/mytest\"",'testname' ],\n         expected_success => 0,\n         expected_stdout  => $CMCSEXEIMPORT,\n         expected_stderr  => qr{cmcsexeimport failure\\n},\n"", ""15-testrunner-capture-logs.t"": ""@@ -521,7 +521,7 @@ sub run\n     });\n     run_one_test({\n         testname         => 'mixed with capture',\n-        testrunner_args  => [ '--capture-logs', $tempdir, '--'],\n+        testrunner_args  => [ '--sync-output', '--capture-logs', $tempdir, '--'],\n         command_args     => [ 'mixed' ],\n         expected_logfile => \""$tempdir/perl-02.txt\"",\n         expected_logtext => rx_for_lines(\n@@ -614,7 +614,7 @@ sub run\n     });\n     run_one_test({\n         testname         => 'mixed with capture and -o and tee',\n-        testrunner_args  => [ '--tee-logs', $tempdir, '--' ],\n+        testrunner_args  => [ '--sync-output', '--tee-logs', $tempdir, '--' ],\n         command_args     => [ '-o', 'testlog.log', 'mixed' ],\n         expected_logfile => \""$tempdir/perl-testlog-02.log\"",\n         expected_logtext => rx_for_lines(\n@@ -720,7 +720,7 @@ sub run\n     #\n     run_one_test({\n         testname         => 'mixed_nonascii new style -o, tee, multiple logs, one stdout',\n-        testrunner_args  => [ '--tee-logs', $tempdir, '--' ],\n+        testrunner_args  => [ '--sync-output', '--tee-logs', $tempdir, '--' ],\n         command_args     => [ '-o', 'testlog.xml,xml', '-o', 'testlog.txt,txt', '-o', '-,txt', 'mixed_nonascii' ],\n         expected_logfiles => [ \""$tempdir/perl-testlog-01.xml\"", \""$tempdir/perl-testlog-00.txt\"" ],\n         expected_logtexts => [\n@@ -883,7 +883,7 @@ sub run\n     });\n     run_one_test({\n         testname         => 'mixed_nonascii with capture and ignored -o and tee',\n-        testrunner_args  => [ '--tee-logs', $tempdir, '--' ],\n+        testrunner_args  => [ '--sync-output', '--tee-logs', $tempdir, '--' ],\n         command_args     => [ '-o', 'testlog.log.txt', '--skip-log', 'mixed_nonascii' ],\n         expected_logtext => rx_for_lines(\n             [\n@@ -960,7 +960,7 @@ sub run\n     });\n     run_one_test({\n         testname         => 'tee error crashing',\n-        testrunner_args  => [ '--tee-logs', $tempdir, '--'],\n+        testrunner_args  => [ '--sync-output', '--tee-logs', $tempdir, '--'],\n         command          => [ 'perl', '-e', 'kill 11, $$' ],\n         expected_logfile => \""$tempdir/perl-01.txt\"",\n         expected_logtext => $crash_rx,\n"", ""20-testrunner-core.t"": ""@@ -178,6 +178,7 @@ sub test_testrunner\n             $tempdir,\n             '--plugin',\n             'core',\n+            '--sync-output',\n             '--',\n             'perl',\n             '-e',\n"", ""21-testrunner-flaky.t"": ""@@ -339,7 +339,7 @@ sub test_testrunner_flaky\n     });\n     test_run({\n         testname         => 'vanishing failure (flaky-mode worst)',\n-        args             => [ qw(--plugin flaky --flaky-mode worst -- perl -e), $PERL_VANISHING_FAILURE ],\n+        args             => [ qw(--sync-output --plugin flaky --flaky-mode worst -- perl -e), $PERL_VANISHING_FAILURE ],\n         expected_success => 0,\n         expected_stdout  => $OUTPUT_VANISHING_FAILURE,\n         expected_stderr  => $ERROR_VANISHING_FAILURE_MODE_WORST,\n@@ -383,7 +383,7 @@ sub test_testrunner_flaky\n     });\n     test_run({\n         testname         => 'differing failure (flaky-mode ignore)',\n-        args             => [ qw(--plugin flaky --flaky-mode ignore -- perl -e), $PERL_DIFFERING_FAILURE ],\n+        args             => [ qw(--sync-output --plugin flaky --flaky-mode ignore -- perl -e), $PERL_DIFFERING_FAILURE ],\n         expected_success => 1,\n         expected_stdout  => $OUTPUT_DIFFERING_FAILURE,\n         expected_stderr  => $ERROR_DIFFERING_FAILURE_MODE_IGNORE,\n"", ""22-testrunner-sync-output.t"": ""@@ -0,0 +1,135 @@\n+#!/usr/bin/env perl\n+use 5.010;\n+use strict;\n+use warnings;\n+\n+=head1 NAME\n+\n+22-testrunner-sync-output.t - test testrunner's --sync-output option\n+\n+=head1 SYNOPSIS\n+\n+  perl ./22-testrunner-sync-output.t\n+\n+This test will run the testrunner.pl script with and without sync-output\n+and verify the order in which subprocess output is printed.\n+\n+=cut\n+\n+use Capture::Tiny qw( capture_merged );\n+use File::Spec::Functions;\n+use FindBin;\n+use Readonly;\n+use Test::More;\n+use Data::Dumper;\n+use English qw( -no_match_vars );\n+\n+# Perl for writing a few lines with a sleep between them\n+Readonly my $PERL_DELAYED_OUTPUT => <<'END_PERL';\n+$|++;\n+for my $i (1..3) {\n+    sleep 1;\n+    print \""Line $i\\n\"";\n+}\n+END_PERL\n+\n+# Testrunner script\n+Readonly my $TESTRUNNER => catfile( $FindBin::Bin, '..', 'testrunner.pl' );\n+\n+# This script\n+Readonly my $THIS_SCRIPT => catfile( $FindBin::Bin, $FindBin::Script );\n+\n+# Test output of concurrent processes with no syncing\n+sub test_concurrent_unsynced\n+{\n+    # Run 4 async PERL_DELAYED_OUTPUT through testrunner with no attempt to sync output\n+    my @cmd_unsynced = ($EXECUTABLE_NAME, $THIS_SCRIPT, '-run-children');\n+\n+    # With no --sync-output, verify the output is interleaved\n+    my $out_unsynced = capture_merged { system( @cmd_unsynced ) };\n+    is( $out_unsynced, <<'END_OUT' );\n+Line 1\n+Line 1\n+Line 1\n+Line 1\n+Line 2\n+Line 2\n+Line 2\n+Line 2\n+Line 3\n+Line 3\n+Line 3\n+Line 3\n+All children done.\n+END_OUT\n+\n+    return;\n+}\n+\n+# Test output of concurrent processes with syncing\n+sub test_concurrent_synced\n+{\n+    # Run 4 async PERL_DELAYED_OUTPUT through testrunner and sync output\n+    my @cmd_synced = ($EXECUTABLE_NAME, $THIS_SCRIPT, '-run-children', '--sync-output');\n+\n+    # With --sync-output, verify the output is NOT interleaved\n+    my $out_synced = capture_merged { system( @cmd_synced ) };\n+    is( $out_synced, <<'END_OUT' );\n+Line 1\n+Line 2\n+Line 3\n+Line 1\n+Line 2\n+Line 3\n+Line 1\n+Line 2\n+Line 3\n+Line 1\n+Line 2\n+Line 3\n+All children done.\n+END_OUT\n+\n+    return;\n+}\n+\n+sub main\n+{\n+    test_concurrent_unsynced;\n+    test_concurrent_synced;\n+\n+    done_testing;\n+    return;\n+}\n+\n+# Spawn a few concurrent $PERL_DELAYED_OUTPUT processes through testrunner.\n+# Anything in @ARGV is passed to the testrunner.\n+sub run_children\n+{\n+    my @pids;\n+    for my $i (1..4) {\n+        my $pid = fork();\n+        if (0 == $pid) {\n+            exec($EXECUTABLE_NAME, $TESTRUNNER, @ARGV, '--',\n+                 $EXECUTABLE_NAME, '-e', $PERL_DELAYED_OUTPUT);\n+            die \""exec failed: $!\"";\n+        }\n+        else {\n+            push @pids, $pid;\n+        }\n+    }\n+    while (@pids) {\n+        shift @pids;\n+        waitpid(-1, 0);\n+    }\n+    print \""All children done.\\n\"";\n+    return;\n+}\n+\n+if (@ARGV && $ARGV[0] eq '-run-children') {\n+    shift @ARGV;\n+    run_children;\n+}\n+else {\n+    main;\n+}\n"", ""testrunner.pl"": ""@@ -160,6 +160,24 @@ as testlib is already implementing its own tee-like behavior.\n \n B<NOTE>: not yet supported on Windows.\n \n+=item B<--sync-output>\n+\n+Buffer and synchronize outputs to avoid interleaved output from multiple tests\n+in parallel.\n+\n+When this option is in use, and more than one instance of this script is currently\n+running, each testrunner instance will co-operate to ensure that each test's output\n+appears as a contiguous block.  The output from each test will be buffered until\n+the test completes, then written to standard output as a single block.\n+\n+This provides the benefit of a more readable test log, but has the downside\n+that a test which is currently running provides no progress information.\n+\n+If this option is used while only a single test is running, it has no effect.\n+\n+As a side effect of this option, standard output and standard error from the test\n+may be merged.\n+\n =item B<--plugin> <plugin>\n \n Loads the specified testrunner plugin to customize behavior.\n@@ -265,8 +283,10 @@ use Getopt::Long qw(\n );\n \n use Carp;\n+use Capture::Tiny qw( capture_merged );\n use Cwd qw( realpath );\n use English qw( -no_match_vars );\n+use Fcntl qw( :flock );\n use File::Basename;\n use File::Path qw( mkpath );\n use File::Spec::Functions;\n@@ -291,6 +311,9 @@ BEGIN {\n \n #use Smart::Comments;    # uncomment for debugging\n \n+# this script\n+Readonly my $TESTRUNNER => catfile( $FindBin::Bin, $FindBin::Script );\n+\n # a long time, but not forever\n Readonly my $LONG_TIME => 60*60*24*7;\n \n@@ -326,6 +349,7 @@ sub run\n     %{$self} = ( %DEFAULTS, %{$self} );\n \n     my $tee_logs;\n+    my $sync_output;\n \n     my $win = ($OSNAME =~ m{win32}i);\n     my $disable = sub {\n@@ -338,6 +362,7 @@ sub run\n         'capture-logs=s'    =>  ($win ? $disable : \\$self->{ capture_logs }),\n         'plugin=s'          =>  \\@{$self->{ plugin_names }},\n         'tee-logs=s'        =>  ($win ? $disable : \\$tee_logs),\n+        'sync-output'       =>  \\$sync_output,\n     ) || pod2usage(2);\n \n     # tee-logs implies that we both capture the logs, and print the output like `tee'\n@@ -354,7 +379,13 @@ sub run\n         shift @args;\n     }\n \n-    $self->do_subprocess( @args );\n+    if ($sync_output) {\n+        $self->do_subprocess_with_sync_output( @args );\n+    }\n+    else {\n+        $self->do_subprocess( @args );\n+    }\n+\n     $self->exit_appropriately( );\n \n     return;\n@@ -926,6 +957,30 @@ sub create_proc_win32\n     return QtQA::Proc::Reliable::Win32->new( );\n }\n \n+sub do_subprocess_with_sync_output\n+{\n+    my ($self, @args) = @_;\n+\n+    open(my $fh, '<', $TESTRUNNER) || die \""open $TESTRUNNER: $!\"";   ## no critic\n+\n+    # First, try non-blocking.  If that succeeds, great!  We're the only\n+    # running test at the time we started, so we don't need to do any buffering.\n+    if (flock($fh, LOCK_EX|LOCK_NB)) {\n+        $self->do_subprocess( @args );\n+        return;\n+    }\n+\n+    # OK, someone else has the lock.\n+    # Then we need to buffer all the output while running the process...\n+    my $output = capture_merged { $self->do_subprocess( @args ) };\n+    # ...and don't output until we can get the lock\n+    flock($fh, LOCK_EX) || die \""flock $TESTRUNNER: $!\"";\n+\n+    local $OUTPUT_AUTOFLUSH = 1;\n+    print $output;\n+    return;\n+}\n+\n # Run a subprocess for the given @command, and do all appropriate logging.\n # A Proc::Reliable encapsulating the process is returned, after the process completes.\n sub do_subprocess\n""}","test,feature","Categories: feature, test 
",feature;resource;test;
15463.0,15463.0,refactor,Danny Pope,Removed unused empty functions from QGLMultiTextureExtensions,"Removed unused empty classes from QGLMultiTextureExtensions

Change-Id: I338a12156a23dfcebd8677eb39871a97be183ce7",['src/threed/painting/qglext.cpp'],"{""qglext.cpp"": ""@@ -41,7 +41,7 @@\n \n #include \""qglext_p.h\""\n #include <qopenglfunctions.h>\n-\n+#include <QDebug>\n #include <private/qopenglcontext_p.h>\n \n QT_BEGIN_NAMESPACE\n@@ -60,9 +60,6 @@ public:\n     }\n     ~QGLMultiTextureExtensions();\n \n-    void invalidateResource() {}\n-    void freeResource(QOpenGLContext *) {}\n-\n     q_PFNGLCLIENTACTIVETEXTUREPROC clientActiveTexture;\n     bool multiTextureResolved;\n };\n""}",refactor,"refactor 
",deprecat;
18288.0,18288.0,bug ,Jamey Hicks,Initialize JsonDbMapDefinition sourceTypes().,"Initialize JsonDbMapDefinition sourceTypes().

Fixes bug #6005.

Change-Id: I7f0e3c671e813b20ce41783a3a6bd225de46a60b",['src/daemon/jsondbmapdefinition.cpp'],"{""jsondbmapdefinition.cpp"": ""@@ -74,6 +74,16 @@ JsonDbMapDefinition::JsonDbMapDefinition(JsonDb *jsonDb, const JsonDbOwner *owne\n     , mTargetType(definition.value(\""targetType\"").toString())\n     , mTargetTable(mPartition->findObjectTable(mTargetType))\n {\n+    if (!mDefinition.contains(\""sourceType\"")) {\n+        QJsonObject sourceFunctions(mDefinition.contains(\""join\"")\n+                                   ? mDefinition.value(\""join\"").toObject()\n+                                   : mDefinition.value(\""map\"").toObject());\n+        mSourceTypes = sourceFunctions.keys();\n+    } else {\n+        // TODO: remove this case\n+        const QString sourceType = mDefinition.value(\""sourceType\"").toString();\n+        mSourceTypes.append(sourceType);\n+    }\n }\n \n \n""}",bug,"bug
",bug;
9765.0,9765.0,deprecat;resource;,Sarah Jane Smith,Begin removing N900 support.,"Begin removing N900 support.

These desktop files are a pain to maintain and we now must begin to
deprecate N900 support, by removing them.

Change-Id: If53ed68079b11057aed6c6588ed2b9865c67e38b","['examples/qt3d/nesting/m5-nesting.desktop', 'examples/qt3d/solarsystem/m5-solarsystem.desktop', 'examples/qt3d/graphicsview/m5-graphicsview.desktop', 'examples/qt3d/basket/m5-basket.desktop', 'examples/quick3d/lander/m5-lander.desktop', 'tests/manual/model3ds/m5-tst_submesh_qml.desktop', 'examples/qt3d/teapot/m5-teapot.desktop', 'examples/quick3d/matrix_animation/m5-matrix_animation.desktop', 'examples/quick3d/solarsystem_qml/m5-solarsystem_qml.desktop', 'demos/quick3d/tea_service/m5-tea_service.desktop', 'examples/quick3d/moon/m5-moon.desktop', 'tests/manual/qrc/m5-tst_qrc_qml.desktop', 'examples/quick3d/forest/m5-forest.desktop', 'demos/quick3d/flickr3d/m5-flickr.desktop', 'tests/manual/transformations/m5-tst_transformations_qml.desktop', 'tutorials/quick3d/teapot_qml/m5-teapot_qml.desktop', 'util/qt3d/modeltweak/m5-modeltweak.desktop', 'demos/qt3d/pageflip/m5-pageflip.desktop', 'demos/quick3d/robo_bounce/m5-robo_bounce.desktop', 'tests/manual/submesh/m5-tst_submesh_qml.desktop', 'tests/manual/animations/m5-tst_animations_qml.desktop', 'examples/quick3d/basket/m5-basket_qml.desktop', 'demos/qt3d/cubehouse/m5-cubehouse.desktop', 'demos/quick3d/model_viewer/m5-model_viewer.desktop', 'examples/qt3d/builder/m5-builder.desktop', 'examples/qt3d/cylinder/m5-cylinder.desktop', 'examples/quick3d/cube/m5-cube.desktop', 'tests/manual/translation/m5-tst_translation_qml.desktop', 'tutorials/quick3d/teapot_bounce_qml/m5-teapot_bounce_qml.desktop', 'examples/qt3d/cube/m5-cube.desktop', 'tests/manual/lighting/m5-tst_lighting_qml.desktop', 'examples/quick3d/modelview3d/m5-modelview3d.desktop', 'tests/manual/rotation/m5-tst_rotation_qml.desktop', 'demos/qt3d/shapes/m5-shapes.desktop', 'examples/qt3d/geometry/m5-geometry.desktop', 'examples/quick3d/photoroom/m5-photoroom.desktop', 'demos/qt3d/teaservice/m5-teaservice.desktop', 'tests/manual/scaling/m5-tst_scaling_qml.desktop', 'examples/qt3d/tank/m5-tank.desktop', 'examples/quick3d/monkeygod/m5-monkeygod.desktop', 'examples/quick3d/sphere/m5-sphere.desktop', 'demos/qt3d/photobrowser3d/m5-photobrowser3d.desktop', 'examples/quick3d/shaders/m5-shaders.desktop']","{""m5-cubehouse.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=CubeHouse\n-Comment=Qt3D example application\n-Exec=/usr/bin/cubehouse -fullscreen\n-Icon=icon-l-qt3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-pageflip.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Pageflip\n-Comment=Qt3D example application\n-Exec=/usr/bin/pageflip -fullscreen\n-Icon=icon-l-qt3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-photobrowser3d.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Photobrowser\n-Comment=Qt3D example application\n-Exec=/usr/bin/photobrowser3d -fullscreen\n-Icon=icon-l-qt3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-shapes.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Shapes\n-Comment=Qt3D example application\n-Exec=/usr/bin/shapes -fullscreen\n-Icon=icon-l-qt3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-teaservice.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Tea Service\n-Comment=Qt3D example application\n-Exec=/usr/bin/teaservice -fullscreen\n-Icon=icon-l-qt3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-flickr.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Flickr3D\n-Comment=Qt3D example application\n-Exec=/usr/bin/flickr3d -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-model_viewer.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Model Viewer\n-Comment=Qt3D example application\n-Exec=/usr/bin/model_viewer -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-robo_bounce.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=RoboBounce\n-Comment=Qt3D example application\n-Exec=/usr/bin/robo_bounce -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-tea_service.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Tea Service\n-Comment=Qt3D example application\n-Exec=/usr/bin/tea_service -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-basket.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Basket\n-Comment=Qt3D example application\n-Exec=/usr/bin/basket -fullscreen\n-Icon=icon-l-qt3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-builder.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Builder\n-Comment=Qt3D example application\n-Exec=/usr/bin/builder -fullscreen\n-Icon=icon-l-qt3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-cube.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Cube\n-Comment=Qt3D example application\n-Exec=/usr/bin/cube -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-cylinder.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Cappucino\n-Comment=Qt3D example application\n-Exec=/usr/bin/cylinder -fullscreen\n-Icon=icon-l-qt3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-geometry.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=D20 Qt3D\n-Comment=Qt3D example application\n-Exec=/usr/bin/geometry -fullscreen\n-Icon=icon-l-qt3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-graphicsview.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=GraphicsView\n-Comment=Qt3D example application\n-Exec=/usr/bin/graphicsview -fullscreen\n-Icon=icon-l-qt3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-nesting.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Nesting\n-Comment=Qt3D example application\n-Exec=/usr/bin/nesting -fullscreen\n-Icon=icon-l-qt3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-solarsystem.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Basket\n-Comment=Qt3D example application\n-Exec=/usr/bin/basket -fullscreen\n-Icon=icon-l-qt3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-tank.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Tank\n-Comment=Qt3D example application\n-Exec=/usr/bin/tank -fullscreen\n-Icon=icon-l-qt3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-teapot.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Teapot\n-Comment=Qt3D example application\n-Exec=/usr/bin/teapot -fullscreen\n-Icon=icon-l-qt3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-basket_qml.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Basket\n-Comment=Qt3D example application\n-Exec=/usr/bin/basket_qml -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-forest.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Forest\n-Comment=Qt3D example application\n-Exec=/usr/bin/forest -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-lander.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Lunar Lander\n-Comment=Qt3D example application\n-Exec=/usr/bin/lander -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-matrix_animation.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Matrix\n-Comment=Qt3D example application\n-Exec=/usr/bin/matrix_animation -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-modelview3d.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=ModelView3D\n-Comment=Qt3D example application\n-Exec=/usr/bin/modelview3d -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-monkeygod.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Monkeygod\n-Comment=Qt3D example application\n-Exec=/usr/bin/monkeygod -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-moon.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Moon\n-Comment=Qt3D example application\n-Exec=/usr/bin/moon -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-photoroom.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=PhotoRoom\n-Comment=Qt3D example application\n-Exec=/usr/bin/photoroom -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-shaders.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Shaders\n-Comment=Qt3D example application\n-Exec=/usr/bin/shaders -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-solarsystem_qml.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Cube\n-Comment=Qt3D example application\n-Exec=/usr/bin/solarsystem_qml -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-sphere.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Sphere\n-Comment=Qt3D example application\n-Exec=/usr/bin/sphere -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-tst_animations_qml.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=tst_animations\n-Comment=Qt3D test animations application\n-Exec=/usr/bin/tst_animations -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-tst_lighting_qml.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=tst_lighting\n-Comment=Qt3D test application for single lighting\n-Exec=/usr/bin/tst_lighting -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-tst_submesh_qml.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=tst_submesh\n-Comment=Qt3D test application\n-Exec=/usr/bin/tst_submesh -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-tst_qrc_qml.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=tst_submesh\n-Comment=Qt3D test application\n-Exec=/usr/bin/tst_qrc -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-tst_rotation_qml.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=tst_rotation\n-Comment=Qt3D test application\n-Exec=/usr/bin/tst_rotation -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-tst_scaling_qml.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=tst_scaling\n-Comment=Qt3D test application\n-Exec=/usr/bin/tst_scaling -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-tst_transformations_qml.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=tst_transformations\n-Comment=Qt3D test application\n-Exec=/usr/bin/tst_transformations -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-tst_translation_qml.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=tst_translation\n-Comment=Qt3D test application\n-Exec=/usr/bin/tst_translation -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-teapot_bounce_qml.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Teapot Bounce\n-Comment=Qt3D example application\n-Exec=/usr/bin/teapot_bounce_qml -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-teapot_qml.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Teapot\n-Comment=Qt3D example application\n-Exec=/usr/bin/teapot_qml -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n"", ""m5-modeltweak.desktop"": ""@@ -1,14 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Version=1.0\n-Name=Model Tweaker\n-Comment=QtQuick3d Model Tweaker\n-Exec=/usr/bin/modeltweak -fullscreen\n-Icon=icon-l-qtquick3d\n-Terminal=false\n-Type=Application\n-Categories=Development;\n-X-HildonDesk-ShowInToolbar=true\n-X-Osso-Type=application/x-executable\n-X-Text-Domain=qt3d\n-\n""}",deprecat;resource;,"deprecate, resource 
",deprecat;resource;
23783.0,23783.0,test; resource,David Schulz,Add Test for Python in GDB makefile for MinGW,"Add Test for Python in GDB makefile for  MinGW

Task-number: QTCREATORBUG-7305
Change-Id: I03fa3ea404b38e5541d3d0380eb4e0987ceaa811",['dist/gdb/Makefile.mingw'],"{""Makefile.mingw"": ""@@ -36,7 +36,11 @@ makestagingdir:\n \ttest -e ${staging} || mkdir ${staging}\n \n checkwget:\n-\twget -V || mingw-get install msys-wget-bin\n+\twget -V &> /dev/null || mingw-get install msys-wget-bin\n+\n+checkpython:\n+\ttest -d ${pydir} || \\\n+\t( echo \""Missing subdirectory \\\""./python\\\"". Get it on http://download.qt.nokia.com/misc/gdb/7.4\"" && exit 2 \n \n ${source}/gdb-${version}.tar.bz2: | makesourcedir checkwget\n \tcd ${source} && \\\n@@ -76,7 +80,7 @@ ${staging}/lib/libexpat.a: ${source}/expat-${expatversion}.tar.gz | makestagingd\n \t./configure -prefix=${staging} --enable-static && \\\n \t${MAKE} && ${MAKE} install\n \n-${gdbtargets}: ${targetdir}/gdb-%: ${staging}/lib/libexpat.a ${staging}/lib/libiconv.a ${staging}/gdb-${version}/configure | maketargetdir\n+${gdbtargets}: ${targetdir}/gdb-%: ${staging}/lib/libexpat.a ${staging}/lib/libiconv.a ${staging}/gdb-${version}/configure | maketargetdir checkpython\n \ttest -e ${staging}/gdb-${version}-$* || mkdir ${staging}/gdb-${version}-$*\n \texport PYTHONHOME=${pydir} && \\\n \tLDFLAGS=\""L${pydir} -lpthread -ldl -lutil -lpython27\"" && \\\n@@ -90,7 +94,7 @@ ${gdbtargets}: ${targetdir}/gdb-%: ${staging}/lib/libexpat.a ${staging}/lib/libi\n \tstrip gdb/gdb.exe && \\\n \tcp -T gdb/gdb.exe ${targetdir}/gdb-$*.exe\n \n-package: ${gdbtargets}\n+package: ${gdbtargets} checkpython\n \tcp ${staging}/bin/libiconv* ${targetdir} && \\\n \tcp ${staging}/bin/libexpat* ${targetdir} && \\\n \tcp ${pydir}/python*.dll ${targetdir} && \\\n""}",test; resource,"test 
",bug;resource;test;
5930.0,5930.0,bug;resource;,Simon Hausmann,Fix compilation on Harmattan,"Fix compilation on Harmattan

The inclusion of qbearerengine_p.h requires network-private

Change-Id: Ie28136dc6ee423721978d073fd401fecde2a7d35",['src/plugins/bearer/icd/icd.pro'],"{""icd.pro"": ""@@ -1,7 +1,7 @@\n TARGET = qicdbearer\n load(qt_plugin)\n \n-QT = core network dbus\n+QT = core network network-private dbus\n \n QMAKE_CXXFLAGS *= $$QT_CFLAGS_DBUS $$QT_CFLAGS_CONNSETTINGS\n LIBS += $$QT_LIBS_CONNSETTINGS\n""}",bug;resource;,"bug 
",bug;resource;
11860.0,11860.0,"feature,refactor",Jonas Gastal,Make (dis)connectTo(From)Host virtual in QAbstractSocket.,"Make (dis)connectTo(From)Host virtual in QAbstractSocket.

Change-Id: Ib1dfae4031f00fb331108152a259f6a2756381c9","['src/network/ssl/qsslsocket.h', 'src/network/socket/qabstractsocket.cpp', 'src/network/ssl/qsslsocket.cpp', 'src/network/socket/qabstractsocket.h']","{""qabstractsocket.cpp"": ""@@ -1466,27 +1466,6 @@ bool QAbstractSocket::isValid() const\n void QAbstractSocket::connectToHost(const QString &hostName, quint16 port,\n                                     OpenMode openMode,\n                                     NetworkLayerProtocol protocol)\n-{\n-    Q_D(QAbstractSocket);\n-    d->preferredNetworkLayerProtocol = protocol;\n-\n-    QMetaObject::invokeMethod(this, \""connectToHostImplementation\"",\n-                              Qt::DirectConnection,\n-                              Q_ARG(QString, hostName),\n-                              Q_ARG(quint16, port),\n-                              Q_ARG(OpenMode, openMode));\n-}\n-\n-/*!\n-    \\since 4.1\n-\n-    Contains the implementation of connectToHost().\n-\n-    Attempts to make a connection to \\a hostName on the given \\a\n-    port. The socket is opened in the given \\a openMode.\n-*/\n-void QAbstractSocket::connectToHostImplementation(const QString &hostName, quint16 port,\n-                                                  OpenMode openMode)\n {\n     Q_D(QAbstractSocket);\n #if defined(QABSTRACTSOCKET_DEBUG)\n@@ -1500,6 +1479,7 @@ void QAbstractSocket::connectToHostImplementation(const QString &hostName, quint\n         return;\n     }\n \n+    d->preferredNetworkLayerProtocol = protocol;\n     d->hostName = hostName;\n     d->port = port;\n     d->state = UnconnectedState;\n@@ -2615,17 +2595,6 @@ void QAbstractSocket::close()\n     \\sa connectToHost()\n */\n void QAbstractSocket::disconnectFromHost()\n-{\n-    QMetaObject::invokeMethod(this, \""disconnectFromHostImplementation\"",\n-                              Qt::DirectConnection);\n-}\n-\n-/*!\n-    \\since 4.1\n-\n-    Contains the implementation of disconnectFromHost().\n-*/\n-void QAbstractSocket::disconnectFromHostImplementation()\n {\n     Q_D(QAbstractSocket);\n #if defined(QABSTRACTSOCKET_DEBUG)\n"", ""qabstractsocket.h"": ""@@ -130,10 +130,9 @@ public:\n     bool bind(const QHostAddress &address, quint16 port = 0, BindMode mode = DefaultForPlatform);\n     bool bind(quint16 port = 0, BindMode mode = DefaultForPlatform);\n \n-    // ### Qt 5: Make connectToHost() and disconnectFromHost() virtual.\n-    void connectToHost(const QString &hostName, quint16 port, OpenMode mode = ReadWrite, NetworkLayerProtocol protocol = AnyIPProtocol);\n-    void connectToHost(const QHostAddress &address, quint16 port, OpenMode mode = ReadWrite);\n-    void disconnectFromHost();\n+    virtual void connectToHost(const QString &hostName, quint16 port, OpenMode mode = ReadWrite, NetworkLayerProtocol protocol = AnyIPProtocol);\n+    virtual void connectToHost(const QHostAddress &address, quint16 port, OpenMode mode = ReadWrite);\n+    virtual void disconnectFromHost();\n \n     bool isValid() const;\n \n@@ -195,10 +194,6 @@ Q_SIGNALS:\n     void proxyAuthenticationRequired(const QNetworkProxy &proxy, QAuthenticator *authenticator);\n #endif\n \n-protected Q_SLOTS:\n-    void connectToHostImplementation(const QString &hostName, quint16 port, OpenMode mode = ReadWrite);\n-    void disconnectFromHostImplementation();\n-\n protected:\n     qint64 readData(char *data, qint64 maxlen);\n     qint64 readLineData(char *data, qint64 maxlen);\n"", ""qsslsocket.cpp"": ""@@ -1733,16 +1733,16 @@ void QSslSocket::ignoreSslErrors(const QList<QSslError> &errors)\n /*!\n     \\internal\n */\n-void QSslSocket::connectToHostImplementation(const QString &hostName, quint16 port,\n-                                             OpenMode openMode)\n+void QSslSocket::connectToHost(const QString &hostName, quint16 port, OpenMode openMode, NetworkLayerProtocol protocol)\n {\n+    Q_UNUSED(protocol);\n     Q_D(QSslSocket);\n     if (!d->initialized)\n         d->init();\n     d->initialized = false;\n \n #ifdef QSSLSOCKET_DEBUG\n-    qDebug() << \""QSslSocket::connectToHostImplementation(\""\n+    qDebug() << \""QSslSocket::connectToHost(\""\n              << hostName << ',' << port << ',' << openMode << ')';\n #endif\n     if (!d->plainSocket) {\n@@ -1762,11 +1762,11 @@ void QSslSocket::connectToHostImplementation(const QString &hostName, quint16 po\n /*!\n     \\internal\n */\n-void QSslSocket::disconnectFromHostImplementation()\n+void QSslSocket::disconnectFromHost()\n {\n     Q_D(QSslSocket);\n #ifdef QSSLSOCKET_DEBUG\n-    qDebug() << \""QSslSocket::disconnectFromHostImplementation()\"";\n+    qDebug() << \""QSslSocket::disconnectFromHost()\"";\n #endif\n     if (!d->plainSocket)\n         return;\n"", ""qsslsocket.h"": ""@@ -90,6 +90,9 @@ public:\n     bool setSocketDescriptor(int socketDescriptor, SocketState state = ConnectedState,\n                              OpenMode openMode = ReadWrite);\n \n+    void connectToHost(const QString &hostName, quint16 port, OpenMode openMode = ReadWrite, NetworkLayerProtocol protocol = AnyIPProtocol);\n+    void disconnectFromHost();\n+\n     // ### Qt 5: Make virtual\n     void setSocketOption(QAbstractSocket::SocketOption option, const QVariant &value);\n     QVariant socketOption(QAbstractSocket::SocketOption option);\n@@ -193,11 +196,6 @@ Q_SIGNALS:\n     void modeChanged(QSslSocket::SslMode newMode);\n     void encryptedBytesWritten(qint64 totalBytes);\n \n-protected Q_SLOTS:\n-    void connectToHostImplementation(const QString &hostName, quint16 port,\n-                                     OpenMode openMode);\n-    void disconnectFromHostImplementation();\n-\n protected:\n     qint64 readData(char *data, qint64 maxlen);\n     qint64 writeData(const char *data, qint64 len);\n""}","feature,refactor","refactor 
",others;
9079.0,9079.0,test;deprecat ,Andrew Stanley-Jones,Remove wayland test,"Remove wayland test

Test wasn't working properly on required platforms.  Leave it
as a manually set flag for now.

Change-Id: If74e0cdc72784e5c9d2951349fcedb3756a7cc0b","['config.tests/wayland/main.cpp', 'config.tests/wayland/wayland.pro', 'sync.profile']","{""main.cpp"": ""@@ -1,48 +0,0 @@\n-/****************************************************************************\n-**\n-** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n-** All rights reserved.\n-** Contact: Nokia Corporation (qt-info@nokia.com)\n-**\n-** This file is part of the QtSystems module of the Qt Toolkit.\n-**\n-** $QT_BEGIN_LICENSE:LGPL$\n-** GNU Lesser General Public License Usage\n-** This file may be used under the terms of the GNU Lesser General Public\n-** License version 2.1 as published by the Free Software Foundation and\n-** appearing in the file LICENSE.LGPL included in the packaging of this\n-** file. Please review the following information to ensure the GNU Lesser\n-** General Public License version 2.1 requirements will be met:\n-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n-**\n-** In addition, as a special exception, Nokia gives you certain additional\n-** rights. These rights are described in the Nokia Qt LGPL Exception\n-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n-**\n-** GNU General Public License Usage\n-** Alternatively, this file may be used under the terms of the GNU General\n-** Public License version 3.0 as published by the Free Software Foundation\n-** and appearing in the file LICENSE.GPL included in the packaging of this\n-** file. Please review the following information to ensure the GNU General\n-** Public License version 3.0 requirements will be met:\n-** http://www.gnu.org/copyleft/gpl.html.\n-**\n-** Other Usage\n-** Alternatively, this file may be used in accordance with the terms and\n-** conditions contained in a signed written agreement between you and Nokia.\n-**\n-**\n-**\n-**\n-**\n-** $QT_END_LICENSE$\n-**\n-****************************************************************************/\n-\n-\n-#include <wayland-client.h>\n-\n-int main()\n-{\n-    return 0;\n-}\n"", ""wayland.pro"": ""@@ -1,7 +0,0 @@\n-TEMPLATE = app\n-\n-PKGCONFIG += wayland\n-\n-TARGET = wayland\n-\n-SOURCES += main.cpp\n"", ""sync.profile"": ""@@ -41,6 +41,5 @@\n     \""bluez\"" => {},\n     \""udev\"" => {},\n     \""mtcore\"" => {},\n-    \""wayland\"" => {},\n     \""x11\"" => {}\n );\n""}",test;deprecat,"test, bug 
",deprecat;test;
9562.0,9562.0,bug ,Sami Rosendahl,Fix crash in QDBusDemarshaller QStringList extraction,"Fix crash in QDBusDemarshaller QStringList extraction

QDBusArgument QStringList extraction operator and QDBusDemarshaller that
implements the extraction do not check the type of the extracted value.
When extracting a QStringList and the value actually is e.g. an array of
bytes the string list extraction will crash as it interprets the bytes as
char pointers.

The fix adds DBus type checks to QDBusArgument QStringList extraction
operator implementations.
The checks are as permissive as possible provided crashes are avoided.

Previously supported functionality of extracting a DBus struct with only
string fields in it as a QStringList is maintained. (to be removed in Qt5?)

Task-number: QTBUG-22840
Change-Id: I4b67d75b59c5052d939f3a69f3e92dabdb3bdd6b","['tests/auto/dbus/qdbusmarshall/tst_qdbusmarshall.cpp', 'src/dbus/qdbusargument_p.h', 'src/dbus/qdbusdemarshaller.cpp']","{""qdbusargument_p.h"": ""@@ -210,8 +210,11 @@ public:\n private:\n     Q_DISABLE_COPY(QDBusDemarshaller)\n     QString toStringUnchecked();\n+    bool toStringChecked(QString& s);\n     QDBusObjectPath toObjectPathUnchecked();\n     QDBusSignature toSignatureUnchecked();\n+    QStringList toStringListUnchecked();\n+    QStringList toStringListChecked();\n };\n \n inline QDBusMarshaller *QDBusArgumentPrivate::marshaller()\n"", ""qdbusdemarshaller.cpp"": ""@@ -117,12 +117,21 @@ inline QString QDBusDemarshaller::toStringUnchecked()\n     return QString::fromUtf8(qIterGet<char *>(&iterator));\n }\n \n-inline QString QDBusDemarshaller::toString()\n+inline bool QDBusDemarshaller::toStringChecked(QString& s)\n {\n-    if (isCurrentTypeStringLike())\n-        return toStringUnchecked();\n+    if (isCurrentTypeStringLike()) {\n+        s = toStringUnchecked();\n+        return true;\n+    }\n     else\n-        return QString();\n+        return false;\n+}\n+\n+inline QString QDBusDemarshaller::toString()\n+{\n+    QString s;\n+    toStringChecked(s);\n+    return s;\n }\n \n inline QDBusObjectPath QDBusDemarshaller::toObjectPathUnchecked()\n@@ -256,7 +265,7 @@ QVariant QDBusDemarshaller::toVariantInternal()\n             // QByteArray\n             return toByteArray();\n         case DBUS_TYPE_STRING:\n-            return toStringList();\n+            return toStringListUnchecked();\n         case DBUS_TYPE_DICT_ENTRY:\n             return QVariant::fromValue(duplicate());\n \n@@ -299,7 +308,7 @@ bool QDBusDemarshaller::isCurrentTypeStringLike()\n     }\n }\n \n-QStringList QDBusDemarshaller::toStringList()\n+QStringList QDBusDemarshaller::toStringListUnchecked()\n {\n     QStringList list;\n \n@@ -312,6 +321,38 @@ QStringList QDBusDemarshaller::toStringList()\n     return list;\n }\n \n+QStringList QDBusDemarshaller::toStringListChecked()\n+{\n+    QStringList list;\n+\n+    QDBusDemarshaller sub(capabilities);\n+    q_dbus_message_iter_recurse(&iterator, &sub.iterator);\n+    q_dbus_message_iter_next(&iterator);\n+    while (!sub.atEnd()) {\n+        QString s;\n+        if (sub.toStringChecked(s))\n+            list.append(s);\n+        else\n+            return QStringList(); // Abort on conversion problem\n+    }\n+\n+    return list;\n+}\n+\n+QStringList QDBusDemarshaller::toStringList()\n+{\n+    switch (q_dbus_message_iter_get_arg_type(&iterator)) {\n+    case DBUS_TYPE_ARRAY:\n+        if (q_dbus_message_iter_get_element_type(&iterator) == DBUS_TYPE_STRING)\n+            return toStringListUnchecked();\n+        break;\n+    // ### Qt5: support for DBus struct to QStringList demarshalling to be removed?\n+    case DBUS_TYPE_STRUCT:\n+        return toStringListChecked();\n+    }\n+    return QStringList();\n+}\n+\n QByteArray QDBusDemarshaller::toByteArray()\n {\n     DBusMessageIter sub;\n"", ""tst_qdbusmarshall.cpp"": ""@@ -96,6 +96,12 @@ private slots:\n     void demarshallStrings_data();\n     void demarshallStrings();\n \n+    void demarshallStringListFromStruct_data();\n+    void demarshallStringListFromStruct();\n+\n+    void demarshallInvalidStringList_data();\n+    void demarshallInvalidStringList();\n+\n private:\n     int fileDescriptorForTest();\n \n@@ -162,13 +168,15 @@ int tst_QDBusMarshall::fileDescriptorForTest()\n     return tempFile.handle();\n }\n \n-void tst_QDBusMarshall::sendBasic_data()\n+void addBasicTypesColumns()\n {\n     QTest::addColumn<QVariant>(\""value\"");\n     QTest::addColumn<QString>(\""sig\"");\n     QTest::addColumn<QString>(\""stringResult\"");\n+}\n \n-    // basic types:\n+void basicNumericTypes_data()\n+{\n     QTest::newRow(\""bool\"") << QVariant(false) << \""b\"" << \""false\"";\n     QTest::newRow(\""bool2\"") << QVariant(true) << \""b\"" << \""true\"";\n     QTest::newRow(\""byte\"") << qVariantFromValue(uchar(1)) << \""y\"" << \""1\"";\n@@ -179,11 +187,24 @@ void tst_QDBusMarshall::sendBasic_data()\n     QTest::newRow(\""int64\"") << QVariant(Q_INT64_C(3)) << \""x\"" << \""3\"";\n     QTest::newRow(\""uint64\"") << QVariant(Q_UINT64_C(4)) << \""t\"" << \""4\"";\n     QTest::newRow(\""double\"") << QVariant(42.5) << \""d\"" << \""42.5\"";\n+}\n+\n+void basicStringTypes_data()\n+{\n     QTest::newRow(\""string\"") << QVariant(\""ping\"") << \""s\"" << \""\\\""ping\\\""\"";\n     QTest::newRow(\""objectpath\"") << qVariantFromValue(QDBusObjectPath(\""/org/kde\"")) << \""o\"" << \""[ObjectPath: /org/kde]\"";\n     QTest::newRow(\""signature\"") << qVariantFromValue(QDBusSignature(\""g\"")) << \""g\"" << \""[Signature: g]\"";\n     QTest::newRow(\""emptystring\"") << QVariant(\""\"") << \""s\"" << \""\\\""\\\""\"";\n     QTest::newRow(\""nullstring\"") << QVariant(QString()) << \""s\"" << \""\\\""\\\""\"";\n+}\n+\n+void tst_QDBusMarshall::sendBasic_data()\n+{\n+    addBasicTypesColumns();\n+\n+    // basic types:\n+    basicNumericTypes_data();\n+    basicStringTypes_data();\n \n     if (fileDescriptorPassing)\n         QTest::newRow(\""file-descriptor\"") << qVariantFromValue(QDBusUnixFileDescriptor(fileDescriptorForTest())) << \""h\"" << \""[Unix FD: valid]\"";\n@@ -1275,5 +1296,102 @@ void tst_QDBusMarshall::demarshallStrings()\n     QVERIFY(receiveArg.atEnd());\n }\n \n+void tst_QDBusMarshall::demarshallStringListFromStruct_data()\n+{\n+    QTest::addColumn<QVariantList>(\""structValue\"");\n+    QTest::addColumn<QStringList>(\""expectedValue\"");\n+\n+    // DBus does not support empty structures so do not test those\n+\n+    QStringList sl = QStringList() << QString(\""one\"");\n+    QTest::newRow(\""struct with one string\"")\n+            << (QVariantList() << QString(\""one\""))\n+            << (QStringList()  << QString(\""one\""));\n+\n+    QTest::newRow(\""struct with multiple strings\"")\n+            << (QVariantList() << QString(\""first\"") << QString() << QString(\""\"") << QString(\""last\""))\n+            << (QStringList()  << QString(\""first\"") << QString() << QString(\""\"") << QString(\""last\""));\n+    QTest::newRow(\""struct with other types and strings\"")\n+            << (QVariantList() << QString(\""one\"") << int(42) << QString(\""\"") << bool(true))\n+            << QStringList();\n+    QTest::newRow(\""struct without string types\"")\n+            << (QVariantList() << int(42) << bool(true))\n+            << QStringList();\n+}\n+\n+// This is a regression test for released functionality.\n+// Previously QStringList extraction did not check the DBus data it was\n+// extracting, which results to structs with string fields to be extractable\n+// as QStringList. This test ensures this functionality will remain supported.\n+// ### Qt5: support for DBus struct to QStringList demarshalling to be removed?\n+void tst_QDBusMarshall::demarshallStringListFromStruct()\n+{\n+    QFETCH(QVariantList, structValue);\n+    QFETCH(QStringList, expectedValue);\n+\n+    QDBusConnection con = QDBusConnection::sessionBus();\n+\n+    QVERIFY(con.isConnected());\n+\n+    QDBusMessage msg = QDBusMessage::createMethodCall(serviceName, objectPath,\n+                                                      interfaceName, \""ping\"");\n+    QDBusArgument sendArg;\n+    sendArg.beginStructure();\n+    foreach(const QVariant& var, structValue) {\n+        sendArg.appendVariant(var);\n+    }\n+    sendArg.endStructure();\n+    msg.setArguments(QVariantList() << qVariantFromValue(sendArg));\n+    QDBusMessage reply = con.call(msg);\n+\n+    const QDBusArgument receiveArg = qvariant_cast<QDBusArgument>(reply.arguments().at(0));\n+    QStringList receiveValue;\n+    receiveArg >> receiveValue;\n+    QCOMPARE(receiveValue, expectedValue);\n+}\n+\n+void tst_QDBusMarshall::demarshallInvalidStringList_data()\n+{\n+    addBasicTypesColumns();\n+\n+    // None of the basic types should demarshall to a string list\n+    basicNumericTypes_data();\n+    basicStringTypes_data();\n+\n+    // Arrays of non-string type should not demarshall to a string list\n+    QList<bool> bools;\n+    QTest::newRow(\""emptyboollist\"") << qVariantFromValue(bools);\n+    bools << false << true << false;\n+    QTest::newRow(\""boollist\"") << qVariantFromValue(bools);\n+}\n+\n+void tst_QDBusMarshall::demarshallInvalidStringList()\n+{\n+    QFETCH(QVariant, value);\n+\n+    QDBusConnection con = QDBusConnection::sessionBus();\n+\n+    QVERIFY(con.isConnected());\n+\n+    QDBusMessage msg = QDBusMessage::createMethodCall(serviceName, objectPath,\n+                                                      interfaceName, \""ping\"");\n+    QDBusArgument sendArg;\n+    sendArg.beginStructure();\n+    sendArg.appendVariant(value);\n+    sendArg.endStructure();\n+    msg.setArguments(QVariantList() << qVariantFromValue(sendArg));\n+    QDBusMessage reply = con.call(msg);\n+\n+    const QDBusArgument receiveArg = qvariant_cast<QDBusArgument>(reply.arguments().at(0));\n+    receiveArg.beginStructure();\n+\n+    QStringList receiveValue;\n+    receiveArg >> receiveValue;\n+    QCOMPARE(receiveValue, QStringList());\n+\n+    receiveArg.endStructure();\n+    QVERIFY(receiveArg.atEnd());\n+}\n+\n QTEST_MAIN(tst_QDBusMarshall)\n #include \""tst_qdbusmarshall.moc\""\n""}",bug,"bug 
",bug;feature;
4147.0,4147.0,bug ,Casper van Donderen,Fix assert error on Windows with a negative char.,"Fix assert error on Windows with a negative char.

Reviewed-by: Denis Dzyubenko
Fixes: QTBUG-20228

Change-Id: I2bbf39ebc6577f1345e3ccddbb0c437628255f21",['tools/qdoc3/cppcodemarker.cpp'],"{""cppcodemarker.cpp"": ""@@ -929,13 +929,13 @@ QString CppCodeMarker::addMarkUp(const QString &in,\n \tQString tag;\n         bool target = false;\n \n-\tif (isalpha(ch) || ch == '_') {\n+\tif (isalpha((unsigned char) ch) || ch == '_') {\n \t    QString ident;\n \t    do {\n \t\tident += ch;\n                 finish = i;\n \t\treadChar();\n-            } while (ch >= 0 && isalnum(ch) || ch == '_');\n+            } while (isalnum((unsigned char) ch) || ch == '_');\n \n \t    if (classRegExp.exactMatch(ident)) {\n \t\ttag = QLatin1String(\""type\"");\n@@ -952,11 +952,11 @@ QString CppCodeMarker::addMarkUp(const QString &in,\n \t\t    tag = QLatin1String(\""func\"");\n                     target = true;\n \t    }\n-\t} else if (isdigit(ch)) {\n+\t} else if (isdigit((unsigned char) ch)) {\n \t    do {\n                 finish = i;\n \t\treadChar();\n-\t    } while (isalnum(ch) || ch == '.');\n+\t    } while (isalnum((unsigned char) ch) || ch == '.');\n \t    tag = QLatin1String(\""number\"");\n \t} else {\n \t    switch (ch) {\n""}",bug,"bug 
",bug;
8535.0,8535.0,refactor;test ,Jason McDonald,Cleanup corelib autotests,"Cleanup corelib autotests

Remove various disabled and/or non-helpful debugging code.

Any test diagnostics that are useful should be part of the regular test
output, as the CI system cannot switch on commented-out code when there
is a test failure.  Diagnostics should also be informative -- simply
printing the value of a variable with no other information about what is
being printed (or why it is being printed) is not informative.

Change-Id: I21a6c2121be86001bb57e80f426507b6e619ee9e","['tests/auto/corelib/io/qstandardpaths/tst_qstandardpaths.cpp', 'tests/auto/corelib/thread/qthread/tst_qthread.cpp', 'tests/auto/corelib/io/qresourceengine/tst_qresourceengine.cpp', 'tests/auto/corelib/kernel/qabstractitemmodel/tst_qabstractitemmodel.cpp', 'tests/auto/corelib/io/qfilesystemwatcher/tst_qfilesystemwatcher.cpp', 'tests/auto/corelib/tools/qtextboundaryfinder/tst_qtextboundaryfinder.cpp', 'tests/auto/corelib/concurrent/qthreadpool/tst_qthreadpool.cpp', 'tests/auto/corelib/tools/qbytearray/tst_qbytearray.cpp', 'tests/auto/corelib/io/qdatastream/tst_qdatastream.cpp', 'tests/auto/corelib/tools/qhash/tst_qhash.cpp', 'tests/auto/corelib/concurrent/qfuture/tst_qfuture.cpp', 'tests/auto/corelib/tools/qlist/tst_qlist.cpp', 'tests/auto/corelib/tools/qbitarray/tst_qbitarray.cpp', 'tests/auto/corelib/tools/qdatetime/tst_qdatetime.cpp', 'tests/auto/corelib/concurrent/qtconcurrentmap/tst_qtconcurrentmap.cpp', 'tests/auto/corelib/io/qsettings/tst_qsettings.cpp', 'tests/auto/corelib/animation/qpauseanimation/tst_qpauseanimation.cpp', 'tests/auto/corelib/xml/qxmlstream/tst_qxmlstream.cpp', 'tests/auto/corelib/tools/qmap/tst_qmap.cpp', 'tests/auto/corelib/kernel/qitemmodel/tst_qitemmodel.cpp', 'tests/auto/corelib/codecs/qtextcodec/tst_qtextcodec.cpp']","{""tst_qpauseanimation.cpp"": ""@@ -64,7 +64,6 @@ public:\n protected:\n     void updateCurrentTime(int currentTime)\n     {\n-        //qDebug() << this << \""update current time: \"" << currentTime;\n         QPauseAnimation::updateCurrentTime(currentTime);\n         ++m_updateCurrentTimeCount;\n     }\n"", ""tst_qtextcodec.cpp"": ""@@ -1832,12 +1832,8 @@ void tst_QTextCodec::utfHeaders()\n     QLatin1String ignoreReverseTestOn = (QSysInfo::ByteOrder == QSysInfo::BigEndian) ? QLatin1String(\"" le\"") : QLatin1String(\"" be\"");\n     QString rowName(QTest::currentDataTag());\n \n-    /*for (int i = 0; i < encoded.length(); ++i)\n-        qDebug() << hex << \""    \"" << (uint)(uchar)encoded.at(i);*/\n     if (toUnicode) {\n         QString result = codec->toUnicode(encoded.constData(), encoded.length(), &state);\n-        /*for (int i = 0; i < result.length(); ++i)\n-            qDebug() << hex << \""    \"" << (uint)result.at(i).unicode();*/\n         QCOMPARE(result.length(), unicode.length());\n         QCOMPARE(result, unicode);\n \n"", ""tst_qfuture.cpp"": ""@@ -1165,32 +1165,27 @@ public:\n public slots:\n     void finished()\n     {\n-//        qDebug() << \""finished called\"";\n         finishedCalled = true;\n     }\n \n     void canceled()\n     {\n-//        qDebug() << \""canceled called\"";\n         canceledCalled = true;\n     }\n \n     void resultReady(int index)\n     {\n-//        qDebug() << \""result\"" << index << \""ready\"";\n         results.insert(index);\n     }\n \n     void progressRange(int begin, int end)\n     {\n-//        qDebug() << \""progress range\"" << begin << end;\n         rangeBegin = begin;\n         rangeEnd = end;\n     }\n \n     void progress(int progress)\n     {\n-//        qDebug() << \""progress\"" << progress;\n         reportedProgress.insert(progress);\n     }\n public:\n"", ""tst_qtconcurrentmap.cpp"": ""@@ -2171,14 +2171,12 @@ InstanceCounter slowMap(const InstanceCounter &in)\n InstanceCounter fastMap(const InstanceCounter &in)\n {\n     QTest::qSleep(rand() % 2 + 1);\n-//    qDebug() << \""map   \"" << QThread::currentThread();\n     return in;\n }\n \n void slowReduce(int &result, const InstanceCounter&)\n {\n     QTest::qSleep(rand() % 4 + 1);\n-//    qDebug() << \""reduce\"" << QThread::currentThread();\n     ++result;\n }\n \n@@ -2204,8 +2202,6 @@ void tst_QtConcurrentMap::throttling()\n \n         int results = QtConcurrent::blockingMappedReduced(instances, slowMap, fastReduce);\n         QCOMPARE(results, itemcount);\n-        qDebug() << (int)currentInstanceCount;\n-        qDebug() << (int)peakInstanceCount;\n         QCOMPARE(int(currentInstanceCount), itemcount);\n         QVERIFY(int(peakInstanceCount) < itemcount + allowedTemporaries);\n     }\n@@ -2222,8 +2218,6 @@ void tst_QtConcurrentMap::throttling()\n         int results = QtConcurrent::blockingMappedReduced(instances, fastMap, slowReduce);\n \n         QCOMPARE(results, itemcount);\n-        qDebug() << (int)currentInstanceCount;\n-        qDebug() << (int)peakInstanceCount;\n         QCOMPARE((int)currentInstanceCount, itemcount);\n         QVERIFY(int(peakInstanceCount) < itemcount + allowedTemporaries);\n     }\n"", ""tst_qthreadpool.cpp"": ""@@ -719,7 +719,6 @@ void tst_QThreadPool::tryStartCount()\n     const int runs = 5;\n \n     for (int i = 0; i < runs; ++i) {\n-//        qDebug() << \""iteration\"" << i;\n         int count = 0;\n         while (threadPool.tryStart(&task))\n             ++count;\n"", ""tst_qdatastream.cpp"": ""@@ -1470,12 +1470,6 @@ void tst_QDataStream::readQImage(QDataStream *s)\n \n //     ################ Bug : ref and orig has ff in alpha; readback has 0\n //     ### (Was like this in 1.44 as well)\n-//\n-//    for(int i = 0; i < d12.height(); i++)\n-//        for(int j = 0; j < d12.width(); j++)\n-//            if (d12.pixel(j, i) != ref.pixel(j, i))\n-//                qDebug(\""Feil %i %i\"", j, i);\n-//\n }\n \n // ************************************\n"", ""tst_qfilesystemwatcher.cpp"": ""@@ -161,7 +161,7 @@ void tst_QFileSystemWatcher::basicTest()\n     testFile.write(QByteArray(\""world\""));\n     testFile.close();\n \n-    // qDebug() << \""waiting max 5 seconds for notification for file modification to trigger(1)\"";\n+    // waiting max 5 seconds for notification for file modification to trigger\n     timer.start(5000);\n     eventLoop.exec();\n \n@@ -179,7 +179,7 @@ void tst_QFileSystemWatcher::basicTest()\n     testFile.write(QByteArray(\""hello universe!\""));\n     testFile.close();\n \n-    // qDebug() << \""waiting max 5 seconds for notification for file modification to trigger (2)\"";\n+    // waiting max 5 seconds for notification for file modification to trigger\n     timer.start(5000);\n     eventLoop.exec();\n \n@@ -206,7 +206,7 @@ void tst_QFileSystemWatcher::basicTest()\n     // change the permissions, should get a signal from the watcher\n     testFile.setPermissions(QFile::ReadOwner);\n \n-    // qDebug() << \""waiting max 5 seconds for notification for file permission modification to trigger(1)\"";\n+    // waiting max 5 seconds for notification for file permission modification to trigger\n     timer.start(5000);\n     eventLoop.exec();\n \n@@ -222,7 +222,7 @@ void tst_QFileSystemWatcher::basicTest()\n     watcher.removePath(testFile.fileName());\n     testFile.setPermissions(QFile::ReadOwner | QFile::WriteOwner | QFile::ExeOther);\n \n-    // qDebug() << \""waiting max 5 seconds for notification for file modification to trigger (2)\"";\n+    // waiting max 5 seconds for notification for file modification to trigger\n     timer.start(5000);\n     eventLoop.exec();\n \n@@ -234,7 +234,7 @@ void tst_QFileSystemWatcher::basicTest()\n     // remove the file, should get a signal from the watcher\n     QVERIFY(testFile.remove());\n \n-    // qDebug() << \""waiting max 5 seconds for notification for file removal to trigger\"";\n+    // waiting max 5 seconds for notification for file removal to trigger\n     timer.start(5000);\n     eventLoop.exec();\n \n@@ -251,7 +251,7 @@ void tst_QFileSystemWatcher::basicTest()\n     testFile.write(QByteArray(\""hello\""));\n     testFile.close();\n \n-    // qDebug() << \""waiting max 5 seconds for notification for file recreation to trigger\"";\n+    // waiting max 5 seconds for notification for file recreation to trigger\n     timer.start(5000);\n     eventLoop.exec();\n \n@@ -292,7 +292,7 @@ void tst_QFileSystemWatcher::watchDirectory()\n     QVERIFY(testFile.open(QIODevice::WriteOnly | QIODevice::Truncate));\n     testFile.close();\n \n-    // qDebug() << \""waiting max 5 seconds for notification for file recreationg to trigger\"";\n+    // waiting max 5 seconds for notification for file recreationg to trigger\n     timer.start(5000);\n     eventLoop.exec();\n \n@@ -309,7 +309,7 @@ void tst_QFileSystemWatcher::watchDirectory()\n     // remove the directory, should get a signal from the watcher\n     QVERIFY(QDir().rmdir(\""testDir\""));\n \n-    // qDebug() << \""waiting max 5 seconds for notification for directory removal to trigger\"";\n+    // waiting max 5 seconds for notification for directory removal to trigger\n     timer.start(5000);\n     eventLoop.exec();\n \n@@ -331,7 +331,7 @@ void tst_QFileSystemWatcher::watchDirectory()\n     if (!QDir().mkdir(\""testDir\""))\n         QSKIP(\""Failed to recreate directory, skipping final test.\"");\n \n-    // qDebug() << \""waiting max 5 seconds for notification for dir recreation to trigger\"";\n+    // waiting max 5 seconds for notification for dir recreation to trigger\n     timer.start(5000);\n     eventLoop.exec();\n \n"", ""tst_qresourceengine.cpp"": ""@@ -333,13 +333,7 @@ void tst_QResourceEngine::checkStructure()\n \n         // Test the Dir filter\n         QFileInfoList list = dir.entryInfoList(QDir::Dirs, QDir::Name);\n-//           for(int i = 0; i < list.size(); ++i)\n-//               qDebug() << \""one\"" << i << list.at(i).fileName();\n-//           for(int i = 0; i < containedDirs.size(); ++i)\n-//               qDebug() << \""two\"" << i << containedDirs.at(i);\n-//           qDebug() << \""one\"" << list.size() << containedDirs.size();\n-       QCOMPARE(list.size(), containedDirs.size());\n-//         qDebug() << \""two\"";\n+        QCOMPARE(list.size(), containedDirs.size());\n \n         int i;\n         for (i=0; i<list.size(); ++i) {\n"", ""tst_qsettings.cpp"": ""@@ -2391,7 +2391,6 @@ void tst_QSettings::testEscapes()\n     { \\\n         QVariant v(val); \\\n         QString s = QSettingsPrivate::variantToString(v); \\\n-        /*qDebug() << QString(\""testVariant(): reference=\\\""%1\\\"" result=\\\""%2\\\""\"").arg(escStr).arg(s); */\\\n         QCOMPARE(s, escStr); \\\n         QCOMPARE(QVariant(QSettingsPrivate::stringToVariant(escStr)), v); \\\n         QVERIFY(val == v.func()); \\\n"", ""tst_qstandardpaths.cpp"": ""@@ -74,7 +74,6 @@ private slots:\n private:\n     void setCustomLocations() {\n         m_thisDir = QFile::decodeName(SRCDIR);\n-        //qDebug() << m_thisDir;\n         m_thisDir.chop(1); // remove trailing slash!\n \n         qputenv(\""XDG_CONFIG_HOME\"", QFile::encodeName(m_thisDir));\n@@ -140,7 +139,6 @@ void tst_qstandardpaths::testLocateAll()\n {\n #ifdef Q_XDG_PLATFORM\n     const QStringList appsDirs = QStandardPaths::locateAll(QStandardPaths::GenericDataLocation, \""applications\"", QStandardPaths::LocateDirectory);\n-    //qDebug() << appsDirs;\n     foreach (const QString &dir, appsDirs)\n         QVERIFY2(dir.endsWith(QLatin1String(\""/share/applications\"")), qPrintable(dir));\n \n"", ""tst_qabstractitemmodel.cpp"": ""@@ -657,10 +657,6 @@ void tst_QAbstractItemModel::dropMimeData()\n     QtTestModel dst(dst_table);\n     QtTestModel res(res_table);\n \n-//     qDebug() << \""src\"" << src.rowCount(QModelIndex()) << src.columnCount(QModelIndex());\n-//     qDebug() << \""dst\"" << dst.rowCount(QModelIndex()) << dst.columnCount(QModelIndex());\n-//     qDebug() << \""res\"" << res.rowCount(QModelIndex()) << res.columnCount(QModelIndex());\n-\n     // get the mimeData from the \""selected\"" indexes\n     QModelIndexList selectedIndexes;\n     for (int i = 0; i < selection.count(); ++i)\n@@ -679,12 +675,9 @@ void tst_QAbstractItemModel::dropMimeData()\n             QModelIndex res_idx = res.index(r, c, QModelIndex());\n             QMap<int, QVariant> dst_data = dst.itemData(dst_idx);\n             QMap<int, QVariant> res_data = res.itemData(res_idx);\n-            //if(dst_data != res_data)\n-            //    qDebug() << r << c << dst_data.value(0).toString() << res_data.value(0).toString();\n             QCOMPARE(dst_data , res_data);\n         }\n     }\n-\n }\n \n \n"", ""tst_qitemmodel.cpp"": ""@@ -57,9 +57,6 @@ Q_DECLARE_METATYPE(QModelIndex)\n     the tests specified by modelstotest.cpp and any extra data needed for that particular test.\n \n     setupWithNoTestData() fills the QTest data with just the tests and is used by most tests.\n-\n-    There are some basic qDebug statements sprikled about that might be helpfull for fixing\n-    your issues.\n  */\n class tst_QItemModel : public QObject\n {\n@@ -410,9 +407,6 @@ void checkChildren(QAbstractItemModel *currentModel, const QModelIndex &parent,\n     else\n         QCOMPARE(currentModel->hasChildren(parent), false);\n \n-    //qDebug() << \""parent:\"" << currentModel->data(parent).toString() << \""rows:\"" << rows\n-    //         << \""columns:\"" << columns << \""parent column:\"" << parent.column();\n-\n     QCOMPARE(currentModel->hasIndex(rows+1, 0, parent), false);\n     for (int r = 0; r < rows; ++r) {\n         if (currentModel->canFetchMore(parent))\n@@ -455,7 +449,6 @@ void checkChildren(QAbstractItemModel *currentModel, const QModelIndex &parent,\n \n             // recursivly go down\n             if (currentModel->hasChildren(index) && currentDepth < 5) {\n-                //qDebug() << r << c << \""has children\"" << currentModel->rowCount(index);\n                 checkChildren(currentModel, index, ++currentDepth);\n                 // Because this is recursive we will return at the first failure rather then\n                 // reporting it over and over\n@@ -846,8 +839,6 @@ void tst_QItemModel::remove()\n         return;\n     }\n \n-    //qDebug() << \""remove start:\"" << start << \""count:\"" << count << \""rowCount:\"" << currentModel->rowCount(parentOfRemoved);\n-\n     // When a row or column is removed there should be two signals.\n     // Watch to make sure they are emitted and get the row/column count when they do get emitted by connecting them to a slot\n     qRegisterMetaType<QModelIndex>(\""QModelIndex\"");\n@@ -912,7 +903,6 @@ void tst_QItemModel::remove()\n     }\n \n     // The row count should only change *after* rowsAboutToBeRemoved has been emitted\n-    //qDebug() << beforeRemoveRowCount << afterAboutToRemoveRowCount << afterRemoveRowCount << currentModel->rowCount(parentOfRemoved);\n     if (shouldSucceed) {\n         if (modelResetSpy.count() == 0 && modelLayoutChangedSpy.count() == 0){\n             QCOMPARE(afterAboutToRemoveRowCount, beforeRemoveRowCount);\n@@ -1022,7 +1012,6 @@ void verifyState(QAbstractItemModel *currentModel) {\n void tst_QItemModel::slot_rowsAboutToRemove(const QModelIndex &parent)\n {\n     QVERIFY(parentOfRemoved == parent);\n-    //qDebug() << \""slot_rowsAboutToRemove\"" << currentModel->rowCount(parent);\n     afterAboutToRemoveRowCount = currentModel->rowCount(parent);\n     // hasChildren() should still work\n     if (afterAboutToRemoveRowCount > 0)\n@@ -1036,7 +1025,6 @@ void tst_QItemModel::slot_rowsAboutToRemove(const QModelIndex &parent)\n     if (removeRecursively) {\n         QFETCH(int, recursiveRow);\n         QFETCH(int, recursiveCount);\n-        //qDebug() << recursiveRow << recursiveCount;\n         removeRecursively = false;\n         QCOMPARE(currentModel->removeRows(recursiveRow, recursiveCount, parent), true);\n     }\n@@ -1045,7 +1033,6 @@ void tst_QItemModel::slot_rowsAboutToRemove(const QModelIndex &parent)\n void tst_QItemModel::slot_rowsRemoved(const QModelIndex &parent)\n {\n     QVERIFY(parentOfRemoved == parent);\n-    //qDebug() << \""slot_rowsRemoved\"" << currentModel->rowCount(parent);\n     afterRemoveRowCount = currentModel->rowCount(parent);\n     if (afterRemoveRowCount > 0)\n         QCOMPARE(currentModel->hasChildren(parent), true);\n@@ -1188,8 +1175,6 @@ void tst_QItemModel::insert()\n         return;\n     }\n \n-    //qDebug() << \""insert start:\"" << start << \""count:\"" << count << \""rowCount:\"" << currentModel->rowCount(parentOfInserted);\n-\n     // When a row or column is inserted there should be two signals.\n     // Watch to make sure they are emitted and get the row/column count when they do get emitted by connecting them to a slot\n     qRegisterMetaType<QModelIndex>(\""QModelIndex\"");\n@@ -1250,7 +1235,6 @@ void tst_QItemModel::insert()\n         QCOMPARE(rowsInsertedSpy.count(), numberOfRowsInsertedSignals);\n     }\n     // The row count should only change *after* rowsAboutToBeInserted has been emitted\n-    //qDebug() << beforeInsertRowCount << afterAboutToInsertRowCount << afterInsertRowCount << currentModel->rowCount(parentOfInserted);\n     if (shouldSucceed) {\n         if (modelResetSpy.count() == 0 && modelLayoutChangedSpy.count() == 0) {\n             QCOMPARE(afterAboutToInsertRowCount, beforeInsertRowCount);\n@@ -1342,7 +1326,6 @@ void tst_QItemModel::insert()\n void tst_QItemModel::slot_rowsAboutToInserted(const QModelIndex &parent)\n {\n     QVERIFY(parentOfInserted == parent);\n-    //qDebug() << \""slot_rowsAboutToInsert\"" << currentModel->rowCount(parent);\n     afterAboutToInsertRowCount = currentModel->rowCount(parent);\n     bool hasChildren = currentModel->hasChildren(parent);\n     bool hasDimensions = currentModel->columnCount(parent) > 0 && currentModel->rowCount(parent) > 0;\n@@ -1353,7 +1336,6 @@ void tst_QItemModel::slot_rowsAboutToInserted(const QModelIndex &parent)\n     if (insertRecursively) {\n         QFETCH(int, recursiveRow);\n         QFETCH(int, recursiveCount);\n-        //qDebug() << recursiveRow << recursiveCount;\n         insertRecursively = false;\n         QCOMPARE(currentModel->insertRows(recursiveRow, recursiveCount, parent), true);\n     }\n"", ""tst_qthread.cpp"": ""@@ -293,7 +293,6 @@ void tst_QThread::currentThread()\n void tst_QThread::idealThreadCount()\n {\n     QVERIFY(QThread::idealThreadCount() > 0);\n-    qDebug() << \""Available cpu cores:\"" << QThread::idealThreadCount();\n }\n \n void tst_QThread::isFinished()\n"", ""tst_qbitarray.cpp"": ""@@ -256,10 +256,6 @@ void tst_QBitArray::fill()\n \n     for (i = 0; i < N-M; ++i) {\n         a.fill(true, i, i + M);\n-/*\n-        for (int k = 0; k < N; ++k)\n-        qDebug(\""%*s%d\"", k, \""\"", a.at(k));\n-*/\n         for (j = 0; j < N; ++j) {\n             if (j >= i && j < i + M) {\n                 QVERIFY(a.at(j));\n"", ""tst_qbytearray.cpp"": ""@@ -186,7 +186,6 @@ void tst_QByteArray::qCompress()\n {\n     QFETCH( QByteArray, ba );\n     QByteArray compressed = ::qCompress( ba );\n-    //qDebug( \""size uncompressed: %d    size compressed: %d\"", ba.size(), compressed.size() );\n     QTEST( ::qUncompress( compressed ), \""ba\"" );\n }\n \n"", ""tst_qdatetime.cpp"": ""@@ -539,7 +539,6 @@ void tst_QDateTime::toString_enumformat()\n     QCOMPARE(str2, QString(\""1995-05-20T12:34:56\""));\n \n     QString str3 = dt1.toString(Qt::LocalDate);\n-    qDebug() << str3;\n     QVERIFY(!str3.isEmpty());\n     //check for date/time components in any order\n     //year may be 2 or 4 digits\n"", ""tst_qhash.cpp"": ""@@ -94,22 +94,17 @@ class MyClass\n {\n public:\n     MyClass() { ++count;\n-//     qDebug(\""creating MyClass count=%d\"", count);\n     }\n     MyClass( const QString& c) {\n         count++; str = c;\n-//        qDebug(\""creating MyClass '%s' count = %d\"", str.latin1(), count);\n     }\n     ~MyClass() {\n         count--;\n-//        qDebug(\""deleting MyClass '%s' count = %d\"", str.latin1(), count);\n     }\n     MyClass( const MyClass& c ) {\n         count++; str = c.str;\n-//        qDebug(\""creating MyClass '%s' count = %d\"", str.latin1(), count);\n     }\n     MyClass &operator =(const MyClass &o) {\n-//        qDebug(\""copying MyClass '%s'\"", o.str.latin1());\n         str = o.str; return *this;\n     }\n \n@@ -916,7 +911,6 @@ void tst_QHash::iterators()\n     while(javaIt.hasNext()) {\n         ++i;\n         javaIt.next();\n-        //qDebug(javaIt.value());\n         QVERIFY(javaIt.value() == testMap.value(i));\n     }\n \n@@ -934,7 +928,6 @@ void tst_QHash::iterators()\n         testString = javaIt.value();\n         testString1 = javaIt.peekNext().value();\n         javaIt.next();\n-        //qDebug(testString + \""  \"" + testString1 + \""    \"" + javaIt.peekPrevious().value());\n         QVERIFY(javaIt.value() == testString1);\n         QCOMPARE(javaIt.peekPrevious().value(), testString1);\n     }\n@@ -943,7 +936,6 @@ void tst_QHash::iterators()\n         testString1 = javaIt.peekPrevious().value();\n         javaIt.previous();\n         QVERIFY(javaIt.value() == testString1);\n-        //qDebug(testString + testString1 + javaIt.peekNext().value());\n         QCOMPARE(javaIt.peekNext().value(), testString1);\n     }\n }\n"", ""tst_qlist.cpp"": ""@@ -153,13 +153,11 @@ void tst_QList::append() const\n     list2.append(three);\n     list2.append(four);\n     list1.append(list2);\n-    qDebug() << list1;\n     listTotal.append(one);\n     listTotal.append(two);\n     listTotal.append(three);\n     listTotal.append(four);\n     QCOMPARE(list1, listTotal);\n-\n }\n \n void tst_QList::prepend() const\n"", ""tst_qmap.cpp"": ""@@ -86,22 +86,17 @@ class MyClass\n public:\n     MyClass() {\n         ++count;\n-//        qDebug(\""creating MyClass count=%d\"", count);\n     }\n     MyClass( const QString& c) {\n         count++; str = c;\n-//        qDebug(\""creating MyClass '%s' count = %d\"", str.latin1(), count);\n     }\n     ~MyClass() {\n         count--;\n-//        qDebug(\""deleting MyClass '%s' count = %d\"", str.latin1(), count);\n     }\n     MyClass( const MyClass& c ) {\n         count++; str = c.str;\n-//        qDebug(\""creating MyClass '%s' count = %d\"", str.latin1(), count);\n     }\n     MyClass &operator =(const MyClass &o) {\n-//        qDebug(\""copying MyClass '%s'\"", o.str.latin1());\n         str = o.str; return *this;\n     }\n \n"", ""tst_qtextboundaryfinder.cpp"": ""@@ -242,7 +242,6 @@ void tst_QTextBoundaryFinder::isAtWordStart()\n     for(int i=0; i < txt.length(); ++i) {\n         finder.setPosition(i);\n         QTextBoundaryFinder::BoundaryReasons r = finder.boundaryReasons();\n-        // qDebug() << i << r;\n         QCOMPARE((r & QTextBoundaryFinder::StartWord) != 0, start.contains(i) == true);\n         QCOMPARE((r & QTextBoundaryFinder::EndWord) != 0, end.contains(i) == true);\n     }\n@@ -277,7 +276,6 @@ void tst_QTextBoundaryFinder::isAtBoundaryLine()\n     // break?    -       -       -       -       +       -      +\n     QChar s[] = { 0x0061, 0x00AD, 0x0062, 0x0009, 0x0063, 0x0064 };\n     QString text(s, sizeof(s)/sizeof(s[0]));\n-//    qDebug() << \""text = \"" << text << \"", length = \"" << text.length();\n     QTextBoundaryFinder finder(QTextBoundaryFinder::Line, text.constData(), text.length(), /*buffer*/0, /*buffer size*/0);\n     finder.setPosition(0);\n     QVERIFY(finder.isAtBoundary());\n"", ""tst_qxmlstream.cpp"": ""@@ -341,8 +341,6 @@ public:\n             QString expectedFilePath;\n             const int index = m_atts.top().index(QString(), QLatin1String(\""OUTPUT\""));\n \n-            //qDebug() << \""Running test case:\"" << id;\n-\n             if(index != -1)\n             {\n                 expectedFilePath = m_baseURI.top().resolved(m_atts.top().value(QString(),\n""}",refactor;test,"test, refactor 
",bug;deprecat;test;
14489.0,14489.0,resource ,Andy Cox,"Updated QtContacts, Organizer, and Versit links.","Updated QtContacts, Organizer, and Versit links.

Change-Id: Ic3ed3688f8995f0880554632d1b0b815dc82fde7",['doc/src/modules.qdoc'],"{""modules.qdoc"": ""@@ -38,7 +38,7 @@\n \n     \\table 80%\n     \\header \\o {2,1} \\bold{Modules for general software development}\n-    \\row \\o \\l{QtContacts} \\o Classes for managing your contacts.\n+    \\row \\o \\l{Qt Contacts API Reference Documentation}{QtContacts} \\o Classes for managing your contacts.\n     \\row \\o \\l{QtCore} \\o Core non-graphical classes used by other modules\n     \\row \\o \\l{QtDeclarative} \\o An engine for declaratively building fluid user interfaces.\n     \\row \\o \\l{QtGui} \\o Base classes for graphical user interface (GUI) components\n@@ -47,7 +47,7 @@\n     \\row \\o \\l{QtNetwork} \\o Classes for network programming\n     \\row \\o \\l{QtOpenGL} \\o OpenGL support classes\n     \\row \\o \\l{QtOpenVG} \\o OpenVG support classes\n-    \\row \\o \\l{QtOrganizer} \\o Classes for managing your calendar events.\n+    \\row \\o \\l{Qt Organizer API Reference Documentation}{QtOrganizer} \\o Classes for managing your calendar events.\n     \\row \\o \\l{QtPrintSupport} \\o Classes for printing.\n     \\row \\o \\l{Qt Publish Subscribe Module}{QtPublishSubscribe} \\o Simplified mechanism for subscribing to notifications\n     \\row \\o \\l{QtScript} \\o Classes for evaluating Qt Scripts\n@@ -57,7 +57,7 @@\n     \\row \\o \\l{QtSql} \\o Classes for database integration using SQL\n     \\row \\o \\l{QtSvg} \\o Classes for displaying the contents of SVG files\n     \\row \\o \\l{Qt System Info Module}{QtSystemInfo} \\o Classes for accessing information about a device\n-    \\row \\o \\l{QtVersit} \\o Classes to manage Versit.\n+    \\row \\o \\l{C++ Versit}{QtVersit} \\o Classes to manage Versit.\n     \\row \\o \\l{QtWebKit} \\o Classes for displaying and editing Web content\n     \\row \\o \\l{QtWidgets} \\o Classes for widget development\n     \\row \\o \\l{QtXml} \\o Classes for handling XML\n@@ -537,21 +537,6 @@\n     .pro file:\n \n     \\snippet doc/src/snippets/code/doc_src_qtcontacts.pro 0\n-\n-    \\table 80%\n-    \\header \\o {1,1} \\bold{ Contacts API Quick Links }\n-    \\row \\o \\l{contacts.html}{ Contacts main overview }\n-    \\row \\o \\l{qml-contacts.html}{ QML Contacts API  }\n-    \\row \\o \\l{contactsasync.html}{ Contacts Asynchronous c++ API  }\n-    \\row \\o \\l{contactssync.html}{ Contacts Synchronous c++ API  }\n-    \\row \\o \\l{contactsengines.html}{ Creating Contacts dedicated engines  }\n-    \\row \\o \\l{contactsusage.html}{ Using Contacts }\n-    \\row \\o \\l{contactsactions.html}{  Contacts Actions  }\n-    \\row \\o \\l{contactsschema.html}{  Contacts schema  }\n-    \\endtable\n-\n-    \\generatelist{classesbymodule Contacts}\n-\n */\n \n /*!\n@@ -571,18 +556,6 @@\n     .pro file:\n \n     \\snippet doc/src/snippets/code/doc_src_qtorganizer.pro 0\n-\n-    \\table 80%\n-    \\header \\o {1,1} \\bold{ Organizer API Quick Links }\n-    \\row \\o \\l{organizer.html}{ Organizer main overview }\n-    \\row \\o \\l{qml-organizer.html}{ QML Organizer API  }\n-    \\row \\o \\l{organizerasync.html}{ Organizer Asynchronous c++ API  }\n-    \\row \\o \\l{organizersync.html}{ Organizer Synchronous c++ API  }\n-    \\row \\o \\l{organizerengines.html}{ Creating Organizer dedicated engines  }\n-    \\row \\o \\l{organizeradvanced.html}{ Advanced Organizer functionality  }\n-    \\endtable\n-\n-    \\generatelist{classesbymodule Organizer}\n */\n \n /*!\n""}",resource,"resource 
",feature;
8497.0,8497.0,bug;resource ,Tommi Asp,Better deploy configuration handling for S60 target,"Better deploy configuration handling for S60 target

Allows creating custom DeployConfigurationFactories for S60 target
Related to QTCREATORBUG-5535

Change-Id: I2a38ad11e0102eaae3e0a67af2a0750b4b3512a5","['src/plugins/qt4projectmanager/qt-s60/s60deployconfiguration.h', 'src/plugins/qt4projectmanager/qt-s60/qt4symbiantargetfactory.cpp', 'src/plugins/qt4projectmanager/qt-s60/s60deployconfiguration.cpp']","{""qt4symbiantargetfactory.cpp"": ""@@ -230,7 +230,7 @@ ProjectExplorer::Target *Qt4SymbianTargetFactory::create(ProjectExplorer::Projec\n                                     info.version, info.buildConfig,\n                                     info.additionalArguments, info.directory, info.importing);\n \n-    t->addDeployConfiguration(t->createDeployConfiguration(QLatin1String(Qt4ProjectManager::Constants::S60_DEVICE_TARGET_ID)));\n+    t->addDeployConfiguration(t->createDeployConfiguration(QLatin1String(S60_DEPLOYCONFIGURATION_ID)));\n \n     t->createApplicationProFiles();\n \n"", ""s60deployconfiguration.cpp"": ""@@ -57,7 +57,6 @@ using namespace Qt4ProjectManager;\n using namespace Qt4ProjectManager::Internal;\n \n namespace {\n-const char S60_DC_ID[] = \""Qt4ProjectManager.S60DeployConfiguration\"";\n const char S60_DC_PREFIX[] = \""Qt4ProjectManager.S60DeployConfiguration.\"";\n \n const char SERIAL_PORT_NAME_KEY[] = \""Qt4ProjectManager.S60DeployConfiguration.SerialPortName\"";\n@@ -81,7 +80,7 @@ QString pathFromId(const QString &id)\n // ======== S60DeployConfiguration\n \n S60DeployConfiguration::S60DeployConfiguration(Target *parent) :\n-    DeployConfiguration(parent,  QLatin1String(S60_DC_ID)),\n+    DeployConfiguration(parent,  QLatin1String(S60_DEPLOYCONFIGURATION_ID)),\n     m_activeBuildConfiguration(0),\n #ifdef Q_OS_WIN\n     m_serialPortName(QLatin1String(\""COM5\"")),\n@@ -479,18 +478,18 @@ DeployConfiguration *S60DeployConfigurationFactory::create(Target *parent, const\n     return dc;\n }\n \n-bool S60DeployConfigurationFactory::canCreate(Target *parent, const QString& /*id*/) const\n+bool S60DeployConfigurationFactory::canCreate(Target *parent, const QString& id) const\n {\n     Qt4SymbianTarget * t = qobject_cast<Qt4SymbianTarget *>(parent);\n-    if (!t || t->id() != QLatin1String(Constants::S60_DEVICE_TARGET_ID))\n+    if (!t || t->id() != QLatin1String(Constants::S60_DEVICE_TARGET_ID)\n+            || !id.startsWith(QLatin1String(S60_DEPLOYCONFIGURATION_ID)))\n         return false;\n     return true;\n }\n \n-bool S60DeployConfigurationFactory::canRestore(Target *parent, const QVariantMap& /*map*/) const\n+bool S60DeployConfigurationFactory::canRestore(Target *parent, const QVariantMap& map) const\n {\n-    Qt4SymbianTarget * t = qobject_cast<Qt4SymbianTarget *>(parent);\n-    return t && t->id() == QLatin1String(Constants::S60_DEVICE_TARGET_ID);\n+    return canCreate(parent, idFromMap(map));\n }\n \n DeployConfiguration *S60DeployConfigurationFactory::restore(Target *parent, const QVariantMap &map)\n@@ -510,7 +509,7 @@ bool S60DeployConfigurationFactory::canClone(Target *parent, DeployConfiguration\n {\n     if (!qobject_cast<Qt4SymbianTarget *>(parent))\n         return false;\n-    return source->id() == QLatin1String(S60_DC_ID);\n+    return source->id() == QLatin1String(S60_DEPLOYCONFIGURATION_ID);\n }\n \n DeployConfiguration *S60DeployConfigurationFactory::clone(Target *parent, DeployConfiguration *source)\n"", ""s60deployconfiguration.h"": ""@@ -52,6 +52,8 @@ class S60DeployConfigurationFactory;\n \n namespace Internal {\n class Qt4SymbianTarget;\n+\n+const char S60_DEPLOYCONFIGURATION_ID[] = \""Qt4ProjectManager.S60DeployConfiguration\"";\n }\n \n class QT4PROJECTMANAGER_EXPORT S60DeployConfiguration : public ProjectExplorer::DeployConfiguration\n""}",bug;resource,"feature,bug 
",bug;resource;
13717.0,13717.0,deprecat ,Robin Burchell,Merge overloads of QInputDialog::getText() and QInputDialog::getItem(),"Remove some Qt 5 notes.

No need to cause gratuituous source incompatibilities.

Change-Id: Ifaefaa5c3faa698c8570da4ef00e130c211b2609","['src/widgets/dialogs/qinputdialog.cpp', 'src/widgets/dialogs/qinputdialog.h']","{""qinputdialog.cpp"": ""@@ -1175,7 +1175,6 @@ QString QInputDialog::getText(QWidget *parent, const QString &title, const QStri\n /*!\n     \\internal\n */\n-// ### Qt 5: Use only the version above.\n QString QInputDialog::getText(QWidget *parent, const QString &title, const QString &label,\n                               QLineEdit::EchoMode mode, const QString &text, bool *ok,\n                               Qt::WindowFlags flags)\n@@ -1344,7 +1343,6 @@ QString QInputDialog::getItem(QWidget *parent, const QString &title, const QStri\n /*!\n     \\internal\n */\n-// ### Qt 5: Use only the version above.\n QString QInputDialog::getItem(QWidget *parent, const QString &title, const QString &label,\n                               const QStringList &items, int current, bool editable, bool *ok,\n                               Qt::WindowFlags flags)\n"", ""qinputdialog.h"": ""@@ -216,7 +216,7 @@ Q_SIGNALS:\n \n \n public:\n-    void done(int result); // ### Qt 5: Make protected.\n+    void done(int result);\n \n private:\n     Q_DISABLE_COPY(QInputDialog)\n""}",deprecat,"merge, refactor 
",merge;
4739.0,4739.0,feature ,Joona Petrell,Add new composite Qt::ImQueryInput query,"Add new composite Qt::ImQueryInput query

When cursor position or editor text changes many input method query attributes like
cursor rectangle, cursor position, surrounding text, current selection and anchor
position change as well. Checking in text control and editor classes what of those
related attributes have exactly changed before calling the update increases code
complexity unnecessarily for a little benefit. Qt::InputMethodQueries flag can still
be used to optimize more independent cases when attributes change individually, which is
more common for input methods hints, fonts, platform data, maximum length or enabled
attributes.

Change-Id: Ic9eee5f1edb6d33ef6c01d2c9c8ad582100c0150","['src/gui/text/qtextcontrol.cpp', 'src/corelib/global/qnamespace.h']","{""qnamespace.h"": ""@@ -1247,6 +1247,8 @@ public:\n         ImPreferredLanguage = 0x200,\n \n         ImPlatformData = 0x80000000,\n+        ImQueryInput = ImCursorRectangle | ImCursorPosition | ImSurroundingText |\n+                       ImCurrentSelection | ImAnchorPosition,\n         ImQueryAll = 0xffffffff\n     };\n     Q_DECLARE_FLAGS(InputMethodQueries, InputMethodQuery)\n"", ""qtextcontrol.cpp"": ""@@ -1594,7 +1594,7 @@ void QTextControlPrivate::mouseMoveEvent(QEvent *e, Qt::MouseButton button, cons\n             emit q->cursorPositionChanged();\n         _q_updateCurrentCharFormatAndSelection();\n         if (qGuiApp)\n-            qGuiApp->inputPanel()->update(Qt::ImQueryAll);\n+            qGuiApp->inputPanel()->update(Qt::ImQueryInput);\n     } else {\n         //emit q->visibilityRequest(QRectF(mousePos, QSizeF(1, 1)));\n         if (cursor.position() != oldCursorPos) {\n""}",feature,"feature 
",feature;
11517.0,11517.0,deprecat,Robin Burchell,Remove qt_image_id() and qt_image_colortable().,"Remove qt_image_id() and qt_image_colortable().

Both of these have been unused at least as far back as Qt 4.5 according to git
log -p.

Change-Id: I381024cb1621fbfdb806a62e1cc55ce13219ef17","['src/gui/painting/qpaintengine_raster.cpp', 'src/gui/image/qimage.h', 'src/gui/image/qimage.cpp']","{""qimage.cpp"": ""@@ -114,17 +114,6 @@ static QImage rotated90(const QImage &src);\n static QImage rotated180(const QImage &src);\n static QImage rotated270(const QImage &src);\n \n-// ### Qt 5: remove\n-Q_GUI_EXPORT qint64 qt_image_id(const QImage &image)\n-{\n-    return image.cacheKey();\n-}\n-\n-const QVector<QRgb> *qt_image_colortable(const QImage &image)\n-{\n-    return &image.d->colortable;\n-}\n-\n QBasicAtomicInt qimage_serial_number = Q_BASIC_ATOMIC_INITIALIZER(1);\n \n QImageData::QImageData()\n"", ""qimage.h"": ""@@ -295,8 +295,6 @@ private:\n     friend class QRasterPlatformPixmap;\n     friend class QBlittablePlatformPixmap;\n     friend class QPixmapCacheEntry;\n-    friend Q_GUI_EXPORT qint64 qt_image_id(const QImage &image);\n-    friend const QVector<QRgb> *qt_image_colortable(const QImage &image);\n \n public:\n     typedef QImageData * DataPtr;\n"", ""qpaintengine_raster.cpp"": ""@@ -4501,8 +4501,6 @@ void QSpanData::setupMatrix(const QTransform &matrix, int bilin)\n     adjustSpanMethods();\n }\n \n-extern const QVector<QRgb> *qt_image_colortable(const QImage &image);\n-\n void QSpanData::initTexture(const QImage *image, int alpha, QTextureData::Type _type, const QRect &sourceRect)\n {\n     const QImageData *d = const_cast<QImage *>(image)->data_ptr();\n""}",deprecat,"deprecate, refactor 
",deprecat;
20952.0,20952.0,test ,Jean Gressmann,Routing backend tests for Nokia geoservices plugin,"QtLocation: Prepared declarative REST backend tests for Nokia plugin

Split declarative_core into frontend (the current set of tests) and
backend. Backend contains routing and geocoding directories with
empty test shells to be filled in later.

Change-Id: I6492c2a8a99594a88dbb1b9f7cf74c6af6d6d0b6","['tests/auto/declarative_core/backend/geocoding/tst_placeholder.qml', 'tests/auto/declarative_core/frontend/tst_category.qml', 'tests/auto/declarative_core/backend/geocoding/geocoding.pro', 'tests/auto/declarative_core/frontend/tst_placeicon.qml', 'tests/auto/declarative_core/frontend/tst_user.qml', 'tests/auto/declarative_core/frontend/tst_placerecommendationmodel.qml', 'tests/auto/declarative_core/frontend/tst_bounding_area.qml', 'tests/auto/declarative_core/frontend/tst_placesearchsuggestionmodel.qml', 'tests/auto/declarative_core/backend/backend.pro', 'tests/auto/declarative_core/frontend/frontend.pro', 'tests/auto/declarative_core/backend/routing/main.cpp', 'tests/auto/declarative_core/backend/routing/routing.pro', 'tests/auto/declarative_core/frontend/tst_placesearchmodel.qml', 'tests/auto/declarative_core/frontend/tst_plugin.qml', 'tests/auto/declarative_core/frontend/tst_ratings.qml', 'tests/auto/declarative_core/frontend/tst_contactdetail.qml', 'tests/auto/declarative_core/frontend/tst_imagemodel.qml', 'tests/auto/declarative_core/frontend/tst_supplier.qml', 'tests/auto/declarative_core/frontend/tst_categorymodel.qml', 'tests/auto/declarative_core/frontend/main.cpp', 'tests/auto/declarative_core/backend/routing/tst_placeholder.qml', 'tests/auto/declarative_core/frontend/tst_editorialmodel.qml', 'tests/auto/declarative_core/frontend/tst_map_routing.qml', 'tests/auto/declarative_core/backend/geocoding/main.cpp', 'tests/auto/declarative_core/frontend/tst_coordinate.qml', 'tests/auto/declarative_core/frontend/tst_place.qml', 'tests/auto/declarative_core/frontend/tst_reviewmodel.qml', 'tests/auto/declarative_core/declarative_core.pro']","{""backend.pro"": ""@@ -0,0 +1,3 @@\n+TEMPLATE = subdirs\n+SUBDIRS += geocoding\n+SUBDIRS += routing\n"", ""geocoding.pro"": ""@@ -0,0 +1,11 @@\n+TEMPLATE = app\n+TARGET = tst_geocoding\n+CONFIG += warn_on qmltestcase\n+SOURCES += main.cpp\n+\n+QT += location quick\n+OTHER_FILES = *.qml\n+TESTDATA = $$OTHER_FILES\n+\n+\n+\n"", ""main.cpp"": """", ""tst_placeholder.qml"": ""@@ -0,0 +1,7 @@\n+import QtQuick 2.0\n+import QtTest 1.0\n+import QtLocation 5.0\n+\n+Item {\n+\n+}\n"", ""routing.pro"": ""@@ -0,0 +1,11 @@\n+TEMPLATE = app\n+TARGET = tst_routing\n+CONFIG += warn_on qmltestcase\n+SOURCES += main.cpp\n+\n+QT += location quick\n+\n+\n+OTHER_FILES = *.qml\n+TESTDATA = $$OTHER_FILES\n+\n"", ""declarative_core.pro"": ""@@ -1,13 +1,3 @@\n-# QML tests in this directory must not depend on an OpenGL context.\n-# QML tests that do require an OpenGL context must go in ../declarative_ui.\n-\n-TEMPLATE = app\n-TARGET = tst_declarative_core\n-CONFIG += warn_on qmltestcase\n-SOURCES += main.cpp\n-\n-QT += location quick\n-\n-OTHER_FILES = *.qml\n-TESTDATA = $$OTHER_FILES\n-\n+TEMPLATE = subdirs\n+SUBDIRS += frontend\n+SUBDIRS += backend\n"", ""frontend.pro"": ""@@ -0,0 +1,13 @@\n+# QML tests in this directory must not depend on an OpenGL context.\n+# QML tests that do require an OpenGL context must go in ../../declarative_ui.\n+\n+TEMPLATE = app\n+TARGET = tst_frontend\n+CONFIG += warn_on qmltestcase\n+SOURCES += main.cpp\n+\n+QT += location quick\n+\n+OTHER_FILES = *.qml\n+TESTDATA = $$OTHER_FILES\n+\n"", ""tst_bounding_area.qml"": """", ""tst_category.qml"": """", ""tst_categorymodel.qml"": """", ""tst_contactdetail.qml"": """", ""tst_coordinate.qml"": """", ""tst_editorialmodel.qml"": """", ""tst_imagemodel.qml"": """", ""tst_map_routing.qml"": """", ""tst_place.qml"": """", ""tst_placeicon.qml"": """", ""tst_placerecommendationmodel.qml"": """", ""tst_placesearchmodel.qml"": """", ""tst_placesearchsuggestionmodel.qml"": """", ""tst_plugin.qml"": """", ""tst_ratings.qml"": """", ""tst_reviewmodel.qml"": """", ""tst_supplier.qml"": """", ""tst_user.qml"": """"}",test,"test
",feature;resource;test;
16409.0,16409.0,bug,Leena Miettinen,Doc: fix the style,"Doc: fix the style

Change-Id: I452e458c8e442a79e834d841706579504b1da9c7",['doc/templates/style/offline.css'],"{""offline.css"": ""@@ -190,7 +190,7 @@ margin-left:30px;\n display: block;\n position: relative;\n top:-20px;\n-border-top:2px solid #ffffff;\n+/*border-top:2px solid #ffffff;*/\n border-bottom: 1px solid #cecece;\n background-color:#F2F2F2;\n z-index:1;\n@@ -199,6 +199,8 @@ padding:0px;\n margin:0px;\n padding-left:10px;\n padding-top:2px;\n+margin-left:-5px;\n+margin-right:-5px;\n }\n \n .breadcrumb ul{\n@@ -276,8 +278,8 @@ background-color:#E6E6E6;\n border-bottom: 1px #CCC solid;\n border-top: 2px #CCC solid;\n font-weight:bold;\n-margin-left:5px;\n-margin-right:5px;\n+margin-left:0px;\n+margin-right:0px;\n }\n }\n \n""}",bug,"resource 
",bug;refactor;resource;
16700.0,16700.0,bug,Friedemann Kleint,Fix another typo in the evdev keyboard plugin.,"Fix another typo in the evdev keyboard plugin.

Amend 3296b7327bd84f420df7e5561d192c0a8d0bb409

Change-Id: Ide58a6b8cbd980eda6ff91948c8f4fb45a30e527",['src/plugins/generic/evdevkeyboard/evdevkeyboard.pro'],"{""evdevkeyboard.pro"": ""@@ -6,7 +6,7 @@ target.path = $$[QT_INSTALL_PLUGINS]/generic\n INSTALLS += target\n \n HEADERS = \\\n-    qevdevkeybaord_defaultmap.h \\\n+    qevdevkeyboard_defaultmap.h \\\n     qevdevkeyboardhandler.h \\\n     qevdevkeyboardmanager.h\n \n""}",bug,"bug 
",bug;resource;
15427.0,15427.0,feature,Chris Craig,expose ProcUtils class,"expose ProcUtils class

Change-Id: I1e31f1946545f9b8719fb7cfb15991f402e920f0",['src/core/procutils.h'],"{""procutils.h"": ""@@ -48,7 +48,7 @@ QT_FORWARD_DECLARE_CLASS(QLocalSocket)\n \n QT_BEGIN_NAMESPACE_PROCESSMANAGER\n \n-class ProcUtils\n+class Q_ADDON_PROCESSMANAGER_EXPORT ProcUtils\n {\n     ProcUtils();\n     Q_DISABLE_COPY(ProcUtils)\n""}",feature,"feature 
",others;
13112.0,13112.0,bug,Eike Ziller,Fix showing the default shortcuts in keyboard preferences,"Fix showing the default shortcuts in keyboard preferences

Change-Id: I49df1f586ac7ed67c61f6bdf646e45bd1e7dbb4a",['src/plugins/coreplugin/dialogs/shortcutsettings.cpp'],"{""shortcutsettings.cpp"": ""@@ -321,6 +321,7 @@ void ShortcutSettings::initialize()\n         }\n         sections[section]->addChild(item);\n \n+        s->m_key = c->keySequence();\n         item->setText(0, subId);\n         item->setText(1, c->description());\n         item->setText(2, s->m_key);\n""}",bug,"bug 
",bug;
14569.0,14569.0,bug ,Janne Anttila,Build fix to qapplication_win.cpp when QT_NO_GESTURES is used,"Build fix to qapplication_win.cpp when QT_NO_GESTURES is used

Task-number: QTBUG-22501

Change-Id: Ica63ad7de763d9abeff7f8e76ad45f90f04db75b",['src/gui/kernel/qapplication_win.cpp'],"{""qapplication_win.cpp"": ""@@ -1714,8 +1714,8 @@ extern \""C\"" LRESULT QT_WIN_CALLBACK QtWndProc(HWND hwnd, UINT message, WPARAM wPa\n                         shrg.ptDown.x = GET_X_LPARAM(lParam);\n                         shrg.ptDown.y = GET_Y_LPARAM(lParam);\n                         shrg.dwFlags = SHRG_RETURNCMD | SHRG_NOANIMATION;\n-                        resolveAygLibs();\n #ifndef QT_NO_GESTURES\n+                        resolveAygLibs();\n                         if (ptrRecognizeGesture && (ptrRecognizeGesture(&shrg) == GN_CONTEXTMENU)) {\n                             if (QApplication::activePopupWidget())\n                                 QApplication::activePopupWidget()->close();\n""}",bug,"bug 
",bug;
12179.0,12179.0,bug,Aaron McCarthy,Remove assert.,"Remove assert.

There are valid use cases that trigger this assert.

Change-Id: I41a488fecd59d52a9024c56b36d116e794f84815",['src/imports/location/declarativeplaces/qdeclarativecategory.cpp'],"{""qdeclarativecategory.cpp"": ""@@ -88,7 +88,6 @@ QDeclarativeCategory::QDeclarativeCategory(const QPlaceCategory &category,\n :   QObject(parent), m_category(category), m_icon(0), m_plugin(plugin), m_reply(0),\n     m_complete(false), m_status(Ready)\n {\n-    Q_ASSERT(plugin);\n     setCategory(category);\n }\n \n""}",bug,"bug, refactor 
",deprecat;
14652.0,14652.0,refactor,Mark Brand,merge private and public QSqlTableModel::setRecord(),"merge private and public QSqlTableModel::setRecord()

Change-Id: I409bd32f85224db64363688d63fc372d1beaa0d3","['src/sql/models/qsqltablemodel.cpp', 'src/sql/models/qsqltablemodel_p.h']","{""qsqltablemodel.cpp"": ""@@ -66,36 +66,6 @@ QSqlRecord QSqlTableModelPrivate::record(const QVector<QVariant> &values) const\n     return r;\n }\n \n-/*! \\internal\n-    Set a record for OnFieldChange and OnRowChange.\n-*/\n-bool QSqlTableModelPrivate::setRecord(int row, const QSqlRecord &record)\n-{\n-    Q_Q(QSqlTableModel);\n-    bool isOk = true;\n-\n-    QSqlTableModel::EditStrategy oldStrategy = strategy;\n-\n-    // FieldChange strategy makes no sense when setting an entire row\n-    if (strategy == QSqlTableModel::OnFieldChange)\n-        strategy = QSqlTableModel::OnRowChange;\n-    for (int i = 0; i < record.count(); ++i) {\n-        int idx = nameToIndex(record.fieldName(i));\n-        if (idx == -1)\n-            continue;\n-        QModelIndex cIndex = q->createIndex(row, idx);\n-        QVariant value = record.value(i);\n-        QVariant oldValue = q->data(cIndex);\n-        if (oldValue.isNull() || oldValue != value)\n-            isOk &= q->setData(cIndex, value, Qt::EditRole);\n-    }\n-    if (isOk && oldStrategy == QSqlTableModel::OnFieldChange)\n-        q->submitAll();\n-    strategy = oldStrategy;\n-\n-    return isOk;\n-}\n-\n int QSqlTableModelPrivate::nameToIndex(const QString &name) const\n {\n     QString fieldname = name;\n@@ -1238,8 +1208,28 @@ bool QSqlTableModel::setRecord(int row, const QSqlRecord &record)\n     bool isOk = true;\n     switch (d->strategy) {\n     case OnFieldChange:\n-    case OnRowChange:\n-        return d->setRecord(row, record);\n+    case OnRowChange: {\n+        EditStrategy oldStrategy = d->strategy;\n+\n+        // FieldChange strategy makes no sense when setting an entire row\n+        if (d->strategy == OnFieldChange)\n+            d->strategy = OnRowChange;\n+        for (int i = 0; i < record.count(); ++i) {\n+            int idx = d->nameToIndex(record.fieldName(i));\n+            if (idx == -1)\n+                continue;\n+            QModelIndex cIndex = createIndex(row, idx);\n+            QVariant value = record.value(i);\n+            QVariant oldValue = data(cIndex);\n+            if (oldValue.isNull() || oldValue != value)\n+                isOk &= setData(cIndex, value, Qt::EditRole);\n+        }\n+        if (isOk && oldStrategy == OnFieldChange)\n+            submitAll();\n+        d->strategy = oldStrategy;\n+\n+        return isOk;\n+    }\n     case OnManualSubmit: {\n         QSqlTableModelPrivate::ModifiedRow &mrow = d->cache[row];\n         if (mrow.op == QSqlTableModelPrivate::None)\n"", ""qsqltablemodel_p.h"": ""@@ -76,7 +76,6 @@ public:\n     bool exec(const QString &stmt, bool prepStatement,\n               const QSqlRecord &rec, const QSqlRecord &whereValues);\n     virtual void revertCachedRow(int row);\n-    bool setRecord(int row, const QSqlRecord &record);\n     virtual int nameToIndex(const QString &name) const;\n     void initRecordAndPrimaryIndex();\n \n""}",refactor,"merge, refactor 
",merge;
13721.0,13721.0,bug,Rohan McGovern [inactive],parse_build_log.pl: correctly handle insignificant prebuild tests,"parse_build_log.pl: correctly handle insignificant prebuild tests

Since the qtqa tests were split into prebuild and postbuild parts, it
was possible for a build log to contain an insignificant prebuild test
failure, followed by a significant compile or test failure.
Make sure we are smart enough to understand when the prebuild tests are
insignificant.

Change-Id: If30babbaca23d6d1cb9f00047f8240f24971e5c6","['scripts/generic/t/data/parsed-logs/qt5-prebuild-test-insignificant.txt', 'scripts/generic/t/data/raw-logs/qt5-prebuild-test-insignificant.txt', 'scripts/generic/parse_build_log.pl']",,bug,"bug,test 
",resource;test;
20680.0,20680.0,bug,hjk,debugger: fix quote style and capitalization in gutter menu,"debugger: fix quote style and capitalization in gutter menu

Change-Id: I054230bb910bdb400bd2494a449993bdb0bbf011",['src/plugins/debugger/debuggerplugin.cpp'],"{""debuggerplugin.cpp"": ""@@ -1919,7 +1919,7 @@ void DebuggerPluginPrivate::requestContextMenu(ITextEditor *editor,\n         // Handle non-existing breakpoint.\n         const QString text = args.address\n             ? tr(\""Set Breakpoint at 0x%1\"").arg(args.address, 0, 16)\n-            : tr(\""Set Breakpoint at line %1\"").arg(lineNumber);\n+            : tr(\""Set Breakpoint at Line %1\"").arg(lineNumber);\n         QAction *act = new QAction(text, menu);\n         act->setData(QVariant::fromValue(args));\n         act->setEnabled(contextUsable);\n@@ -1930,7 +1930,7 @@ void DebuggerPluginPrivate::requestContextMenu(ITextEditor *editor,\n         args.mode = BreakpointMenuContextData::MessageTracePoint;\n         const QString tracePointText = args.address\n             ? tr(\""Set Message Tracepoint at 0x%1...\"").arg(args.address, 0, 16)\n-            : tr(\""Set Message Tracepoint at line %1...\"").arg(lineNumber);\n+            : tr(\""Set Message Tracepoint at Line %1...\"").arg(lineNumber);\n         act = new QAction(tracePointText, menu);\n         act->setData(QVariant::fromValue(args));\n         act->setEnabled(contextUsable);\n@@ -1966,7 +1966,8 @@ void DebuggerPluginPrivate::requestContextMenu(ITextEditor *editor,\n             frame.function = cppFunctionAt(fileName, lineNumber);\n             frame.line = 42; // trick gdb into mixed mode.\n             if (!frame.function.isEmpty()) {\n-                const QString text = tr(\""Disassemble '%1()'\"").arg(frame.function);\n+                const QString text = tr(\""Disassemble Function \\\""%1\\\""\"")\n+                    .arg(frame.function);\n                 QAction *disassembleAction = new QAction(text, menu);\n                 disassembleAction->setData(QVariant::fromValue(frame));\n                 connect(disassembleAction, SIGNAL(triggered()), SLOT(slotDisassembleFunction()));\n""}",bug,"bug 
",bug;refactor;
2922.0,2922.0,bug,Sarah Jane Smith,Create the node property.,"Create the node property.

Earlier commits added the culling signal to scene nodes.  Here are a
property for accessing the scene node so that the culling signal
actually can be used from within a qml program.

Change-Id: I77fbdb23ccf7beb7a8bde8e3a7e10ef8b477ef8d","['src/quick3d/qdeclarativemesh.h', 'src/quick3d/qdeclarativemesh.cpp']","{""qdeclarativemesh.cpp"": ""@@ -310,13 +310,17 @@ void QDeclarativeMesh::initSceneObjectList()\n             if (node)\n                 d->sceneObjects.append(node);\n         }\n+        QGLSceneNode *old = d->mainSceneObject;\n         d->mainSceneObject = d->scene->mainNode();\n+        if (old != d->mainSceneObject)\n+            emit nodeChanged();\n     }\n }\n \n /*!\n-    \\internal\n-    Get the main scene object for the \\l QGLAbstractScene associated with this mesh.\n+    \\qmlproperty QGLSceneNode Mesh::getSceneObject\n+\n+    Get the main scene node for the \\l QGLAbstractScene associated with this mesh.\n */\n QGLSceneNode *QDeclarativeMesh::getSceneObject()\n {\n@@ -686,7 +690,10 @@ void QDeclarativeMesh::componentComplete()\n {\n     d->completed = true;\n     if (d->loaded)\n+    {\n         emit loaded();\n+        emit nodeChanged();\n+    }\n }\n \n /*!\n"", ""qdeclarativemesh.h"": ""@@ -81,6 +81,7 @@ class Q_QT3D_QUICK_EXPORT QDeclarativeMesh : public QObject, public QDeclarative\n     Q_PROPERTY(QUrl source READ source WRITE setSource NOTIFY dataChanged)\n     Q_PROPERTY(QString meshName READ meshName WRITE setMeshName NOTIFY dataChanged)\n     Q_PROPERTY(QString options READ options WRITE setOptions NOTIFY optionsChanged)\n+    Q_PROPERTY(QGLSceneNode *node READ getSceneObject NOTIFY nodeChanged)\n     Q_PROPERTY(bool dumpInfo READ dumpInfo WRITE setDumpInfo NOTIFY dumpInfoChanged)\n \n public:\n@@ -131,6 +132,7 @@ Q_SIGNALS:\n     void loaded();\n     void optionsChanged();\n     void dumpInfoChanged();\n+    void nodeChanged();\n \n private Q_SLOTS:\n     void dataRequestFinished();\n""}",bug,"feature 
",feature;
1938.0,1938.0,bug;resource;,Thomas Hartmann,QmlDesigner.property: small fix for font size,"QmlDesigner.property: small fix for font size

Allow font sizes up to 400

Task-number: QTCREATORBUG-5555
Change-Id: I78fb5983353e0c45d6472b3af3142c8eee597643",['share/qtcreator/qmldesigner/propertyeditor/Qt/FontGroupBox.qml'],"{""FontGroupBox.qml"": ""@@ -70,11 +70,15 @@ GroupBox {\n                     text: qsTr(\""Size\"")\n                 }\n                 SpinBox {\n+                    minimum: 0\n+                    maximum: 400\n                     visible: !sizeWidget.pixelSize\n                     backendValue: backendValues.font_pointSize\n                     baseStateFlag: isBaseState;\n                 }                \n                 SpinBox {\n+                    minimum: 0\n+                    maximum: 400\n                     visible: sizeWidget.pixelSize\n                     backendValue: backendValues.font_pixelSize\n                     baseStateFlag: isBaseState;\n""}",bug;resource;,"bug, feature 
",bug;resource;
21460.0,21460.0,merge;resource ,Rafael Roquetto,Blackberry mkspecs,"Blackberry mkspecs

Unlike QNX mkspecs, these mkspecs target more specific, BlackBerry-only
devices. So far, the only difference is the definition of Q_OS_BLACKBERRY
and linking with -lbps, but this will likely change with time. It will also
allow conditional compilation to distinguish between qnx and blackberry
devices.

cherry-picked from qt5/qtbase: e1c22d426f8c5cdd9ad0e119d54cfa516d45f8c1

Change-Id: I607584a472ef636a6805502a725b42163b4070ae
Reviewed-by: Sean Harmer <sh@theharmers.co.uk>
Reviewed-by: Oswald Buddenhagen <oswald.buddenhagen@nokia.com>","['mkspecs/unsupported/blackberry-x86-qcc/qplatformdefs.h', 'mkspecs/unsupported/blackberry-armv7le-qcc/qmake.conf', 'mkspecs/unsupported/blackberry-x86-qcc/qmake.conf', 'mkspecs/unsupported/blackberry-armv7le-qcc/qplatformdefs.h']","{""qmake.conf"": ""@@ -0,0 +1,9 @@\n+#\n+# qmake configuration for blackberry x86 systems\n+#\n+\n+DEFINES += Q_OS_BLACKBERRY\n+CONFIG += blackberry\n+LIBS += -lbps\n+\n+include(../qnx-x86-qcc/qmake.conf)\n"", ""qplatformdefs.h"": ""@@ -0,0 +1,42 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2012 Research In Motion Limited. <blackberry-qt@qnx.com>\n+** Contact: http://www.qt-project.org/\n+**\n+** This file is part of the QtCore module of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#include \""../qnx-x86-qcc/qplatformdefs.h\""\n""}",merge;resource,"feature 
",others;
12333.0,12333.0,resource;test,Rohan McGovern [inactive],Make OSX 10.7 developer-build tests significant for many modules,"Make OSX 10.7 developer-build tests significant for many modules

Autotests are passing in this configuration for most Qt5 modules.
Set them to significant.

Change-Id: Id780fd2c02f534e41ea6368108a6547e2af32120","['projects/QtLocation_master_Integration/stages/macx-g++_developer-build_cocoa_OSX_10.7_x64/properties/qt.tests.insignificant', 'projects/QtConnectivity_master_Integration/stages/macx-g++_developer-build_cocoa_OSX_10.7_x64/properties/qt.tests.insignificant', 'projects/QtMultimedia_master_Integration/stages/macx-g++_developer-build_cocoa_OSX_10.7_x64/properties/qt.tests.insignificant', 'projects/QtPim_master_Integration/stages/macx-g++_developer-build_cocoa_OSX_10.7_x64/properties/qt.tests.insignificant', 'projects/QtPhonon_master_Integration/stages/macx-g++_developer-build_cocoa_OSX_10.7_x64/properties/qt.tests.insignificant', 'projects/QtSystems_master_Integration/stages/macx-g++_developer-build_cocoa_OSX_10.7_x64/properties/qt.tests.insignificant', 'projects/QtDoc_master_Integration/stages/macx-g++_developer-build_cocoa_OSX_10.7_x64/properties/qt.tests.insignificant', 'projects/QtDocGallery_master_Integration/stages/macx-g++_developer-build_cocoa_OSX_10.7_x64/properties/qt.tests.insignificant', 'projects/QtFeedback_master_Integration/stages/macx-g++_developer-build_cocoa_OSX_10.7_x64/properties/qt.tests.insignificant', 'projects/QtQA_master_Integration/stages/macx-g++_developer-build_cocoa_OSX_10.7_x64/properties/qt.tests.insignificant', 'projects/QtSvg_master_Integration/stages/macx-g++_developer-build_cocoa_OSX_10.7_x64/properties/qt.tests.insignificant', 'projects/QtSensors_master_Integration/stages/macx-g++_developer-build_cocoa_OSX_10.7_x64/properties/qt.tests.insignificant']","{""qt.tests.insignificant"": ""@@ -1 +0,0 @@\n-1\n""}",resource;test,"test 
",resource;test;
13386.0,13386.0,bug ,Tobias Hunger,Git: Fix finding of top-level directory,"Git: Fix finding of top-level directory

Fix finding of top-level directory for git when
  * Git version >= 1.7.0 and
  * the directory queried does not exist

Task-number: QTCREATORBUG-6821
Change-Id: I54a6050b71fe924f421921b8e5b468578db1210d",['src/plugins/git/gitclient.cpp'],"{""gitclient.cpp"": ""@@ -368,10 +368,24 @@ const char *GitClient::decorateOption = \""--decorate\"";\n QString GitClient::findRepositoryForDirectory(const QString &dir)\n {\n     if (synchronousGitVersion(true) >= 0x010700) {\n+        // Find a directory to run git in:\n+        const QString root = QDir::rootPath();\n+        const QString home = QDir::homePath();\n+\n+        QDir directory(dir);\n+        do {\n+            const QString absDirPath = directory.absolutePath();\n+            if (absDirPath == root || absDirPath == home)\n+                break;\n+\n+            if (directory.exists())\n+                break;\n+        } while (directory.cdUp());\n+\n         QByteArray outputText;\n         QStringList arguments;\n         arguments << QLatin1String(\""rev-parse\"") << QLatin1String(\""--show-toplevel\"");\n-        fullySynchronousGit(dir, arguments, &outputText, 0, false);\n+        fullySynchronousGit(directory.absolutePath(), arguments, &outputText, 0, false);\n         return outputText.trimmed();\n     } else {\n         // Check for \"".git/config\""\n""}",bug,"bug
",bug;
11488.0,11488.0,resource,Peter Yard,Docs: added doc for QML Maps.,"Docs: added doc for QML Maps.

Change-Id: Ica237c5e87738bfc0d3f6f11f1601050a8a40092",['doc/src/qml-maps.qdoc'],"{""qml-maps.qdoc"": ""@@ -0,0 +1,326 @@\n+/****************************************************************************\r\n+**\r\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\r\n+** All rights reserved.\r\n+** Contact: Nokia Corporation (qt-info@nokia.com)\r\n+**\r\n+** This file is part of the documentation of the Qt Toolkit.\r\n+**\r\n+** $QT_BEGIN_LICENSE:FDL$\r\n+** GNU Free Documentation License\r\n+** Alternatively, this file may be used under the terms of the GNU Free\r\n+** Documentation License version 1.3 as published by the Free Software\r\n+** Foundation and appearing in the file included in the packaging of\r\n+** this file.\r\n+**\r\n+** Other Usage\r\n+** Alternatively, this file may be used in accordance with the terms\r\n+** and conditions contained in a signed written agreement between you\r\n+** and Nokia.\r\n+**\r\n+**\r\n+**\r\n+**\r\n+** $QT_END_LICENSE$\r\n+**\r\n+****************************************************************************/\r\n+\r\n+/*!\r\n+    \\group qml-QtLocation5-maps\r\n+    \\title QML Maps Plugin\r\n+    QML Support for the Qt Location API.\r\n+*/\r\n+\r\n+\r\n+/*!\r\n+\\page qml-location5-maps.html\r\n+\\title QML Maps\r\n+\\previouspage {qtlocation-module.html}{QtLocation Module}\r\n+\r\n+\\brief Maps is the section QtQuick Location that deals with maps,\r\n+their contents and navigation through the maps. ???\r\n+\r\n+\\section1 Overview\r\n+\r\n+The \\l Map element allows the display of a map and placing objects within the map.\r\n+Various points of interest can be defined and added to the map for display.\r\n+Also the \\l Map has features to control how the map is displayed. With the\r\n+Map item you can center the map, zoom, pinch and make the item flickable.\r\n+\r\n+The places to be added to the map are \\l {MapItem}s. The item's position is defined\r\n+by a \\l {Coordinate::}{coordinate} which includes latitude, longitude and elevation. The item\r\n+is then displayed automatically after it is added to the Map. Interaction with\r\n+the added items, and the \\l Map itself, is handled by \\l MapMouseArea when items are\r\n+added as children of the \\l {MapItem}s or \\l Map.\r\n+\r\n+\\section2 Position\r\n+\r\n+The basic element of position information is the \\l Coordinate. A coordinate\r\n+encapsulates data for the latitude, longitude and altitude of the location.\r\n+Altitude is in meters. It also has a method to determine distance to another\r\n+Coordinate. The \\l Coordinate element may also be held within a \\l {QtLocation5::Location}{Location}\r\n+element, this will also have information on a bounding box size to determine\r\n+sufficient proximity to the location and a location address.\r\n+\r\n+\\section2 Geocoding\r\n+\r\n+\\l {http://en.wikipedia.org/wiki/Geocoding}{Geocoding} is the derivation of\r\n+geographical coordinates (latitude and longitude) from other geographical references\r\n+to the locations. For example, this can be a street address. Reverse geocoding is also possible with\r\n+a street address being used to determine a geographical coordinate. Geocoding\r\n+is performed by using the \\l GeoCodeModel element.\r\n+\r\n+The following code examples are a small part of the \\c map component in the\r\n+\\l {Declarative Map Viewer Example}{MapViewer QML example}. The snippets\r\n+demonstrate the declaration of the \\l GeocodeModel component.\r\n+\r\n+In the snippet we see that the \\c geocodeModel property contains the plugin\r\n+and two signal handlers. One for changes in status (\\c onStatusChanged ) and\r\n+the other to update the centering of the Map element (\\c onLocationsChanged ).\r\n+\r\n+\\qml\r\n+    property GeocodeModel geocodeModel: GeocodeModel {\r\n+        plugin : map.plugin;\r\n+        onStatusChanged:{\r\n+            if ((status == GeocodeModel.Ready) || (status == GeocodeModel.Error)) map.geocodeFinished()\r\n+        }\r\n+        onLocationsChanged:\r\n+        {\r\n+            if (count == 1) {\r\n+                map.center.latitude = get(0).coordinate.latitude\r\n+                map.center.longitude = get(0).coordinate.longitude\r\n+            }\r\n+\r\n+        }\r\n+    }\r\n+\\endqml\r\n+\r\n+\r\n+\\qml\r\n+    MapItemView {\r\n+        model: geocodeModel\r\n+        delegate: pointDelegate\r\n+    }\r\n+\\endqml\r\n+\r\n+\r\n+These geocoding features are called from a higher level piece of code. In this\r\n+snippet we see an \\c onGoButtonClicked signal handler that extracts the address\r\n+from the user interface and then creates a query for the \\l GeocodeModel to\r\n+process and determine the geographical coordinates.\r\n+\r\n+\r\n+\\qml\r\n+        Address {\r\n+            id: geocodeAddress\r\n+        }\r\n+\r\n+        onGoButtonClicked: {\r\n+            // manage the UI state transitions\r\n+            page.state = \""\""\r\n+            messageDialog.state = \""\""\r\n+\r\n+            // fill out the Address element\r\n+            geocodeAddress.street = dialogModel.get(0).inputText\r\n+            geocodeAddress.district = dialogModel.get(1).inputText\r\n+            geocodeAddress.city = dialogModel.get(2).inputText\r\n+            geocodeAddress.county = dialogModel.get(3).inputText\r\n+            geocodeAddress.state = dialogModel.get(4).inputText\r\n+            geocodeAddress.countryCode = dialogModel.get(5).inputText\r\n+            geocodeAddress.country = dialogModel.get(6).inputText\r\n+            geocodeAddress.postalCode = dialogModel.get(7).inputText\r\n+\r\n+            // send the geocode request\r\n+            map.geocodeModel.clear()\r\n+            map.geocodeModel.query = geocodeAddress\r\n+            map.geocodeModel.update()\r\n+        }\r\n+\\endqml\r\n+\r\n+\r\n+\\section2 Navigation\r\n+\r\n+A very important function of the \\l Map element is navigation\r\n+from one place to a destination with possible waypoints along the route. The\r\n+route will be divided up into a series of segments. At the end of each segment\r\n+is a vertex called a \\e maneuver. The \\e segments contain information about\r\n+the time and distance to the end of the segment. The \\e maneuvers contain information\r\n+about what to do next, how to get onto the next segment, if there is one. So\r\n+a \\e maneuver contains navigational information, e.g. \""turn right now\"".\r\n+\r\n+To find a suitable route we will need to use a \\l RouteQuery to define the\r\n+selection criteria and adding any required waypoints.\r\n+The \\l RouteModel should return a list of \\l {RouteSegment}s that defines the\r\n+route to the destination complete with navigation advice at the joins between\r\n+segments, called \\l {RouteManeuver}s\r\n+\r\n+There are many options that you can add to the query to narrow the criteria.\r\n+The \\l RouteQuery properties can include\r\n+\r\n+\\table 60%\r\n+    \\row\r\n+        \\o \\l {RouteQuery::}{numberAlternativeRoutes}\r\n+        \\o The number of alternative routes\r\n+    \\row\r\n+        \\o \\l {RouteQuery::}{travelModes}\r\n+        \\o Travel modes\r\n+    \\row\r\n+        \\o \\l {RouteQuery::}{routeOptimizations}\r\n+        \\o Required route optimizations\r\n+    \\row\r\n+        \\o \\l {RouteQuery::}{segmentDetails}\r\n+        \\o Level of detail in segments\r\n+    \\row\r\n+        \\o \\l {RouteQuery::}{maneuverDetails}\r\n+        \\o Level of detail in maneuvers between segments\r\n+    \\row\r\n+        \\o \\l {RouteQuery::}{waypoints}\r\n+        \\o A list of waypoints\r\n+    \\row\r\n+        \\o \\l {RouteQuery::}{excludedAreas}\r\n+        \\o A list of excluded areas that the route must not cross\r\n+    \\row\r\n+        \\o \\l {RouteQuery::}{featureTypes}\r\n+        \\o Relevant map features, e.g. highway, ferry\r\n+\\endtable\r\n+\r\n+\r\n+In the following example a default RouteQuery is declared, later to be defined\r\n+by some user input, and used in \\c routeModel as the query. The \\c routeInfoModel\r\n+is a \\l ListModel that can be updated using an \\c update() function that we will\r\n+look at later.\r\n+\r\n+\\qml\r\n+    property RouteQuery routeQuery: RouteQuery {}\r\n+    property RouteModel routeModel: RouteModel {\r\n+        plugin : map.plugin\r\n+        query: routeQuery\r\n+        onStatusChanged:{\r\n+            if (status == RouteModel.Ready){\r\n+                if (count == 1) { routeInfoModel.update()}\r\n+            }\r\n+            else if (status == RouteModel.Error){\r\n+                clearAll()\r\n+                map.routeError()\r\n+            }\r\n+        }\r\n+        function clearAll(){\r\n+            clear()\r\n+            routeInfoModel.update()\r\n+        }\r\n+    }\r\n+\\endqml\r\n+\r\n+The user enters, via a dialog, some information such as the starting point\r\n+of the route, some waypoints and the destination. All of these locations are\r\n+waypoints so the locations from start to finish will be entered as a sequence\r\n+of waypoints. Then other query properties can be set that may be specific to\r\n+this trip.\r\n+\r\n+\\qml\r\n+    function calculateRoute(){\r\n+        map.routeQuery.clearWaypoints();\r\n+        map.center = startCoordinate\r\n+        map.routeQuery.addWaypoint(startCoordinate)\r\n+        map.routeQuery.addWaypoint(endCoordinate)\r\n+        map.routeQuery.travelModes = routeDialog.travelMode\r\n+        map.routeQuery.routeOptimizations = routeDialog.routeOptimization\r\n+\r\n+        for (var i=0; i<9; i++) {\r\n+            map.routeQuery.setFeatureWeight(i, 0)\r\n+        }\r\n+\r\n+        for (var i=0; i<routeDialog.features.length; i++) {\r\n+            map.routeQuery.setFeatureWeight(routeDialog.features[i], RouteQuery.AvoidFeatureWeight)\r\n+        }\r\n+\r\n+        map.routeModel.update();\r\n+    }\r\n+\\endqml\r\n+\r\n+\r\n+\r\n+The \\c routeInfoModel \\l ListModel is used to grab the results of the query and construct\r\n+a suitable list for display. The ListModel \\c routeInfoModel contains an\r\n+\\c update() function that loops through the segments extracting the segment\r\n+length, instruction text and distance to the next instruction. The extracted\r\n+data is formatted for display as it is retrieved.\r\n+\r\n+\\qml\r\n+    ListModel{\r\n+        id: routeInfoModel\r\n+        property string travelTime\r\n+        property string distance\r\n+\r\n+        function update() {\r\n+            clear()\r\n+            if (routeModel.count > 0){\r\n+                for (var i=0; i< routeModel.get(0).segments.length; i++){\r\n+                    append({\""instruction\"": routeModel.get(0).segments[i].maneuver.instructionText, \""distance\"": formatDistance(routeModel.get(0).segments[i].maneuver.distanceToNextInstruction)})\r\n+                }\r\n+            }\r\n+            travelTime = routeModel.count == 0 ? \""\"" : formatTime(routeModel.get(0).travelTime)\r\n+            distance = routeModel.count == 0 ? \""\"" : formatDistance(routeModel.get(0).distance)\r\n+        }\r\n+    }\r\n+\r\n+    MapItemView {\r\n+        model: routeModel\r\n+        delegate: routeDelegate\r\n+    }\r\n+\\endqml\r\n+\r\n+For more information on the example see the \\l {Declarative Map Viewer Example}.\r\n+\r\n+\r\n+\\section2  Zoom, Pinch and Flickable\r\n+\r\n+The \\l Map item also supports user interface interactions with the map using\r\n+tactile and mouse gestures. That is features such as swiping to pan,\r\n+pinching to zoom.\r\n+\r\n+Enabling and configuring pinch and flickable is easy within the \\l Map element.\r\n+\r\n+\\qml\r\n+    zoomLevel: (maximumZoomLevel - minimumZoomLevel)/2\r\n+\r\n+\r\n+    // Enable pinch gestures to zoom in and out\r\n+    pinch.activeGestures: MapPinch.ZoomGesture\r\n+    pinch.enabled: true\r\n+\r\n+    // And flicking gestures for quick panning\r\n+    flick.enabled: true\r\n+    flick.deceleration: 3000\r\n+\\endqml\r\n+\r\n+Zoom can also be controlled by other elements like sliders, as shown in the\r\n+example, by implementing the \\c onValueChanged handler to update the Map\r\n+\\l {QtLocation5::Map::}{zoomLevel}.\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\\section1 Elements\r\n+\r\n+\\section3 Positioning\r\n+\\annotatedlist qml-QtLocation5-positioning\r\n+\r\n+\\section3 Maps\r\n+\\annotatedlist qml-QtLocation5-maps\r\n+\r\n+\\section3 Geocoding\r\n+\\annotatedlist qml-QtLocation5-geocoding\r\n+\r\n+\\section3 Routing\r\n+\\annotatedlist qml-QtLocation5-routing\r\n+\r\n+\r\n+\r\n+\\section1 Example\r\n+\r\n+The above snippets are taken from the \\l {Declarative Map Viewer Example}.\r\n+\r\n+*/\r\n+\r\n""}",resource,"resource 
",feature;
11670.0,11670.0,test ,Jason McDonald,Cleanup corelib autotests.,"Cleanup corelib autotests.

When using QSignalSpy, always verify that the signal spy is valid.  This
will cause the test to give a meaningful failure when spying on a
non-existant signal.  Without this change, tests that spy on a signal to
ensure that it is not emitted (i.e. by comparing the spy count to zero)
could pass erroneously if something went wrong when creating the signal
spy, as an invalid QSignalSpy will always return a count of zero.

Change-Id: I41f4a63d9f0de9190a86de237662dc96be802446","['tests/auto/corelib/io/qprocess/tst_qprocess.cpp', 'tests/auto/corelib/kernel/qeventloop/tst_qeventloop.cpp', 'tests/auto/corelib/concurrent/qfuturewatcher/tst_qfuturewatcher.cpp', 'tests/auto/corelib/io/qfile/tst_qfile.cpp', 'tests/auto/corelib/io/qfilesystemwatcher/tst_qfilesystemwatcher.cpp', 'tests/auto/corelib/statemachine/qstatemachine/tst_qstatemachine.cpp', 'tests/auto/corelib/itemmodels/qabstractitemmodel/tst_qabstractitemmodel.cpp', 'tests/auto/corelib/animation/qpropertyanimation/tst_qpropertyanimation.cpp', 'tests/auto/corelib/itemmodels/qsortfilterproxymodel/tst_qsortfilterproxymodel.cpp', 'tests/auto/corelib/animation/qanimationgroup/tst_qanimationgroup.cpp', 'tests/auto/corelib/kernel/qmetaobject/tst_qmetaobject.cpp', 'tests/auto/corelib/kernel/qsocketnotifier/tst_qsocketnotifier.cpp', 'tests/auto/corelib/plugin/qpluginloader/tst_qpluginloader.cpp', 'tests/auto/corelib/tools/qtimeline/tst_qtimeline.cpp', 'tests/auto/corelib/itemmodels/qidentityproxymodel/tst_qidentityproxymodel.cpp', 'tests/auto/corelib/itemmodels/qitemselectionmodel/tst_qitemselectionmodel.cpp', 'tests/auto/corelib/animation/qsequentialanimationgroup/tst_qsequentialanimationgroup.cpp', 'tests/auto/corelib/kernel/qitemmodel/tst_qitemmodel.cpp', 'tests/auto/corelib/animation/qparallelanimationgroup/tst_qparallelanimationgroup.cpp']",,test,"test
",test;
16721.0,16721.0,resource,Daniel Teske,Unconfigured Project: Update some texts,"Unconfigured Project: Update some texts

Reviewed-by: pending

Change-Id: I2ad7b98ad4674d63222bda9ef2283c4feb80a0dd","['src/plugins/qt4projectmanager/qt4projectmanagerconstants.h', 'src/plugins/qt4projectmanager/unconfiguredprojectpanel.cpp']","{""qt4projectmanagerconstants.h"": ""@@ -103,7 +103,7 @@ const char QMAKEVAR_DECLARATIVE_DEBUG[] = \""CONFIG+=declarative_debug\"";\n \n // Unconfigured Settings page\n const char UNCONFIGURED_SETTINGS_PAGE_ID[] = \""R.UnconfiguredSettings\"";\n-const char UNCONFIGURED_SETTINGS_PAGE_NAME[] = QT_TRANSLATE_NOOP(\""Qt4ProjectManager\"", \""Unconfigured Project Settings\"");\n+const char UNCONFIGURED_SETTINGS_PAGE_NAME[] = QT_TRANSLATE_NOOP(\""Qt4ProjectManager\"", \""Unconfigured Project\"");\n \n // Unconfigured Panel\n const char UNCONFIGURED_PANEL_PAGE_ID[] = \""UnconfiguredPanel\"";\n"", ""unconfiguredprojectpanel.cpp"": ""@@ -141,7 +141,7 @@ void TargetSetupPageWrapper::updateNoteText()\n     if (us.version && us.toolchain)\n         text = tr(\""<p>The project <b>%1</b> is not yet configured.</p><p>Qt Creator uses the Qt version: <b>%2</b> \""\n                   \""and the tool chain: <b>%3</b> to parse the project. You can edit \""\n-                  \""these in the <b><a href=\\\""edit\\\"">settings</a></b></p>\"")\n+                  \""these in the <b><a href=\\\""edit\\\"">otpions.</a></b></p>\"")\n                 .arg(m_project->displayName())\n                 .arg(us.version->displayName())\n                 .arg(us.toolchain->displayName());\n""}",resource,"resource 
",resource;
22118.0,22118.0,bug,Joerg Bornemann,qbs files: share.qbs updated,"qbs files: share.qbs updated

Now the Welcome screen is visible again.

Change-Id: I41aeae823c6f81dfec93111f9b4a957f812cb496",['share/share.qbs'],,bug,"resource 
",resource;
22142.0,22142.0,bug ,Jiang Jiang,Fix a crash in cursorToX() when new block is added,"Fix a crash in cursorToX() when new block is added

When an empty new block is being added, the layoutData->memory data
will be 0, thus QTextEngine::attributes() will return 0. We should
only access the attributes pointer when some text actually exist.

Task-number: QTBUG-24718
Change-Id: I9ce9f7b57bccf24099a02832ce30fb6cebfaad33",['src/gui/text/qtextlayout.cpp'],"{""qtextlayout.cpp"": ""@@ -2508,6 +2508,10 @@ qreal QTextLine::cursorToX(int *cursorPos, Edge edge) const\n     int pos = *cursorPos;\n     int itm;\n     const HB_CharAttributes *attributes = eng->attributes();\n+    if (!attributes) {\n+        *cursorPos = 0;\n+        return x.toReal();\n+    }\n     while (pos < line.from + line.length && !attributes[pos].charStop)\n         pos++;\n     if (pos == line.from + (int)line.length) {\n""}",bug,"bug 
",bug;
24180.0,24180.0,test,Jason McDonald,Re-enable qbluetoothtransferrequest test.,"Re-enable qbluetoothtransferrequest test.

This test hasn't failed in CI since December 2011.

Task-number: QTBUG-22017
Change-Id: Ic963bd742cb0007c1d0634f38aae3c470d607682",['tests/auto/qbluetoothtransferrequest/qbluetoothtransferrequest.pro'],"{""qbluetoothtransferrequest.pro"": ""@@ -3,5 +3,3 @@ TARGET=tst_qbluetoothtransferrequest\n CONFIG += testcase\n \n QT = core concurrent bluetooth testlib\n-\n-CONFIG += insignificant_test    # QTBUG-22017\n""}",test,"test 
",bug;resource;test;
16818.0,16818.0,bug; refactor,Marc Mutz,QEasingCurve: simplify and fix copy constructor,"QEasingCurve: simplify and fix copy constructor

The copy constructor used the default Private constructor,
followed by the application of the compiler-generated
copy assignment operator, and finally replaced the config
member with a copy of itself.

This is needlessly inefficient.

Worse: it's incorrect: if config->copy() throws, then
*d_ptr is leaked.

Solution: implement the copy constructor for Private,
and use it in the copy constructor of the public class.

Effect: everything that can throw now prevents the new
Private class from being created, and the compiler ends
up cleaning up after us.

Change-Id: I09ed18bb39ee7cd81aaa8ba01676fc202502a8e3",['src/corelib/tools/qeasingcurve.cpp'],"{""qeasingcurve.cpp"": ""@@ -419,6 +419,11 @@ public:\n           config(0),\n           func(&easeNone)\n     { }\n+    QEasingCurvePrivate(const QEasingCurvePrivate &other)\n+        : type(other.type),\n+          config(other.config ? other.config->copy() : 0),\n+          func(other.func)\n+    { }\n     ~QEasingCurvePrivate() { delete config; }\n     void setType_helper(QEasingCurve::Type);\n \n@@ -1080,12 +1085,9 @@ QEasingCurve::QEasingCurve(Type type)\n     Construct a copy of \\a other.\n  */\n QEasingCurve::QEasingCurve(const QEasingCurve &other)\n-    : d_ptr(new QEasingCurvePrivate)\n+    : d_ptr(new QEasingCurvePrivate(*other.d_ptr))\n {\n     // ### non-atomic, requires malloc on shallow copy\n-    *d_ptr = *other.d_ptr;\n-    if (other.d_ptr->config)\n-        d_ptr->config = other.d_ptr->config->copy();\n }\n \n /*!\n""}",bug; refactor,"bug, refactor 
",bug;feature;resource;
13114.0,13114.0,test,hjk,"autotools: style, more 'using', less typing.","autotools: style, more 'using', less typing.

Change-Id: I27e8843d5278d1b1a33bd7bdce2f0e721adbd725","['src/plugins/autotoolsprojectmanager/autogenstep.cpp', 'src/plugins/autotoolsprojectmanager/autotoolstarget.cpp', 'src/plugins/autotoolsprojectmanager/autotoolsprojectnode.cpp', 'src/plugins/autotoolsprojectmanager/autotoolsbuildconfiguration.cpp', 'src/plugins/autotoolsprojectmanager/makestep.cpp', 'src/plugins/autotoolsprojectmanager/autotoolsmanager.cpp', 'src/plugins/autotoolsprojectmanager/configurestep.cpp', 'src/plugins/autotoolsprojectmanager/autoreconfstep.cpp', 'src/plugins/autotoolsprojectmanager/autotoolsproject.cpp']","{""autogenstep.cpp"": ""@@ -61,7 +61,7 @@ const char AUTOGEN_STEP_ID[] = \""AutotoolsProjectManager.AutogenStep\"";\n // AutogenStepFactory class\n /////////////////////////////\n AutogenStepFactory::AutogenStepFactory(QObject *parent) :\n-    ProjectExplorer::IBuildStepFactory(parent)\n+    IBuildStepFactory(parent)\n {\n }\n \n@@ -109,9 +109,9 @@ BuildStep *AutogenStepFactory::clone(BuildStepList *parent, BuildStep *source)\n     return new AutogenStep(parent, static_cast<AutogenStep *>(source));\n }\n \n-bool AutogenStepFactory::canRestore(ProjectExplorer::BuildStepList *parent, const QVariantMap &map) const\n+bool AutogenStepFactory::canRestore(BuildStepList *parent, const QVariantMap &map) const\n {\n-    QString id(ProjectExplorer::idFromMap(map));\n+    QString id = idFromMap(map);\n     return canCreate(parent, id);\n }\n \n@@ -129,20 +129,20 @@ BuildStep *AutogenStepFactory::restore(BuildStepList *parent, const QVariantMap\n ////////////////////////\n // AutogenStep class\n ////////////////////////\n-AutogenStep::AutogenStep(ProjectExplorer::BuildStepList *bsl) :\n+AutogenStep::AutogenStep(BuildStepList *bsl) :\n     AbstractProcessStep(bsl, QLatin1String(AUTOGEN_STEP_ID)),\n     m_runAutogen(false)\n {\n     ctor();\n }\n \n-AutogenStep::AutogenStep(ProjectExplorer::BuildStepList *bsl, const QString &id) :\n+AutogenStep::AutogenStep(BuildStepList *bsl, const QString &id) :\n     AbstractProcessStep(bsl, id)\n {\n     ctor();\n }\n \n-AutogenStep::AutogenStep(ProjectExplorer::BuildStepList *bsl, AutogenStep *bs) :\n+AutogenStep::AutogenStep(BuildStepList *bsl, AutogenStep *bs) :\n     AbstractProcessStep(bsl, bs),\n     m_additionalArguments(bs->additionalArguments())\n {\n@@ -200,7 +200,7 @@ void AutogenStep::run(QFutureInterface<bool> &interface)\n     AbstractProcessStep::run(interface);\n }\n \n-ProjectExplorer::BuildStepConfigWidget* AutogenStep::createConfigWidget()\n+BuildStepConfigWidget *AutogenStep::createConfigWidget()\n {\n     return new AutogenStepConfigWidget(this);\n }\n"", ""autoreconfstep.cpp"": ""@@ -60,7 +60,7 @@ const char AUTORECONF_ADDITIONAL_ARGUMENTS_KEY[] = \""AutotoolsProjectManager.Auto\n // AutoreconfStepFactory class\n ////////////////////////////////\n AutoreconfStepFactory::AutoreconfStepFactory(QObject *parent) :\n-    ProjectExplorer::IBuildStepFactory(parent)\n+    IBuildStepFactory(parent)\n {\n }\n \n@@ -108,9 +108,9 @@ BuildStep *AutoreconfStepFactory::clone(BuildStepList *parent, BuildStep *source\n     return new AutoreconfStep(parent, static_cast<AutoreconfStep *>(source));\n }\n \n-bool AutoreconfStepFactory::canRestore(ProjectExplorer::BuildStepList *parent, const QVariantMap &map) const\n+bool AutoreconfStepFactory::canRestore(BuildStepList *parent, const QVariantMap &map) const\n {\n-    QString id(ProjectExplorer::idFromMap(map));\n+    QString id = idFromMap(map);\n     return canCreate(parent, id);\n }\n \n@@ -128,20 +128,20 @@ BuildStep *AutoreconfStepFactory::restore(BuildStepList *parent, const QVariantM\n /////////////////////////\n // AutoreconfStep class\n /////////////////////////\n-AutoreconfStep::AutoreconfStep(ProjectExplorer::BuildStepList *bsl) :\n+AutoreconfStep::AutoreconfStep(BuildStepList *bsl) :\n     AbstractProcessStep(bsl, QLatin1String(AUTORECONF_STEP_ID)),\n     m_runAutoreconf(false)\n {\n     ctor();\n }\n \n-AutoreconfStep::AutoreconfStep(ProjectExplorer::BuildStepList *bsl, const QString &id) :\n+AutoreconfStep::AutoreconfStep(BuildStepList *bsl, const QString &id) :\n     AbstractProcessStep(bsl, id)\n {\n     ctor();\n }\n \n-AutoreconfStep::AutoreconfStep(ProjectExplorer::BuildStepList *bsl, AutoreconfStep *bs) :\n+AutoreconfStep::AutoreconfStep(BuildStepList *bsl, AutoreconfStep *bs) :\n     AbstractProcessStep(bsl, bs),\n     m_additionalArguments(bs->additionalArguments())\n {\n@@ -194,7 +194,7 @@ void AutoreconfStep::run(QFutureInterface<bool> &interface)\n     AbstractProcessStep::run(interface);\n }\n \n-ProjectExplorer::BuildStepConfigWidget* AutoreconfStep::createConfigWidget()\n+BuildStepConfigWidget *AutoreconfStep::createConfigWidget()\n {\n     return new AutoreconfStepConfigWidget(this);\n }\n"", ""autotoolsbuildconfiguration.cpp"": ""@@ -50,13 +50,16 @@\n #include <QtGui/QInputDialog>\n \n using namespace AutotoolsProjectManager;\n+using namespace AutotoolsProjectManager::Constants;\n using namespace Internal;\n+using namespace ProjectExplorer;\n+using namespace ProjectExplorer::Constants;\n \n //////////////////////////////////////\n // AutotoolsBuildConfiguration class\n //////////////////////////////////////\n AutotoolsBuildConfiguration::AutotoolsBuildConfiguration(AutotoolsTarget *parent)\n-    : BuildConfiguration(parent, QLatin1String(Constants::AUTOTOOLS_BC_ID))\n+    : BuildConfiguration(parent, QLatin1String(AUTOTOOLS_BC_ID))\n {\n     m_buildDirectory = autotoolsTarget()->defaultBuildDirectory();\n }\n@@ -75,8 +78,8 @@ AutotoolsBuildConfiguration::AutotoolsBuildConfiguration(AutotoolsTarget *parent\n \n QVariantMap AutotoolsBuildConfiguration::toMap() const\n {\n-    QVariantMap map = ProjectExplorer::BuildConfiguration::toMap();\n-    map.insert(QLatin1String(Constants::BUILD_DIRECTORY_KEY), m_buildDirectory);\n+    QVariantMap map = BuildConfiguration::toMap();\n+    map.insert(QLatin1String(BUILD_DIRECTORY_KEY), m_buildDirectory);\n     return map;\n }\n \n@@ -85,7 +88,7 @@ bool AutotoolsBuildConfiguration::fromMap(const QVariantMap &map)\n     if (!BuildConfiguration::fromMap(map))\n         return false;\n \n-    m_buildDirectory = map.value(QLatin1String(Constants::BUILD_DIRECTORY_KEY), autotoolsTarget()->defaultBuildDirectory()).toString();\n+    m_buildDirectory = map.value(QLatin1String(BUILD_DIRECTORY_KEY), autotoolsTarget()->defaultBuildDirectory()).toString();\n     return true;\n }\n \n@@ -107,9 +110,9 @@ AutotoolsTarget *AutotoolsBuildConfiguration::autotoolsTarget() const\n     return static_cast<AutotoolsTarget *>(target());\n }\n \n-ProjectExplorer::IOutputParser *AutotoolsBuildConfiguration::createOutputParser() const\n+IOutputParser *AutotoolsBuildConfiguration::createOutputParser() const\n {\n-    ProjectExplorer::ToolChain *tc = autotoolsTarget()->autotoolsProject()->toolChain();\n+    ToolChain *tc = autotoolsTarget()->autotoolsProject()->toolChain();\n     if (tc)\n         return tc->outputParser();\n     return 0;\n@@ -119,34 +122,34 @@ ProjectExplorer::IOutputParser *AutotoolsBuildConfiguration::createOutputParser(\n // AutotoolsBuildConfiguration class\n //////////////////////////////////////\n AutotoolsBuildConfigurationFactory::AutotoolsBuildConfigurationFactory(QObject *parent) :\n-    ProjectExplorer::IBuildConfigurationFactory(parent)\n+    IBuildConfigurationFactory(parent)\n {\n }\n \n-QStringList AutotoolsBuildConfigurationFactory::availableCreationIds(ProjectExplorer::Target *parent) const\n+QStringList AutotoolsBuildConfigurationFactory::availableCreationIds(Target *parent) const\n {\n     if (!qobject_cast<AutotoolsTarget *>(parent))\n         return QStringList();\n-    return QStringList() << QLatin1String(Constants::AUTOTOOLS_BC_ID);\n+    return QStringList() << QLatin1String(AUTOTOOLS_BC_ID);\n }\n \n QString AutotoolsBuildConfigurationFactory::displayNameForId(const QString &id) const\n {\n-    if (id == QLatin1String(Constants::AUTOTOOLS_BC_ID))\n+    if (id == QLatin1String(AUTOTOOLS_BC_ID))\n         return tr(\""Build\"");\n     return QString();\n }\n \n-bool AutotoolsBuildConfigurationFactory::canCreate(ProjectExplorer::Target *parent, const QString &id) const\n+bool AutotoolsBuildConfigurationFactory::canCreate(Target *parent, const QString &id) const\n {\n     if (!qobject_cast<AutotoolsTarget *>(parent))\n         return false;\n-    if (id == QLatin1String(Constants::AUTOTOOLS_BC_ID))\n+    if (id == QLatin1String(AUTOTOOLS_BC_ID))\n         return true;\n     return false;\n }\n \n-AutotoolsBuildConfiguration *AutotoolsBuildConfigurationFactory::create(ProjectExplorer::Target *parent, const QString &id)\n+AutotoolsBuildConfiguration *AutotoolsBuildConfigurationFactory::create(Target *parent, const QString &id)\n {\n     if (!canCreate(parent, id))\n         return 0;\n@@ -167,10 +170,10 @@ AutotoolsBuildConfiguration *AutotoolsBuildConfigurationFactory::create(ProjectE\n     bc->setDisplayName(buildConfigurationName);\n \n     t->addBuildConfiguration(bc);\n-    t->addDeployConfiguration(t->createDeployConfiguration(ProjectExplorer::Constants::DEFAULT_DEPLOYCONFIGURATION_ID));\n+    t->addDeployConfiguration(t->createDeployConfiguration(DEFAULT_DEPLOYCONFIGURATION_ID));\n     // User needs to choose where the executable file is.\n     // TODO: Parse the file in *Anjuta style* to be able to add custom RunConfigurations.\n-    t->addRunConfiguration(new ProjectExplorer::CustomExecutableRunConfiguration(t));\n+    t->addRunConfiguration(new CustomExecutableRunConfiguration(t));\n \n     return bc;\n }\n@@ -178,7 +181,7 @@ AutotoolsBuildConfiguration *AutotoolsBuildConfigurationFactory::create(ProjectE\n AutotoolsBuildConfiguration *AutotoolsBuildConfigurationFactory::createDefaultConfiguration(AutotoolsTarget *target) const\n {\n     AutotoolsBuildConfiguration *bc = new AutotoolsBuildConfiguration(target);\n-    ProjectExplorer::BuildStepList *buildSteps = bc->stepList(ProjectExplorer::Constants::BUILDSTEPS_BUILD);\n+    BuildStepList *buildSteps = bc->stepList(BUILDSTEPS_BUILD);\n \n     // ### Build Steps Build ###\n     // autogen.sh or autoreconf\n@@ -202,7 +205,7 @@ AutotoolsBuildConfiguration *AutotoolsBuildConfigurationFactory::createDefaultCo\n     makeStep->setBuildTarget(QLatin1String(\""all\""),  /*on =*/ true);\n \n     // ### Build Steps Clean ###\n-    ProjectExplorer::BuildStepList *cleanSteps = bc->stepList(ProjectExplorer::Constants::BUILDSTEPS_CLEAN);\n+    BuildStepList *cleanSteps = bc->stepList(BUILDSTEPS_CLEAN);\n     MakeStep *cleanMakeStep = new MakeStep(cleanSteps);\n     cleanMakeStep->setAdditionalArguments(QLatin1String(\""clean\""));\n     cleanMakeStep->setClean(true);\n@@ -211,12 +214,12 @@ AutotoolsBuildConfiguration *AutotoolsBuildConfigurationFactory::createDefaultCo\n     return bc;\n }\n \n-bool AutotoolsBuildConfigurationFactory::canClone(ProjectExplorer::Target *parent, ProjectExplorer::BuildConfiguration *source) const\n+bool AutotoolsBuildConfigurationFactory::canClone(Target *parent, BuildConfiguration *source) const\n {\n     return canCreate(parent, source->id());\n }\n \n-AutotoolsBuildConfiguration *AutotoolsBuildConfigurationFactory::clone(ProjectExplorer::Target *parent, ProjectExplorer::BuildConfiguration *source)\n+AutotoolsBuildConfiguration *AutotoolsBuildConfigurationFactory::clone(Target *parent, BuildConfiguration *source)\n {\n     if (!canClone(parent, source))\n         return 0;\n@@ -226,13 +229,13 @@ AutotoolsBuildConfiguration *AutotoolsBuildConfigurationFactory::clone(ProjectEx\n     return new AutotoolsBuildConfiguration(target, origin);\n }\n \n-bool AutotoolsBuildConfigurationFactory::canRestore(ProjectExplorer::Target *parent, const QVariantMap &map) const\n+bool AutotoolsBuildConfigurationFactory::canRestore(Target *parent, const QVariantMap &map) const\n {\n-    QString id(ProjectExplorer::idFromMap(map));\n+    QString id = idFromMap(map);\n     return canCreate(parent, id);\n }\n \n-AutotoolsBuildConfiguration *AutotoolsBuildConfigurationFactory::restore(ProjectExplorer::Target *parent, const QVariantMap &map)\n+AutotoolsBuildConfiguration *AutotoolsBuildConfigurationFactory::restore(Target *parent, const QVariantMap &map)\n {\n     if (!canRestore(parent, map))\n         return 0;\n@@ -244,7 +247,7 @@ AutotoolsBuildConfiguration *AutotoolsBuildConfigurationFactory::restore(Project\n     return 0;\n }\n \n-ProjectExplorer::BuildConfiguration::BuildType AutotoolsBuildConfiguration::buildType() const\n+BuildConfiguration::BuildType AutotoolsBuildConfiguration::buildType() const\n {\n     // TODO: Should I return something different from Unknown?\n     return Unknown;\n"", ""autotoolsmanager.cpp"": ""@@ -43,10 +43,12 @@\n #include <projectexplorer/projectexplorer.h>\n #include <projectexplorer/session.h>\n \n+using namespace ProjectExplorer;\n+\n namespace AutotoolsProjectManager {\n namespace Internal {\n \n-ProjectExplorer::Project *AutotoolsManager::openProject(const QString &fileName, QString *errorString)\n+Project *AutotoolsManager::openProject(const QString &fileName, QString *errorString)\n {\n     QString canonicalFilePath = QFileInfo(fileName).canonicalFilePath();\n \n@@ -58,8 +60,8 @@ ProjectExplorer::Project *AutotoolsManager::openProject(const QString &fileName,\n     }\n \n     // Check whether the project is already open or not.\n-    ProjectExplorer::ProjectExplorerPlugin *projectExplorer = ProjectExplorer::ProjectExplorerPlugin::instance();\n-    foreach (ProjectExplorer::Project *pi, projectExplorer->session()->projects()) {\n+    ProjectExplorerPlugin *projectExplorer = ProjectExplorerPlugin::instance();\n+    foreach (Project *pi, projectExplorer->session()->projects()) {\n         if (canonicalFilePath == pi->file()->fileName()) {\n             *errorString = tr(\""Failed opening project '%1': Project already open\"")\n                              .arg(QDir::toNativeSeparators(canonicalFilePath));\n"", ""autotoolsproject.cpp"": ""@@ -138,7 +138,7 @@ Core::IFile *AutotoolsProject::file() const\n     return m_file;\n }\n \n-ProjectExplorer::IProjectManager* AutotoolsProject::projectManager() const\n+IProjectManager *AutotoolsProject::projectManager() const\n {\n     return m_manager;\n }\n@@ -148,7 +148,7 @@ AutotoolsTarget *AutotoolsProject::activeTarget() const\n     return static_cast<AutotoolsTarget *>(Project::activeTarget());\n }\n \n-QList<ProjectExplorer::Project *> AutotoolsProject::dependsOn()\n+QList<Project *> AutotoolsProject::dependsOn()\n {\n     return QList<Project *>();\n }\n@@ -158,14 +158,12 @@ QString AutotoolsProject::defaultBuildDirectory() const\n     return sourceDirectory();\n }\n \n-QList<ProjectExplorer::BuildConfigWidget*> AutotoolsProject::subConfigWidgets()\n+QList<BuildConfigWidget *> AutotoolsProject::subConfigWidgets()\n {\n-    QList<ProjectExplorer::BuildConfigWidget*> list;\n-    list << new BuildEnvironmentWidget;\n-    return list;\n+    return QList<BuildConfigWidget *>() << new BuildEnvironmentWidget;\n }\n \n-ProjectExplorer::ProjectNode *AutotoolsProject::rootProjectNode() const\n+ProjectNode *AutotoolsProject::rootProjectNode() const\n {\n     return m_rootNode;\n }\n@@ -229,10 +227,8 @@ bool AutotoolsProject::fromMap(const QVariantMap &map)\n     if (!id.isNull()) {\n         setToolChain(toolChainManager->findToolChain(id));\n     } else {\n-        ProjectExplorer::Abi abi = ProjectExplorer::Abi::hostAbi();\n-        abi = ProjectExplorer::Abi(abi.architecture(),\n-                               abi.os(),\n-                               ProjectExplorer::Abi::UnknownFlavor,\n+        Abi abi = Abi::hostAbi();\n+        abi = Abi(abi.architecture(), abi.os(), Abi::UnknownFlavor,\n                                abi.binaryFormat(), abi.wordWidth() == 32 ? 32 : 0);\n         QList<ToolChain *> tcs = toolChainManager->findToolChains(abi);\n         if (tcs.isEmpty())\n@@ -364,17 +360,17 @@ void AutotoolsProject::buildFileNodeTree(const QDir &directory,\n     // Get all existing nodes and remember them in a hash table.\n     // This allows to reuse existing nodes and to remove obsolete\n     // nodes later.\n-    QHash<QString, ProjectExplorer::Node *> nodeHash;\n-    foreach (ProjectExplorer::Node * node, nodes(m_rootNode))\n+    QHash<QString, Node *> nodeHash;\n+    foreach (Node * node, nodes(m_rootNode))\n         nodeHash.insert(node->path(), node);\n \n     // Add the sources to the filenode project tree. Sources\n     // inside the same directory are grouped into a folder-node.\n     const QString baseDir = directory.absolutePath();\n \n-    QList<ProjectExplorer::FileNode *> fileNodes;\n-    ProjectExplorer::FolderNode *parentFolder = 0;\n-    ProjectExplorer::FolderNode *oldParentFolder = 0;\n+    QList<FileNode *> fileNodes;\n+    FolderNode *parentFolder = 0;\n+    FolderNode *oldParentFolder = 0;\n \n     foreach (const QString& file, files) {\n         if (file.contains(QLatin1String(\"".moc\"")))\n@@ -392,8 +388,8 @@ void AutotoolsProject::buildFileNodeTree(const QDir &directory,\n         oldParentFolder = parentFolder;\n         parentFolder = 0;\n         if (nodeHash.contains(subDir)) {\n-            QTC_ASSERT(nodeHash[subDir]->nodeType() == ProjectExplorer::FolderNodeType, return);\n-            parentFolder = static_cast<ProjectExplorer::FolderNode*>(nodeHash[subDir]);\n+            QTC_ASSERT(nodeHash[subDir]->nodeType() == FolderNodeType, return);\n+            parentFolder = static_cast<FolderNode *>(nodeHash[subDir]);\n         } else {\n             parentFolder = insertFolderNode(QDir(subDir), nodeHash);\n             if (parentFolder == 0) {\n@@ -415,11 +411,7 @@ void AutotoolsProject::buildFileNodeTree(const QDir &directory,\n         if (nodeHash.contains(filePath)) {\n             nodeHash.remove(filePath);\n         } else {\n-            ProjectExplorer::FileNode *node =\n-                    new ProjectExplorer::FileNode(filePath,\n-                                                  ProjectExplorer::ResourceType,\n-                                                  false);\n-            fileNodes.append(node);\n+            fileNodes.append(new FileNode(filePath, ResourceType, false));\n         }\n     }\n \n@@ -427,17 +419,17 @@ void AutotoolsProject::buildFileNodeTree(const QDir &directory,\n         m_rootNode->addFileNodes(fileNodes, parentFolder);\n \n     // Remove unused file nodes and empty folder nodes\n-    QHash<QString, ProjectExplorer::Node *>::const_iterator it = nodeHash.constBegin();\n+    QHash<QString, Node *>::const_iterator it = nodeHash.constBegin();\n     while (it != nodeHash.constEnd()) {\n-        if ((*it)->nodeType() == ProjectExplorer::FileNodeType) {\n-            ProjectExplorer::FileNode *fileNode = static_cast<ProjectExplorer::FileNode *>(*it);\n-            ProjectExplorer::FolderNode* parent = fileNode->parentFolderNode();\n-            m_rootNode->removeFileNodes(QList<ProjectExplorer::FileNode *>() << fileNode, parent);\n+        if ((*it)->nodeType() == FileNodeType) {\n+            FileNode *fileNode = static_cast<FileNode *>(*it);\n+            FolderNode* parent = fileNode->parentFolderNode();\n+            m_rootNode->removeFileNodes(QList<FileNode *>() << fileNode, parent);\n \n             // Remove all empty parent folders\n             while (parent->subFolderNodes().isEmpty() && parent->fileNodes().isEmpty()) {\n-                ProjectExplorer::FolderNode *grandParent = parent->parentFolderNode();\n-                m_rootNode->removeFolderNodes(QList<ProjectExplorer::FolderNode *>() << parent, grandParent);\n+                FolderNode *grandParent = parent->parentFolderNode();\n+                m_rootNode->removeFolderNodes(QList<FolderNode *>() << parent, grandParent);\n                 parent = grandParent;\n                 if (parent == m_rootNode)\n                     break;\n@@ -447,8 +439,7 @@ void AutotoolsProject::buildFileNodeTree(const QDir &directory,\n     }\n }\n \n-ProjectExplorer::FolderNode *AutotoolsProject::insertFolderNode(const QDir &nodeDir,\n-                                                                QHash<QString, ProjectExplorer::Node *> &nodes)\n+FolderNode *AutotoolsProject::insertFolderNode(const QDir &nodeDir, QHash<QString, Node *> &nodes)\n {\n     const QString nodePath = nodeDir.absolutePath();\n     QFileInfo rootInfo(m_rootNode->path());\n@@ -458,41 +449,41 @@ ProjectExplorer::FolderNode *AutotoolsProject::insertFolderNode(const QDir &node\n     if (rootPath == nodePath)\n         return 0;\n \n-    ProjectExplorer::FolderNode *folder = new ProjectExplorer::FolderNode(nodePath);\n+    FolderNode *folder = new FolderNode(nodePath);\n     QDir dir(nodeDir);\n     folder->setDisplayName(dir.dirName());\n \n     // Get parent-folder. If it does not exist, create it recursively.\n     // Take care that the m_rootNode is considered as top folder.\n-    ProjectExplorer::FolderNode *parentFolder = m_rootNode;\n+    FolderNode *parentFolder = m_rootNode;\n     if ((rootPath != folder->path()) && dir.cdUp()) {\n         const QString parentDir = dir.absolutePath();\n         if (!nodes.contains(parentDir)) {\n-            ProjectExplorer::FolderNode *insertedFolder = insertFolderNode(parentDir, nodes);\n+            FolderNode *insertedFolder = insertFolderNode(parentDir, nodes);\n             if (insertedFolder != 0)\n                 parentFolder = insertedFolder;\n         } else {\n-            QTC_ASSERT(nodes[parentDir]->nodeType() == ProjectExplorer::FolderNodeType, return 0);\n-            parentFolder = static_cast<ProjectExplorer::FolderNode *>(nodes[parentDir]);\n+            QTC_ASSERT(nodes[parentDir]->nodeType() == FolderNodeType, return 0);\n+            parentFolder = static_cast<FolderNode *>(nodes[parentDir]);\n         }\n     }\n \n-    m_rootNode->addFolderNodes(QList<ProjectExplorer::FolderNode *>() << folder, parentFolder);\n+    m_rootNode->addFolderNodes(QList<FolderNode *>() << folder, parentFolder);\n     nodes.insert(nodePath, folder);\n \n     return folder;\n }\n \n-QList<ProjectExplorer::Node *> AutotoolsProject::nodes(ProjectExplorer::FolderNode *parent) const\n+QList<Node *> AutotoolsProject::nodes(FolderNode *parent) const\n {\n-    QList<ProjectExplorer::Node *> list;\n+    QList<Node *> list;\n     QTC_ASSERT(parent != 0, return list);\n \n-    foreach (ProjectExplorer::FolderNode *folder, parent->subFolderNodes()) {\n+    foreach (FolderNode *folder, parent->subFolderNodes()) {\n         list.append(nodes(folder));\n         list.append(folder);\n     }\n-    foreach (ProjectExplorer::FileNode *file, parent->fileNodes())\n+    foreach (FileNode *file, parent->fileNodes())\n         list.append(file);\n \n     return list;\n@@ -510,9 +501,9 @@ void AutotoolsProject::updateCppCodeModel()\n     QStringList allFrameworkPaths;\n \n     if (m_toolChain) {\n-        const QList<ProjectExplorer::HeaderPath> allHeaderPaths = m_toolChain->systemHeaderPaths();\n-        foreach (const ProjectExplorer::HeaderPath &headerPath, allHeaderPaths) {\n-            if (headerPath.kind() == ProjectExplorer::HeaderPath::FrameworkHeaderPath) {\n+        const QList<HeaderPath> allHeaderPaths = m_toolChain->systemHeaderPaths();\n+        foreach (const HeaderPath &headerPath, allHeaderPaths) {\n+            if (headerPath.kind() == HeaderPath::FrameworkHeaderPath) {\n                 allFrameworkPaths.append(headerPath.path());\n             } else {\n                 allIncludePaths.append(headerPath.path());\n"", ""autotoolsprojectnode.cpp"": ""@@ -37,9 +37,10 @@\n \n using namespace AutotoolsProjectManager;\n using namespace AutotoolsProjectManager::Internal;\n+using namespace ProjectExplorer;\n \n AutotoolsProjectNode::AutotoolsProjectNode(AutotoolsProject *project, Core::IFile *projectFile) :\n-    ProjectExplorer::ProjectNode(projectFile->fileName()),\n+    ProjectNode(projectFile->fileName()),\n     m_project(project),\n     m_projectFile(projectFile)\n {\n@@ -50,10 +51,10 @@ bool AutotoolsProjectNode::hasBuildTargets() const\n     return true;\n }\n \n-QList<ProjectExplorer::ProjectNode::ProjectAction> AutotoolsProjectNode::supportedActions(Node *node) const\n+QList<ProjectNode::ProjectAction> AutotoolsProjectNode::supportedActions(Node *node) const\n {\n     Q_UNUSED(node);\n-    return QList<ProjectExplorer::ProjectNode::ProjectAction>();\n+    return QList<ProjectNode::ProjectAction>();\n }\n \n bool AutotoolsProjectNode::canAddSubProject(const QString &proFilePath) const\n@@ -74,7 +75,7 @@ bool AutotoolsProjectNode::removeSubProjects(const QStringList &proFilePaths)\n     return false;\n }\n \n-bool AutotoolsProjectNode::addFiles(const ProjectExplorer::FileType fileType,\n+bool AutotoolsProjectNode::addFiles(const FileType fileType,\n                                     const QStringList &filePaths,\n                                     QStringList *notAdded)\n {\n@@ -84,7 +85,7 @@ bool AutotoolsProjectNode::addFiles(const ProjectExplorer::FileType fileType,\n     return false;\n }\n \n-bool AutotoolsProjectNode::removeFiles(const ProjectExplorer::FileType fileType,\n+bool AutotoolsProjectNode::removeFiles(const FileType fileType,\n                                        const QStringList &filePaths,\n                                        QStringList *notRemoved)\n {\n@@ -94,7 +95,7 @@ bool AutotoolsProjectNode::removeFiles(const ProjectExplorer::FileType fileType,\n     return false;\n }\n \n-bool AutotoolsProjectNode::deleteFiles(const ProjectExplorer::FileType fileType,\n+bool AutotoolsProjectNode::deleteFiles(const FileType fileType,\n                                        const QStringList &filePaths)\n {\n     Q_UNUSED(fileType);\n@@ -102,7 +103,7 @@ bool AutotoolsProjectNode::deleteFiles(const ProjectExplorer::FileType fileType,\n     return false;\n }\n \n-bool AutotoolsProjectNode::renameFile(const ProjectExplorer::FileType fileType,\n+bool AutotoolsProjectNode::renameFile(const FileType fileType,\n                                       const QString &filePath,\n                                       const QString &newFilePath)\n {\n@@ -112,8 +113,8 @@ bool AutotoolsProjectNode::renameFile(const ProjectExplorer::FileType fileType,\n     return false;\n }\n \n-QList<ProjectExplorer::RunConfiguration *> AutotoolsProjectNode::runConfigurationsFor(Node *node)\n+QList<RunConfiguration *> AutotoolsProjectNode::runConfigurationsFor(Node *node)\n {\n     Q_UNUSED(node);\n-    return QList<ProjectExplorer::RunConfiguration *>();\n+    return QList<RunConfiguration *>();\n }\n"", ""autotoolstarget.cpp"": ""@@ -52,10 +52,11 @@\n \n using namespace AutotoolsProjectManager;\n using namespace AutotoolsProjectManager::Internal;\n+using namespace ProjectExplorer;\n \n static QString displayNameForId(const QString &id)\n {\n-    if (id == QLatin1String(Constants::DEFAULT_AUTOTOOLS_TARGET_ID))\n+    if (id == QLatin1String(AutotoolsProjectManager::Constants::DEFAULT_AUTOTOOLS_TARGET_ID))\n         return QApplication::translate(\""AutotoolsProjectManager::Internal::AutotoolsTarget\"",\n                               \""Desktop\"", \""Autotools Default target display name\"");\n     return QString();\n@@ -66,14 +67,14 @@ static QString displayNameForId(const QString &id)\n //////////////////////////\n \n AutotoolsTarget::AutotoolsTarget(AutotoolsProject *parent) :\n-    ProjectExplorer::Target(parent, QLatin1String(Constants::DEFAULT_AUTOTOOLS_TARGET_ID)),\n+    Target(parent, QLatin1String(Constants::DEFAULT_AUTOTOOLS_TARGET_ID)),\n     m_buildConfigurationFactory(new AutotoolsBuildConfigurationFactory(this))\n {\n     setDefaultDisplayName(displayNameForId(id()));\n     setIcon(qApp->style()->standardIcon(QStyle::SP_ComputerIcon));\n }\n \n-ProjectExplorer::BuildConfigWidget *AutotoolsTarget::createConfigWidget()\n+BuildConfigWidget *AutotoolsTarget::createConfigWidget()\n {\n     return new AutotoolsBuildSettingsWidget(this);\n }\n@@ -117,7 +118,7 @@ bool AutotoolsTargetFactory::supportsTargetId(const QString &id) const\n     return id == QLatin1String(Constants::DEFAULT_AUTOTOOLS_TARGET_ID);\n }\n \n-QStringList AutotoolsTargetFactory::supportedTargetIds(ProjectExplorer::Project *parent) const\n+QStringList AutotoolsTargetFactory::supportedTargetIds(Project *parent) const\n {\n     if (!qobject_cast<AutotoolsProject *>(parent))\n         return QStringList();\n@@ -129,14 +130,14 @@ QString AutotoolsTargetFactory::displayNameForId(const QString &id) const\n     return ::displayNameForId(id);\n }\n \n-bool AutotoolsTargetFactory::canCreate(ProjectExplorer::Project *parent, const QString &id) const\n+bool AutotoolsTargetFactory::canCreate(Project *parent, const QString &id) const\n {\n     if (!qobject_cast<AutotoolsProject *>(parent))\n         return false;\n     return id == QLatin1String(Constants::DEFAULT_AUTOTOOLS_TARGET_ID);\n }\n \n-AutotoolsTarget *AutotoolsTargetFactory::create(ProjectExplorer::Project *parent, const QString &id)\n+AutotoolsTarget *AutotoolsTargetFactory::create(Project *parent, const QString &id)\n {\n     if (!canCreate(parent, id))\n         return 0;\n@@ -153,17 +154,17 @@ AutotoolsTarget *AutotoolsTargetFactory::create(ProjectExplorer::Project *parent\n     t->addDeployConfiguration(t->createDeployConfiguration(ProjectExplorer::Constants::DEFAULT_DEPLOYCONFIGURATION_ID));\n     // User needs to choose where the executable file is.\n     // TODO: Parse the file in *Anjuta style* to be able to add custom RunConfigurations.\n-    t->addRunConfiguration(new ProjectExplorer::CustomExecutableRunConfiguration(t));\n+    t->addRunConfiguration(new CustomExecutableRunConfiguration(t));\n \n     return t;\n }\n \n-bool AutotoolsTargetFactory::canRestore(ProjectExplorer::Project *parent, const QVariantMap &map) const\n+bool AutotoolsTargetFactory::canRestore(Project *parent, const QVariantMap &map) const\n {\n-    return canCreate(parent, ProjectExplorer::idFromMap(map));\n+    return canCreate(parent, idFromMap(map));\n }\n \n-AutotoolsTarget *AutotoolsTargetFactory::restore(ProjectExplorer::Project *parent, const QVariantMap &map)\n+AutotoolsTarget *AutotoolsTargetFactory::restore(Project *parent, const QVariantMap &map)\n {\n     if (!canRestore(parent, map))\n         return 0;\n"", ""configurestep.cpp"": ""@@ -61,7 +61,7 @@ const char CONFIGURE_STEP_ID[] = \""AutotoolsProjectManager.ConfigureStep\"";\n // ConfigureStepFactory Class\n ////////////////////////////////\n ConfigureStepFactory::ConfigureStepFactory(QObject *parent) :\n-    ProjectExplorer::IBuildStepFactory(parent)\n+    IBuildStepFactory(parent)\n {\n }\n \n@@ -109,9 +109,9 @@ BuildStep *ConfigureStepFactory::clone(BuildStepList *parent, BuildStep *source)\n     return new ConfigureStep(parent, static_cast<ConfigureStep *>(source));\n }\n \n-bool ConfigureStepFactory::canRestore(ProjectExplorer::BuildStepList *parent, const QVariantMap &map) const\n+bool ConfigureStepFactory::canRestore(BuildStepList *parent, const QVariantMap &map) const\n {\n-    QString id(ProjectExplorer::idFromMap(map));\n+    QString id(idFromMap(map));\n     return canCreate(parent, id);\n }\n \n@@ -129,20 +129,20 @@ BuildStep *ConfigureStepFactory::restore(BuildStepList *parent, const QVariantMa\n ////////////////////////\n // ConfigureStep class\n ////////////////////////\n-ConfigureStep::ConfigureStep(ProjectExplorer::BuildStepList* bsl) :\n+ConfigureStep::ConfigureStep(BuildStepList* bsl) :\n     AbstractProcessStep(bsl, QLatin1String(CONFIGURE_STEP_ID)),\n     m_runConfigure(false)\n {\n     ctor();\n }\n \n-ConfigureStep::ConfigureStep(ProjectExplorer::BuildStepList *bsl, const QString &id) :\n+ConfigureStep::ConfigureStep(BuildStepList *bsl, const QString &id) :\n     AbstractProcessStep(bsl, id)\n {\n     ctor();\n }\n \n-ConfigureStep::ConfigureStep(ProjectExplorer::BuildStepList *bsl, ConfigureStep *bs) :\n+ConfigureStep::ConfigureStep(BuildStepList *bsl, ConfigureStep *bs) :\n     AbstractProcessStep(bsl, bs),\n     m_additionalArguments(bs->additionalArguments())\n {\n@@ -198,7 +198,7 @@ void ConfigureStep::run(QFutureInterface<bool>& interface)\n     AbstractProcessStep::run(interface);\n }\n \n-ProjectExplorer::BuildStepConfigWidget* ConfigureStep::createConfigWidget()\n+BuildStepConfigWidget *ConfigureStep::createConfigWidget()\n {\n     return new ConfigureStepConfigWidget(this);\n }\n"", ""makestep.cpp"": ""@@ -51,7 +51,9 @@\n \n using namespace AutotoolsProjectManager;\n using namespace AutotoolsProjectManager::Internal;\n+using namespace AutotoolsProjectManager::Constants;\n using namespace ProjectExplorer;\n+using namespace ProjectExplorer::Constants;\n \n const char MAKE_STEP_ID[] = \""AutotoolsProjectManager.MakeStep\"";\n const char CLEAN_KEY[]  = \""AutotoolsProjectManager.MakeStep.Clean\"";\n@@ -62,13 +64,13 @@ const char MAKE_STEP_ADDITIONAL_ARGUMENTS_KEY[] = \""AutotoolsProjectManager.MakeS\n // MakeStepFactory class\n //////////////////////////\n MakeStepFactory::MakeStepFactory(QObject *parent) :\n-    ProjectExplorer::IBuildStepFactory(parent)\n+    IBuildStepFactory(parent)\n {\n }\n \n QStringList MakeStepFactory::availableCreationIds(BuildStepList *parent) const\n {\n-    if (parent->target()->project()->id() == QLatin1String(Constants::AUTOTOOLS_PROJECT_ID))\n+    if (parent->target()->project()->id() == QLatin1String(AUTOTOOLS_PROJECT_ID))\n         return QStringList() << QLatin1String(MAKE_STEP_ID);\n     return QStringList();\n }\n@@ -82,10 +84,10 @@ QString MakeStepFactory::displayNameForId(const QString &id) const\n \n bool MakeStepFactory::canCreate(BuildStepList *parent, const QString &id) const\n {\n-    if (parent->target()->project()->id() != QLatin1String(Constants::AUTOTOOLS_PROJECT_ID))\n+    if (parent->target()->project()->id() != QLatin1String(AUTOTOOLS_PROJECT_ID))\n         return false;\n \n-    if (parent->id() != ProjectExplorer::Constants::BUILDSTEPS_BUILD)\n+    if (parent->id() != BUILDSTEPS_BUILD)\n         return false;\n \n     return QLatin1String(MAKE_STEP_ID) == id;\n@@ -110,9 +112,9 @@ BuildStep *MakeStepFactory::clone(BuildStepList *parent, BuildStep *source)\n     return new MakeStep(parent, static_cast<MakeStep *>(source));\n }\n \n-bool MakeStepFactory::canRestore(ProjectExplorer::BuildStepList *parent, const QVariantMap &map) const\n+bool MakeStepFactory::canRestore(BuildStepList *parent, const QVariantMap &map) const\n {\n-    QString id(ProjectExplorer::idFromMap(map));\n+    QString id = idFromMap(map);\n     return canCreate(parent, id);\n }\n \n@@ -130,21 +132,21 @@ BuildStep *MakeStepFactory::restore(BuildStepList *parent, const QVariantMap &ma\n /////////////////////\n // MakeStep class\n /////////////////////\n-MakeStep::MakeStep(ProjectExplorer::BuildStepList* bsl) :\n+MakeStep::MakeStep(BuildStepList* bsl) :\n     AbstractProcessStep(bsl, QLatin1String(MAKE_STEP_ID)),\n     m_clean(false)\n {\n     ctor();\n }\n \n-MakeStep::MakeStep(ProjectExplorer::BuildStepList *bsl, const QString &id) :\n+MakeStep::MakeStep(BuildStepList *bsl, const QString &id) :\n     AbstractProcessStep(bsl, id),\n     m_clean(false)\n {\n     ctor();\n }\n \n-MakeStep::MakeStep(ProjectExplorer::BuildStepList *bsl, MakeStep *bs) :\n+MakeStep::MakeStep(BuildStepList *bsl, MakeStep *bs) :\n     AbstractProcessStep(bsl, bs),\n     m_buildTargets(bs->m_buildTargets),\n     m_additionalArguments(bs->additionalArguments()),\n@@ -185,7 +187,7 @@ bool MakeStep::init()\n     pp->setCommand(bc->toolChain()->makeCommand());\n     pp->setArguments(arguments);\n \n-    setOutputParser(new ProjectExplorer::GnuMakeParser());\n+    setOutputParser(new GnuMakeParser());\n     if (bc->autotoolsTarget()->autotoolsProject()->toolChain())\n         appendOutputParser(bc->autotoolsTarget()->autotoolsProject()->toolChain()->outputParser());\n     outputParser()->setWorkingDirectory(pp->effectiveWorkingDirectory());\n@@ -198,7 +200,7 @@ void MakeStep::run(QFutureInterface<bool> &interface)\n     AbstractProcessStep::run(interface);\n }\n \n-ProjectExplorer::BuildStepConfigWidget *MakeStep::createConfigWidget()\n+BuildStepConfigWidget *MakeStep::createConfigWidget()\n {\n     return new MakeStepConfigWidget(this);\n }\n@@ -291,7 +293,7 @@ QString MakeStepConfigWidget::summaryText() const\n void MakeStepConfigWidget::updateDetails()\n {\n     AutotoolsBuildConfiguration *bc = m_makeStep->autotoolsBuildConfiguration();\n-    ProjectExplorer::ToolChain *tc = bc->toolChain();\n+    ToolChain *tc = bc->toolChain();\n \n     if (tc) {\n         QString arguments = Utils::QtcProcess::joinArgs(m_makeStep->m_buildTargets);\n""}",refactor,"refactor 
",refactor;
7120.0,7120.0,refactor,Christian Kamm,QmlJS: Fix black-on-black text with dark color schemes.,"QmlJS: Fix black-on-black text with dark color schemes.

Change-Id: Ie0eacf9677abe23e28eaa7b9491e6a21ea4f7dfc","['share/qtcreator/styles/inkpot.xml', 'share/qtcreator/styles/darkvim.xml']","{""darkvim.xml"": ""@@ -33,4 +33,15 @@\n   <style name=\""Text\"" foreground=\""#aaaaaa\"" background=\""#000000\""/>\n   <style name=\""Type\"" foreground=\""#55ff55\""/>\n   <style name=\""VirtualMethod\"" italic=\""true\""/>\n+  <style name=\""QmlTypeId\"" foreground=\""#55ff55\""/>\n+  <style name=\""Binding\"" foreground=\""#ff5555\""/>\n+  <style name=\""QmlLocalId\"" italic=\""true\""/>\n+  <style name=\""QmlRootObjectProperty\"" italic=\""true\""/>\n+  <style name=\""QmlScopeObjectProperty\"" italic=\""true\""/>\n+  <style name=\""QmlStateName\"" italic=\""true\""/>\n+  <style name=\""QmlExternalId\"" foreground=\""#aaaaff\"" italic=\""true\""/>\n+  <style name=\""QmlExternalObjectProperty\"" foreground=\""#aaaaff\"" italic=\""true\""/>\n+  <style name=\""JsScopeVar\"" foreground=\""#8888ff\"" italic=\""true\""/>\n+  <style name=\""JsImportVar\"" foreground=\""#8888ff\"" italic=\""true\""/>\n+  <style name=\""JsGlobalVar\"" foreground=\""#8888ff\"" italic=\""true\""/>\n </style-scheme>\n"", ""inkpot.xml"": ""@@ -41,4 +41,15 @@\n   <style name=\""Type\"" foreground=\""#ff8bff\""/>\n   <style name=\""VirtualMethod\"" italic=\""true\""/>\n   <style name=\""VisualWhitespace\"" foreground=\""#646482\""/>\n+  <style name=\""QmlTypeId\"" foreground=\""#ff8bff\""/>\n+  <style name=\""Binding\"" foreground=\""#ff5555\""/>\n+  <style name=\""QmlLocalId\"" italic=\""true\""/>\n+  <style name=\""QmlRootObjectProperty\"" italic=\""true\""/>\n+  <style name=\""QmlScopeObjectProperty\"" italic=\""true\""/>\n+  <style name=\""QmlStateName\"" italic=\""true\""/>\n+  <style name=\""QmlExternalId\"" foreground=\""#aaaaff\"" italic=\""true\""/>\n+  <style name=\""QmlExternalObjectProperty\"" foreground=\""#aaaaff\"" italic=\""true\""/>\n+  <style name=\""JsScopeVar\"" foreground=\""#8888ff\"" italic=\""true\""/>\n+  <style name=\""JsImportVar\"" foreground=\""#8888ff\"" italic=\""true\""/>\n+  <style name=\""JsGlobalVar\"" foreground=\""#8888ff\"" italic=\""true\""/>\n </style-scheme>\n""}",resource,"bug, resource 
",bug;resource;
20669.0,20669.0,resource,Tim Jenssen,add a qDebug in executeDetached,"add a qDebug in executeDetached

Change-Id: I704c8a1380f4f2661506ece37f0daf603d316b90",['src/libs/installer/packagemanagercore.cpp'],"{""packagemanagercore.cpp"": ""@@ -1099,6 +1099,7 @@ bool PackageManagerCore::executeDetached(const QString &program, const QStringLi\n     QStringList adjustedArguments;\n     foreach (const QString &argument, arguments)\n         adjustedArguments.append(replaceVariables(argument));\n+    qDebug() << \""run application as detached process:\"" << adjustedProgram << adjustedArguments;\n     return QProcess::startDetached(adjustedProgram, adjustedArguments);\n }\n \n""}",feature,"bug 
",bug;
2022.0,2022.0,feature,Jędrzej Nowacki,QObject bindings should not depend on QDeclarativeEngine.,"QObject bindings should not relay on QDEclarativeEngine.

QDeclarative engine is not always initialized, so generic QObject
bindings can't relay on it. For now I added runtime check, but in long
term it should be replaced by something smarter.

Change-Id: Ide1b7bee81c4bf624932728376e380e992a6d48d",['src/declarative/qml/v8/qv8qobjectwrapper.cpp'],"{""qv8qobjectwrapper.cpp"": ""@@ -676,7 +676,9 @@ v8::Handle<v8::Array> QV8QObjectWrapper::Enumerator(const v8::AccessorInfo &info\n \n     QStringList result;\n \n-    QDeclarativeEnginePrivate *ep = QDeclarativeEnginePrivate::get(resource->engine->engine());\n+    QDeclarativeEnginePrivate *ep = resource->engine->engine()\n+            ? QDeclarativeEnginePrivate::get(resource->engine->engine())\n+            : 0;\n \n     QDeclarativePropertyCache *cache = 0;\n     QDeclarativeData *ddata = QDeclarativeData::get(object);\n@@ -684,7 +686,7 @@ v8::Handle<v8::Array> QV8QObjectWrapper::Enumerator(const v8::AccessorInfo &info\n         cache = ddata->propertyCache;\n \n     if (!cache) {\n-        cache = ep->cache(object);\n+        cache = ep ? ep->cache(object) : 0;\n         if (cache) {\n             if (ddata) { cache->addref(); ddata->propertyCache = cache; }\n         } else {\n""}",bug,"bug, refactor 
",feature;
633.0,633.0,bug,hjk,debugger: add some instructions to two manual tests,"debugger: add some instructions to two manual tests

Change-Id: If90fb6348f3431c79552747a572c28cdc68557bf",['tests/manual/gdbdebugger/simple/simple_gdbtest_app.cpp'],"{""simple_gdbtest_app.cpp"": ""@@ -2719,7 +2719,12 @@ namespace bug4904 {\n         cs2.id = -1;\n         map.insert(cs1.id, cs1);\n         map.insert(cs2.id, cs2);\n-        return map.size();   // <=== break here\n+        QMap<int, CustomStruct>::iterator it = map.begin();\n+        int n = map.size();   // <=== break here\n+        // - expand map/[0]/value\n+        // - verify  map[0].key == -1\n+        // - verify  map[0].value.id == -1\n+        return n;\n     }\n \n } // namespace bug4904\n@@ -2731,12 +2736,16 @@ namespace bug5046 {\n \n     struct Foo { int a, b, c; };\n \n-    void test5046()\n+    int test5046()\n     {\n         Foo f;\n         f.a = 1;\n-        f.a = 2;\n-        f.a = 3;\n+        f.b = 2;\n+        f.c = 3;\n+        f.a = 4; // <= break here\n+        // - pop up main editor tooltip over 'f'\n+        // - verify that the entry is expandable, and expansion works\n+        return f.a;\n     }\n \n } // namespace bug5046\n@@ -2858,7 +2867,7 @@ namespace qc41700 {\n         m[\""two\""].push_back(\""1\"");\n         m[\""two\""].push_back(\""2\"");\n         m[\""two\""].push_back(\""3\"");\n-        map_t::const_iterator it = m.begin();  // [BP]\n+        map_t::const_iterator it = m.begin();  // <=== break here\n         ++it;\n         ++it;\n         ++it;\n""}",test,"test 
",bug;test;
2079.0,2079.0,test,Aaron Kennedy,Reverse lookup ids by object pointer,"Reverse lookup ids by object pointer

Task-number: QTBUG-18554

Change-Id: Ia4effb629d19aa36b835f6c09a63d9495e5c26e7","['src/declarative/qml/qdeclarativecontext.h', 'src/declarative/qml/qdeclarativecontext.cpp', 'tests/auto/declarative/qdeclarativecontext/tst_qdeclarativecontext.cpp']","{""qdeclarativecontext.cpp"": ""@@ -401,6 +401,20 @@ QVariant QDeclarativeContext::contextProperty(const QString &name) const\n     return value;\n }\n \n+/*!\n+Returns the name of \\a object in this context, or an empty string if \\a object \n+is not named in the context.  Objects are named by setContextProperty(), or by ids in\n+the case of QML created contexts.\n+\n+If the object has multiple names, the first is returned.\n+*/\n+QString QDeclarativeContext::nameForObject(QObject *object) const\n+{\n+    Q_D(const QDeclarativeContext);\n+\n+    return d->data->findObjectId(object);\n+}\n+\n /*!\n     Resolves the URL \\a src relative to the URL of the\n     containing component.\n@@ -693,12 +707,19 @@ void QDeclarativeContextData::setIdPropertyData(QDeclarativeIntegerCache *data)\n \n QString QDeclarativeContextData::findObjectId(const QObject *obj) const\n {\n-    if (!idValues || !propertyNames)\n+    if (!propertyNames)\n         return QString();\n \n-    for (int i=0; i<idValueCount; i++) {\n-        if (idValues[i] == obj)\n-            return propertyNames->findId(i);\n+    for (int ii = 0; ii < idValueCount; ii++) {\n+        if (idValues[ii] == obj)\n+            return propertyNames->findId(ii);\n+    }\n+\n+    if (publicContext) {\n+        QDeclarativeContextPrivate *p = QDeclarativeContextPrivate::get(publicContext);\n+        for (int ii = 0; ii < p->propertyValues.count(); ++ii)\n+            if (p->propertyValues.at(ii) == QVariant::fromValue((QObject *)obj))\n+                return propertyNames->findId(ii);\n     }\n \n     if (linkedContext)\n"", ""qdeclarativecontext.h"": ""@@ -83,6 +83,8 @@ public:\n     void setContextProperty(const QString &, QObject *);\n     void setContextProperty(const QString &, const QVariant &);\n \n+    QString nameForObject(QObject *) const;\n+\n     QUrl resolvedUrl(const QUrl &);\n \n     void setBaseUrl(const QUrl &);\n"", ""tst_qdeclarativecontext.cpp"": ""@@ -67,6 +67,7 @@ private slots:\n     void destruction();\n     void idAsContextProperty();\n     void readOnlyContexts();\n+    void nameForObject();\n \n private:\n     QDeclarativeEngine engine;\n@@ -463,6 +464,37 @@ void tst_qdeclarativecontext::readOnlyContexts()\n     delete obj;\n }\n \n+void tst_qdeclarativecontext::nameForObject()\n+{\n+    QObject o1;\n+    QObject o2;\n+    QObject o3;\n+\n+    QDeclarativeEngine engine;\n+\n+    // As a context property\n+    engine.rootContext()->setContextProperty(\""o1\"", &o1);\n+    engine.rootContext()->setContextProperty(\""o2\"", &o2);\n+    engine.rootContext()->setContextProperty(\""o1_2\"", &o1);\n+\n+    QCOMPARE(engine.rootContext()->nameForObject(&o1), QString(\""o1\""));\n+    QCOMPARE(engine.rootContext()->nameForObject(&o2), QString(\""o2\""));\n+    QCOMPARE(engine.rootContext()->nameForObject(&o3), QString());\n+\n+    // As an id\n+    QDeclarativeComponent component(&engine);\n+    component.setData(\""import QtQuick 1.0; QtObject { id: root; property QtObject o: QtObject { id: nested } }\"", QUrl());\n+\n+    QObject *o = component.create();\n+    QVERIFY(o != 0);\n+\n+    QCOMPARE(qmlContext(o)->nameForObject(o), QString(\""root\""));\n+    QCOMPARE(qmlContext(o)->nameForObject(qvariant_cast<QObject*>(o->property(\""o\""))), QString(\""nested\""));\n+    QCOMPARE(qmlContext(o)->nameForObject(&o1), QString());\n+\n+    delete o;\n+}\n+\n QTEST_MAIN(tst_qdeclarativecontext)\n \n #include \""tst_qdeclarativecontext.moc\""\n""}",bug,"feature,test 
",bug;
5433.0,5433.0,bug ,Rohan McGovern [inactive],tests: marked shared tests (other than license checker) as insignificant,"tests: marked shared tests (other than license checker) as insignificant

Since the initial modularization of Qt4, none of these tests have been
checked for correctness.  Let them be insignificant until they have
been validated (except the newly written known-good license checker).

Change-Id: I81a4852788bf31b9bebc33fa4cd625e44afc6f18","['tests/shared/headers/headers.pro', 'tests/shared/bic/bic.pro', 'tests/shared/symbols/symbols.pro', 'tests/shared/guiapplauncher/guiapplauncher.pro', 'tests/shared/shared.pro', 'tests/shared/compilerwarnings/compilerwarnings.pro']","{""bic.pro"": ""@@ -9,3 +9,4 @@ wince*:{\n     DEFINES += SRCDIR=\\\\\\\""$$PWD/\\\\\\\""\n }\n \n+CONFIG += insignificant_test    # QTQAINFRA-321\n"", ""compilerwarnings.pro"": ""@@ -2,3 +2,5 @@ load(qttest_p4)\n INCLUDEPATH += ../../shared\n SOURCES += tst_compilerwarnings.cpp\n QT = core\n+\n+CONFIG += insignificant_test    # QTQAINFRA-322\n"", ""guiapplauncher.pro"": ""@@ -20,3 +20,5 @@ win32:LIBS+=-luser32\n x11 {\n     LIBS += $$QMAKE_LIBS_X11\n }\n+\n+CONFIG += insignificant_test    # QTQAINFRA-323\n"", ""headers.pro"": ""@@ -1,3 +1,5 @@\n load(qttest_p4)\n SOURCES  += tst_headers.cpp\n QT = core\n+\n+CONFIG += insignificant_test    # QTQAINFRA-324\n"", ""shared.pro"": ""@@ -6,12 +6,3 @@ SUBDIRS += \\\n     symbols \\\n     guiapplauncher \\\n     compilerwarnings\n-\n-# Temporarily avoid `make check' running the guiapplauncher test.\n-# It is a bit unstable, and we need more infrastructure to handle this.\n-# Task: QTQAINFRA-146\n-check.CONFIG         = recursive\n-check.recurse        = $$SUBDIRS\n-check.recurse       -= guiapplauncher\n-check.recurse_target = check\n-QMAKE_EXTRA_TARGETS += check\n"", ""symbols.pro"": ""@@ -5,4 +5,4 @@ INCLUDEPATH += ../../shared\n SOURCES += tst_symbols.cpp\n QT = core\n \n-\n+CONFIG += insignificant_test    # QTQAINFRA-325\n""}",test,"Categories: test 
",resource;test;
19387.0,19387.0,test,Donald Carr,Remove all QWS centric examples,"Remove all QWS centric examples

Change-Id: I1bd9c40c7cc70e088a23283d1c3e89d12c1c5f7d","['examples/qws/framebuffer/framebuffer.pro', 'examples/qws/dbscreen/dbscreen.h', 'examples/qws/svgalib/svgalibpaintengine.h', 'examples/qws/svgalib/svgalib.desktop', 'examples/qws/simpledecoration/simpledecoration.pro', 'examples/qws/framebuffer/framebuffer.desktop', 'examples/qws/svgalib/svgalibpaintdevice.h', 'examples/qws/svgalib/svgalibscreen.h', 'examples/qws/svgalib/README', 'examples/qws/simpledecoration/mydecoration.h', 'examples/qws/svgalib/svgalibpaintdevice.cpp', 'examples/qws/svgalib/svgalib.pro', 'examples/qws/simpledecoration/analogclock.cpp', 'examples/qws/dbscreen/dbscreen.pro', 'examples/qws/svgalib/svgalibscreen.cpp', 'examples/qws/mousecalibration/scribblewidget.h', 'examples/qws/simpledecoration/mydecoration.cpp', 'examples/qws/mousecalibration/main.cpp', 'examples/qws/simpledecoration/simpledecoration.desktop', 'examples/qws/svgalib/svgalibsurface.h', 'examples/qws/mousecalibration/calibration.cpp', 'examples/qws/dbscreen/dbscreen.cpp', 'examples/qws/mousecalibration/mousecalibration.pro', 'examples/examples.pro', 'examples/qws/dbscreen/dbscreen.desktop', 'examples/qws/framebuffer/main.c', 'examples/qws/mousecalibration/calibration.h', 'examples/qws/README', 'examples/qws/qws.pro', 'examples/qws/svgalib/svgalibpaintengine.cpp', 'examples/qws/simpledecoration/analogclock.h', 'examples/qws/svgalib/svgalibsurface.cpp', 'examples/qws/dbscreen/dbscreendriverplugin.cpp', 'examples/qws/svgalib/svgalibplugin.cpp', 'examples/qws/mousecalibration/mousecalibration.desktop', 'examples/qws/mousecalibration/scribblewidget.cpp', 'examples/qws/simpledecoration/main.cpp']",,deprecat,"deprecate, refactor 
",deprecat;
8534.0,8534.0,deprecat,Michael Goddard,Radio systemtests,"Radio systemtests

Added some radio functionality to match the qlm radio example

Change-Id: Ie0358c3443121b638db406e095467b18b4d6b57c
Reviewed-by: Daron Andrew Edie
(cherry picked from commit 1e542df82fbcc4e3a8f75537af204f83827a4587)",['tests/systemtests/radio/sys_radio.qtt'],"{""sys_radio.qtt"": ""@@ -55,11 +55,12 @@ A device specific headset is required to be connected to device for radio testin\n  play_a_radio_transmission: function()\n     {\n         // Test meta data\n-        testApplication = \""Multimedia - Play Radio Transmission\"";\n+        testTitle = \""Multimedia - Play Radio Transmission\"";\n         testBinary = \""radio\"";\n+        testSource =\""$QTDIR/qtmultimediakit/examples/Radio\""\n         testGoal = \""Verify that radio stations can be played.\"";\n         testPreconditions = \""1. Radio reception should be available in the test area.<br>2. Wired headphones act as an antena to the device and must be connected.\"";\n-        testGroups = \""BAT\"";\n+        testGroups = \""BAT, 1.2\"";\n \n         // Test steps\n         prompt(twiki(\""---+++ \"" + testApplication + \""<br><br>\n@@ -85,11 +86,12 @@ A device specific headset is required to be connected to device for radio testin\n     radio_interrupted_by_system_notification: function()\n     {\n         // Test meta data\n-        testApplication = \""Multimedia - Play Radio With Interruptions\"";\n+        testTitle = \""Multimedia - Radio interrupted by System Notification\"";\n         testBinary = \""radio\"";\n-        testGoal = \""Verify that radio playback can be successfuly interrupted by system notifications and resume playback without issues.\"";\n-        testPreconditions = \""1. Audible system notifications should be enabled for this test.<br>2. Radio reception should be available in the test area.<br>3. Wired headphones act as an antena to the device and must be connected.\"";\n-        testGroups = \""BAT\"";\n+        testSource =\""$QTDIR/qtmultimediakit/examples/Radio\""\n+        testGoal = \""Verify that radio can recover audio playback from various system notifications.\"";\n+        testPreconditions = \""1. Radio reception should be available in the test area.<br>2. Wired headphones act as an antena to the device and must be connected.\"";\n+        testGroups = \""BAT, 1.2\"";\n \n         // Test steps\n         prompt(twiki(\""---+++ \"" + testApplication + \""<br><br>\n@@ -100,18 +102,19 @@ A device specific headset is required to be connected to device for radio testin\n            | *Step* | *Verification* |\n            | Launch \"" + testBinary + \"" | App launches normally |\n            | Locate a strong radio station signal by scanning up/down | |\n-           | While on a strong and audible radio signal, evoke a system notification on device (eg: incoming SMS, alarm notification) | Verify that after the system notification has been delivered, the radio reverts to outputting the audio signal back through the headphones |\n-         \""));\n+           | While on a strong and audible radio signal, evoke a system notification on device (eg: incoming SMS, alarm notification) | Verify that the radio has muted, and after the system notification has been delivered, the radio reverts to outputting the audio signal back through the headphones |\n+           | While on a strong and audible radio signal, call the device | Verify that the radio has been muted, and stays muted during the duration of the call, and resumes once the call has ended  |\n+           \""));\n     },\n \n     radio_volume_control: function()\n     {\n      // Test meta data\n-     testApplication = \""Multimedia - Radio Volume Control\"";\n+     testTitle = \""Multimedia - Radio Volume Control\"";\n      testBinary = \""radio\"";\n-     testGoal = \""Verify that the radio volume can be controlled.\"";\n+     testGoal = \""Verify that the radio volume can be controlled via volume controls.\"";\n      testPreconditions = \""1. Radio reception should be available in the test area.<br>2. Wired headphones act as an antena to the device and must be connected.\"";\n-     testGroups = \""BAT\"";\n+     testGroups = \""BAT, 1.2\"";\n \n      // Test steps\n      prompt(twiki(\""---+++ \"" + testApplication + \""<br><br>\n@@ -121,10 +124,38 @@ A device specific headset is required to be connected to device for radio testin\n \n         | *Step* | *Verification* |\n         | Launch \"" + testBinary + \"" | App launches normally |\n-        | Locate a strong radio station signal by scanning upwards | |\n+        | Locate a strong radio station signal by scanning up or down the frequency | |\n         | While on a strong and audible radio signal, move volume slider to the right | Verify that the audio volume of the radio station is amplified |\n         | Move volume slider to the left | Verify that the audio volume is lowered |\n         | Move the volume slider all the way to the left | Verify that the sound is now completely muted |\n+        | Return the volume to a value above 50% and click the Mute/unmute comend | Verify that the audio changes from being muted to unmuted and back |\n+       \""));\n+    },\n+\n+    display_radio_metadata: function()\n+    {\n+     // Test meta data\n+     testTitle = \""Multimedia - Display Radio Metadata\"";\n+     testBinary = \""radio\"";\n+     testGoal = \""Verify that the radio API can display properly formated meta data.\"";\n+     testPreconditions = \""1. Radio reception should be available in the test area.<br>2. Wired headphones act as an antena to the device and must be connected.\"";\n+     testGroups = \""BAT, 1.2\"";\n+\n+     // Test steps\n+     prompt(twiki(\""---+++ \"" + testApplication + \""<br><br>\n+         *Goal:* \"" + testGoal + \""<br>\n+         *Pre-Requisites:* \"" + testPreconditions + \""<br>\n+         *Tested Binary:* \"" + testBinary + \""<br>\n+\n+        | *Step* | *Verification* |\n+        | Launch \"" + testBinary + \"" | App launches normally |\n+        | Locate a strong radio station signal by scanning up or down the frequency | Verify that the Frequency field is populated with the correct frequency for the given radio station |\n+        |  | Verify that the Volume field is displaying the proper volume % |\n+        | Click on the Mute/Unmute comand | Verify that Muted field changes from 'false' to 'true' and back  |\n+        |  | If applicable, confirm that the Station Name field is properly displayed |\n+        |  | If applicable, confirm that the Station Id field is properly displayed |\n+        |  | If applicable, confirm that the Program Type field is properly displayed |\n+        |  | If applicable, confirm that the PRadio Text field is properly displayed |\n        \""));\n     },\n }\n""}",test,"test 
",resource;test;
4140.0,4140.0,test,Eskil Abrahamsen Blomfeldt,optimize QGlyphRun's operator == a bit,"optimize QGlyphRun's operator == a bit

Merge-request: 2652
Reviewed-by: Eskil Abrahamsen Blomfeldt <eskil.abrahamsen-blomfeldt@nokia.com>
(cherry picked from commit 56ef015b1c2384e0590f19e938d349bcffdb6961)

Change-Id: Icc5fd9e8a04518d476e96d5983a95740f454f62a",['src/gui/text/qglyphrun.cpp'],"{""qglyphrun.cpp"": ""@@ -140,14 +140,18 @@ bool QGlyphRun::operator==(const QGlyphRun &other) const\n         return false;\n     }\n \n-    for (int i=0; i<qMax(d->glyphIndexDataSize, d->glyphPositionDataSize); ++i) {\n-        if (i < d->glyphIndexDataSize && d->glyphIndexData[i] != other.d->glyphIndexData[i])\n-           return false;\n-\n-        if (i < d->glyphPositionDataSize && d->glyphPositionData[i] != other.d->glyphPositionData[i])\n-           return false;\n+    if (d->glyphIndexData != other.d->glyphIndexData) {\n+        for (int i = 0; i < d->glyphIndexDataSize; ++i) {\n+            if (d->glyphIndexData[i] != other.d->glyphIndexData[i])\n+               return false;\n+        }\n+    }\n+    if (d->glyphPositionData != other.d->glyphPositionData) {\n+        for (int i = 0; i < d->glyphPositionDataSize; ++i) {\n+            if (d->glyphPositionData[i] != other.d->glyphPositionData[i])\n+               return false;\n+        }\n     }\n-\n \n     return (d->overline == other.d->overline\n             && d->underline == other.d->underline\n""}",test; feature,"refactor 
",others;
12473.0,12473.0,test; feature,Joerg Bornemann,QWinOverlappedIoNotifier introduced,"QWinOverlappedIoNotifier introduced

For asynchronous (overlapped) I/O notification on Windows one
can now use the convenience class QWinOverlappedIoNotifier.
Unlike QWinEventNotifier, QWinOverlappedIoNotifier can handle
more than 62 file handles.
Its using one global I/O completion port and one watching thread.

Change-Id: If6f904b364be0405580c7e50355529ab136ae3cb","['src/corelib/io/qwinoverlappedionotifier.cpp', 'src/corelib/io/io.pri', 'src/corelib/io/qwinoverlappedionotifier_p.h']","{""io.pri"": ""@@ -80,6 +80,8 @@ win32 {\n         SOURCES += io/qwindowspipereader.cpp\n         HEADERS += io/qwindowspipewriter_p.h\n         SOURCES += io/qwindowspipewriter.cpp\n+        HEADERS += io/qwinoverlappedionotifier_p.h\n+        SOURCES += io/qwinoverlappedionotifier.cpp\n         SOURCES += io/qfilesystemengine_win.cpp\n         SOURCES += io/qfilesystemiterator_win.cpp\n         SOURCES += io/qstandardpaths_win.cpp\n"", ""qwinoverlappedionotifier.cpp"": ""@@ -0,0 +1,207 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the QtCore module of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#include \""qwinoverlappedionotifier_p.h\""\n+#include <qdebug.h>\n+#include <qhash.h>\n+#include <qmutex.h>\n+#include <qpointer.h>\n+#include <qthread.h>\n+\n+QT_BEGIN_NAMESPACE\n+\n+class QWinIoCompletionPort : protected QThread\n+{\n+public:\n+    QWinIoCompletionPort()\n+        : hPort(INVALID_HANDLE_VALUE)\n+    {\n+        setObjectName(QLatin1String(\""I/O completion port thread\""));\n+        HANDLE hIOCP = CreateIoCompletionPort(INVALID_HANDLE_VALUE, NULL, NULL, 0);\n+        if (!hIOCP) {\n+            qWarning(\""CreateIoCompletionPort failed with error code %d.\\n\"", GetLastError());\n+            return;\n+        }\n+        hPort = hIOCP;\n+    }\n+\n+    ~QWinIoCompletionPort()\n+    {\n+        PostQueuedCompletionStatus(hPort, 0, NULL, NULL);\n+        QThread::wait();\n+        CloseHandle(hPort);\n+    }\n+\n+    void registerNotifier(QWinOverlappedIoNotifier *notifier)\n+    {\n+        HANDLE hIOCP = CreateIoCompletionPort(notifier->hFile, hPort, reinterpret_cast<ULONG_PTR>(notifier), 0);\n+        if (!hIOCP) {\n+            qDebug() << notifier->hFile << hPort << notifier;\n+            qWarning(\""Can't associate file handle with I/O completion port. Error code %d.\\n\"", GetLastError());\n+            return;\n+        }\n+        mutex.lock();\n+        notifiers.insert(notifier, QPointer<QWinOverlappedIoNotifier>(notifier));\n+        mutex.unlock();\n+        if (!QThread::isRunning())\n+            QThread::start();\n+    }\n+\n+    void unregisterNotifier(QWinOverlappedIoNotifier *notifier)\n+    {\n+        mutex.lock();\n+        notifiers.remove(notifier);\n+        mutex.unlock();\n+    }\n+\n+protected:\n+    void run()\n+    {\n+        DWORD dwBytesRead;\n+        ULONG_PTR pulCompletionKey;\n+        OVERLAPPED *overlapped;\n+\n+        forever {\n+            BOOL success = GetQueuedCompletionStatus(hPort,\n+                                                    &dwBytesRead,\n+                                                    &pulCompletionKey,\n+                                                    &overlapped,\n+                                                    INFINITE);\n+\n+            DWORD errorCode = success ? ERROR_SUCCESS : GetLastError();\n+            if (!success && !overlapped) {\n+                printf(\""GetQueuedCompletionStatus failed with error code %d.\\n\"", errorCode);\n+                return;\n+            }\n+\n+            if (success && !(dwBytesRead || pulCompletionKey || overlapped)) {\n+                // We've posted null values via PostQueuedCompletionStatus to end this thread.\n+                return;\n+            }\n+\n+            QWinOverlappedIoNotifier *notifierRawPtr = reinterpret_cast<QWinOverlappedIoNotifier *>(pulCompletionKey);\n+            mutex.lock();\n+            QPointer<QWinOverlappedIoNotifier> notifier = notifiers.value(notifierRawPtr);\n+            mutex.unlock();\n+            if (!notifier.isNull())\n+                notifier->notify(dwBytesRead, errorCode);\n+        }\n+    }\n+\n+\n+private:\n+    HANDLE hPort;\n+    QHash<QWinOverlappedIoNotifier *, QPointer<QWinOverlappedIoNotifier> > notifiers;\n+    QMutex mutex;\n+};\n+\n+Q_GLOBAL_STATIC(QWinIoCompletionPort, iocp)\n+\n+QWinOverlappedIoNotifier::QWinOverlappedIoNotifier(QObject *parent)\n+    : QObject(parent),\n+      hFile(INVALID_HANDLE_VALUE),\n+      lastNumberOfBytes(0),\n+      lastErrorCode(ERROR_SUCCESS)\n+{\n+    hEvent = CreateEvent(NULL, TRUE, FALSE, NULL);\n+    connect(this, &QWinOverlappedIoNotifier::_q_deferNotified,\n+            this, &QWinOverlappedIoNotifier::notified, Qt::QueuedConnection);\n+}\n+\n+QWinOverlappedIoNotifier::~QWinOverlappedIoNotifier()\n+{\n+    setEnabled(false);\n+    CloseHandle(hEvent);\n+}\n+\n+void QWinOverlappedIoNotifier::setHandle(HANDLE h)\n+{\n+    hFile = h;\n+}\n+\n+void QWinOverlappedIoNotifier::setEnabled(bool enabled)\n+{\n+    if (enabled)\n+        iocp()->registerNotifier(this);\n+    else\n+        iocp()->unregisterNotifier(this);\n+}\n+\n+bool QWinOverlappedIoNotifier::waitForNotification(int msecs)\n+{\n+    DWORD result = WaitForSingleObject(hEvent, msecs == -1 ? INFINITE : DWORD(msecs));\n+    switch (result) {\n+    case WAIT_OBJECT_0:\n+        return true;\n+    case WAIT_TIMEOUT:\n+        return false;\n+    }\n+\n+    qWarning(\""QWinOverlappedIoNotifier::waitForNotification: \""\n+             \""WaitForSingleObject failed with error code %d.\"", GetLastError());\n+    return false;\n+}\n+\n+bool QWinOverlappedIoNotifier::fetchResult(DWORD *numberOfBytesRead, DWORD *errorCode)\n+{\n+    Q_CHECK_PTR(numberOfBytesRead);\n+    Q_CHECK_PTR(errorCode);\n+\n+    if (WaitForSingleObject(hEvent, 0) != WAIT_OBJECT_0)\n+        return false;\n+    *numberOfBytesRead = lastNumberOfBytes;\n+    *errorCode = lastErrorCode;\n+    ResetEvent(hEvent);\n+    return true;\n+}\n+\n+/*!\n+  * Note: This function runs in the I/O completion port thread.\n+  */\n+void QWinOverlappedIoNotifier::notify(DWORD numberOfBytes, DWORD errorCode)\n+{\n+    lastNumberOfBytes = numberOfBytes;\n+    lastErrorCode = errorCode;\n+    emit _q_deferNotified();\n+    SetEvent(hEvent);\n+}\n+\n+QT_END_NAMESPACE\n"", ""qwinoverlappedionotifier_p.h"": ""@@ -0,0 +1,99 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the QtCore module of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#ifndef QWINOVERLAPPEDIONOTIFIER_P_H\n+#define QWINOVERLAPPEDIONOTIFIER_P_H\n+\n+//\n+//  W A R N I N G\n+//  -------------\n+//\n+// This file is not part of the Qt API.  It exists purely as an\n+// implementation detail.  This header file may change from version to\n+// version without notice, or even be removed.\n+//\n+// We mean it.\n+//\n+\n+#include <qobject.h>\n+#include <qt_windows.h>\n+\n+QT_BEGIN_HEADER\n+\n+QT_BEGIN_NAMESPACE\n+\n+QT_MODULE(Core)\n+\n+class QWinOverlappedIoNotifier : public QObject\n+{\n+    Q_OBJECT\n+public:\n+    QWinOverlappedIoNotifier(QObject *parent = 0);\n+    ~QWinOverlappedIoNotifier();\n+\n+    void setHandle(HANDLE h);\n+    HANDLE handle() const { return hFile; }\n+\n+    void setEnabled(bool enabled);\n+    bool waitForNotification(int msecs);\n+    bool fetchResult(DWORD *numberOfBytesRead, DWORD *errorCode);\n+\n+Q_SIGNALS:\n+    void notified();\n+    void _q_deferNotified();\n+\n+private:\n+    void notify(DWORD numberOfBytes, DWORD errorCode);\n+\n+private:\n+    HANDLE hFile;\n+    HANDLE hEvent;\n+    DWORD lastNumberOfBytes;\n+    DWORD lastErrorCode;\n+\n+    friend class QWinIoCompletionPort;\n+};\n+\n+QT_END_NAMESPACE\n+\n+QT_END_HEADER\n+\n+#endif // QWINOVERLAPPEDIONOTIFIER_P_H\n""}",feature,"feature 
",others;
13488.0,13488.0,feature,Dmytro Poplavskiy,Replaced QAudioCaptureSource with QAudioRecorder.,"Replaced QAudioCaptureSource with QAudioRecorder.

QAudioCaptureSource name is confusing, it's essentially an audio
recording service but it's not evident from API.

QAudioRecorder replaces QAudioCaptureSource+QMediaRecorder combination.

Change-Id: I0082d766fc0d1b8d5ecbfc527f13e715add730c8","['src/multimedia/recording/qaudiorecorder.cpp', 'src/multimedia/recording/qmediarecorder.cpp', 'src/multimedia/recording/qaudiocapturesource.cpp', 'src/multimedia/recording/qaudiorecorder.h', 'tests/auto/unit/qaudiorecorder/tst_qaudiorecorder.cpp', 'tests/auto/unit/multimedia.pro', 'tests/auto/unit/qmediaobject/tst_qmediaobject.cpp', 'examples/audiorecorder/audiorecorder.cpp', 'src/multimedia/recording/recording.pri', 'examples/audiorecorder/audiorecorder.h', 'tests/auto/unit/qaudiorecorder/qaudiorecorder.pro', 'tests/auto/unit/qmediaserviceprovider/tst_qmediaserviceprovider.cpp']","{""audiorecorder.cpp"": ""@@ -41,7 +41,7 @@\n #include <QtCore/qdir.h>\n #include <QtWidgets/qfiledialog.h>\n \n-#include <qaudiocapturesource.h>\n+#include <qaudiorecorder.h>\n #include <qmediarecorder.h>\n \n #include \""audiorecorder.h\""\n@@ -60,30 +60,29 @@ AudioRecorder::AudioRecorder(QWidget *parent)\n {\n     ui->setupUi(this);\n \n-    audiosource = new QAudioCaptureSource(this);\n-    capture = new QMediaRecorder(audiosource, this);\n+    audioRecorder = new QAudioRecorder(this);\n \n     //audio devices\n     ui->audioDeviceBox->addItem(tr(\""Default\""), QVariant(QString()));\n-    foreach(const QString &device, audiosource->audioInputs()) {\n+    foreach(const QString &device, audioRecorder->audioInputs()) {\n         ui->audioDeviceBox->addItem(device, QVariant(device));\n     }\n \n     //audio codecs\n     ui->audioCodecBox->addItem(tr(\""Default\""), QVariant(QString()));\n-    foreach(const QString &codecName, capture->supportedAudioCodecs()) {\n+    foreach(const QString &codecName, audioRecorder->supportedAudioCodecs()) {\n         ui->audioCodecBox->addItem(codecName, QVariant(codecName));\n     }\n \n     //containers\n     ui->containerBox->addItem(tr(\""Default\""), QVariant(QString()));\n-    foreach(const QString &containerName, capture->supportedContainers()) {\n+    foreach(const QString &containerName, audioRecorder->supportedContainers()) {\n         ui->containerBox->addItem(containerName, QVariant(containerName));\n     }\n \n     //sample rate:\n     ui->sampleRateBox->addItem(tr(\""Default\""), QVariant(0));\n-    foreach(int sampleRate, capture->supportedAudioSampleRates()) {\n+    foreach(int sampleRate, audioRecorder->supportedAudioSampleRates()) {\n         ui->sampleRateBox->addItem(QString::number(sampleRate), QVariant(\n                 sampleRate));\n     }\n@@ -98,23 +97,22 @@ AudioRecorder::AudioRecorder(QWidget *parent)\n     ui->bitrateBox->addItem(QString(\""96000\""), QVariant(96000));\n     ui->bitrateBox->addItem(QString(\""128000\""), QVariant(128000));\n \n-    connect(capture, SIGNAL(durationChanged(qint64)), this,\n+    connect(audioRecorder, SIGNAL(durationChanged(qint64)), this,\n             SLOT(updateProgress(qint64)));\n-    connect(capture, SIGNAL(stateChanged(QMediaRecorder::State)), this,\n+    connect(audioRecorder, SIGNAL(stateChanged(QMediaRecorder::State)), this,\n             SLOT(updateState(QMediaRecorder::State)));\n-    connect(capture, SIGNAL(error(QMediaRecorder::Error)), this,\n+    connect(audioRecorder, SIGNAL(error(QMediaRecorder::Error)), this,\n             SLOT(displayErrorMessage()));\n     }\n \n AudioRecorder::~AudioRecorder()\n {\n-    delete capture;\n-    delete audiosource;\n+    delete audioRecorder;\n }\n \n void AudioRecorder::updateProgress(qint64 duration)\n {\n-    if (capture->error() != QMediaRecorder::NoError || duration < 2000)\n+    if (audioRecorder->error() != QMediaRecorder::NoError || duration < 2000)\n         return;\n \n     ui->statusbar->showMessage(tr(\""Recorded %1 sec\"").arg(duration / 1000));\n@@ -128,11 +126,11 @@ void AudioRecorder::updateState(QMediaRecorder::State state)\n         case QMediaRecorder::RecordingState:\n             ui->recordButton->setText(tr(\""Stop\""));\n             ui->pauseButton->setText(tr(\""Pause\""));\n-            if (capture->outputLocation().isEmpty())\n+            if (audioRecorder->outputLocation().isEmpty())\n                 statusMessage = tr(\""Recording\"");\n             else\n                 statusMessage = tr(\""Recording to %1\"").arg(\n-                        capture->outputLocation().toString());\n+                        audioRecorder->outputLocation().toString());\n             break;\n         case QMediaRecorder::PausedState:\n             ui->recordButton->setText(tr(\""Stop\""));\n@@ -147,7 +145,7 @@ void AudioRecorder::updateState(QMediaRecorder::State state)\n \n     ui->pauseButton->setEnabled(state != QMediaRecorder::StoppedState);\n \n-    if (capture->error() == QMediaRecorder::NoError)\n+    if (audioRecorder->error() == QMediaRecorder::NoError)\n         ui->statusbar->showMessage(statusMessage);\n }\n \n@@ -162,11 +160,11 @@ static QVariant boxValue(const QComboBox *box)\n \n void AudioRecorder::toggleRecord()\n {\n-    if (capture->state() == QMediaRecorder::StoppedState) {\n-        audiosource->setAudioInput(boxValue(ui->audioDeviceBox).toString());\n+    if (audioRecorder->state() == QMediaRecorder::StoppedState) {\n+        audioRecorder->setAudioInput(boxValue(ui->audioDeviceBox).toString());\n \n         if (!outputLocationSet)\n-            capture->setOutputLocation(generateAudioFilePath());\n+            audioRecorder->setOutputLocation(generateAudioFilePath());\n \n         QAudioEncoderSettings settings;\n         settings.setCodec(boxValue(ui->audioCodecBox).toString());\n@@ -179,32 +177,32 @@ void AudioRecorder::toggleRecord()\n \n         QString container = boxValue(ui->containerBox).toString();\n \n-        capture->setEncodingSettings(settings, QVideoEncoderSettings(), container);\n-        capture->record();\n+        audioRecorder->setEncodingSettings(settings, QVideoEncoderSettings(), container);\n+        audioRecorder->record();\n     }\n     else {\n-        capture->stop();\n+        audioRecorder->stop();\n     }\n }\n \n void AudioRecorder::togglePause()\n {\n-    if (capture->state() != QMediaRecorder::PausedState)\n-        capture->pause();\n+    if (audioRecorder->state() != QMediaRecorder::PausedState)\n+        audioRecorder->pause();\n     else\n-        capture->record();\n+        audioRecorder->record();\n }\n \n void AudioRecorder::setOutputLocation()\n {\n     QString fileName = QFileDialog::getSaveFileName();\n-    capture->setOutputLocation(QUrl(fileName));\n+    audioRecorder->setOutputLocation(QUrl(fileName));\n     outputLocationSet = true;\n }\n \n void AudioRecorder::displayErrorMessage()\n {\n-    ui->statusbar->showMessage(capture->errorString());\n+    ui->statusbar->showMessage(audioRecorder->errorString());\n }\n \n QUrl AudioRecorder::generateAudioFilePath()\n"", ""audiorecorder.h"": ""@@ -53,7 +53,7 @@ namespace Ui {\n     class AudioRecorder;\n }\n \n-class QAudioCaptureSource;\n+class QAudioRecorder;\n QT_END_NAMESPACE\n \n QT_USE_NAMESPACE\n@@ -78,8 +78,7 @@ private slots:\n private:\n     Ui::AudioRecorder *ui;\n \n-    QAudioCaptureSource* audiosource;\n-    QMediaRecorder* capture;\n+    QAudioRecorder* audioRecorder;\n     QAudioEncoderSettings  audioSettings;\n     bool outputLocationSet;\n \n"", ""qaudiocapturesource.cpp"": ""@@ -1,264 +0,0 @@\n-/****************************************************************************\n-**\n-** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n-** All rights reserved.\n-** Contact: Nokia Corporation (qt-info@nokia.com)\n-**\n-** This file is part of the Qt Toolkit.\n-**\n-** $QT_BEGIN_LICENSE:LGPL$\n-** GNU Lesser General Public License Usage\n-** This file may be used under the terms of the GNU Lesser General Public\n-** License version 2.1 as published by the Free Software Foundation and\n-** appearing in the file LICENSE.LGPL included in the packaging of this\n-** file. Please review the following information to ensure the GNU Lesser\n-** General Public License version 2.1 requirements will be met:\n-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n-**\n-** In addition, as a special exception, Nokia gives you certain additional\n-** rights. These rights are described in the Nokia Qt LGPL Exception\n-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n-**\n-** GNU General Public License Usage\n-** Alternatively, this file may be used under the terms of the GNU General\n-** Public License version 3.0 as published by the Free Software Foundation\n-** and appearing in the file LICENSE.GPL included in the packaging of this\n-** file. Please review the following information to ensure the GNU General\n-** Public License version 3.0 requirements will be met:\n-** http://www.gnu.org/copyleft/gpl.html.\n-**\n-** Other Usage\n-** Alternatively, this file may be used in accordance with the terms and\n-** conditions contained in a signed written agreement between you and Nokia.\n-**\n-**\n-**\n-**\n-**\n-** $QT_END_LICENSE$\n-**\n-****************************************************************************/\n-\n-#include \""qmediaobject_p.h\""\n-#include <qaudiocapturesource.h>\n-#include \""qaudioendpointselector.h\""\n-\n-QT_BEGIN_NAMESPACE\n-\n-/*!\n-    \\class QAudioCaptureSource\n-    \\brief The QAudioCaptureSource class provides an interface to query and select an audio input endpoint.\n-    \\inmodule QtMultimedia\n-    \\ingroup multimedia\n-    \\ingroup multimedia_recording\n-\n-    QAudioCaptureSource provides access to the audio inputs available on your system.\n-\n-    You can query these inputs and select one to use.\n-\n-    A typical implementation example:\n-    \\snippet doc/src/snippets/multimedia-snippets/media.cpp Audio capture source\n-\n-    The audiocapturesource interface is then used to:\n-\n-    - Get and Set the audio input to use.\n-\n-    The capture interface is then used to:\n-\n-    - Set the destination using setOutputLocation()\n-\n-    - Set the format parameters using setAudioCodec(),\n-\n-    - Control the recording using record(),stop()\n-\n-    \\sa QMediaRecorder\n-*/\n-\n-class QAudioCaptureSourcePrivate : public QMediaObjectPrivate\n-{\n-public:\n-    Q_DECLARE_PUBLIC(QAudioCaptureSource)\n-\n-    void initControls()\n-    {\n-        Q_Q(QAudioCaptureSource);\n-\n-        if (service != 0)\n-            audioEndpointSelector = qobject_cast<QAudioEndpointSelector*>(service->requestControl(QAudioEndpointSelector_iid));\n-\n-        if (audioEndpointSelector) {\n-            q->connect(audioEndpointSelector, SIGNAL(activeEndpointChanged(const QString&)),\n-                       SIGNAL(activeAudioInputChanged(const QString&)));\n-            q->connect(audioEndpointSelector, SIGNAL(availableEndpointsChanged()),\n-                       SIGNAL(availableAudioInputsChanged()));\n-            q->connect(audioEndpointSelector, SIGNAL(availableEndpointsChanged()),\n-                       SLOT(statusChanged()));\n-            errorState = QtMultimedia::NoError;\n-        }\n-    }\n-\n-    QAudioCaptureSourcePrivate():provider(0), audioEndpointSelector(0), errorState(QtMultimedia::ServiceMissingError) {}\n-    QMediaServiceProvider *provider;\n-    QAudioEndpointSelector   *audioEndpointSelector;\n-    QtMultimedia::AvailabilityError errorState;\n-};\n-\n-/*!\n-    Construct a QAudioCaptureSource using the QMediaService from \\a provider, with \\a parent.\n-*/\n-\n-QAudioCaptureSource::QAudioCaptureSource(QObject *parent, QMediaServiceProvider *provider):\n-    QMediaObject(*new QAudioCaptureSourcePrivate, parent, provider->requestService(Q_MEDIASERVICE_AUDIOSOURCE))\n-{\n-    Q_D(QAudioCaptureSource);\n-\n-    d->provider = provider;\n-    d->initControls();\n-}\n-\n-/*!\n-    Destroys the audiocapturesource object.\n-*/\n-\n-QAudioCaptureSource::~QAudioCaptureSource()\n-{\n-    Q_D(QAudioCaptureSource);\n-\n-    if (d->service && d->audioEndpointSelector)\n-        d->service->releaseControl(d->audioEndpointSelector);\n-\n-    if (d->provider)\n-        d->provider->releaseService(d->service);\n-}\n-\n-/*!\n-    Returns the error state of the audio capture service.\n-*/\n-\n-QtMultimedia::AvailabilityError QAudioCaptureSource::availabilityError() const\n-{\n-    Q_D(const QAudioCaptureSource);\n-\n-    return d->errorState;\n-}\n-\n-/*!\n-    Returns true if the audio capture service is available, otherwise returns false.\n-*/\n-bool QAudioCaptureSource::isAvailable() const\n-{\n-    Q_D(const QAudioCaptureSource);\n-\n-    if (d->service != NULL) {\n-        if (d->audioEndpointSelector && d->audioEndpointSelector->availableEndpoints().size() > 0)\n-            return true;\n-    }\n-    return false;\n-}\n-\n-\n-/*!\n-    Returns a list of available audio inputs\n-*/\n-\n-QList<QString> QAudioCaptureSource::audioInputs() const\n-{\n-    Q_D(const QAudioCaptureSource);\n-\n-    QList<QString> list;\n-    if (d && d->audioEndpointSelector)\n-        list <<d->audioEndpointSelector->availableEndpoints();\n-\n-    return list;\n-}\n-\n-/*!\n-    Returns the description of the audio input device with \\a name.\n-*/\n-\n-QString QAudioCaptureSource::audioDescription(const QString& name) const\n-{\n-    Q_D(const QAudioCaptureSource);\n-\n-    if(d->audioEndpointSelector)\n-        return d->audioEndpointSelector->endpointDescription(name);\n-    else\n-        return QString();\n-}\n-\n-/*!\n-    Returns the default audio input name.\n-*/\n-\n-QString QAudioCaptureSource::defaultAudioInput() const\n-{\n-    Q_D(const QAudioCaptureSource);\n-\n-    if(d->audioEndpointSelector)\n-        return d->audioEndpointSelector->defaultEndpoint();\n-    else\n-        return QString();\n-}\n-\n-/*!\n-    Returns the active audio input name.\n-*/\n-\n-QString QAudioCaptureSource::activeAudioInput() const\n-{\n-    Q_D(const QAudioCaptureSource);\n-\n-    if(d->audioEndpointSelector)\n-        return d->audioEndpointSelector->activeEndpoint();\n-    else\n-        return QString();\n-}\n-\n-/*!\n-    Set the active audio input to \\a name.\n-*/\n-\n-void QAudioCaptureSource::setAudioInput(const QString& name)\n-{\n-    Q_D(const QAudioCaptureSource);\n-\n-    if(d->audioEndpointSelector)\n-        return d->audioEndpointSelector->setActiveEndpoint(name);\n-}\n-\n-/*!\n-    \\fn QAudioCaptureSource::activeAudioInputChanged(const QString& name)\n-\n-    Signal emitted when active audio input changes to \\a name.\n-*/\n-\n-/*!\n-    \\fn QAudioCaptureSource::availableAudioInputsChanged()\n-\n-    Signal is emitted when the available audio inputs change.\n-*/\n-\n-/*!\n-  \\internal\n-*/\n-void QAudioCaptureSource::statusChanged()\n-{\n-    Q_D(QAudioCaptureSource);\n-\n-    if (d->audioEndpointSelector) {\n-        if (d->audioEndpointSelector->availableEndpoints().size() > 0) {\n-            d->errorState = QtMultimedia::NoError;\n-            emit availabilityChanged(true);\n-        } else {\n-            d->errorState = QtMultimedia::BusyError;\n-            emit availabilityChanged(false);\n-        }\n-    } else {\n-        d->errorState = QtMultimedia::ServiceMissingError;\n-        emit availabilityChanged(false);\n-    }\n-}\n-\n-#include \""moc_qaudiocapturesource.cpp\""\n-QT_END_NAMESPACE\n-\n"", ""qaudiorecorder.cpp"": ""@@ -0,0 +1,237 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#include \""qaudiorecorder.h\""\n+#include \""qaudioendpointselector.h\""\n+#include \""qmediaobject_p.h\""\n+#include <qmediaservice.h>\n+#include <qmediaserviceprovider.h>\n+\n+#include <QtCore/qdebug.h>\n+#include <QtCore/qurl.h>\n+#include <QtCore/qstringlist.h>\n+#include <QtCore/qmetaobject.h>\n+\n+#include <qaudioformat.h>\n+\n+QT_BEGIN_NAMESPACE\n+\n+/*!\n+    \\class QAudioRecorder\n+    \\inmodule QtMultimedia\n+    \\ingroup multimedia\n+    \\ingroup multimedia_recording\n+\n+    \\brief The QAudioRecorder class is used for the recording of media content.\n+\n+    The QAudioRecorder class is a high level media recording class.\n+*/\n+\n+class QAudioRecorderObject : public QMediaObject\n+{\n+public:\n+    QAudioRecorderObject(QObject *parent, QMediaService *service)\n+        :QMediaObject(parent, service)\n+    {\n+    }\n+};\n+\n+class QAudioRecorderPrivate\n+{\n+    Q_DECLARE_NON_CONST_PUBLIC(QAudioRecorder)\n+\n+public:\n+    void initControls()\n+    {\n+        Q_Q(QAudioRecorder);\n+\n+        QMediaService *service = mediaObject->service();\n+\n+        if (service != 0)\n+            audioEndpointSelector = qobject_cast<QAudioEndpointSelector*>(service->requestControl(QAudioEndpointSelector_iid));\n+\n+        if (audioEndpointSelector) {\n+            q->connect(audioEndpointSelector, SIGNAL(activeEndpointChanged(QString)),\n+                       SIGNAL(audioInputChanged(QString)));\n+            q->connect(audioEndpointSelector, SIGNAL(availableEndpointsChanged()),\n+                       SIGNAL(availableAudioInputsChanged()));\n+        }\n+    }\n+\n+    QAudioRecorderPrivate():\n+        provider(0),\n+        audioEndpointSelector(0),\n+        errorState(QtMultimedia::ServiceMissingError) {}\n+\n+    QMediaServiceProvider *provider;\n+    QAudioEndpointSelector   *audioEndpointSelector;\n+    QtMultimedia::AvailabilityError errorState;\n+    QMediaObject *mediaObject;\n+\n+    QAudioRecorder *q_ptr;\n+};\n+\n+\n+\n+/*!\n+    Constructs a media recorder which records the media produced by \\a mediaObject.\n+\n+    The \\a parent is passed to QMediaObject.\n+*/\n+\n+QAudioRecorder::QAudioRecorder(QObject *parent, QMediaServiceProvider *serviceProvider):\n+    QMediaRecorder(0, parent),\n+    d_ptr(new QAudioRecorderPrivate)\n+{\n+    Q_D(QAudioRecorder);\n+    d->q_ptr = this;\n+    d->provider = serviceProvider;\n+\n+    QMediaService *service = d->provider->requestService(Q_MEDIASERVICE_AUDIOSOURCE);\n+    d->mediaObject = new QAudioRecorderObject(this, service);\n+    setMediaObject(d->mediaObject);\n+    d->initControls();\n+}\n+\n+/*!\n+    Destroys a media recorder object.\n+*/\n+\n+QAudioRecorder::~QAudioRecorder()\n+{\n+    Q_D(QAudioRecorder);\n+    setMediaObject(0);\n+    QMediaService *service = d->mediaObject->service();\n+    delete d->mediaObject;\n+\n+    if (service && d->audioEndpointSelector)\n+        service->releaseControl(d->audioEndpointSelector);\n+\n+    if (d->provider && service)\n+        d->provider->releaseService(service);\n+}\n+\n+/*!\n+    Returns a list of available audio inputs\n+*/\n+\n+QList<QString> QAudioRecorder::audioInputs() const\n+{\n+    Q_D(const QAudioRecorder);\n+\n+    QList<QString> list;\n+    if (d && d->audioEndpointSelector)\n+        list <<d->audioEndpointSelector->availableEndpoints();\n+\n+    return list;\n+}\n+\n+/*!\n+    Returns the description of the audio input device with \\a name.\n+*/\n+\n+QString QAudioRecorder::audioInputDescription(const QString& name) const\n+{\n+    Q_D(const QAudioRecorder);\n+\n+    if(d->audioEndpointSelector)\n+        return d->audioEndpointSelector->endpointDescription(name);\n+    else\n+        return QString();\n+}\n+\n+/*!\n+    Returns the default audio input name.\n+*/\n+\n+QString QAudioRecorder::defaultAudioInput() const\n+{\n+    Q_D(const QAudioRecorder);\n+\n+    if(d->audioEndpointSelector)\n+        return d->audioEndpointSelector->defaultEndpoint();\n+    else\n+        return QString();\n+}\n+\n+/*!\n+    Returns the active audio input name.\n+*/\n+\n+QString QAudioRecorder::audioInput() const\n+{\n+    Q_D(const QAudioRecorder);\n+\n+    if(d->audioEndpointSelector)\n+        return d->audioEndpointSelector->activeEndpoint();\n+    else\n+        return QString();\n+}\n+\n+/*!\n+    Set the active audio input to \\a name.\n+*/\n+\n+void QAudioRecorder::setAudioInput(const QString& name)\n+{\n+    Q_D(const QAudioRecorder);\n+\n+    if(d->audioEndpointSelector)\n+        return d->audioEndpointSelector->setActiveEndpoint(name);\n+}\n+\n+/*!\n+    \\fn QAudioRecorder::activeAudioInputChanged(const QString& name)\n+\n+    Signal emitted when active audio input changes to \\a name.\n+*/\n+\n+/*!\n+    \\fn QAudioRecorder::availableAudioInputsChanged()\n+\n+    Signal is emitted when the available audio inputs change.\n+*/\n+\n+\n+\n+#include \""moc_qaudiorecorder.cpp\""\n+QT_END_NAMESPACE\n+\n"", ""qaudiorecorder.h"": ""@@ -39,21 +39,15 @@\n **\n ****************************************************************************/\n \n-#ifndef QAUDIOCAPTURESOURCE_H\n-#define QAUDIOCAPTURESOURCE_H\n+#ifndef QAUDIORECORDER_H\n+#define QAUDIORECORDER_H\n \n-#include <QtCore/qstringlist.h>\n-#include <QtCore/qpair.h>\n-#include <QtCore/qsize.h>\n-\n-#include <qaudioformat.h>\n-\n-#include \""qmediarecorder.h\""\n-#include \""qmediacontrol.h\""\n-#include \""qmediaobject.h\""\n-#include \""qmediaservice.h\""\n+#include <qmediarecorder.h>\n+#include <qmediaobject.h>\n+#include <qmediaencodersettings.h>\n+#include <qmediaenumdebug.h>\n \n-#include \""qmediaserviceprovider.h\""\n+#include <QtCore/qpair.h>\n \n QT_BEGIN_HEADER\n \n@@ -61,43 +55,43 @@ QT_BEGIN_NAMESPACE\n \n QT_MODULE(Multimedia)\n \n+class QString;\n+class QSize;\n+class QAudioFormat;\n+QT_END_NAMESPACE\n \n-class QAudioCaptureSourcePrivate;\n+QT_BEGIN_NAMESPACE\n \n-class Q_MULTIMEDIA_EXPORT QAudioCaptureSource : public QMediaObject\n+class QAudioRecorderPrivate;\n+class Q_MULTIMEDIA_EXPORT QAudioRecorder : public QMediaRecorder\n {\n     Q_OBJECT\n-\n+    Q_PROPERTY(QString audioInput READ audioInput WRITE setAudioInput NOTIFY audioInputChanged)\n public:\n-    QAudioCaptureSource(QObject *parent = 0, QMediaServiceProvider *service = QMediaServiceProvider::defaultServiceProvider());\n-    ~QAudioCaptureSource();\n-\n-    bool isAvailable() const;\n-    QtMultimedia::AvailabilityError availabilityError() const;\n+    QAudioRecorder(QObject *parent = 0, QMediaServiceProvider *serviceProvider = QMediaServiceProvider::defaultServiceProvider());\n+    ~QAudioRecorder();\n \n     QList<QString> audioInputs() const;\n-\n-    QString audioDescription(const QString& name) const;\n     QString defaultAudioInput() const;\n-    QString activeAudioInput() const;\n+    QString audioInputDescription(const QString& name) const;\n+\n+    QString audioInput() const;\n \n public Q_SLOTS:\n     void setAudioInput(const QString& name);\n \n Q_SIGNALS:\n-    void activeAudioInputChanged(const QString& name);\n+    void audioInputChanged(const QString& name);\n     void availableAudioInputsChanged();\n \n-private Q_SLOTS:\n-    void statusChanged();\n-\n private:\n-    Q_DECLARE_PRIVATE(QAudioCaptureSource)\n+    QAudioRecorderPrivate *d_ptr;\n+    Q_DISABLE_COPY(QAudioRecorder)\n+    Q_DECLARE_PRIVATE(QAudioRecorder)\n };\n \n QT_END_NAMESPACE\n \n QT_END_HEADER\n \n-\n-#endif  // QAUDIOCAPTURESOURCE_H\n+#endif  // QAUDIORECORDER_H\n"", ""qmediarecorder.cpp"": ""@@ -71,11 +71,9 @@ QT_BEGIN_NAMESPACE\n \n     The QMediaRecorder class is a high level media recording class.  It's not\n     intended to be used alone but for accessing the media recording functions\n-    of other media objects, like QRadioTuner, or QAudioCaptureSource.\n+    of other media objects, like QRadioTuner, or QCamera.\n \n     \\snippet doc/src/snippets/multimedia-snippets/media.cpp Media recorder\n-\n-    \\sa QAudioCaptureSource\n */\n \n namespace\n@@ -201,9 +199,7 @@ QMediaRecorder::QMediaRecorder(QMediaObject *mediaObject, QObject *parent):\n     setMediaObject(mediaObject);\n \n     d->notifyTimer = new QTimer(this);\n-    d->notifyTimer->setInterval(mediaObject->notifyInterval());\n     connect(d->notifyTimer, SIGNAL(timeout()), SLOT(_q_notify()));\n-    connect(mediaObject, SIGNAL(notifyIntervalChanged(int)), SLOT(_q_updateNotifyInterval(int)));\n }\n \n /*!\n@@ -248,6 +244,8 @@ bool QMediaRecorder::setMediaObject(QMediaObject *object)\n                        this, SLOT(_q_error(int,QString)));\n         }\n \n+        disconnect(d->mediaObject, SIGNAL(notifyIntervalChanged(int)), this, SLOT(_q_updateNotifyInterval(int)));\n+\n         QMediaService *service = d->mediaObject->service();\n \n         if (service) {\n@@ -285,6 +283,9 @@ bool QMediaRecorder::setMediaObject(QMediaObject *object)\n     if (d->mediaObject) {\n         QMediaService *service = d->mediaObject->service();\n \n+        d->notifyTimer->setInterval(d->mediaObject->notifyInterval());\n+        connect(d->mediaObject, SIGNAL(notifyIntervalChanged(int)), SLOT(_q_updateNotifyInterval(int)));\n+\n         if (service) {\n             d->control = qobject_cast<QMediaRecorderControl*>(service->requestControl(QMediaRecorderControl_iid));\n \n"", ""recording.pri"": ""@@ -1,11 +1,11 @@\n INCLUDEPATH += recording\n \n PUBLIC_HEADERS += \\\n-    recording/qaudiocapturesource.h \\\n+    recording/qaudiorecorder.h \\\n     recording/qmediaencodersettings.h \\\n     recording/qmediarecorder.h \\\n \n SOURCES += \\\n-    recording/qaudiocapturesource.cpp \\\n+    recording/qaudiorecorder.cpp \\\n     recording/qmediaencodersettings.cpp \\\n     recording/qmediarecorder.cpp\n"", ""multimedia.pro"": ""@@ -3,7 +3,7 @@ TEMPLATE = subdirs\n SUBDIRS += \\\n     qabstractvideobuffer \\\n     qabstractvideosurface \\\n-    qaudiocapturesource \\\n+    qaudiorecorder \\\n     qaudioformat \\\n     qaudionamespace \\\n     qcamera \\\n"", ""qaudiorecorder.pro"": ""@@ -1,10 +1,10 @@\n CONFIG += testcase\n-TARGET = tst_qaudiocapturesource\n+TARGET = tst_qaudiorecorder\n \n QT += multimedia-private testlib\n CONFIG += no_private_qt_headers_warning\n \n-SOURCES += tst_qaudiocapturesource.cpp\n+SOURCES += tst_qaudiorecorder.cpp\n \n include (../qmultimedia_common/mockrecorder.pri)\n include (../qmultimedia_common/mock.pri)\n"", ""tst_qaudiorecorder.cpp"": ""@@ -44,7 +44,7 @@\n \n #include <qaudioformat.h>\n \n-#include <qaudiocapturesource.h>\n+#include <qaudiorecorder.h>\n #include <qaudioencodercontrol.h>\n #include <qmediarecordercontrol.h>\n #include <qaudioendpointselector.h>\n@@ -59,7 +59,7 @@\n \n QT_USE_NAMESPACE\n \n-class tst_QAudioCaptureSource: public QObject\n+class tst_QAudioRecorder: public QObject\n {\n     Q_OBJECT\n \n@@ -77,28 +77,28 @@ private slots:\n     void testAvailableAudioInputChangedSignal();\n \n private:\n-    QAudioCaptureSource *audiosource;\n+    QAudioRecorder *audiosource;\n     MockMediaRecorderService  *mockMediaRecorderService;\n     MockMediaServiceProvider *mockProvider;\n };\n \n-void tst_QAudioCaptureSource::initTestCase()\n+void tst_QAudioRecorder::initTestCase()\n {\n-    mockMediaRecorderService = new MockMediaRecorderService;\n+    mockMediaRecorderService = new MockMediaRecorderService(this, new MockMediaRecorderControl(this));\n     mockProvider = new MockMediaServiceProvider(mockMediaRecorderService);\n }\n \n-void tst_QAudioCaptureSource::cleanupTestCase()\n+void tst_QAudioRecorder::cleanupTestCase()\n {\n     delete audiosource;\n     delete mockProvider;\n     audiosource = 0;\n }\n /*\n-void tst_QAudioCaptureSource::testNullService()\n+void tst_QAudioRecorder::testNullService()\n {\n     MockProvider provider(0);\n-    QAudioCaptureSource source(0, &provider);\n+    QAudioRecorder source(0, &provider);\n \n     QCOMPARE(source.audioInputs().size(), 0);\n     QCOMPARE(source.defaultAudioInput(), QString());\n@@ -106,12 +106,12 @@ void tst_QAudioCaptureSource::testNullService()\n }\n */\n /*\n-void tst_QAudioCaptureSource::testNullControl()\n+void tst_QAudioRecorder::testNullControl()\n {\n     MockRecorderService service;\n     service.hasAudioDeviceControl = false;\n     MockProvider provider(&service);\n-    QAudioCaptureSource source(0, &provider);\n+    QAudioRecorder source(0, &provider);\n \n     QCOMPARE(source.audioInputs().size(), 0);\n     QCOMPARE(source.defaultAudioInput(), QString());\n@@ -125,14 +125,14 @@ void tst_QAudioCaptureSource::testNullControl()\n     QCOMPARE(deviceNameSpy.count(), 0);\n }\n */\n-void tst_QAudioCaptureSource::testAudioSource()\n+void tst_QAudioRecorder::testAudioSource()\n {\n-    audiosource = new QAudioCaptureSource(0, mockProvider);\n+    audiosource = new QAudioRecorder(0, mockProvider);\n \n-    QCOMPARE(audiosource->service(),(QMediaService *) mockMediaRecorderService);\n+    QCOMPARE(audiosource->mediaObject()->service(),(QMediaService *) mockMediaRecorderService);\n }\n \n-void tst_QAudioCaptureSource::testOptions()\n+void tst_QAudioRecorder::testOptions()\n {\n     const QString codec(QLatin1String(\""audio/mpeg\""));\n \n@@ -142,45 +142,45 @@ void tst_QAudioCaptureSource::testOptions()\n     QVERIFY(mockMediaRecorderService->mockAudioEncoderControl->encodingOption(codec, options.first()).toInt() == 8000);\n }\n \n-void tst_QAudioCaptureSource::testDevices()\n+void tst_QAudioRecorder::testDevices()\n {\n-    audiosource = new QAudioCaptureSource(0,mockProvider);\n+    audiosource = new QAudioRecorder(0,mockProvider);\n     QList<QString> devices = audiosource->audioInputs();\n     QVERIFY(devices.size() > 0);\n     QVERIFY(devices.at(0).compare(\""device1\"") == 0);\n-    QVERIFY(audiosource->audioDescription(\""device1\"").compare(\""dev1 comment\"") == 0);\n+    QVERIFY(audiosource->audioInputDescription(\""device1\"").compare(\""dev1 comment\"") == 0);\n     QVERIFY(audiosource->defaultAudioInput() == \""device1\"");\n     QVERIFY(audiosource->isAvailable() == true);\n \n-    QSignalSpy checkSignal(audiosource, SIGNAL(activeAudioInputChanged(QString)));\n+    QSignalSpy checkSignal(audiosource, SIGNAL(audioInputChanged(QString)));\n     audiosource->setAudioInput(\""device2\"");\n-    QVERIFY(audiosource->activeAudioInput().compare(\""device2\"") == 0);\n+    QVERIFY(audiosource->audioInput().compare(\""device2\"") == 0);\n     QVERIFY(checkSignal.count() == 1);\n     QVERIFY(audiosource->isAvailable() == true);\n }\n \n-void tst_QAudioCaptureSource::testAvailability()\n+void tst_QAudioRecorder::testAvailability()\n {\n-    MockMediaRecorderService service;\n+    MockMediaRecorderService service(this, new MockMediaRecorderControl(this));\n     service.hasControls = false;\n     MockMediaServiceProvider provider(&service);\n-    QAudioCaptureSource source(0, &provider);\n+    QAudioRecorder source(0, &provider);\n \n     QVERIFY(source.isAvailable() == false);\n     QVERIFY(source.availabilityError() == QtMultimedia::ServiceMissingError);\n \n     service.hasControls = true;\n     MockMediaServiceProvider provider2(&service);\n-    QAudioCaptureSource source2(0, &provider2);\n+    QAudioRecorder source2(0, &provider2);\n \n     QVERIFY(source2.isAvailable() == true);\n     QVERIFY(source2.availabilityError() == QtMultimedia::NoError);\n }\n \n-void tst_QAudioCaptureSource::testAvailableAudioInputChangedSignal()\n+void tst_QAudioRecorder::testAvailableAudioInputChangedSignal()\n {\n-    // The availabilityChangedSignal is implemented in QAudioCaptureSource. SO using it to test the signal.\n-    audiosource = new QAudioCaptureSource(0, mockProvider);\n+    // The availabilityChangedSignal is implemented in QAudioRecorder. SO using it to test the signal.\n+    audiosource = new QAudioRecorder(0, mockProvider);\n \n     /* Spy the signal availableEndpointChanged and audioInputchanged */\n     QSignalSpy changed(mockMediaRecorderService->mockAudioEndpointSelector, SIGNAL(availableEndpointsChanged()));\n@@ -199,6 +199,6 @@ void tst_QAudioCaptureSource::testAvailableAudioInputChangedSignal()\n     QVERIFY(audioInputchange.count() == 1);\n }\n \n-QTEST_MAIN(tst_QAudioCaptureSource)\n+QTEST_MAIN(tst_QAudioRecorder)\n \n-#include \""tst_qaudiocapturesource.moc\""\n+#include \""tst_qaudiorecorder.moc\""\n"", ""tst_qmediaobject.cpp"": ""@@ -48,7 +48,6 @@\n #include <qmediaobject.h>\n #include <qmediaservice.h>\n #include <qmetadatareadercontrol.h>\n-#include <qaudiocapturesource.h>\n #include <qaudioendpointselector.h>\n \n #include \""mockmediarecorderservice.h\""\n@@ -103,7 +102,6 @@ private slots:\n     void extendedMetaData();\n \n     void service();\n-    void availabilityChangedSignal();\n \n private:\n     void setupNotifyTests();\n@@ -474,30 +472,6 @@ void tst_QMediaObject::availability()\n      QtTestMediaObject mediaObject2;\n      QMediaService *service2 = mediaObject2.service();\n      QVERIFY(service2 == NULL);\n- }\n-\n- void tst_QMediaObject::availabilityChangedSignal()\n- {\n-     // The availabilityChangedSignal is implemented in QAudioCaptureSource. So using it to test the signal.\n-     MockMediaRecorderService *mockAudioSourceService = new MockMediaRecorderService;\n-     MockMediaServiceProvider *mockProvider = new MockMediaServiceProvider(mockAudioSourceService);\n-     QAudioCaptureSource *audiosource = new QAudioCaptureSource(0, mockProvider);\n-\n-     QSignalSpy spy(audiosource, SIGNAL(availabilityChanged(bool)));\n-\n-     // Add the end points and verify if the availablity changed signal emitted with argument true.\n-     QMetaObject::invokeMethod(mockAudioSourceService->mockAudioEndpointSelector, \""addEndpoints\"");\n-     QVERIFY(spy.count() == 1);\n-     bool available = qvariant_cast<bool>(spy.at(0).at(0));\n-     QVERIFY(available == true);\n-\n-     spy.clear();\n-\n-     // Remove all endpoints and verify if the signal is emitted with argument false.\n-     QMetaObject::invokeMethod(mockAudioSourceService->mockAudioEndpointSelector, \""removeEndpoints\"");\n-     QVERIFY(spy.count() == 1);\n-     available = qvariant_cast<bool>(spy.at(0).at(0));\n-     QVERIFY(available == false);\n }\n \n QTEST_GUILESS_MAIN(tst_QMediaObject)\n"", ""tst_qmediaserviceprovider.cpp"": ""@@ -51,7 +51,7 @@\n #include <qmediaobject.h>\n #include <qmediaservice.h>\n #include <qmediaplayer.h>\n-#include <qaudiocapturesource.h>\n+#include <qaudiorecorder.h>\n \n QT_USE_NAMESPACE\n class MockMediaService : public QMediaService\n""}",feature; resource,"refactor,feature 
",resource;
13042.0,13042.0,feature; resource,Alan Alpert (Inactive),Per-frame Sprites patch one,"Per-frame Sprites patch one

To allow for sprites to be advanced by the rendering framerate, two
minor redesigns were needed.

A) Sprite texture location is now calculated on the CPU and passed to
the GPU per frame.

B) Stochastic State engine now supports states that do not advance on a
timer, and states can be advanced manually.

This patch implements B and A for ImageParticle. A for SpriteImage will
be done in a separate patch.

Change-Id: If1c54a6a03fa48b95bb1e672283292859656457b","['src/quick/particles/qquickimageparticle.cpp', 'src/quick/particles/qquickimageparticle_p.h', 'src/quick/particles/qquickparticlesystem.cpp', 'src/quick/particles/qquickparticlesystem_p.h', 'src/quick/items/qquickspriteengine_p.h', 'src/quick/items/qquickspriteengine.cpp', 'src/quick/particles/qquickv8particledata.cpp', 'src/quick/items/qquicksprite.cpp']","{""qquicksprite.cpp"": ""@@ -53,12 +53,13 @@ QT_BEGIN_NAMESPACE\n /*!\n     \\qmlproperty int QtQuick2::Sprite::duration\n \n-    Time between frames.\n+    Time between frames. Use -1 to indicate one sprite frame per rendered frame.\n */\n /*!\n     \\qmlproperty int QtQuick2::Sprite::durationVariation\n \n-    The time between frames can vary by up to this amount.\n+    The time between frames can vary by up to this amount. Variation will never decrease the time\n+    between frames to less than 0.\n \n     Default is 0.\n */\n@@ -105,17 +106,6 @@ QT_BEGIN_NAMESPACE\n     If frameHeight and frameWidth are not specified, it is assumed to be a single long row of square frames.\n     Otherwise, it can be multiple contiguous rows or rectangluar frames, when one row runs out the next will be used.\n */\n-    Q_PROPERTY(int duration READ duration WRITE setDuration NOTIFY durationChanged)\n-    Q_PROPERTY(int durationVariation READ durationVariance WRITE setDurationVariance NOTIFY durationVarianceChanged)\n-    Q_PROPERTY(QVariantMap to READ to WRITE setTo NOTIFY toChanged)\n-    Q_PROPERTY(QString name READ name WRITE setName NOTIFY nameChanged)\n-    Q_PROPERTY(qreal speedModifiesDuration READ speedModifer WRITE setSpeedModifier NOTIFY speedModifierChanged)\n-    Q_PROPERTY(int frames READ frames WRITE setFrames NOTIFY framesChanged)\n-    Q_PROPERTY(QUrl source READ source WRITE setSource NOTIFY sourceChanged)\n-    //If frame height or width is not specified, it is assumed to be a single long row of square frames.\n-    //Otherwise, it can be multiple contiguous rows, when one row runs out the next will be used.\n-    Q_PROPERTY(int frameHeight READ frameHeight WRITE setFrameHeight NOTIFY frameHeightChanged)\n-    Q_PROPERTY(int frameWidth READ frameWidth WRITE setFrameWidth NOTIFY frameWidthChanged)\n \n QQuickSprite::QQuickSprite(QObject *parent) :\n     QQuickStochasticState(parent)\n"", ""qquickspriteengine.cpp"": ""@@ -339,67 +339,73 @@ void QQuickStochasticEngine::restart(int index)\n     int time = m_duration[index] * m_states[m_things[index]]->frames() + m_startTimes[index];\n     for (int i=0; i<m_stateUpdates.count(); i++)\n         m_stateUpdates[i].second.removeAll(index);\n-    addToUpdateList(time, index);\n+    if (m_duration[index] > 0)\n+        addToUpdateList(time, index);\n }\n \n-uint QQuickStochasticEngine::updateSprites(uint time)//### would returning a list of changed idxs be faster than signals?\n+// Doesn't remove from update list. If you want to cancel pending timed updates, call restart() first.\n+// Usually sprites are either manually advanced or in the list, and mixing is not recommended anyways.\n+void QQuickStochasticEngine::advance(int idx)\n {\n-    //Sprite State Update;\n-    QSet<int> changedIndexes;\n-    while (!m_stateUpdates.isEmpty() && time >= m_stateUpdates.first().first){\n-        foreach (int idx, m_stateUpdates.first().second){\n-            if (idx >= m_things.count())\n-                continue;//TODO: Proper fix(because this does happen and I'm just ignoring it)\n-            int stateIdx = m_things[idx];\n-            int nextIdx = -1;\n-            int goalPath = goalSeek(stateIdx, idx);\n-            if (goalPath == -1){//Random\n-                qreal r =(qreal) qrand() / (qreal) RAND_MAX;\n-                qreal total = 0.0;\n-                for (QVariantMap::const_iterator iter=m_states[stateIdx]->m_to.constBegin();\n-                    iter!=m_states[stateIdx]->m_to.constEnd(); iter++)\n-                    total += (*iter).toReal();\n-                r*=total;\n-                for (QVariantMap::const_iterator iter= m_states[stateIdx]->m_to.constBegin();\n-                        iter!=m_states[stateIdx]->m_to.constEnd(); iter++){\n-                    if (r < (*iter).toReal()){\n-                        bool superBreak = false;\n-                        for (int i=0; i<m_states.count(); i++){\n-                            if (m_states[i]->name() == iter.key()){\n-                                nextIdx = i;\n-                                superBreak = true;\n-                                break;\n-                            }\n-                        }\n-                        if (superBreak)\n-                            break;\n+    if (idx >= m_things.count())\n+        return;//TODO: Proper fix(because this has happened and I just ignored it)\n+    int stateIdx = m_things[idx];\n+    int nextIdx = nextState(stateIdx,idx);\n+    m_things[idx] = nextIdx;\n+    m_duration[idx] = m_states[nextIdx]->variedDuration();\n+    m_startTimes[idx] = m_timeOffset;//This will be the last time updateSprites was called\n+    emit m_states[nextIdx]->entered();\n+    emit stateChanged(idx); //TODO: emit this when a psuedostate changes too(but manually in SpriteEngine)\n+    if (m_duration[idx] >= 0)\n+        addToUpdateList((m_duration[idx] * m_states[nextIdx]->frames()) + m_startTimes[idx], idx);\n+}\n+\n+int QQuickStochasticEngine::nextState(int curState, int curThing)\n+{\n+    int nextIdx = -1;\n+    int goalPath = goalSeek(curState, curThing);\n+    if (goalPath == -1){//Random\n+        qreal r =(qreal) qrand() / (qreal) RAND_MAX;\n+        qreal total = 0.0;\n+        for (QVariantMap::const_iterator iter=m_states[curState]->m_to.constBegin();\n+            iter!=m_states[curState]->m_to.constEnd(); iter++)\n+            total += (*iter).toReal();\n+        r*=total;\n+        for (QVariantMap::const_iterator iter= m_states[curState]->m_to.constBegin();\n+                iter!=m_states[curState]->m_to.constEnd(); iter++){\n+            if (r < (*iter).toReal()){\n+                bool superBreak = false;\n+                for (int i=0; i<m_states.count(); i++){\n+                    if (m_states[i]->name() == iter.key()){\n+                        nextIdx = i;\n+                        superBreak = true;\n+                        break;\n                     }\n-                    r -= (*iter).toReal();\n                 }\n-            }else{//Random out of shortest paths to goal\n-                nextIdx = goalPath;\n-            }\n-            if (nextIdx == -1)//No to states means stay here\n-                nextIdx = stateIdx;\n-\n-            m_things[idx] = nextIdx;\n-            m_duration[idx] = m_states[nextIdx]->variedDuration();\n-            m_startTimes[idx] = time;\n-            if (nextIdx != stateIdx){\n-                changedIndexes << idx;\n-                emit m_states[nextIdx]->entered();\n+                if (superBreak)\n+                    break;\n             }\n-            addToUpdateList((m_duration[idx] * m_states[nextIdx]->frames()) + time, idx);\n+            r -= (*iter).toReal();\n         }\n-        m_stateUpdates.pop_front();\n+    }else{//Random out of shortest paths to goal\n+        nextIdx = goalPath;\n     }\n+    if (nextIdx == -1)//No 'to' states means stay here\n+        nextIdx = curState;\n+    return nextIdx;\n+}\n \n+uint QQuickStochasticEngine::updateSprites(uint time)//### would returning a list of changed idxs be faster than signals?\n+{\n+    //Sprite State Update;\n     m_timeOffset = time;\n-    m_advanceTime.start();\n-    //TODO: emit this when a psuedostate changes too\n-    foreach (int idx, changedIndexes){//Batched so that update list doesn't change midway\n-        emit stateChanged(idx);\n+    while (!m_stateUpdates.isEmpty() && time >= m_stateUpdates.first().first){\n+        foreach (int idx, m_stateUpdates.first().second)\n+            advance(idx);\n+        m_stateUpdates.pop_front();\n     }\n+\n+    m_advanceTime.start();\n     if (m_stateUpdates.isEmpty())\n         return -1;\n     return m_stateUpdates.first().first;\n"", ""qquickspriteengine_p.h"": ""@@ -102,9 +102,9 @@ public:\n \n     int variedDuration() const\n     {\n-        return m_duration\n+        return qMax(qreal(0.0) , m_duration\n                 + (m_durationVariance * ((qreal)qrand()/RAND_MAX) * 2)\n-                - m_durationVariance;\n+                - m_durationVariance);\n     }\n \n     int frames() const\n@@ -212,6 +212,7 @@ public:\n \n     void setGoal(int state, int sprite=0, bool jump=false);\n     void start(int index=0, int state=0);\n+    void advance(int index=0);//Sends state to the next chosen state, unlike goal.\n     void stop(int index=0);\n     int curState(int index=0) {return m_things[index];}\n \n@@ -246,6 +247,7 @@ protected:\n     friend class QQuickParticleSystem;\n     void restart(int index);\n     void addToUpdateList(uint t, int idx);\n+    int nextState(int curState, int idx=0);\n     int goalSeek(int curState, int idx, int dist=-1);\n     QList<QQuickStochasticState*> m_states;\n     //### Consider struct or class for the four data variables?\n"", ""qquickimageparticle.cpp"": ""@@ -53,6 +53,7 @@\n #include <QtQuick/qsgengine.h>\n #include <QtQuick/private/qsgtexture_p.h>\n #include <private/qdeclarativeglobal_p.h>\n+#include <cmath>\n \n QT_BEGIN_NAMESPACE\n //###Switch to define later, for now user-friendly (no compilation) debugging is worth it\n@@ -84,9 +85,8 @@ static const char vertexShaderCode[] =\n     \""attribute highp vec3 vRotation; //x = radians of rotation, y=rotation speed, z= bool autoRotate\\n\""\n     \""#endif\\n\""\n     \""#if defined(SPRITE)\\n\""\n-    \""attribute highp vec4 vAnimData;// interpolate(bool), duration, frameCount (this anim), timestamp (this anim)\\n\""\n-    \""attribute highp vec4 vAnimPos;//sheet x,y, width/height of this anim\\n\""\n-    \""uniform highp vec2 animSheetSize; //width/height of whole sheet\\n\""\n+    \""attribute highp vec3 vAnimData;// w,h(premultiplied of anim), interpolation progress\\n\""\n+    \""attribute highp vec4 vAnimPos;//x,y, x,y (two frames for interpolation)\\n\""\n     \""#endif\\n\""\n     \""\\n\""\n     \""uniform highp mat4 qt_Matrix;\\n\""\n@@ -119,18 +119,12 @@ static const char vertexShaderCode[] =\n     \""#endif\\n\""\n     \""    } else {\\n\""\n     \""#if defined(SPRITE)\\n\""\n+    \""        tt.y = vAnimData.z;\\n\""\n     \""        //Calculate frame location in texture\\n\""\n-    \""        highp float frameIndex = mod((((timestamp - vAnimData.w)*1000.)/vAnimData.y),vAnimData.z);\\n\""\n-    \""        tt.y = mod((timestamp - vAnimData.w)*1000., vAnimData.y) / vAnimData.y;\\n\""\n-    \""\\n\""\n-    \""        frameIndex = floor(frameIndex);\\n\""\n-    \""        fTexS.xy = vec2(((frameIndex + vPosTex.z) * vAnimPos.z / animSheetSize.x), ((vAnimPos.y + vPosTex.w * vAnimPos.w) / animSheetSize.y));\\n\""\n-    \""\\n\""\n+    \""        fTexS.xy = vAnimPos.xy + vPosTex.zw * vAnimData.xy;\\n\""\n     \""        //Next frame is also passed, for interpolation\\n\""\n-    \""        //### Should the next anim be precalculated to allow for interpolation there?\\n\""\n-    \""        if (vAnimData.x == 1.0 && frameIndex != vAnimData.z - 1.)//Can't do it for the last frame though, this anim may not loop\\n\""\n-    \""            frameIndex = mod(frameIndex+1., vAnimData.z);\\n\""\n-    \""        fTexS.zw = vec2(((frameIndex + vPosTex.z) * vAnimPos.z / animSheetSize.x), ((vAnimPos.y + vPosTex.w * vAnimPos.w) / animSheetSize.y));\\n\""\n+    \""        fTexS.zw = vAnimPos.zw + vPosTex.zw * vAnimData.xy;\\n\""\n+    \""\\n\""\n     \""#elif defined(DEFORM)\\n\""\n     \""        fTex = vPosTex.zw;\\n\""\n     \""#endif\\n\""\n@@ -415,8 +409,8 @@ public:\n         program()->setUniformValue(\""texture\"", 0);\n         program()->setUniformValue(\""colortable\"", 1);\n         glFuncs = QOpenGLContext::currentContext()->functions();\n+        //Don't actually expose the animSheetSize in the shader, it's currently only used for CPU calculations.\n         m_timestamp_id = program()->uniformLocation(\""timestamp\"");\n-        m_animsize_id = program()->uniformLocation(\""animSheetSize\"");\n         m_entry_id = program()->uniformLocation(\""entry\"");\n         m_sizetable_id = program()->uniformLocation(\""sizetable\"");\n         m_opacitytable_id = program()->uniformLocation(\""opacitytable\"");\n@@ -431,14 +425,12 @@ public:\n         d->texture->bind();\n \n         program()->setUniformValue(m_timestamp_id, (float) d->timestamp);\n-        program()->setUniformValue(m_animsize_id, d->animSheetSize);\n         program()->setUniformValue(m_entry_id, (float) d->entry);\n         program()->setUniformValueArray(m_sizetable_id, (float*) d->sizeTable, 64, 1);\n         program()->setUniformValueArray(m_opacitytable_id, (float*) d->opacityTable, UNIFORM_ARRAY_SIZE, 1);\n     }\n \n     int m_timestamp_id;\n-    int m_animsize_id;\n     int m_entry_id;\n     int m_sizetable_id;\n     int m_opacitytable_id;\n@@ -1174,14 +1166,14 @@ static QSGGeometry::Attribute SpriteParticle_Attributes[] = {\n     QSGGeometry::Attribute::create(3, 4, GL_UNSIGNED_BYTE),     // Colors\n     QSGGeometry::Attribute::create(4, 4, GL_FLOAT),             // DeformationVectors\n     QSGGeometry::Attribute::create(5, 3, GL_FLOAT),             // Rotation\n-    QSGGeometry::Attribute::create(6, 4, GL_FLOAT),             // Anim Data\n+    QSGGeometry::Attribute::create(6, 3, GL_FLOAT),             // Anim Data\n     QSGGeometry::Attribute::create(7, 4, GL_FLOAT)              // Anim Pos\n };\n \n static QSGGeometry::AttributeSet SpriteParticle_AttributeSet =\n {\n     8, // Attribute Count\n-    (4 + 4 + 4 + 4 + 4 + 4 + 3) * sizeof(float) + 4 * sizeof(uchar),\n+    (4 + 4 + 4 + 4 + 3 + 3 + 4) * sizeof(float) + 4 * sizeof(uchar),\n     SpriteParticle_Attributes\n };\n \n@@ -1387,9 +1379,11 @@ QSGGeometryNode* QQuickImageParticle::buildParticleNodes()\n                 indices += 6;\n             }\n         }\n-\n     }\n \n+    if (perfLevel == Sprites)\n+        spritesUpdate();//Gives all vertexes the initial sprite data, then maintained per frame\n+\n     foreach (QSGGeometryNode* node, m_nodes){\n         if (node == *(m_nodes.begin()))\n             node->setFlag(QSGGeometryNode::OwnsMaterial);//Root node owns the material for memory management purposes\n@@ -1455,7 +1449,8 @@ void QQuickImageParticle::prepareNextFrame()\n     case Sprites:\n         //Advance State\n         if (m_spriteEngine)\n-            m_spriteEngine->updateSprites(timeStamp);\n+            m_spriteEngine->updateSprites(timeStamp);//fires signals if anim changed\n+        spritesUpdate(time);\n     case Tabled:\n     case Deformable:\n     case Colored:\n@@ -1468,6 +1463,65 @@ void QQuickImageParticle::prepareNextFrame()\n         node->markDirty(QSGNode::DirtyMaterial);\n }\n \n+void QQuickImageParticle::spritesUpdate(qreal time)\n+{\n+    // Sprite progression handled CPU side, so as to have per-frame control.\n+    foreach (const QString &str, m_groups) {\n+        int gIdx = m_system->groupIds[str];\n+        foreach (QQuickParticleData* mainDatum, m_system->groupData[gIdx]->data) {\n+            QSGGeometryNode *node = m_nodes[gIdx];\n+            if (!node)\n+                continue;\n+            //TODO: Interpolate between two different animations if it's going to transition next frame\n+            //      This is particularly important for cut-up sprites.\n+            QQuickParticleData* datum = (mainDatum->animationOwner == this ? mainDatum : getShadowDatum(mainDatum));\n+            double frameAt;\n+            qreal progress;\n+            if (datum->frameDuration > 0) {\n+                qreal frame = (time - datum->animT)/(datum->frameDuration / 1000.0);\n+                frame = qBound(0.0, frame, (qreal)datum->frameCount - 1.0);//Stop at count-1 frames until we have between anim interpolation\n+                progress = modf(frame,&frameAt);\n+            } else {\n+                datum->frameAt++;\n+                if (datum->frameAt >= datum->frameCount){\n+                    datum->frameAt = 0;\n+                    for (int i = 0; i<m_startsIdx.count(); i++) {\n+                        if (m_startsIdx[i].second == gIdx){\n+                            m_spriteEngine->advance(m_startsIdx[i].first + datum->index);\n+                            break;\n+                        }\n+                    }\n+                }\n+                frameAt = datum->frameAt;\n+                progress = 0;\n+            }\n+            QSizeF sheetSize = getState<ImageMaterialData>(m_material)->animSheetSize;\n+            qreal y = datum->animY / sheetSize.height();\n+            qreal w = datum->animWidth / sheetSize.width();\n+            qreal h = datum->animHeight / sheetSize.height();\n+            qreal x1 = datum->animX / sheetSize.width();\n+            x1 += frameAt * w;\n+            qreal x2 = x1;\n+            if (frameAt < (datum->frameCount-1))\n+                x2 += w;\n+\n+            node->setFlag(QSGNode::OwnsGeometry, false);\n+            SpriteVertex *spriteVertices = (SpriteVertex *) node->geometry()->vertexData();\n+            spriteVertices += datum->index*4;\n+            for (int i=0; i<4; i++) {\n+                spriteVertices[i].animX1 = x1;\n+                spriteVertices[i].animY1 = y;\n+                spriteVertices[i].animX2 = x2;\n+                spriteVertices[i].animY2 = y;\n+                spriteVertices[i].animW = w;\n+                spriteVertices[i].animH = h;\n+                spriteVertices[i].animProgress = progress;\n+            }\n+            node->setFlag(QSGNode::OwnsGeometry, true);\n+        }\n+    }\n+}\n+\n void QQuickImageParticle::spriteAdvance(int spriteIdx)\n {\n     if (!m_startsIdx.count())//Probably overly defensive\n@@ -1485,19 +1539,17 @@ void QQuickImageParticle::spriteAdvance(int spriteIdx)\n         gIdx = m_startsIdx[i-1].second;\n     int pIdx = spriteIdx - m_startsIdx[i-1].first;\n \n-    QQuickParticleData* datum = m_system->groupData[gIdx]->data[pIdx];\n-    QQuickParticleData* d = (datum->animationOwner == this ? datum : getShadowDatum(datum));\n-\n-    d->animIdx = m_spriteEngine->spriteState(spriteIdx);\n-    Vertices<SpriteVertex>* particles = (Vertices<SpriteVertex> *) m_nodes[gIdx]->geometry()->vertexData();\n-    Vertices<SpriteVertex> &p = particles[pIdx];\n-    d->animT = p.v1.animT = p.v2.animT = p.v3.animT = p.v4.animT = m_spriteEngine->spriteStart(spriteIdx)/1000.0;\n-    d->frameCount = p.v1.frameCount = p.v2.frameCount = p.v3.frameCount = p.v4.frameCount = m_spriteEngine->spriteFrames(spriteIdx);\n-    d->frameDuration = p.v1.frameDuration = p.v2.frameDuration = p.v3.frameDuration = p.v4.frameDuration = m_spriteEngine->spriteDuration(spriteIdx);\n-    d->animX = p.v1.animX = p.v2.animX = p.v3.animX = p.v4.animX = m_spriteEngine->spriteX(spriteIdx);\n-    d->animY = p.v1.animY = p.v2.animY = p.v3.animY = p.v4.animY = m_spriteEngine->spriteY(spriteIdx);\n-    d->animWidth = p.v1.animWidth = p.v2.animWidth = p.v3.animWidth = p.v4.animWidth = m_spriteEngine->spriteWidth(spriteIdx);\n-    d->animHeight = p.v1.animHeight = p.v2.animHeight = p.v3.animHeight = p.v4.animHeight = m_spriteEngine->spriteHeight(spriteIdx);\n+    QQuickParticleData* mainDatum = m_system->groupData[gIdx]->data[pIdx];\n+    QQuickParticleData* datum = (mainDatum->animationOwner == this ? mainDatum : getShadowDatum(mainDatum));\n+\n+    datum->animIdx = m_spriteEngine->spriteState(spriteIdx);\n+    datum->animT = m_spriteEngine->spriteStart(spriteIdx)/1000.0;\n+    datum->frameCount = m_spriteEngine->spriteFrames(spriteIdx);\n+    datum->frameDuration = m_spriteEngine->spriteDuration(spriteIdx);\n+    datum->animX = m_spriteEngine->spriteX(spriteIdx);\n+    datum->animY = m_spriteEngine->spriteY(spriteIdx);\n+    datum->animWidth = m_spriteEngine->spriteWidth(spriteIdx);\n+    datum->animHeight = m_spriteEngine->spriteHeight(spriteIdx);\n }\n \n void QQuickImageParticle::reloadColor(const Color4ub &c, QQuickParticleData* d)\n@@ -1537,6 +1589,7 @@ void QQuickImageParticle::initialize(int gIdx, int pIdx)\n                     writeTo->frameCount = m_spriteEngine->spriteFrames(spriteIdx);\n                     writeTo->frameDuration = m_spriteEngine->spriteDuration(spriteIdx);\n                     writeTo->animIdx = 0;//Always starts at 0\n+                    writeTo->frameAt = -1;\n                     writeTo->animX = m_spriteEngine->spriteX(spriteIdx);\n                     writeTo->animY = m_spriteEngine->spriteY(spriteIdx);\n                     writeTo->animWidth = m_spriteEngine->spriteWidth(spriteIdx);\n@@ -1547,6 +1600,7 @@ void QQuickImageParticle::initialize(int gIdx, int pIdx)\n                 writeTo->animT = datum->t;\n                 writeTo->frameCount = 1;\n                 writeTo->frameDuration = 60000000.0;\n+                writeTo->frameAt = -1;\n                 writeTo->animIdx = 0;\n                 writeTo->animT = 0;\n                 writeTo->animX = writeTo->animY = 0;\n@@ -1668,25 +1722,7 @@ void QQuickImageParticle::commit(int gIdx, int pIdx)\n                 spriteVertices[i].rotationSpeed = datum->rotationSpeed;\n                 spriteVertices[i].autoRotate = datum->autoRotate;\n             }\n-            spriteVertices[i].animInterpolate = m_spriteEngine ? (m_spritesInterpolate ? 1.0 : 0.0) : 0.0;//### Shadow? In particleData? Or uniform?\n-            if (!m_spriteEngine || (m_explicitAnimation && datum->animationOwner != this)) {\n-                QQuickParticleData* shadow = getShadowDatum(datum);\n-                spriteVertices[i].frameDuration = shadow->frameDuration;\n-                spriteVertices[i].frameCount = shadow->frameCount;\n-                spriteVertices[i].animT = shadow->animT;\n-                spriteVertices[i].animX = shadow->animX;\n-                spriteVertices[i].animY = shadow->animY;\n-                spriteVertices[i].animWidth = shadow->animWidth;\n-                spriteVertices[i].animHeight = shadow->animHeight;\n-            } else {\n-                spriteVertices[i].frameDuration = datum->frameDuration;\n-                spriteVertices[i].frameCount = datum->frameCount;\n-                spriteVertices[i].animT = datum->animT;\n-                spriteVertices[i].animX = datum->animX;\n-                spriteVertices[i].animY = datum->animY;\n-                spriteVertices[i].animWidth = datum->animWidth;\n-                spriteVertices[i].animHeight = datum->animHeight;\n-            }\n+            //Sprite-related vertices updated per-frame in spritesUpdate(), not on demand\n             if (m_explicitColor && datum->colorOwner != this) {\n                 QQuickParticleData* shadow = getShadowDatum(datum);\n                 spriteVertices[i].color.r = shadow->color.r;\n"", ""qquickimageparticle_p.h"": ""@@ -128,14 +128,13 @@ struct SpriteVertex {\n     float rotation;\n     float rotationSpeed;\n     float autoRotate;//Assumed that GPUs prefer floats to bools\n-    float animInterpolate;\n-    float frameDuration;\n-    float frameCount;\n-    float animT;\n-    float animX;\n-    float animY;\n-    float animWidth;\n-    float animHeight;\n+    float animW;\n+    float animH;\n+    float animProgress;\n+    float animX1;\n+    float animY1;\n+    float animX2;\n+    float animY2;\n };\n \n template <typename Vertex>\n@@ -343,6 +342,7 @@ private slots:\n     void createEngine(); //### method invoked by sprite list changing (in engine.h) - pretty nasty\n \n     void spriteAdvance(int spriteIndex);\n+    void spritesUpdate(qreal time = 0 );\n private:\n     QUrl m_image_name;\n     QUrl m_colortable_name;\n"", ""qquickparticlesystem.cpp"": ""@@ -420,6 +420,7 @@ QQuickParticleData::QQuickParticleData(QQuickParticleSystem* sys)\n     autoRotate = 0;\n     animIdx = 0;\n     frameDuration = 1;\n+    frameAt = -1;\n     frameCount = 1;\n     animT = -1;\n     animX = 0;\n"", ""qquickparticlesystem_p.h"": ""@@ -200,6 +200,7 @@ public:\n     float autoRotate;//Assume that GPUs prefer floats to bools\n     float animIdx;\n     float frameDuration;\n+    float frameAt;//Used for duration -1\n     float frameCount;\n     float animT;\n     float animX;\n"", ""qquickv8particledata.cpp"": ""@@ -411,6 +411,7 @@ FLOAT_GETTER_AND_SETTER(rotation)\n FLOAT_GETTER_AND_SETTER(rotationSpeed)\n FLOAT_GETTER_AND_SETTER(animIdx)\n FLOAT_GETTER_AND_SETTER(frameDuration)\n+FLOAT_GETTER_AND_SETTER(frameAt)\n FLOAT_GETTER_AND_SETTER(frameCount)\n FLOAT_GETTER_AND_SETTER(animT)\n FLOAT_GETTER_AND_SETTER(r)\n@@ -450,6 +451,7 @@ QV8ParticleDataDeletable::QV8ParticleDataDeletable(QV8Engine *engine)\n     REGISTER_ACCESSOR(ft, engine, autoRotate, autoRotate);\n     REGISTER_ACCESSOR(ft, engine, animIdx, animationIndex);\n     REGISTER_ACCESSOR(ft, engine, frameDuration, frameDuration);\n+    REGISTER_ACCESSOR(ft, engine, frameAt, frameAt);\n     REGISTER_ACCESSOR(ft, engine, frameCount, frameCount);\n     REGISTER_ACCESSOR(ft, engine, animT, animationT);\n     REGISTER_ACCESSOR(ft, engine, r, r);\n""}",bug,"feature, refactor 
",bug;feature;
14894.0,14894.0,bug ,Jani Uusi-Rantala,Trivial fix in qjsonobject.h for -Werror=shadow,"Trivial fix in qjsonobject.h for -Werror=shadow

There was a few errors coming from other components
using qtbase - error: declaration of 'o' shadows a
member of 'this' [-Werror=shadow].

Change-Id: Ib394f404370f001e68fde8b424cd5fff527d8fe7",['src/corelib/json/qjsonobject.h'],"{""qjsonobject.h"": ""@@ -158,8 +158,8 @@ public:\n         inline const_iterator &operator+=(int j) { i += j; return *this; }\n         inline const_iterator &operator-=(int j) { i -= j; return *this; }\n \n-        inline bool operator==(const iterator &o) const { return i == o.i; }\n-        inline bool operator!=(const iterator &o) const { return i != o.i; }\n+        inline bool operator==(const iterator &other) const { return i == other.i; }\n+        inline bool operator!=(const iterator &other) const { return i != other.i; }\n     };\n     friend class const_iterator;\n \n""}",bug,"bug 
",bug;
21697.0,21697.0,bug ,Aurindam Jana,QmlDebugging: Send parent debug id with object info,"QmlDebugging: Send parent debug id with object info

Change-Id: Ic197656b90a309d1d9e72b9d6648fee86164c3e1","['src/qml/debugger/qqmlenginedebugservice.cpp', 'src/qml/debugger/qqmlenginedebugservice_p.h']","{""qqmlenginedebugservice.cpp"": ""@@ -67,7 +67,7 @@ QQmlEngineDebugService *QQmlEngineDebugService::instance()\n }\n \n QQmlEngineDebugService::QQmlEngineDebugService(QObject *parent)\n-    : QQmlDebugService(QStringLiteral(\""QmlDebugger\""), 1, parent),\n+    : QQmlDebugService(QStringLiteral(\""QmlDebugger\""), 2, parent),\n       m_watch(new QQmlWatcher(this)),\n       m_statesDelegate(0)\n {\n@@ -86,7 +86,8 @@ QDataStream &operator<<(QDataStream &ds,\n                         const QQmlEngineDebugService::QQmlObjectData &data)\n {\n     ds << data.url << data.lineNumber << data.columnNumber << data.idString\n-       << data.objectName << data.objectType << data.objectId << data.contextId;\n+       << data.objectName << data.objectType << data.objectId << data.contextId\n+       << data.parentId;\n     return ds;\n }\n \n@@ -94,7 +95,8 @@ QDataStream &operator>>(QDataStream &ds,\n                         QQmlEngineDebugService::QQmlObjectData &data)\n {\n     ds >> data.url >> data.lineNumber >> data.columnNumber >> data.idString\n-       >> data.objectName >> data.objectType >> data.objectId >> data.contextId;\n+       >> data.objectName >> data.objectType >> data.objectId >> data.contextId\n+       >> data.parentId;\n     return ds;\n }\n \n@@ -370,7 +372,7 @@ QQmlEngineDebugService::objectData(QObject *object)\n     rv.objectName = object->objectName();\n     rv.objectId = QQmlDebugService::idForObject(object);\n     rv.contextId = QQmlDebugService::idForObject(qmlContext(object));\n-\n+    rv.parentId = QQmlDebugService::idForObject(object->parent());\n     QQmlType *type = QQmlMetaType::qmlType(object->metaObject());\n     if (type) {\n         QString typeName = type->qmlTypeName();\n"", ""qqmlenginedebugservice_p.h"": ""@@ -83,6 +83,7 @@ public:\n         QString objectType;\n         int objectId;\n         int contextId;\n+        int parentId;\n     };\n \n     struct QQmlObjectProperty {\n""}",feature; test,"feature 
",bug;
8258.0,8258.0,feature; test,Jo Asplin,Completed change to eliminate v8.pro,"Completed change to eliminate v8.pro

The initial change to eliminate v8.pro was
incomplete.

See http://codereview.qt-project.org/#change,8058
(not merged at time of writing).

Change-Id: Ia2c996d247f8b19380363f3e0409d38d3b839fdb",['tests/auto/auto.pro'],"{""auto.pro"": ""@@ -11,7 +11,7 @@ SUBDIRS += \\\n     sql \\\n     testlib \\\n     tools \\\n-    v8.pro \\\n+    v8 \\\n     xml \\\n     other \\\n     widgets \\\n@@ -20,4 +20,4 @@ cross_compile:                              SUBDIRS -= host.pro\n cross_compile:                              SUBDIRS -= tools\n !contains(QT_CONFIG, opengl):               SUBDIRS -= opengl\n !unix|embedded|!contains(QT_CONFIG, dbus):  SUBDIRS -= dbus\n-!contains(QT_CONFIG, v8):                   SUBDIRS -= v8.pro\n+!contains(QT_CONFIG, v8):                   SUBDIRS -= v8\n""}",resource,"deprecate, test 
",resource;
24277.0,24277.0,resource ,Stephen Kelly (Unused account),Run DBus tests only if QtDBus is found.,"Run DBus tests only if QtDBus is found.

It's not enough to check for UNIX because Qt may have been configured
without dbus, or we could be running on APPLE (on which DBus is not
commonly installed).

Change-Id: Ic57200dad42c0c12b292d1066f799c827294fe9a",['tests/auto/cmake/CMakeLists.txt'],"{""CMakeLists.txt"": ""@@ -92,6 +92,9 @@ expect_fail(fail5)\n expect_pass(\""pass(needsquoting)6\"")\n expect_pass(pass7)\n expect_pass(pass8)\n-if (UNIX)\n+\n+# If QtDBus has been installed then run the tests for its macros.\n+find_package(Qt5DBus QUIET)\n+if (Qt5DBus_FOUND)\n     expect_pass(pass9)\n endif()\n""}",test,"test 
",resource;test;
1026.0,1026.0,test ,Aaron Kennedy,Optimize QDeclarativePropertyCache,"Optimize QDeclarativePropertyCache

The creation of QDeclarativePropertyCaches contributes significantly
to the initial compile time of a QML app.

Change-Id: Iac5d1578155dfa4678a0e21eab51f4c1675762a9","['src/declarative/qml/qdeclarativeenginedebug.cpp', 'src/declarative/qml/v8/qv8qobjectwrapper.cpp', 'src/declarative/qml/qdeclarativelist.cpp', 'src/declarative/qml/v8/qv8valuetypewrapper.cpp', 'src/declarative/qml/qdeclarativecompiler.cpp', 'src/declarative/qml/qdeclarativeproperty.cpp', 'src/declarative/qml/v4/qdeclarativev4irbuilder.cpp', 'src/declarative/qml/qdeclarativepropertycache.cpp', 'src/declarative/qml/qdeclarativepropertycache_p.h']","{""qdeclarativecompiler.cpp"": ""@@ -981,7 +981,8 @@ void QDeclarativeCompiler::genObject(QDeclarativeParser::Object *obj)\n                 reinterpret_cast<const QDeclarativeVMEMetaData *>(obj->synthdata.constData());\n             for (int ii = 0; ii < vmeMetaData->aliasCount; ++ii) {\n                 int index = obj->metaObject()->propertyOffset() + vmeMetaData->propertyCount + ii;\n-                propertyCache->property(index)->flags |= QDeclarativePropertyCache::Data::IsAlias;\n+                QDeclarativePropertyCache::Data *data = propertyCache->property(index);\n+                data->setFlags(data->getFlags() | QDeclarativePropertyCache::Data::IsAlias);\n             }\n         }\n \n@@ -1546,8 +1547,7 @@ bool QDeclarativeCompiler::buildProperty(QDeclarativeParser::Property *prop,\n             output->types.at(prop->parent->type).component) {\n \n             QDeclarativePropertyCache *cache = output->types.at(prop->parent->type).component->rootPropertyCache;\n-            if (cache && cache->property(prop->index) && \n-                cache->property(prop->index)->flags & QDeclarativePropertyCache::Data::IsAlias)\n+            if (cache && cache->property(prop->index) && cache->property(prop->index)->isAlias())\n                 prop->isAlias = true;\n         }\n \n@@ -3138,7 +3138,7 @@ int QDeclarativeCompiler::indexOfSignal(QDeclarativeParser::Object *object, cons\n         QDeclarativePropertyCache::Data *d = cache->property(strName);\n         if (notInRevision) *notInRevision = false;\n \n-        while (d && !(d->flags & QDeclarativePropertyCache::Data::IsFunction))\n+        while (d && !(d->isFunction()))\n             d = cache->overrideData(d);\n \n         if (d && !cache->isAllowedInRevision(d)) {\n@@ -3178,7 +3178,7 @@ int QDeclarativeCompiler::indexOfProperty(QDeclarativeParser::Object *object, co\n \n         QDeclarativePropertyCache::Data *d = cache->property(strName);\n         // Find the first property\n-        while (d && d->flags & QDeclarativePropertyCache::Data::IsFunction) \n+        while (d && d->isFunction())\n             d = cache->overrideData(d);\n \n         if (d && !cache->isAllowedInRevision(d)) {\n"", ""qdeclarativeenginedebug.cpp"": ""@@ -678,7 +678,7 @@ void QDeclarativeEngineDebugServer::setMethodBody(int objectId, const QString &m\n     QDeclarativePropertyCache::Data *prop = \n         QDeclarativePropertyCache::property(context->engine(), object, method, dummy);\n \n-    if (!prop || !(prop->flags & QDeclarativePropertyCache::Data::IsVMEFunction))\n+    if (!prop || !prop->isVMEFunction())\n         return;\n \n     QMetaMethod metaMethod = object->metaObject()->method(prop->coreIndex);\n"", ""qdeclarativelist.cpp"": ""@@ -139,7 +139,7 @@ QDeclarativeListReference::QDeclarativeListReference(QObject *object, const char\n     QDeclarativePropertyCache::Data *data = \n         QDeclarativePropertyCache::property(engine, object, QLatin1String(property), local);\n \n-    if (!data || !(data->flags & QDeclarativePropertyCache::Data::IsQList)) return;\n+    if (!data || !data->isQList()) return;\n \n     QDeclarativeEnginePrivate *p = engine?QDeclarativeEnginePrivate::get(engine):0;\n \n"", ""qdeclarativeproperty.cpp"": ""@@ -255,7 +255,7 @@ void QDeclarativePropertyPrivate::initProperty(QObject *obj, const QString &name\n                 QDeclarativePropertyCache::property(engine, obj, pathName, local);\n \n             if (!property) return; // Not a property\n-            if (property->flags & QDeclarativePropertyCache::Data::IsFunction) \n+            if (property->isFunction())\n                 return; // Not an object property \n \n             if (ii == (path.count() - 2) && QDeclarativeValueTypeFactory::isValueType(property->propType)) {\n@@ -277,7 +277,7 @@ void QDeclarativePropertyPrivate::initProperty(QObject *obj, const QString &name\n \n                 return; \n             } else {\n-                if (!(property->flags & QDeclarativePropertyCache::Data::IsQObjectDerived)) \n+                if (!property->isQObject())\n                     return; // Not an object property\n \n                 void *args[] = { &currentObject, 0 };\n@@ -311,7 +311,7 @@ void QDeclarativePropertyPrivate::initProperty(QObject *obj, const QString &name\n     QDeclarativePropertyCache::Data local;\n     QDeclarativePropertyCache::Data *property = \n         QDeclarativePropertyCache::property(engine, currentObject, terminal, local);\n-    if (property && !(property->flags & QDeclarativePropertyCache::Data::IsFunction)) {\n+    if (property && !property->isFunction()) {\n         object = currentObject;\n         core = *property;\n         nameCache = terminal;\n@@ -371,9 +371,9 @@ QDeclarativePropertyPrivate::propertyTypeCategory() const\n             return QDeclarativeProperty::InvalidCategory;\n         else if (QDeclarativeValueTypeFactory::isValueType((uint)type))\n             return QDeclarativeProperty::Normal;\n-        else if (core.flags & QDeclarativePropertyCache::Data::IsQObjectDerived)\n+        else if (core.isQObject())\n             return QDeclarativeProperty::Object;\n-        else if (core.flags & QDeclarativePropertyCache::Data::IsQList)\n+        else if (core.isQList())\n             return QDeclarativeProperty::List;\n         else \n             return QDeclarativeProperty::Normal;\n@@ -457,7 +457,7 @@ int QDeclarativePropertyPrivate::propertyType() const\n \n QDeclarativeProperty::Type QDeclarativePropertyPrivate::type() const\n {\n-    if (core.flags & QDeclarativePropertyCache::Data::IsFunction)\n+    if (core.isFunction())\n         return QDeclarativeProperty::SignalProperty;\n     else if (core.isValid())\n         return QDeclarativeProperty::Property;\n@@ -520,12 +520,12 @@ bool QDeclarativeProperty::isWritable() const\n         return false;\n     if (!d->object)\n         return false;\n-    if (d->core.flags & QDeclarativePropertyCache::Data::IsQList)           //list\n+    if (d->core.isQList())           //list\n         return true;\n-    else if (d->core.flags & QDeclarativePropertyCache::Data::IsFunction)   //signal handler\n+    else if (d->core.isFunction())   //signal handler\n         return false;\n-    else if (d->core.isValid())                                             //normal property\n-        return d->core.flags & QDeclarativePropertyCache::Data::IsWritable;\n+    else if (d->core.isValid())      //normal property\n+        return d->core.isWritable();\n     else\n         return false;\n }\n@@ -551,7 +551,7 @@ bool QDeclarativeProperty::isResettable() const\n     if (!d)\n         return false;\n     if (type() & Property && d->core.isValid() && d->object)\n-        return d->core.flags & QDeclarativePropertyCache::Data::IsResettable;\n+        return d->core.isResettable();\n     else\n         return false;\n }\n@@ -682,7 +682,7 @@ QDeclarativePropertyPrivate::binding(QObject *object, int coreIndex, int valueTy\n \n     QDeclarativePropertyCache::Data *propertyData = \n         data->propertyCache?data->propertyCache->property(coreIndex):0;\n-    if (propertyData && propertyData->flags & QDeclarativePropertyCache::Data::IsAlias) {\n+    if (propertyData && propertyData->isAlias()) {\n         const QDeclarativeVMEMetaObject *vme = \n             static_cast<const QDeclarativeVMEMetaObject *>(metaObjectForProperty(object->metaObject(), coreIndex));\n \n@@ -723,7 +723,7 @@ void QDeclarativePropertyPrivate::findAliasTarget(QObject *object, int bindingIn\n     if (data) {\n         QDeclarativePropertyCache::Data *propertyData = \n             data->propertyCache?data->propertyCache->property(coreIndex):0;\n-        if (propertyData && propertyData->flags & QDeclarativePropertyCache::Data::IsAlias) {\n+        if (propertyData && propertyData->isAlias()) {\n             const QDeclarativeVMEMetaObject *vme = \n                 static_cast<const QDeclarativeVMEMetaObject *>(metaObjectForProperty(object->metaObject(), coreIndex));\n             QObject *aObject = 0; int aCoreIndex = -1; int aValueTypeIndex = -1;\n@@ -757,7 +757,7 @@ QDeclarativePropertyPrivate::setBinding(QObject *object, int coreIndex, int valu\n     if (data) {\n         QDeclarativePropertyCache::Data *propertyData = \n             data->propertyCache?data->propertyCache->property(coreIndex):0;\n-        if (propertyData && propertyData->flags & QDeclarativePropertyCache::Data::IsAlias) {\n+        if (propertyData && propertyData->isAlias()) {\n             const QDeclarativeVMEMetaObject *vme = \n                 static_cast<const QDeclarativeVMEMetaObject *>(metaObjectForProperty(object->metaObject(), coreIndex));\n \n@@ -811,7 +811,7 @@ QDeclarativePropertyPrivate::setBindingNoEnable(QObject *object, int coreIndex,\n     if (data) {\n         QDeclarativePropertyCache::Data *propertyData = \n             data->propertyCache?data->propertyCache->property(coreIndex):0;\n-        if (propertyData && propertyData->flags & QDeclarativePropertyCache::Data::IsAlias) {\n+        if (propertyData && propertyData->isAlias()) {\n             const QDeclarativeVMEMetaObject *vme = \n                 static_cast<const QDeclarativeVMEMetaObject *>(metaObjectForProperty(object->metaObject(), coreIndex));\n \n@@ -994,14 +994,14 @@ QVariant QDeclarativePropertyPrivate::readValueProperty()\n         if (!ep) delete valueType;\n         return rv;\n \n-    } else if (core.flags & QDeclarativePropertyCache::Data::IsQList) {\n+    } else if (core.isQList()) {\n \n         QDeclarativeListProperty<QObject> prop;\n         void *args[] = { &prop, 0 };\n         QMetaObject::metacall(object, QMetaObject::ReadProperty, core.coreIndex, args);\n         return QVariant::fromValue(QDeclarativeListReferencePrivate::init(prop, core.propType, engine)); \n \n-    } else if (core.flags & QDeclarativePropertyCache::Data::IsQObjectDerived) {\n+    } else if (core.isQObject()) {\n \n         QObject *rv = 0;\n         void *args[] = { &rv, 0 };\n@@ -1077,7 +1077,7 @@ bool QDeclarativePropertyPrivate::writeValueProperty(const QVariant &value, Writ\n         writeBack->read(object, core.coreIndex);\n \n         QDeclarativePropertyCache::Data data = core;\n-        data.flags = valueType.flags;\n+        data.setFlags(valueType.flags);\n         data.coreIndex = valueType.valueTypeCoreIdx;\n         data.propType = valueType.valueTypePropType;\n         rv = write(writeBack, data, value, context, flags);\n@@ -1101,7 +1101,7 @@ bool QDeclarativePropertyPrivate::write(QObject *object, const QDeclarativePrope\n     int coreIdx = property.coreIndex;\n     int status = -1;    //for dbus\n \n-    if (property.flags & QDeclarativePropertyCache::Data::IsEnumType) {\n+    if (property.isEnum()) {\n         QMetaProperty prop = object->metaObject()->property(property.coreIndex);\n         QVariant v = value;\n         // Enum values come through the script engine as doubles\n@@ -1153,7 +1153,7 @@ bool QDeclarativePropertyPrivate::write(QObject *object, const QDeclarativePrope\n         void *a[] = { (void *)&value, 0, &status, &flags };\n         QMetaObject::metacall(object, QMetaObject::WriteProperty, coreIdx, a);\n \n-    } else if (property.flags & QDeclarativePropertyCache::Data::IsQObjectDerived) {\n+    } else if (property.isQObject()) {\n \n         const QMetaObject *valMo = rawMetaObjectForType(enginePriv, value.userType());\n         \n@@ -1180,7 +1180,7 @@ bool QDeclarativePropertyPrivate::write(QObject *object, const QDeclarativePrope\n             return false;\n         }\n \n-    } else if (property.flags & QDeclarativePropertyCache::Data::IsQList) {\n+    } else if (property.isQList()) {\n \n         const QMetaObject *listType = 0;\n         if (enginePriv) {\n@@ -1703,7 +1703,7 @@ static inline void flush_vme_signal(const QObject *object, int index)\n     if (data && data->propertyCache) {\n         QDeclarativePropertyCache::Data *property = data->propertyCache->method(index);\n \n-        if (property && property->flags & QDeclarativePropertyCache::Data::IsVMESignal) {\n+        if (property && property->isVMESignal()) {\n             const QMetaObject *metaObject = object->metaObject();\n             int methodOffset = metaObject->methodOffset();\n \n"", ""qdeclarativepropertycache.cpp"": ""@@ -54,41 +54,78 @@ Q_DECLARE_METATYPE(QDeclarativeV8Handle);\n \n QT_BEGIN_NAMESPACE\n \n-QDeclarativePropertyCache::Data::Flags QDeclarativePropertyCache::Data::flagsForProperty(const QMetaProperty &p, QDeclarativeEngine *engine) \n+// Flags that do *NOT* depend on the property's QMetaProperty::userType() and thus are quick\n+// to load\n+static QDeclarativePropertyCache::Data::Flags fastFlagsForProperty(const QMetaProperty &p)\n {\n-    int propType = p.userType();\n-\n-    Flags flags;\n+    QDeclarativePropertyCache::Data::Flags flags;\n \n     if (p.isConstant())\n-        flags |= Data::IsConstant;\n+        flags |= QDeclarativePropertyCache::Data::IsConstant;\n     if (p.isWritable())\n-        flags |= Data::IsWritable;\n+        flags |= QDeclarativePropertyCache::Data::IsWritable;\n     if (p.isResettable())\n-        flags |= Data::IsResettable;\n+        flags |= QDeclarativePropertyCache::Data::IsResettable;\n     if (p.isFinal())\n-        flags |= Data::IsFinal;\n+        flags |= QDeclarativePropertyCache::Data::IsFinal;\n+    if (p.isEnumType())\n+        flags |= QDeclarativePropertyCache::Data::IsEnumType;\n+\n+    return flags;\n+}\n \n-    if (propType == qMetaTypeId<QDeclarativeBinding *>()) {\n-        flags |= Data::IsQmlBinding;\n+// Flags that do depend on the property's QMetaProperty::userType() and thus are slow to \n+// load\n+static QDeclarativePropertyCache::Data::Flags flagsForPropertyType(int propType, QDeclarativeEngine *engine)\n+{\n+    QDeclarativePropertyCache::Data::Flags flags;\n+\n+    if (propType < QMetaType::User) {\n+    } else if (propType == qMetaTypeId<QDeclarativeBinding *>()) {\n+        flags |= QDeclarativePropertyCache::Data::IsQmlBinding;\n     } else if (propType == qMetaTypeId<QScriptValue>()) {\n-        flags |= Data::IsQScriptValue;\n+        flags |= QDeclarativePropertyCache::Data::IsQScriptValue;\n     } else if (propType == qMetaTypeId<QDeclarativeV8Handle>()) {\n-        flags |= Data::IsV8Handle;\n-    } else if (p.isEnumType()) {\n-        flags |= Data::IsEnumType;\n+        flags |= QDeclarativePropertyCache::Data::IsV8Handle;\n     } else {\n-        QDeclarativeMetaType::TypeCategory cat = engine ? QDeclarativeEnginePrivate::get(engine)->typeCategory(propType)\n-                                               : QDeclarativeMetaType::typeCategory(propType);\n+        QDeclarativeMetaType::TypeCategory cat = \n+            engine ? QDeclarativeEnginePrivate::get(engine)->typeCategory(propType)\n+                   : QDeclarativeMetaType::typeCategory(propType);\n+\n         if (cat == QDeclarativeMetaType::Object)\n-            flags |= Data::IsQObjectDerived;\n+            flags |= QDeclarativePropertyCache::Data::IsQObjectDerived;\n         else if (cat == QDeclarativeMetaType::List)\n-            flags |= Data::IsQList;\n+            flags |= QDeclarativePropertyCache::Data::IsQList;\n     }\n \n     return flags;\n }\n \n+QDeclarativePropertyCache::Data::Flags \n+QDeclarativePropertyCache::Data::flagsForProperty(const QMetaProperty &p, QDeclarativeEngine *engine) \n+{\n+    return fastFlagsForProperty(p) | flagsForPropertyType(p.userType(), engine);\n+}\n+\n+void QDeclarativePropertyCache::Data::lazyLoad(const QMetaProperty &p, QDeclarativeEngine *engine)\n+{\n+    Q_UNUSED(engine);\n+\n+    coreIndex = p.propertyIndex();\n+    notifyIndex = p.notifySignalIndex();\n+    revision = p.revision();\n+\n+    flags = fastFlagsForProperty(p);\n+\n+    int type = p.type();\n+    if (type == QVariant::UserType) {\n+        propTypeName = p.typeName();\n+        flags |= QDeclarativePropertyCache::Data::NotFullyResolved;\n+    } else {\n+        propType = type;\n+    }\n+}\n+\n void QDeclarativePropertyCache::Data::load(const QMetaProperty &p, QDeclarativeEngine *engine)\n {\n     propType = p.userType();\n@@ -96,7 +133,7 @@ void QDeclarativePropertyCache::Data::load(const QMetaProperty &p, QDeclarativeE\n         propType = qMetaTypeId<QVariant>();\n     coreIndex = p.propertyIndex();\n     notifyIndex = p.notifySignalIndex();\n-    flags = flagsForProperty(p, engine);\n+    flags = fastFlagsForProperty(p) | flagsForPropertyType(propType, engine);\n     revision = p.revision();\n }\n \n@@ -113,23 +150,54 @@ void QDeclarativePropertyCache::Data::load(const QMetaMethod &m)\n     if (returnType) \n         propType = QMetaType::type(returnType);\n \n-    QList<QByteArray> params = m.parameterTypes();\n-    if (!params.isEmpty()) {\n+    const char *signature = m.signature();\n+    while (*signature != '(') { Q_ASSERT(*signature != 0); ++signature; }\n+\n+    ++signature;\n+    if (*signature != ')') {\n         flags |= Data::HasArguments;\n-        if (params.at(0).length() == 23 && \n-            0 == qstrcmp(params.at(0).constData(), \""QDeclarativeV8Function*\"")) {\n+        if (0 == ::strcmp(signature, \""QDeclarativeV8Function*)\"")) {\n             flags |= Data::IsV8Function;\n         }\n     }\n+\n     revision = m.revision();\n }\n \n+void QDeclarativePropertyCache::Data::lazyLoad(const QMetaMethod &m)\n+{\n+    coreIndex = m.methodIndex();\n+    relatedIndex = -1;\n+    flags |= Data::IsFunction;\n+    if (m.methodType() == QMetaMethod::Signal)\n+        flags |= Data::IsSignal;\n+    propType = QVariant::Invalid;\n+\n+    const char *returnType = m.typeName();\n+    if (returnType) {\n+        propTypeName = returnType;\n+        flags |= Data::NotFullyResolved;\n+    }\n+\n+    const char *signature = m.signature();\n+    while (*signature != '(') { Q_ASSERT(*signature != 0); ++signature; }\n+\n+    ++signature;\n+    if (*signature != ')') {\n+        flags |= Data::HasArguments;\n+        if (0 == ::strcmp(signature, \""QDeclarativeV8Function*)\"")) {\n+            flags |= Data::IsV8Function;\n+        }\n+    }\n+\n+    revision = m.revision();\n+}\n \n /*!\n Creates a new empty QDeclarativePropertyCache.\n */\n QDeclarativePropertyCache::QDeclarativePropertyCache(QDeclarativeEngine *e)\n-: QDeclarativeCleanup(e), engine(e)\n+: QDeclarativeCleanup(e), engine(e), parent(0), propertyIndexCacheStart(0), methodIndexCacheStart(0)\n {\n     Q_ASSERT(engine);\n }\n@@ -138,7 +206,7 @@ QDeclarativePropertyCache::QDeclarativePropertyCache(QDeclarativeEngine *e)\n Creates a new QDeclarativePropertyCache of \\a metaObject.\n */\n QDeclarativePropertyCache::QDeclarativePropertyCache(QDeclarativeEngine *e, const QMetaObject *metaObject)\n-: QDeclarativeCleanup(e), engine(e)\n+: QDeclarativeCleanup(e), engine(e), parent(0), propertyIndexCacheStart(0), methodIndexCacheStart(0)\n {\n     Q_ASSERT(engine);\n     Q_ASSERT(metaObject);\n@@ -153,6 +221,7 @@ QDeclarativePropertyCache::~QDeclarativePropertyCache()\n \n void QDeclarativePropertyCache::clear()\n {\n+#if 0\n     for (int ii = 0; ii < indexCache.count(); ++ii) {\n         if (indexCache.at(ii)) indexCache.at(ii)->release();\n     }\n@@ -165,10 +234,18 @@ void QDeclarativePropertyCache::clear()\n     for (StringCache::ConstIterator iter = stringCache.begin(); \n             iter != stringCache.end(); ++iter) {\n         RData *data = (*iter);\n-        data->release(); \n+        if (data)\n+            data->release(); \n     }\n+#endif\n+\n+    if (parent) parent->release();\n+    parent = 0;\n+\n+    propertyIndexCacheStart = 0;\n+    methodIndexCacheStart = 0;\n \n-    indexCache.clear();\n+    propertyIndexCache.clear();\n     methodIndexCache.clear();\n     stringCache.clear();\n     qPersistentDispose(constructor);\n@@ -219,23 +296,16 @@ QDeclarativePropertyCache::Data QDeclarativePropertyCache::create(const QMetaObj\n     return rv;\n }\n \n-QDeclarativePropertyCache *QDeclarativePropertyCache::copy() const\n+QDeclarativePropertyCache *QDeclarativePropertyCache::copy() \n {\n     QDeclarativePropertyCache *cache = new QDeclarativePropertyCache(engine);\n-    cache->indexCache = indexCache;\n-    cache->methodIndexCache = methodIndexCache;\n+    cache->parent = this;\n+    cache->parent->addref();\n+    cache->propertyIndexCacheStart = propertyIndexCache.count();\n+    cache->methodIndexCacheStart = methodIndexCache.count();\n     cache->stringCache = stringCache;\n     cache->allowedRevisionCache = allowedRevisionCache;\n \n-    for (int ii = 0; ii < indexCache.count(); ++ii) {\n-        if (indexCache.at(ii)) indexCache.at(ii)->addref();\n-    }\n-    for (int ii = 0; ii < methodIndexCache.count(); ++ii) {\n-        if (methodIndexCache.at(ii)) methodIndexCache.at(ii)->addref();\n-    }\n-    for (StringCache::ConstIterator iter = stringCache.begin(); iter != stringCache.end(); ++iter)\n-        (*iter)->addref();\n-\n     // We specifically do *NOT* copy the constructor\n \n     return cache;\n@@ -259,65 +329,64 @@ void QDeclarativePropertyCache::append(QDeclarativeEngine *engine, const QMetaOb\n \n     allowedRevisionCache.append(0);\n \n-    QDeclarativeEnginePrivate *enginePriv = QDeclarativeEnginePrivate::get(engine);\n     int methodCount = metaObject->methodCount();\n     // 3 to block the destroyed signal and the deleteLater() slot\n     int methodOffset = qMax(3, metaObject->methodOffset()); \n \n-    methodIndexCache.resize(methodCount);\n+    methodIndexCache.resize(methodCount - methodIndexCacheStart);\n     for (int ii = methodOffset; ii < methodCount; ++ii) {\n         QMetaMethod m = metaObject->method(ii);\n         if (m.access() == QMetaMethod::Private) \n             continue;\n-        QString methodName = QString::fromUtf8(m.signature());\n \n-        int parenIdx = methodName.indexOf(QLatin1Char('('));\n-        Q_ASSERT(parenIdx != -1);\n-        methodName = methodName.left(parenIdx);\n+        // Extract method name\n+        const char *signature = m.signature();\n+        const char *cptr = signature;\n+        while (*cptr != '(') { Q_ASSERT(*cptr != 0); ++cptr; }\n+        QString str = dynamicMetaObject?QString::fromUtf8(signature, cptr - signature):\n+                                        QString::fromLatin1(signature, cptr - signature);\n+        QHashedString methodName(str);\n \n-        RData *data = new RData;\n-        methodIndexCache[ii] = data;  \n+        Data *data = &methodIndexCache[ii - methodIndexCacheStart];\n \n-        data->load(m);\n-        if (m.methodType() == QMetaMethod::Slot || m.methodType() == QMetaMethod::Method) \n-            data->flags |= methodFlags;\n-        else if (m.methodType() == QMetaMethod::Signal)\n+        data->lazyLoad(m);\n+        if (data->isSignal())\n             data->flags |= signalFlags;\n+        else\n+            data->flags |= methodFlags;\n \n         if (!dynamicMetaObject)\n             data->flags |= Data::IsDirect;\n \n         data->metaObjectOffset = allowedRevisionCache.count() - 1;\n \n-        if (stringCache.contains(methodName)) {\n-            RData *old = stringCache[methodName];\n+        if (Data **old = stringCache.value(methodName)) {\n             // We only overload methods in the same class, exactly like C++\n-            if (old->flags & Data::IsFunction && old->coreIndex >= methodOffset)\n-                data->relatedIndex = old->coreIndex;\n-            data->overrideIndexIsProperty = !bool(old->flags & Data::IsFunction);\n-            data->overrideIndex = old->coreIndex;\n-            stringCache[methodName]->release();\n+            if ((*old)->flags & Data::IsFunction && (*old)->coreIndex >= methodOffset)\n+                data->relatedIndex = (*old)->coreIndex;\n+            data->overrideIndexIsProperty = !bool((*old)->flags & Data::IsFunction);\n+            data->overrideIndex = (*old)->coreIndex;\n         }\n \n         stringCache.insert(methodName, data);\n-        data->addref();\n     }\n \n     int propCount = metaObject->propertyCount();\n     int propOffset = metaObject->propertyOffset();\n \n-    indexCache.resize(propCount);\n+    propertyIndexCache.resize(propCount - propertyIndexCacheStart);\n     for (int ii = propOffset; ii < propCount; ++ii) {\n         QMetaProperty p = metaObject->property(ii);\n         if (!p.isScriptable())\n             continue;\n \n-        QString propName = QString::fromUtf8(p.name());\n+        QString str = dynamicMetaObject?QString::fromUtf8(p.name()):\n+                                        QString::fromLatin1(p.name());\n+        QHashedString propName(str);\n \n-        RData *data = new RData;\n-        indexCache[ii] = data;\n+        Data *data = &propertyIndexCache[ii - propertyIndexCacheStart];\n \n-        data->load(p, engine);\n+        data->lazyLoad(p, engine);\n         data->flags |= propertyFlags;\n \n         if (!dynamicMetaObject) \n@@ -325,18 +394,29 @@ void QDeclarativePropertyCache::append(QDeclarativeEngine *engine, const QMetaOb\n \n         data->metaObjectOffset = allowedRevisionCache.count() - 1;\n \n-        if (stringCache.contains(propName)) {\n-            RData *old = stringCache[propName];\n-            data->overrideIndexIsProperty = !bool(old->flags & Data::IsFunction);\n-            data->overrideIndex = old->coreIndex;\n-            stringCache[propName]->release();\n+        if (Data **old = stringCache.value(propName)) {\n+            data->overrideIndexIsProperty = !bool((*old)->flags & Data::IsFunction);\n+            data->overrideIndex = (*old)->coreIndex;\n         }\n \n         stringCache.insert(propName, data);\n-        data->addref();\n     }\n }\n \n+void QDeclarativePropertyCache::resolve(Data *data) const\n+{\n+    Q_ASSERT(data->notFullyResolved());\n+\n+    data->propType = QMetaType::type(data->propTypeName);\n+    if (QVariant::Type(data->propType) == QVariant::LastType)\n+        data->propType = qMetaTypeId<QVariant>();\n+\n+    if (!(data->flags & Data::IsFunction))\n+        data->flags |= flagsForPropertyType(data->propType, engine);\n+\n+    data->flags &= ~Data::NotFullyResolved;\n+}\n+\n void QDeclarativePropertyCache::updateRecur(QDeclarativeEngine *engine, const QMetaObject *metaObject)\n {\n     if (!metaObject)\n@@ -355,7 +435,7 @@ void QDeclarativePropertyCache::update(QDeclarativeEngine *engine, const QMetaOb\n     clear();\n \n     // Optimization to prevent unnecessary reallocation of lists\n-    indexCache.reserve(metaObject->propertyCount());\n+    propertyIndexCache.reserve(metaObject->propertyCount());\n     methodIndexCache.reserve(metaObject->methodCount());\n \n     updateRecur(engine,metaObject);\n@@ -364,25 +444,36 @@ void QDeclarativePropertyCache::update(QDeclarativeEngine *engine, const QMetaOb\n QDeclarativePropertyCache::Data *\n QDeclarativePropertyCache::property(int index) const\n {\n-    if (index < 0 || index >= indexCache.count())\n+    if (index < 0 || index >= (propertyIndexCacheStart + propertyIndexCache.count()))\n         return 0;\n+    \n+    if (index < propertyIndexCacheStart)\n+        return parent->property(index);\n \n-    return indexCache.at(index);\n+    Data *rv = const_cast<Data *>(&propertyIndexCache.at(index - propertyIndexCacheStart));\n+    if (rv->notFullyResolved()) resolve(rv);\n+    return rv;\n }\n \n QDeclarativePropertyCache::Data *\n QDeclarativePropertyCache::method(int index) const\n {\n-    if (index < 0 || index >= methodIndexCache.count())\n+    if (index < 0 || index >= (methodIndexCacheStart + methodIndexCache.count()))\n         return 0;\n \n-    return methodIndexCache.at(index);\n+    if (index < methodIndexCacheStart)\n+        return parent->method(index);\n+\n+    Data *rv = const_cast<Data *>(&methodIndexCache.at(index - methodIndexCacheStart));\n+    if (rv->notFullyResolved()) resolve(rv);\n+    return rv;\n }\n \n QDeclarativePropertyCache::Data *\n QDeclarativePropertyCache::property(const QString &str) const\n {\n-    QDeclarativePropertyCache::RData **rv = stringCache.value(str);\n+    QDeclarativePropertyCache::Data **rv = stringCache.value(str);\n+    if (rv && (*rv)->notFullyResolved()) resolve(*rv);\n     return rv?*rv:0;\n }\n \n"", ""qdeclarativepropertycache_p.h"": ""@@ -104,11 +104,18 @@ public:\n                     HasArguments      = 0x00004000, // Function takes arguments\n                     IsSignal          = 0x00008000, // Function is a signal\n                     IsVMESignal       = 0x00010000, // Signal was added by QML\n-                    IsV8Function      = 0x00020000  // Function takes QDeclarativeV8Function* args\n+                    IsV8Function      = 0x00020000, // Function takes QDeclarativeV8Function* args\n+\n+                    // Internal QDeclarativePropertyCache flags\n+                    NotFullyResolved  = 0x00040000  // True if the type data is to be lazily resolved \n         };\n         Q_DECLARE_FLAGS(Flags, Flag)\n \n+        Flags getFlags() const { return flags; }\n+        void setFlags(Flags f) { flags = f; }\n+\n         bool isValid() const { return coreIndex != -1; } \n+\n         bool isConstant() const { return flags & IsConstant; }\n         bool isWritable() const { return flags & IsWritable; }\n         bool isResettable() const { return flags & IsResettable; }\n@@ -122,9 +129,16 @@ public:\n         bool isQmlBinding() const { return flags & IsQmlBinding; }\n         bool isQScriptValue() const { return flags & IsQScriptValue; }\n         bool isV8Handle() const { return flags & IsV8Handle; }\n+        bool isVMEFunction() const { return flags & IsVMEFunction; }\n+        bool hasArguments() const { return flags & HasArguments; }\n+        bool isSignal() const { return flags & IsSignal; }\n+        bool isVMESignal() const { return flags & IsVMESignal; }\n+        bool isV8Function() const { return flags & IsV8Function; }\n \n-        Flags flags;\n-        int propType;\n+        union {\n+            int propType;             // When !NotFullyResolved\n+            const char *propTypeName; // When NotFullyResolved\n+        };\n         int coreIndex;\n         union {\n             int notifyIndex; // When !IsFunction\n@@ -140,6 +154,13 @@ public:\n         void load(const QMetaMethod &);\n         QString name(QObject *);\n         QString name(const QMetaObject *);\n+\n+    private:\n+        void lazyLoad(const QMetaProperty &, QDeclarativeEngine *engine = 0);\n+        void lazyLoad(const QMetaMethod &);\n+        bool notFullyResolved() const { return flags & NotFullyResolved; }\n+        friend class QDeclarativePropertyCache;\n+        Flags flags;\n     };\n \n     struct ValueTypeData {\n@@ -152,7 +173,7 @@ public:\n \n     void update(QDeclarativeEngine *, const QMetaObject *);\n \n-    QDeclarativePropertyCache *copy() const;\n+    QDeclarativePropertyCache *copy();\n     void append(QDeclarativeEngine *, const QMetaObject *, Data::Flag propertyFlags = Data::NoFlags,\n                 Data::Flag methodFlags = Data::NoFlags, Data::Flag signalFlags = Data::NoFlags);\n     void append(QDeclarativeEngine *, const QMetaObject *, int revision, Data::Flag propertyFlags = Data::NoFlags,\n@@ -184,18 +205,20 @@ private:\n     // Implemented in v8/qv8qobjectwrapper.cpp\n     v8::Local<v8::Object> newQObject(QObject *, QV8Engine *);\n \n-    // XXX is this worth it anymore?\n-    struct RData : public Data, public QDeclarativeRefCount { \n-    };\n-\n-    typedef QVector<RData *> IndexCache;\n-    typedef QStringHash<RData *> StringCache;\n+    typedef QVector<Data> IndexCache;\n+    typedef QStringHash<Data *> StringCache;\n     typedef QVector<int> AllowedRevisionCache;\n \n+    void resolve(Data *) const;\n     void updateRecur(QDeclarativeEngine *, const QMetaObject *);\n \n     QDeclarativeEngine *engine;\n-    IndexCache indexCache;\n+    \n+    QDeclarativePropertyCache *parent;\n+    int propertyIndexCacheStart;\n+    int methodIndexCacheStart;\n+\n+    IndexCache propertyIndexCache;\n     IndexCache methodIndexCache;\n     StringCache stringCache;\n     AllowedRevisionCache allowedRevisionCache;\n@@ -204,8 +227,8 @@ private:\n Q_DECLARE_OPERATORS_FOR_FLAGS(QDeclarativePropertyCache::Data::Flags);\n   \n QDeclarativePropertyCache::Data::Data()\n-: flags(0), propType(0), coreIndex(-1), notifyIndex(-1), overrideIndexIsProperty(false), overrideIndex(-1),\n-  revision(0), metaObjectOffset(-1)\n+: propType(0), coreIndex(-1), notifyIndex(-1), overrideIndexIsProperty(false), overrideIndex(-1),\n+  revision(0), metaObjectOffset(-1), flags(0)\n {\n }\n \n@@ -225,9 +248,9 @@ QDeclarativePropertyCache::overrideData(Data *data) const\n         return 0;\n \n     if (data->overrideIndexIsProperty)\n-        return indexCache.at(data->overrideIndex);\n+        return property(data->overrideIndex);\n     else\n-        return methodIndexCache.at(data->overrideIndex);\n+        return method(data->overrideIndex);\n }\n \n QDeclarativePropertyCache::ValueTypeData::ValueTypeData()\n@@ -255,7 +278,8 @@ QDeclarativeEngine *QDeclarativePropertyCache::qmlEngine() const\n \n QDeclarativePropertyCache::Data *QDeclarativePropertyCache::property(const QHashedV8String &str) const\n {\n-    QDeclarativePropertyCache::RData **rv = stringCache.value(str);\n+    QDeclarativePropertyCache::Data **rv = stringCache.value(str);\n+    if (rv && (*rv)->notFullyResolved()) resolve(*rv);\n     return rv?*rv:0;\n }\n \n"", ""qdeclarativev4irbuilder.cpp"": ""@@ -472,7 +472,7 @@ bool QDeclarativeV4IRBuilder::visit(AST::IdentifierExpression *ast)\n                 return false;\n             }\n \n-            if (data && !(data->flags & QDeclarativePropertyCache::Data::IsFunction)) {\n+            if (data && !data->isFunction()) {\n                 IR::Type irType = irTypeFromVariantType(data->propType, m_engine, metaObject);\n                 _expr.code = _block->SYMBOL(irType, name, metaObject, data->coreIndex, IR::Name::ScopeStorage, line, column);\n                 found = true;\n@@ -493,7 +493,7 @@ bool QDeclarativeV4IRBuilder::visit(AST::IdentifierExpression *ast)\n                 return false;\n             }\n \n-            if (data && !(data->flags & QDeclarativePropertyCache::Data::IsFunction)) {\n+            if (data && !data->isFunction()) {\n                 IR::Type irType = irTypeFromVariantType(data->propType, m_engine, metaObject);\n                 _expr.code = _block->SYMBOL(irType, name, metaObject, data->coreIndex, IR::Name::RootStorage, line, column);\n                 found = true;\n@@ -611,10 +611,10 @@ bool QDeclarativeV4IRBuilder::visit(AST::FieldMemberExpression *ast)\n                     QDeclarativePropertyCache *cache = m_engine->cache(attachedMeta);\n                     QDeclarativePropertyCache::Data *data = cache->property(name);\n \n-                    if (!data || data->flags & QDeclarativePropertyCache::Data::IsFunction)\n+                    if (!data || data->isFunction())\n                         return false; // Don't support methods (or non-existing properties ;)\n \n-                    if(!(data->flags & QDeclarativePropertyCache::Data::IsFinal)) {\n+                    if(!data->isFinal()) {\n                         if (qmlVerboseCompiler())\n                             qWarning() << \""*** non-final attached property:\""\n                                        << (baseName->id + QLatin1String(\"".\"") + ast->name->asString());\n@@ -633,7 +633,7 @@ bool QDeclarativeV4IRBuilder::visit(AST::FieldMemberExpression *ast)\n \n                 QDeclarativePropertyCache::Data *data = cache->property(name);\n \n-                if (!data || data->flags & QDeclarativePropertyCache::Data::IsFunction)\n+                if (!data || data->isFunction())\n                     return false; // Don't support methods (or non-existing properties ;)\n \n                 if (data->revision != 0) {\n@@ -657,10 +657,10 @@ bool QDeclarativeV4IRBuilder::visit(AST::FieldMemberExpression *ast)\n \n                     QDeclarativePropertyCache::Data *data = cache->property(name);\n \n-                    if (!data || data->flags & QDeclarativePropertyCache::Data::IsFunction)\n+                    if (!data || data->isFunction())\n                         return false; // Don't support methods (or non-existing properties ;)\n \n-                    if(!(data->flags & QDeclarativePropertyCache::Data::IsFinal)) {\n+                    if(!data->isFinal()) {\n                         if (qmlVerboseCompiler())\n                             qWarning() << \""*** non-final property access:\""\n                                 << (baseName->id + QLatin1String(\"".\"") + ast->name->asString());\n"", ""qv8qobjectwrapper.cpp"": ""@@ -436,9 +436,9 @@ v8::Handle<v8::Value> QV8QObjectWrapper::GetProperty(QV8Engine *engine, QObject\n     typedef QDeclarativeEnginePrivate::CapturedProperty CapturedProperty;\n \n     if (result->isFunction()) {\n-        if (result->flags & QDeclarativePropertyCache::Data::IsVMEFunction) {\n+        if (result->isVMEFunction()) {\n             return ((QDeclarativeVMEMetaObject *)(object->metaObject()))->vmeMethod(result->coreIndex);\n-        } else if (result->flags & QDeclarativePropertyCache::Data::IsV8Function) {\n+        } else if (result->isV8Function()) {\n             return MethodClosure::createWithGlobal(engine, object, objectHandle, result->coreIndex);\n         } else {\n             return MethodClosure::create(engine, object, objectHandle, result->coreIndex);\n@@ -1558,7 +1558,7 @@ static const QDeclarativePropertyCache::Data * RelatedMethod(QObject *object,\n static v8::Handle<v8::Value> CallPrecise(QObject *object, const QDeclarativePropertyCache::Data &data, \n                                          QV8Engine *engine, CallArgs &callArgs)\n {\n-    if (data.flags & QDeclarativePropertyCache::Data::HasArguments) {\n+    if (data.hasArguments()) {\n \n         QMetaMethod m = object->metaObject()->method(data.coreIndex);\n         QList<QByteArray> argTypeNames = m.parameterTypes();\n@@ -1620,7 +1620,7 @@ static v8::Handle<v8::Value> CallOverloaded(QObject *object, const QDeclarativeP\n     do {\n         QList<QByteArray> methodArgTypeNames;\n \n-        if (attempt->flags & QDeclarativePropertyCache::Data::HasArguments)\n+        if (attempt->hasArguments())\n             methodArgTypeNames = object->metaObject()->method(attempt->coreIndex).parameterTypes();\n \n         int methodArgumentCount = methodArgTypeNames.count();\n@@ -1780,7 +1780,7 @@ v8::Handle<v8::Value> QV8QObjectWrapper::Invoke(const v8::Arguments &args)\n             return v8::Undefined();\n     }\n \n-    if (method.flags & QDeclarativePropertyCache::Data::IsV8Function) {\n+    if (method.isV8Function()) {\n         v8::Handle<v8::Value> rv;\n         v8::Handle<v8::Object> qmlglobal = args[2]->ToObject();\n \n"", ""qv8valuetypewrapper.cpp"": ""@@ -231,7 +231,7 @@ v8::Handle<v8::Value> QV8ValueTypeWrapper::Setter(v8::Local<v8::String> property\n             v8::Handle<v8::Function> function = v8::Handle<v8::Function>::Cast(value);\n \n             QDeclarativePropertyCache::Data cacheData;\n-            cacheData.flags = QDeclarativePropertyCache::Data::IsWritable;\n+            cacheData.setFlags(QDeclarativePropertyCache::Data::IsWritable);\n             cacheData.propType = reference->object->metaObject()->property(reference->property).userType();\n             cacheData.coreIndex = reference->property;\n \n""}",feature,"refactor 
",others;
4969.0,4969.0,feature,Christian Kamm,Qt4Project: Update code models if a folder watch changes the file list.,"Qt4Project: Update code models if a folder watch changes the file list.

Fixes: c861af529ec87b34f1ca45d917d367c345334859

Change-Id: I7ed8afd52ab694d053788fac7f3e994898f2dd84","['src/plugins/qt4projectmanager/qt4project.h', 'src/plugins/qt4projectmanager/qt4nodes.cpp', 'src/plugins/qt4projectmanager/qt4project.cpp']","{""qt4nodes.cpp"": ""@@ -733,6 +733,7 @@ void Qt4PriFileNode::folderChanged(const QString &folder)\n \n     contents.updateSubFolders(this, this);\n     m_project->updateFileList();\n+    m_project->updateCodeModels();\n \n     // The files to be packaged are listed inside the symbian build system.\n     // We need to regenerate that list by running qmake\n"", ""qt4project.cpp"": ""@@ -353,7 +353,6 @@ void Qt4Project::updateFileList()\n     if (newFiles != *m_projectFiles) {\n         *m_projectFiles = newFiles;\n         emit fileListChanged();\n-        updateCodeModels();\n         if (debug)\n             qDebug() << Q_FUNC_INFO << *m_projectFiles;\n     }\n@@ -393,6 +392,8 @@ bool Qt4Project::fromMap(const QVariantMap &map)\n \n     update();\n     updateFileList();\n+    // This might be incorrect, need a full update\n+    updateCodeModels();\n \n     foreach (Target *t, targets())\n         static_cast<Qt4BaseTarget *>(t)->createApplicationProFiles();\n@@ -798,6 +799,7 @@ void Qt4Project::decrementPendingEvaluateFutures()\n             foreach (Target *t, targets())\n                 static_cast<Qt4BaseTarget *>(t)->createApplicationProFiles();\n             updateFileList();\n+            updateCodeModels();\n             if (debug)\n                 qDebug()<<\""  Setting state to Base\"";\n             m_asyncUpdateState = Base;\n"", ""qt4project.h"": ""@@ -131,6 +131,7 @@ public:\n \n     // For Qt4ProFileNode after a on disk change\n     void updateFileList();\n+    void updateCodeModels();\n \n     void watchFolders(const QStringList &l, Qt4PriFileNode *node);\n     void unwatchFolders(const QStringList &l, Qt4PriFileNode *node);\n@@ -158,7 +159,6 @@ private slots:\n private:\n     void scheduleAsyncUpdate();\n \n-    void updateCodeModels();\n     void updateCppCodeModel();\n     void updateQmlJSCodeModel();\n \n""}",feature,"bug, feature 
",bug;
20163.0,20163.0,feature,Robert Löhning,debugger: continue after breakpoint in self-test,"debugger: continue after breakpoint in self-test

Done-by: hjk

Change-Id: I8405f88c963df359a9ae7f2a779ef0401b3c5994",['tests/manual/debugger/simple/simple_test_app.cpp'],"{""simple_test_app.cpp"": ""@@ -5895,6 +5895,7 @@ namespace bug6933 {\n         BREAK_HERE;\n         // Expand b b.bug6933::Base\n         // Check b.[bug6933::Base].[vptr]\n+        // Continue.\n         dummyStatement(&d, b);\n     }\n }\n""}",test,"test 
",bug;test;
5411.0,5411.0,test,Qt Submodule Update Bot,Updated submodules.,"Updated submodules.

Change-Id: I3cabeeee23b2581e9ed694b1ae33259c5e1438ab","['qtbase', 'qtquick3d', 'qtsensors', 'qtdocgallery', 'qtqa', 'qtdeclarative', 'qtdoc', 'qtsystems', 'qtmultimediakit', 'qtpim']","{""qtbase"": ""@@ -1 +1 @@\n-Subproject commit 1782bcefb664b6342f65d5910a8c27f719d44b9f\n+Subproject commit 91ec8261ab58061ca9e935c4e6a7f1c4a359cc27\n"", ""qtdeclarative"": ""@@ -1 +1 @@\n-Subproject commit 7100a74def3a82bc52c93b800cec973bf312b1b3\n+Subproject commit d535e1f4159767584e1c22a9db308c6b5d8c4b2c\n"", ""qtdoc"": ""@@ -1 +1 @@\n-Subproject commit 3c8bc7986c58be930fa24c53a04c07ce408930d2\n+Subproject commit 2cf9f9ce14f856c616dfead98a1cced1b542981b\n"", ""qtdocgallery"": ""@@ -1 +1 @@\n-Subproject commit 4fde2b59eafdf2a8d54838a667a7eff048861280\n+Subproject commit cda813a738424fc3222d2f7e78e6822a8369f104\n"", ""qtmultimediakit"": ""@@ -1 +1 @@\n-Subproject commit 4806115e61222880fb75aae45a4ac8e3438dbeba\n+Subproject commit 91ae6f5e9408fdccba509a9af21127ee8a54a07b\n"", ""qtpim"": ""@@ -1 +1 @@\n-Subproject commit f9644150018b658941eeb2b4801dcb243a82b2b3\n+Subproject commit f76c743638bdbf142172b8ba4ff3dd2488328510\n"", ""qtqa"": ""@@ -1 +1 @@\n-Subproject commit d2ff260509fc8b65ee849bbe462f9500bd78b199\n+Subproject commit baf9a21e699bb972c4c3092846492289e079f990\n"", ""qtquick3d"": ""@@ -1 +1 @@\n-Subproject commit 8065b2cce01f7d8ca3e6bef79064f9e37070ca4f\n+Subproject commit 62bb3668183c444519bdba17b83a5b38ba4a2b93\n"", ""qtsensors"": ""@@ -1 +1 @@\n-Subproject commit 08991e3ff72d8203db8b7fc2f2659bfcdc24e408\n+Subproject commit e18966f74c8c81f9d44bc1df7c1051f38a2e7162\n"", ""qtsystems"": ""@@ -1 +1 @@\n-Subproject commit 83d97a155f264a6e3f42bb9683b19d247e5c1b8a\n+Subproject commit a17e7315861fe8af19eb23f60f6653f38eef1712\n""}",resource,"merge 
",feature;
5046.0,5046.0,resource ,Rohan McGovern [inactive],parse_build_log: tweak the language when summarizing a failed dependency,"parse_build_log: tweak the language when summarizing a failed dependency

When testing one Qt5 module fails due to some dependency failing,
we cannot say with certainty that the dependency needs to be fixed.
It may have been an unstable error, for example.

Therefore, remove the possibly misleading speculative language.

Change-Id: I47983e9730c6faa69e9946a7c60075d9e8035532","['scripts/generic/t/data/parsed-logs/qt5-linux-ld-library-not-found-wrong-order-summarized.txt', 'scripts/generic/t/data/parsed-logs/qtpim-linux-compile-fail-in-qtdeclarative-summarized.txt', 'scripts/generic/t/data/parsed-logs/qtdeclarative-mac-undefined-symbols-summarized.txt', 'scripts/generic/parse_build_log.pl', 'scripts/generic/t/data/parsed-logs/qt5-mac-ld-library-not-found-summarized.txt', 'scripts/generic/t/data/parsed-logs/mac-g++-killed-summarized.txt']","{""parse_build_log.pl"": ""@@ -1314,8 +1314,7 @@ sub output_summary\n             if ($tested_qtmodule && $compile_fail_qtmodule ne $tested_qtmodule) {\n                 $summary .= \""\\n\\nWe were trying to test $tested_qtmodule.  \""\n                            .\""One of the dependencies, $compile_fail_qtmodule, \""\n-                           .\""failed to compile.  $compile_fail_qtmodule \""\n-                           .\""will have to be fixed before $tested_qtmodule can succeed.\"";\n+                           .\""failed to compile.\"";\n             }\n         }\n \n"", ""mac-g++-killed-summarized.txt"": ""@@ -3,8 +3,7 @@ qtbase failed to compile for macx-g++ qpa developer-build cocoa OSX\n 10.7 x64 :(\n \n We were trying to test qtdeclarative.  One of the dependencies, qtbase,\n-failed to compile.  qtbase will have to be fixed before qtdeclarative\n-can succeed.\n+failed to compile.\n \n   compiling graphicsview/qgraphicstransform.cpp\n   compiling graphicsview/qgraphicstransform.cpp\n"", ""qt5-linux-ld-library-not-found-wrong-order-summarized.txt"": ""@@ -3,8 +3,7 @@ qtfeedback failed to compile for linux-g++-32 qpa developer-build\n Ubuntu 10.04 x86 :(\n \n We were trying to test qt5.  One of the dependencies, qtfeedback,\n-failed to compile.  qtfeedback will have to be fixed before qt5 can\n-succeed.\n+failed to compile.\n \n It seems that some project tried to link against libQtMultimediaKit\n before that library was built.\n"", ""qt5-mac-ld-library-not-found-summarized.txt"": ""@@ -3,8 +3,7 @@ qtfeedback failed to compile for macx-g++ qpa developer-build cocoa OSX\n 10.7 x64 :(\n \n We were trying to test qt5.  One of the dependencies, qtfeedback,\n-failed to compile.  qtfeedback will have to be fixed before qt5 can\n-succeed.\n+failed to compile.\n \n   ld: library not found for -lQtMultimediaKit\n   make[6]: *** [../../../../../qtbase/plugins/feedback/libqtfeedback_mmk.dylib] Error 1\n"", ""qtdeclarative-mac-undefined-symbols-summarized.txt"": ""@@ -3,8 +3,7 @@ qtbase failed to compile for macx-g++ qpa developer-build cocoa OSX\n 10.6 x64 :(\n \n We were trying to test qtdeclarative.  One of the dependencies, qtbase,\n-failed to compile.  qtbase will have to be fixed before qtdeclarative\n-can succeed.\n+failed to compile.\n \n   Undefined symbols:\n     \""v8::internal::NativesCollection<(v8::internal::NativeType)0>::GetScriptSource(int)\"", referenced from:\n"", ""qtpim-linux-compile-fail-in-qtdeclarative-summarized.txt"": ""@@ -3,8 +3,7 @@ qtdeclarative failed to compile for linux-g++-32 qpa developer-build\n Ubuntu 10.04 x86 :(\n \n We were trying to test qtpim.  One of the dependencies, qtdeclarative,\n-failed to compile.  qtdeclarative will have to be fixed before qtpim\n-can succeed.\n+failed to compile.\n \n   compiling quicktestresult.cpp\n   quicktestresult.cpp: In member function 'void QuickTestResult::skipSingle(const QString&, const QString&, int)':\n""}",resource,"bug, test 
",bug;deprecat;resource;test;
1205.0,1205.0,resource ,hjk,display: simplify AnalyzerStartParameters,"display: simplify AnalyzerStartParameters

Change-Id: Ibc9db3d7de96461b097d1a78e1bcfd757458fc99","['src/plugins/valgrind/valgrindplugin.cpp', 'src/plugins/qmlprofiler/qmlprofilertool.cpp', 'src/plugins/analyzerbase/analyzerstartparameters.h']","{""analyzerstartparameters.h"": ""@@ -60,9 +60,6 @@ public:\n     QString debuggee;\n     QString debuggeeArgs;\n     QString analyzerCmdPrefix;\n-    QString remoteMountPoint;\n-    QString localMountDir;\n-    QString remoteSourcesDir;\n     QString displayName;\n     Utils::Environment environment;\n     QString workingDirectory;\n"", ""qmlprofilertool.cpp"": ""@@ -547,6 +547,8 @@ void QmlProfilerTool::updateRecordingState()\n \n void QmlProfilerTool::startTool(StartMode mode)\n {\n+    Q_UNUSED(mode);\n+\n     using namespace ProjectExplorer;\n \n     // Make sure mode is shown.\n"", ""valgrindplugin.cpp"": ""@@ -74,59 +74,20 @@ using namespace ProjectExplorer;\n namespace Valgrind {\n namespace Internal {\n \n-static AnalyzerStartParameters localStartParameters(RunConfiguration *runConfiguration)\n-{\n-    AnalyzerStartParameters sp;\n-    QTC_ASSERT(runConfiguration, return sp);\n-    LocalApplicationRunConfiguration *rc =\n-            qobject_cast<LocalApplicationRunConfiguration *>(runConfiguration);\n-    QTC_ASSERT(rc, return sp);\n-\n-    sp.startMode = StartLocal;\n-    sp.environment = rc->environment();\n-    sp.workingDirectory = rc->workingDirectory();\n-    sp.debuggee = rc->executable();\n-    sp.debuggeeArgs = rc->commandLineArguments();\n-    sp.displayName = rc->displayName();\n-    sp.connParams.host = QLatin1String(\""localhost\"");\n-    sp.connParams.port = rc->qmlDebugServerPort();\n-    return sp;\n-}\n-\n-static AnalyzerStartParameters remoteLinuxStartParameters(RunConfiguration *runConfiguration)\n-{\n-    AnalyzerStartParameters sp;\n-    RemoteLinux::RemoteLinuxRunConfiguration * const rc\n-        = qobject_cast<RemoteLinux::RemoteLinuxRunConfiguration *>(runConfiguration);\n-    QTC_ASSERT(rc, return sp);\n-\n-    sp.startMode = StartRemote;\n-    sp.debuggee = rc->remoteExecutableFilePath();\n-    sp.debuggeeArgs = rc->arguments();\n-    sp.connParams = rc->deviceConfig()->sshParameters();\n-    sp.analyzerCmdPrefix = rc->commandPrefix();\n-    sp.displayName = rc->displayName();\n-    return sp;\n-}\n-\n-\n-class ValgrindRunControlFactory: public ProjectExplorer::IRunControlFactory\n+class ValgrindRunControlFactory : public ProjectExplorer::IRunControlFactory\n {\n     Q_OBJECT\n \n public:\n     ValgrindRunControlFactory(QObject *parent = 0);\n \n-    typedef ProjectExplorer::RunConfiguration RunConfiguration;\n-    typedef ProjectExplorer::RunControl RunControl;\n-\n     // IRunControlFactory\n     bool canRun(RunConfiguration *runConfiguration, const QString &mode) const;\n     RunControl *create(RunConfiguration *runConfiguration, const QString &mode);\n     QString displayName() const;\n \n-    ProjectExplorer::IRunConfigurationAspect *createRunConfigurationAspect();\n-    ProjectExplorer::RunConfigWidget *createConfigurationWidget(RunConfiguration *runConfiguration);\n+    IRunConfigurationAspect *createRunConfigurationAspect();\n+    RunConfigWidget *createConfigurationWidget(RunConfiguration *runConfiguration);\n };\n \n ValgrindRunControlFactory::ValgrindRunControlFactory(QObject *parent)\n@@ -146,10 +107,24 @@ RunControl *ValgrindRunControlFactory::create(RunConfiguration *runConfiguration\n     QTC_ASSERT(canRun(runConfiguration, mode), return 0);\n \n     AnalyzerStartParameters sp;\n-    if (qobject_cast<ProjectExplorer::LocalApplicationRunConfiguration *>(runConfiguration)) {\n-        sp = localStartParameters(runConfiguration);\n-    } else if (qobject_cast<RemoteLinux::RemoteLinuxRunConfiguration *>(runConfiguration)) {\n-        sp = remoteLinuxStartParameters(runConfiguration);\n+    if (LocalApplicationRunConfiguration *rc1 =\n+            qobject_cast<LocalApplicationRunConfiguration *>(runConfiguration)) {\n+        sp.startMode = StartLocal;\n+        sp.environment = rc1->environment();\n+        sp.workingDirectory = rc1->workingDirectory();\n+        sp.debuggee = rc1->executable();\n+        sp.debuggeeArgs = rc1->commandLineArguments();\n+        sp.displayName = rc1->displayName();\n+        sp.connParams.host = QLatin1String(\""localhost\"");\n+        sp.connParams.port = rc1->qmlDebugServerPort();\n+    } else if (RemoteLinux::RemoteLinuxRunConfiguration *rc2 =\n+               qobject_cast<RemoteLinux::RemoteLinuxRunConfiguration *>(runConfiguration)) {\n+        sp.startMode = StartRemote;\n+        sp.debuggee = rc2->remoteExecutableFilePath();\n+        sp.debuggeeArgs = rc2->arguments();\n+        sp.connParams = rc2->deviceConfig()->sshParameters();\n+        sp.analyzerCmdPrefix = rc2->commandPrefix();\n+        sp.displayName = rc2->displayName();\n     } else {\n         // Might be S60DeviceRunfiguration, or something else ...\n         //sp.startMode = StartRemote;\n@@ -159,7 +134,6 @@ RunControl *ValgrindRunControlFactory::create(RunConfiguration *runConfiguration\n     IAnalyzerTool *tool = AnalyzerManager::toolFromId(mode.toLatin1());\n     AnalyzerRunControl *rc = new AnalyzerRunControl(tool, sp, runConfiguration);\n     QObject::connect(AnalyzerManager::stopAction(), SIGNAL(triggered()), rc, SLOT(stopIt()));\n-    //m_isRunning = true;\n     return rc;\n }\n \n@@ -214,7 +188,7 @@ static void startRemoteTool(IAnalyzerTool *tool, StartMode mode)\n     //m_currentRunControl = rc;\n     QObject::connect(AnalyzerManager::stopAction(), SIGNAL(triggered()), rc, SLOT(stopIt()));\n \n-    ProjectExplorer::ProjectExplorerPlugin::instance()->startRunControl(rc, tool->id());\n+    ProjectExplorerPlugin::instance()->startRunControl(rc, tool->id());\n }\n \n void ValgrindPlugin::startValgrindTool(IAnalyzerTool *tool, StartMode mode)\n""}",deprecat,"refactor 
",others;
16658.0,16658.0,deprecat ,Gunnar Sletta,Introduced QWindow::isExposed().,"Introduced QWindow::isExposed().

The visible property along with show/hideEvent tracks the
windows visibility from the application perspective and is
really a request. The exposeEvent() along with the isExposed()
accessor is used to notify the application of the actual
state of the window in the windowing system.

Change-Id: I7f5b7ed74a168e34aaa21ce0ae9042ddfb0bf6d8","['src/gui/kernel/qplatformwindow_qpa.cpp', 'src/plugins/platforms/windows/qwindowswindow.cpp', 'src/gui/kernel/qplatformwindow_qpa.h', 'src/gui/kernel/qwindow.cpp', 'src/gui/kernel/qwindow.h']","{""qplatformwindow_qpa.cpp"": ""@@ -142,6 +142,7 @@ QMargins QPlatformWindow::frameMargins() const\n void QPlatformWindow::setVisible(bool visible)\n {\n     Q_UNUSED(visible);\n+    QWindowSystemInterface::handleSynchronousExposeEvent(window(), QRect(QPoint(), geometry().size()));\n }\n /*!\n     Requests setting the window flags of this surface\n@@ -152,6 +153,20 @@ Qt::WindowFlags QPlatformWindow::setWindowFlags(Qt::WindowFlags flags)\n     return flags;\n }\n \n+\n+\n+/*!\n+    Returns if this window is exposed in the windowing system.\n+\n+    An exposeEvent() is sent every time this value changes.\n+ */\n+\n+bool QPlatformWindow::isExposed() const\n+{\n+    Q_D(const QPlatformWindow);\n+    return d->window->visible();\n+}\n+\n /*!\n     Requests setting the window state of this surface\n     to \\a type. Returns the actual state set.\n"", ""qplatformwindow_qpa.h"": ""@@ -89,6 +89,8 @@ public:\n     virtual void raise();\n     virtual void lower();\n \n+    virtual bool isExposed() const;\n+\n     virtual void propagateSizeHints();\n \n     virtual void setOpacity(qreal level);\n"", ""qwindow.cpp"": ""@@ -368,6 +368,21 @@ void QWindow::requestActivateWindow()\n         d->platformWindow->requestActivateWindow();\n }\n \n+\n+/*!\n+    Returns if this window is exposed in the windowing system.\n+\n+    An exposeEvent() is sent every time this value changes.\n+ */\n+\n+bool QWindow::isExposed() const\n+{\n+    Q_D(const QWindow);\n+    if (d->platformWindow)\n+        return d->platformWindow->isExposed();\n+    return false;\n+}\n+\n /*!\n     Returns true if the window should appear active from a style perspective.\n \n@@ -882,6 +897,19 @@ bool QWindow::close()\n     return true;\n }\n \n+\n+\n+/*!\n+    The expose event is sent by the window system whenever the windows\n+    exposure on screen changes.\n+\n+    If the window is moved off screen, is made totally obscured by another\n+    window, iconified or similar, this function might be called and the\n+    value of isExposed() might change to false. When this happens,\n+    an application should stop its rendering as it is no longer visible\n+    to the user.\n+ */\n+\n void QWindow::exposeEvent(QExposeEvent *ev)\n {\n     ev->ignore();\n"", ""qwindow.h"": ""@@ -150,6 +150,8 @@ public:\n \n     bool isAncestorOf(const QWindow *child, AncestorMode mode = IncludeTransients) const;\n \n+    bool isExposed() const;\n+\n     QSize minimumSize() const;\n     QSize maximumSize() const;\n     QSize baseSize() const;\n"", ""qwindowswindow.cpp"": ""@@ -706,6 +706,7 @@ void QWindowsWindow::setVisible(bool visible)\n             hide_sys();\n         }\n     }\n+    QWindowSystemInterface::handleSynchronousExposeEvent(window(), QRect(QPoint(), geometry().size()));\n }\n \n bool QWindowsWindow::isVisible() const\n""}",feature,"feature 
",others;
20225.0,20225.0,feature,Lincoln Ramsay,Don't reject plugins that have empty meta-data,"Don't reject plugins that have empty meta-data

Having an empty Json object ({}) should be valid meta-data but this
check means that there needs to be at least one key-value pair or
the plugin will be rejected.

Change-Id: I578ccc35016af16fd30b3807e796fa63c0282f30",['src/corelib/plugin/qfactoryloader.cpp'],"{""qfactoryloader.cpp"": ""@@ -175,8 +175,7 @@ void QFactoryLoader::update()\n                 QString iid = library->metaData.value(QLatin1String(\""IID\"")).toString();\n                 if (iid == QLatin1String(d->iid.constData(), d->iid.size())) {\n                     QJsonObject object = library->metaData.value(QLatin1String(\""MetaData\"")).toObject();\n-                    if (!object.isEmpty())\n-                        metaDataOk = true;\n+                    metaDataOk = true;\n \n                     QJsonArray k = object.value(QLatin1String(\""Keys\"")).toArray();\n                     for (int i = 0; i < k.size(); ++i) {\n""}",bug,"bug
",others;
16689.0,16689.0,bug,Aaron Kennedy,Reduce the size of QDeclarativeAbstractBinding,"Reduce the size of QDeclarativeAbstractBinding

The weak pointer in every binding is rarely used, so we can store it in
the same memory as the me ptr.

Change-Id: I3ce7d767fa25cf5b6e6d30c4f022d0e94fc3ffbb","['src/declarative/qml/qdeclarativebinding.cpp', 'src/declarative/qml/qdeclarativebinding_p.h']","{""qdeclarativebinding.cpp"": ""@@ -56,14 +56,14 @@\n QT_BEGIN_NAMESPACE\n \n QDeclarativeAbstractBinding::QDeclarativeAbstractBinding()\n-: m_object(0), m_propertyIndex(-1), m_mePtr(0), m_prevBinding(0), m_nextBinding(0)\n+: m_object(0), m_propertyIndex(-1), m_prevBinding(0), m_nextBinding(0)\n {\n }\n \n QDeclarativeAbstractBinding::~QDeclarativeAbstractBinding()\n {\n     Q_ASSERT(m_prevBinding == 0);\n-    Q_ASSERT(m_mePtr == 0);\n+    Q_ASSERT(*m_mePtr == 0);\n }\n \n /*!\n@@ -173,16 +173,16 @@ static void bindingDummyDeleter(QDeclarativeAbstractBinding *)\n \n QDeclarativeAbstractBinding::Pointer QDeclarativeAbstractBinding::weakPointer()\n {\n-    if (m_selfPointer.isNull())\n-        m_selfPointer = QSharedPointer<QDeclarativeAbstractBinding>(this, bindingDummyDeleter);\n+    if (m_mePtr.value().isNull())\n+        m_mePtr.value() = QSharedPointer<QDeclarativeAbstractBinding>(this, bindingDummyDeleter);\n \n-    return m_selfPointer.toWeakRef();\n+    return m_mePtr.value().toWeakRef();\n }\n \n void QDeclarativeAbstractBinding::clear()\n {\n-    if (m_mePtr) {\n-        *m_mePtr = 0;\n+    if (!m_mePtr.isNull()) {\n+        **m_mePtr = 0;\n         m_mePtr = 0;\n     }\n }\n"", ""qdeclarativebinding_p.h"": ""@@ -62,6 +62,8 @@\n #include <QtCore/QObject>\n #include <QtCore/QMetaProperty>\n \n+#include <private/qpointervaluepair_p.h>\n+\n QT_BEGIN_NAMESPACE\n \n class Q_DECLARATIVE_PRIVATE_EXPORT QDeclarativeAbstractBinding\n@@ -90,7 +92,7 @@ public:\n     void addToObject(QObject *, int);\n     void removeFromObject();\n \n-    static Pointer getPointer(QDeclarativeAbstractBinding *p) { return p ? p->weakPointer() : Pointer(); }\n+    static inline Pointer getPointer(QDeclarativeAbstractBinding *p);\n \n protected:\n     virtual ~QDeclarativeAbstractBinding();\n@@ -108,10 +110,13 @@ private:\n \n     QObject *m_object;\n     int m_propertyIndex;\n-    QDeclarativeAbstractBinding **m_mePtr;\n+\n+    typedef QSharedPointer<QDeclarativeAbstractBinding> SharedPointer;\n+    // To save memory, we also store the rarely used weakPointer() instance in here\n+    QPointerValuePair<QDeclarativeAbstractBinding*, SharedPointer> m_mePtr;\n+\n     QDeclarativeAbstractBinding **m_prevBinding;\n     QDeclarativeAbstractBinding  *m_nextBinding;\n-    QSharedPointer<QDeclarativeAbstractBinding> m_selfPointer;\n };\n \n class QDeclarativeValueTypeProxyBinding : public QDeclarativeAbstractBinding\n@@ -187,6 +192,12 @@ private:\n \n Q_DECLARE_OPERATORS_FOR_FLAGS(QDeclarativeBinding::EvaluateFlags)\n \n+QDeclarativeAbstractBinding::Pointer\n+QDeclarativeAbstractBinding::getPointer(QDeclarativeAbstractBinding *p)\n+{\n+    return p ? p->weakPointer() : Pointer();\n+}\n+\n QT_END_NAMESPACE\n \n Q_DECLARE_METATYPE(QDeclarativeBinding*)\n""}",feature,"refactor 
",others;
11779.0,11779.0,feature,Stephen Kelly (Unused account),Fix typos parametter -> parameter.,"Fix typos parametter -> parameter.

Change-Id: I0ebb3658477a1afdc1af5f4f6f64f12dc20ace56",['src/corelib/kernel/qobject.h'],"{""qobject.h"": ""@@ -296,8 +296,8 @@ public:\n                                   const QObject *receiver, void **zero)\n     {\n         // This is the overload for when one wish to disconnect a signal from any slot. (slot=0)\n-        // Since the function template parametter cannot be deduced from '0', we use a\n-        // dummy void ** parametter that must be equal to 0\n+        // Since the function template parameter cannot be deduced from '0', we use a\n+        // dummy void ** parameter that must be equal to 0\n         Q_ASSERT(!zero);\n         typedef QtPrivate::FunctionPointer<Func1> SignalType;\n         return disconnectImpl(sender, reinterpret_cast<void **>(&signal), receiver, zero,\n""}",bug,"bug, refactor 
",bug;
19705.0,19705.0,bug,Mark Brand,QSqlTableModel bugfix: consider uncached rows submitted,"QSqlTableModel bugfix: consider uncached rows submitted

Change-Id: I7ec0529b88fd8e3ae0cf8dadfcb5899579e52745",['src/sql/models/qsqltablemodel_p.h'],"{""qsqltablemodel_p.h"": ""@@ -106,6 +106,8 @@ public:\n         inline Op op() const { return m_op; }\n         inline void setOp(Op o)\n         {\n+            if (o == None)\n+                m_submitted = true;\n             if (o == m_op)\n                 return;\n             m_submitted = (o != Insert && o != Delete);\n""}",bug,"bug 
",bug;
7652.0,7652.0,bug ,Prasanth Ullattil,Change filenames for the new QML module,"Change filenames for the new QML module

Change-Id: Ie5dc8852ffa55240670d8f53ea497bb99843a63a","['tests/auto/jsondb-listmodel/jsondb-listmodel.pro', 'src/imports/jsondb/jsondbcomponent.cpp', 'src/imports/jsondb/jsondblistmodel.h', 'src/imports/jsondb/jsondb.pro', 'src/imports/jsondb/jsondblistmodel.cpp', 'src/imports/jsondb/jsondblistmodel_p.h', 'tests/benchmarks/jsondb-listmodel/jsondb-listmodel.pro', 'src/imports/jsondb/jsondbcomponent.h', 'src/imports/jsondb/plugin.cpp']","{""jsondb.pro"": ""@@ -18,16 +18,16 @@ VERSION = 1.0\n include(../../common/common.pri)\n \n HEADERS += \\\n-    jsondb-listmodel.h \\\n-    jsondb-listmodel_p.h \\\n-    jsondb-component.h \\\n+    jsondblistmodel.h \\\n+    jsondblistmodel_p.h \\\n+    jsondbcomponent.h \\\n     plugin.h\n \n HEADERS += $$QSONCONVERSION_HEADERS\n \n SOURCES += \\\n-    jsondb-listmodel.cpp \\\n-    jsondb-component.cpp \\\n+    jsondblistmodel.cpp \\\n+    jsondbcomponent.cpp \\\n     plugin.cpp\n \n SOURCES += $$QSONCONVERSION_SOURCES\n"", ""jsondbcomponent.cpp"": ""@@ -44,7 +44,7 @@\n \n #include <QtJsonDbQson/private/qson_p.h>\n \n-#include \""jsondb-component.h\""\n+#include \""jsondbcomponent.h\""\n #include \""private/jsondb-strings_p.h\""\n #include \""jsondb-client.h\""\n \n"", ""jsondbcomponent.h"": """", ""jsondblistmodel.cpp"": ""@@ -39,8 +39,8 @@\n **\n ****************************************************************************/\n \n-#include \""jsondb-listmodel.h\""\n-#include \""jsondb-listmodel_p.h\""\n+#include \""jsondblistmodel.h\""\n+#include \""jsondblistmodel_p.h\""\n #include \""private/jsondb-strings_p.h\""\n \n #include <QJSEngine>\n@@ -1320,4 +1320,4 @@ bool operator <(const JsonDbSortKey &a, const JsonDbSortKey &b)\n     return false;\n }\n \n-#include \""moc_jsondb-listmodel.cpp\""\n+#include \""moc_jsondblistmodel.cpp\""\n"", ""jsondblistmodel.h"": """", ""jsondblistmodel_p.h"": """", ""plugin.cpp"": ""@@ -41,8 +41,8 @@\n \n #include \""plugin.h\""\n \n-#include \""jsondb-component.h\""\n-#include \""jsondb-listmodel.h\""\n+#include \""jsondbcomponent.h\""\n+#include \""jsondblistmodel.h\""\n \n Q_EXPORT_PLUGIN2(jsondbplugin, JsonDbPlugin)\n \n"", ""jsondb-listmodel.pro"": ""@@ -10,9 +10,9 @@ include($$PWD/../../../src/3rdparty/qjson/qjson.pri)\n \n DEFINES += JSONDB_DAEMON_BASE=\\\\\\\""$$QT.jsondb.bins\\\\\\\""\n \n-INCLUDEPATH += $$PWD/../../../src/imports/jsondb\n-HEADERS += $$PWD/../../../src/imports/jsondb/jsondb-listmodel.h\n-SOURCES += $$PWD/../../../src/imports/jsondb/jsondb-listmodel.cpp\n+INCLUDEPATH += $$PWD/../../../src/imports/jsondb-listmodel\n+HEADERS += $$PWD/../../../src/imports/jsondb-listmodel/jsondb-listmodel.h\n+SOURCES += $$PWD/../../../src/imports/jsondb-listmodel/jsondb-listmodel.cpp\n \n # Input\n HEADERS += listmodel-benchmark.h\n""}",feature; resource,"refactor 
",feature;
17957.0,17957.0,feature; resource,Joerg Bornemann,fix find.qbs,"fix find.qbs

Change-Id: I11762964f28edfce107a13d742469a3d1ce158c6",['src/plugins/find/find.qbs'],"{""find.qbs"": ""@@ -55,7 +55,9 @@ QtcPlugin {\n         \""searchresultwidget.h\"",\n         \""searchresultwindow.cpp\"",\n         \""searchresultwindow.h\"",\n-        \""textfindconstants.h\""\n+        \""textfindconstants.h\"",\n+        \""treeviewfind.cpp\"",\n+        \""treeviewfind.h\""\n     ]\n }\n \n""}",bug;resource;,"bug 
",bug;resource;
336.0,336.0,bug;resource;,Eckhart Koppen,Added private header dependencies to MeeGo graphics system plugin,"Added private header dependencies to MeeGo graphics system plugin

Depends on core, gui and opengl private headers

Change-Id: If3266c3b7233bf40b5ad80a8a99fd5f2c7eafcec",['src/plugins/graphicssystems/meego/meego.pro'],"{""meego.pro"": ""@@ -1,7 +1,7 @@\n TARGET = qmeegographicssystem\n load(qt_plugin)\n \n-QT += gui opengl\n+QT += core-private gui-private opengl-private\n \n DESTDIR = $$QT.gui.plugins/graphicssystems\n \n""}",resource,"feature 
",resource;
16368.0,16368.0,resource,Lorn Potter,use qAbs instead.,"use qAbs instead.

Change-Id: Ibcc49c56d558563737d2d94a87425e65d0689c1e","['src/plugins/sensorgestures/qtsensors/qcoversensorgesturerecognizer.cpp', 'src/plugins/sensorgestures/qtsensors/qshake2recognizer.cpp', 'src/plugins/sensorgestures/qtsensors/qtwistsensorgesturerecognizer.cpp', 'src/plugins/sensorgestures/qtsensors/qpickupsensorgesturerecognizer.cpp', 'src/plugins/sensorgestures/qtsensors/qwhipsensorgesturerecognizer.cpp']","{""qcoversensorgesturerecognizer.cpp"": ""@@ -102,7 +102,7 @@ void QCoverSensorGestureRecognizer::proximityChanged()\n     qreal refl = proximity->reading()->reflectance();\n     qreal difference =  lastProx - refl;\n \n-    if (fabs(difference) < .15) {\n+    if (qAbs(difference) < .15) {\n         return;\n     }\n \n"", ""qpickupsensorgesturerecognizer.cpp"": ""@@ -130,7 +130,7 @@ void QPickupSensorGestureRecognizer::accelChanged()\n         atRest = false;\n     }\n     if (roll > PICKUP_BOTTOM_THRESHOLD\n-            && (fabs(lastRoll - roll) > PICKUP_BOTTOM_THRESHOLD)) {\n+            && (qAbs(lastRoll - roll) > PICKUP_BOTTOM_THRESHOLD)) {\n         okToSignal = true;\n         detectedRoll = roll;\n     }\n"", ""qshake2recognizer.cpp"": ""@@ -110,9 +110,9 @@ void QShake2SensorGestureRecognizer::accelChanged()\n     currentData.y = y;\n     currentData.z = z;\n \n-    if ( (abs(currentData.x - prevData.x)\n-          || abs(currentData.y - prevData.y)\n-          || abs(currentData.z - prevData.z)) < 1)\n+    if ( (qAbs(currentData.x - prevData.x)\n+          || qAbs(currentData.y - prevData.y)\n+          || qAbs(currentData.z - prevData.z)) < 1)\n         return;\n \n     if (!shaking && checkForShake(prevData, currentData, THRESHOLD) &&\n@@ -148,15 +148,15 @@ void QShake2SensorGestureRecognizer::accelChanged()\n             int xdiff = currentData.x - prevData.x;\n             int ydiff = currentData.y - prevData.y;\n \n-            int max = qMax(abs(ydiff), abs(xdiff));\n+            int max = qMax(qAbs(ydiff), qAbs(xdiff));\n \n-            if (max == abs(xdiff)) {\n+            if (max == qAbs(xdiff)) {\n                 if (isNegative(xdiff))\n                     shakeDirection = QShake2SensorGestureRecognizer::ShakeLeft;\n                 else\n                     shakeDirection = QShake2SensorGestureRecognizer::ShakeRight;\n \n-            } else if (max == abs(ydiff)) {\n+            } else if (max == qAbs(ydiff)) {\n                 if (isNegative(ydiff))\n                     shakeDirection = QShake2SensorGestureRecognizer::ShakeDown;\n                 else\n"", ""qtwistsensorgesturerecognizer.cpp"": ""@@ -151,9 +151,9 @@ void QTwistSensorGestureRecognizer::accelChanged()\n         }\n \n         if (detecting\n-                && abs(degrees) < RESTING_VARIANCE\n-                && abs(calc(roll)) < RESTING_VARIANCE\n-                && (abs(lastX + degrees) > (degrees / 2))\n+                && qAbs(degrees) < RESTING_VARIANCE\n+                && qAbs(calc(roll)) < RESTING_VARIANCE\n+                && (qAbs(lastX + degrees) > (degrees / 2))\n                 ) {\n             if (lastX < 0 ) {\n                 Q_EMIT twistLeft();\n@@ -168,7 +168,7 @@ void QTwistSensorGestureRecognizer::accelChanged()\n                 lastX = degrees;\n         }\n \n-        if (!detecting && abs(degrees) > THRESHOLD_DEGREES\n+        if (!detecting && qAbs(degrees) > THRESHOLD_DEGREES\n                 && calc(roll) < RESTING_VARIANCE) {\n \n             detecting = true;\n"", ""qwhipsensorgesturerecognizer.cpp"": ""@@ -127,7 +127,7 @@ void QWhipSensorGestureRecognizer::accelChanged()\n {\n     qreal x = accel->reading()->x();\n     qreal difference = lastX - x;\n-    if (abs(difference) < 1)\n+    if (qAbs(difference) < 1)\n         return;\n \n     qreal y = accel->reading()->y();\n@@ -138,7 +138,7 @@ void QWhipSensorGestureRecognizer::accelChanged()\n     if (whipIt) {\n         if (((!wasNegative && difference > accelRange * WHIP_THRESHOLD_FACTOR)\n                 || (wasNegative && difference < -accelRange * WHIP_THRESHOLD_FACTOR))\n-                && abs(degreesZ) < WHIP_DEGREES) {\n+                && qAbs(degreesZ) < WHIP_DEGREES) {\n             Q_EMIT whip();\n             Q_EMIT detected(\""whip\"");\n             whipIt = false;\n@@ -146,7 +146,7 @@ void QWhipSensorGestureRecognizer::accelChanged()\n \n     } else if (((difference > 0 && difference < accelRange * WHIP_DETECTION_FACTOR)\n                  || (difference < 0 && difference > -accelRange * WHIP_DETECTION_FACTOR))\n-               && abs(degreesZ) < WHIP_DEGREES\n+               && qAbs(degreesZ) < WHIP_DEGREES\n                && orientation->reading()->orientation() != QOrientationReading::FaceUp) {\n         detectedX = x;\n //        start of gesture\n""}",feature,"refactor 
",others;
8498.0,8498.0,feature,Mikko Suonio,Add contacts QML tests for contact detail access,"Add contacts QML tests for contact detail access

Change-Id: I4ffffe624bcfc9290452a44840638de82cc8a317",['tests/auto/qmlcontacts/testcases/tst_contact_detail_access.qml'],"{""tst_contact_detail_access.qml"": ""@@ -0,0 +1,175 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the QtPim module of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+import QtQuick 2.0\n+import QtTest 1.0\n+import QtContacts 5.0\n+\n+TestCase {\n+    name: \""ContactDetailAccessTests\""\n+    id: contactDetailAccessTests\n+\n+    TestCase {\n+        name: \""ContactDetailAccessTests::ContactWithoutDetails\""\n+\n+        Contact {\n+            id: contact10\n+        }\n+\n+        function test_detailReturnsUndefined() {\n+            verifyIsUndefined(contact10.detail(ContactDetail.PhoneNumber));\n+        }\n+\n+        function test_detailsReturnsEmptyList() {\n+            compare(contact10.details(ContactDetail.PhoneNumber).length, 0);\n+        }\n+    }\n+\n+    TestCase {\n+        name: \""ContactDetailAccessTests::ContactWithOneDetail\""\n+\n+        Contact {\n+            id: contact20\n+            PhoneNumber {\n+                id: contact20PhoneNumber\n+                number: \""99999999\""\n+            }\n+        }\n+\n+        function test_detailReturnsOneDetail() {\n+            var detail = contact20.detail(ContactDetail.PhoneNumber);\n+            compare(detail.number, contact20PhoneNumber.number);\n+        }\n+\n+        function test_detailsReturnsListOfLengthOne() {\n+            compare(contact20.details(ContactDetail.PhoneNumber).length, 1);\n+        }\n+\n+        function test_detailsReturnsListContainingTheDetail() {\n+            compare(contact20.details(ContactDetail.PhoneNumber)[0].number, contact20PhoneNumber.number);\n+        }\n+    }\n+\n+    TestCase {\n+        name: \""ContactDetailAccessTests::ContactWithDetailsOfDifferentType\""\n+\n+        Contact {\n+            id: contact30\n+            Name {\n+                id: contact30Name\n+                firstName: \""A\""\n+            }\n+\n+            PhoneNumber {\n+                id: contact30PhoneNumber\n+                number: \""99999999\""\n+            }\n+        }\n+\n+        function test_detailReturnsOneDetail() {\n+            var detail = contact30.detail(ContactDetail.Name);\n+            compare(detail.firstName, contact30Name.firstName);\n+        }\n+\n+        function test_detailReturnsTheOtherDetail() {\n+            var detail = contact30.detail(ContactDetail.PhoneNumber);\n+            compare(detail.number, contact30PhoneNumber.number);\n+        }\n+\n+        function test_detailsReturnsListOfCorrentLengthForOneDetail() {\n+            compare(contact30.details(ContactDetail.Name).length, 1);\n+        }\n+\n+        function test_detailsReturnsListOfCorrentLengthForTheOtherDetail() {\n+            compare(contact30.details(ContactDetail.PhoneNumber).length, 1);\n+        }\n+\n+        function test_detailsReturnsListContainingTheCorrectDetailForOne() {\n+            var details = contact30.details(ContactDetail.Name);\n+            compare(details[0].number, contact30Name.number);\n+        }\n+\n+        function test_detailsReturnsListContainingTheCorrectDetailForTheOther() {\n+            var details = contact30.details(ContactDetail.PhoneNumber);\n+            compare(details[0].number, contact30PhoneNumber.number);\n+        }\n+    }\n+\n+    TestCase {\n+        name: \""ContactDetailAccessTests::ContactWithMultipleDetails\""\n+\n+        Contact {\n+            id: contact40\n+            PhoneNumber {\n+                id: contact40PhoneNumber1\n+                number: \""11111111\""\n+            }\n+            PhoneNumber {\n+                id: contact40PhoneNumber2\n+                number: \""22222222\""\n+            }\n+        }\n+\n+        function test_detailReturnsTheFirstDetail() {\n+            var detail = contact40.detail(ContactDetail.PhoneNumber);\n+            compare(detail.number, contact40PhoneNumber1.number);\n+        }\n+\n+        function test_detailsReturnsListOfCorrentLength() {\n+            var details = contact40.details(ContactDetail.PhoneNumber);\n+            compare(details.length, 2);\n+        }\n+\n+        function test_detailsReturnsListContainingTheFirstDetail() {\n+            var details = contact40.details(ContactDetail.PhoneNumber);\n+            compare(details[0].number, contact40PhoneNumber1.number);\n+        }\n+\n+        function test_detailsReturnsListContainingTheSecondDetail() {\n+            var details = contact40.details(ContactDetail.PhoneNumber);\n+            compare(details[1].number, contact40PhoneNumber2.number);\n+        }\n+    }\n+\n+    function verifyIsUndefined(object) {\n+        verify(!object, \""Object \"" + object + \""is undefined\"");\n+    }\n+}\n""}",test,"test 
",resource;test;
2469.0,2469.0,test,Rohan McGovern [inactive],test: skip some tst_qtextscriptengine tests when fonts are missing,"test: skip some tst_qtextscriptengine tests when fonts are missing

This autotest may fail depending on the version of fonts which are
installed on the system.  It has no way to verify if the correct fonts
are installed, and it's unclear from where the correct version of the
fonts may be obtained.

Therefore, disable the test by default unless the user has indicated
that they have a correct setup by setting QT_HAVE_TEST_FONTS=1.

Task-number: QTBUG-20682
Change-Id: I24174520f54af6a9b2c13c9c1347f46555bce3d4","['tests/auto/qtextscriptengine/qtextscriptengine.pro', 'tests/auto/qtextscriptengine/tst_qtextscriptengine.cpp']","{""qtextscriptengine.pro"": ""@@ -5,5 +5,3 @@ QT += core-private gui-private\n HEADERS += \n SOURCES += tst_qtextscriptengine.cpp \n INCLUDEPATH += $$QT_SOURCE_TREE/src/3rdparty/harfbuzz/src\n-\n-CONFIG+=insignificant_test\n"", ""tst_qtextscriptengine.cpp"": ""@@ -76,9 +76,6 @@\n //TESTED_CLASS=\n //TESTED_FILES= gui/text/qscriptengine.cpp\n \n-// This test depends on the fonts in the following package being installed:\n-// http://people.freedesktop.org/~hausmann/harfbuzz-test-fonts-0.1.tar.bz2\n-\n class tst_QTextScriptEngine : public QObject\n {\n Q_OBJECT\n@@ -89,6 +86,7 @@ public:\n \n \n public slots:\n+    void initTestCase();\n     void init();\n     void cleanup();\n private slots:\n@@ -111,9 +109,13 @@ private slots:\n \n     void mirroredChars_data();\n     void mirroredChars();\n+\n+private:\n+    bool haveTestFonts;\n };\n \n tst_QTextScriptEngine::tst_QTextScriptEngine()\n+    : haveTestFonts(qgetenv(\""QT_HAVE_TEST_FONTS\"") == QByteArray(\""1\""))\n {\n }\n \n@@ -121,6 +123,21 @@ tst_QTextScriptEngine::~tst_QTextScriptEngine()\n {\n }\n \n+void tst_QTextScriptEngine::initTestCase()\n+{\n+#if defined(Q_WS_X11)\n+    if (!haveTestFonts) {\n+        qWarning(\n+            \""Some of these tests depend on the internals of some test fonts which are not freely \""\n+            \""distributable.\\n\""\n+            \""These tests will be skipped.\\n\""\n+            \""If you have the fonts available, set QT_HAVE_TEST_FONTS=1 in your environment and \""\n+            \""run the test again.\""\n+        );\n+    }\n+#endif\n+}\n+\n void tst_QTextScriptEngine::init()\n {\n }\n@@ -184,6 +201,10 @@ static bool shaping( const QFont &f, const ShapeTable *s)\n void tst_QTextScriptEngine::devanagari()\n {\n #if defined(Q_WS_X11)\n+    if (!haveTestFonts) {\n+        QSKIP(\""Test fonts are not available\"", SkipAll);\n+    }\n+\n     {\n         if (QFontDatabase().families(QFontDatabase::Devanagari).contains(\""Raghindi\"")) {\n             QFont f(\""Raghindi\"");\n@@ -296,6 +317,10 @@ void tst_QTextScriptEngine::devanagari()\n void tst_QTextScriptEngine::bengali()\n {\n #if defined(Q_WS_X11)\n+    if (!haveTestFonts) {\n+        QSKIP(\""Test fonts are not available\"", SkipAll);\n+    }\n+\n     {\n         if (QFontDatabase().families(QFontDatabase::Bengali).contains(\""Akaash\"")) {\n             QFont f(\""Akaash\"");\n@@ -547,6 +572,10 @@ void tst_QTextScriptEngine::bengali()\n void tst_QTextScriptEngine::gurmukhi()\n {\n #if defined(Q_WS_X11)\n+    if (!haveTestFonts) {\n+        QSKIP(\""Test fonts are not available\"", SkipAll);\n+    }\n+\n     {\n         if (QFontDatabase().families(QFontDatabase::Gurmukhi).contains(\""Lohit Punjabi\"")) {\n             QFont f(\""Lohit Punjabi\"");\n@@ -572,6 +601,10 @@ void tst_QTextScriptEngine::gurmukhi()\n void tst_QTextScriptEngine::oriya()\n {\n #if defined(Q_WS_X11)\n+    if (!haveTestFonts) {\n+        QSKIP(\""Test fonts are not available\"", SkipAll);\n+    }\n+\n     {\n         if (QFontDatabase().families(QFontDatabase::Oriya).contains(\""utkal\"")) {\n             QFont f(\""utkal\"");\n@@ -612,6 +645,10 @@ void tst_QTextScriptEngine::oriya()\n void tst_QTextScriptEngine::tamil()\n {\n #if defined(Q_WS_X11)\n+    if (!haveTestFonts) {\n+        QSKIP(\""Test fonts are not available\"", SkipAll);\n+    }\n+\n     {\n         if (QFontDatabase().families(QFontDatabase::Tamil).contains(\""AkrutiTml1\"")) {\n             QFont f(\""AkrutiTml1\"");\n@@ -689,6 +726,10 @@ void tst_QTextScriptEngine::tamil()\n void tst_QTextScriptEngine::telugu()\n {\n #if defined(Q_WS_X11)\n+    if (!haveTestFonts) {\n+        QSKIP(\""Test fonts are not available\"", SkipAll);\n+    }\n+\n     {\n         if (QFontDatabase().families(QFontDatabase::Telugu).contains(\""Pothana2000\"")) {\n             QFont f(\""Pothana2000\"");\n@@ -816,6 +857,10 @@ void tst_QTextScriptEngine::kannada()\n void tst_QTextScriptEngine::malayalam()\n {\n #if defined(Q_WS_X11)\n+    if (!haveTestFonts) {\n+        QSKIP(\""Test fonts are not available\"", SkipAll);\n+    }\n+\n     {\n         if (QFontDatabase().families(QFontDatabase::Malayalam).contains(\""AkrutiMal2\"")) {\n             QFont f(\""AkrutiMal2\"");\n@@ -904,6 +949,10 @@ void tst_QTextScriptEngine::malayalam()\n void tst_QTextScriptEngine::sinhala()\n {\n #if defined(Q_WS_X11)\n+    if (!haveTestFonts) {\n+        QSKIP(\""Test fonts are not available\"", SkipAll);\n+    }\n+\n     {\n         if (QFontDatabase().families(QFontDatabase::Sinhala).contains(\""Malithi Web\"")) {\n             QFont f(\""Malithi Web\"");\n@@ -942,6 +991,10 @@ void tst_QTextScriptEngine::sinhala()\n void tst_QTextScriptEngine::khmer()\n {\n #if defined(Q_WS_X11)\n+    if (!haveTestFonts) {\n+        QSKIP(\""Test fonts are not available\"", SkipAll);\n+    }\n+\n     {\n         if (QFontDatabase().families(QFontDatabase::Khmer).contains(\""Khmer OS\"")) {\n             QFont f(\""Khmer OS\"");\n@@ -985,6 +1038,10 @@ void tst_QTextScriptEngine::khmer()\n void tst_QTextScriptEngine::linearB()\n {\n #if defined(Q_WS_X11)\n+    if (!haveTestFonts) {\n+        QSKIP(\""Test fonts are not available\"", SkipAll);\n+    }\n+\n     {\n         if (QFontDatabase().families(QFontDatabase::Any).contains(\""Penuturesu\"")) {\n             QFont f(\""Penuturesu\"");\n@@ -1060,6 +1117,10 @@ static bool decomposedShaping( const QFont &f, const QChar &ch)\n void tst_QTextScriptEngine::greek()\n {\n #if defined(Q_WS_X11)\n+    if (!haveTestFonts) {\n+        QSKIP(\""Test fonts are not available\"", SkipAll);\n+    }\n+\n     {\n         if (QFontDatabase().families(QFontDatabase::Any).contains(\""DejaVu Sans\"")) {\n             QFont f(\""DejaVu Sans\"");\n""}",test,"Categories: test, bug 
",bug;deprecat;test;
21874.0,21874.0,test,Thiago Macieira,Fix the license headers for the files in the new-qurl branch,"Fix the license headers for the files in the new-qurl branch

Change-Id: I469fed8b72111905e31553d0c82e62ced4009d75","['src/corelib/io/qurlidna.cpp', 'src/corelib/io/qurlquery.h', 'src/corelib/io/qurl.cpp', 'tests/auto/corelib/io/qurl/tst_qurl.cpp', 'src/corelib/io/qurlquery.cpp', 'src/corelib/io/qurl_p.h']","{""qurl.cpp"": ""@@ -2,7 +2,6 @@\n **\n ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n ** Copyright (C) 2012 Intel Corporation.\n-** All rights reserved.\n ** Contact: http://www.qt-project.org/\n **\n ** This file is part of the QtCore module of the Qt Toolkit.\n@@ -36,6 +35,7 @@\n **\n **\n **\n+**\n ** $QT_END_LICENSE$\n **\n ****************************************************************************/\n"", ""qurl_p.h"": ""@@ -1,8 +1,8 @@\n /****************************************************************************\n **\n-** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n-** All rights reserved.\n-** Contact: Nokia Corporation (qt-info@nokia.com)\n+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n+** Copyright (C) 2012 Intel Corporation.\n+** Contact: http://www.qt-project.org/\n **\n ** This file is part of the QtCore module of the Qt Toolkit.\n **\n@@ -35,6 +35,7 @@\n **\n **\n **\n+**\n ** $QT_END_LICENSE$\n **\n ****************************************************************************/\n"", ""qurlidna.cpp"": ""@@ -1,8 +1,7 @@\n /****************************************************************************\n **\n-** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n-** All rights reserved.\n-** Contact: Nokia Corporation (qt-info@nokia.com)\n+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n+** Contact: http://www.qt-project.org/\n **\n ** This file is part of the QtCore module of the Qt Toolkit.\n **\n@@ -35,6 +34,7 @@\n **\n **\n **\n+**\n ** $QT_END_LICENSE$\n **\n ****************************************************************************/\n"", ""qurlquery.cpp"": ""@@ -1,6 +1,6 @@\n /****************************************************************************\n **\n-** Copyright (C) 2012 Intel Corporation\n+** Copyright (C) 2012 Intel Corporation.\n ** Contact: http://www.qt-project.org/\n **\n ** This file is part of the QtCore module of the Qt Toolkit.\n"", ""qurlquery.h"": ""@@ -1,6 +1,6 @@\n /****************************************************************************\n **\n-** Copyright (C) 2012 Intel Corporation\n+** Copyright (C) 2012 Intel Corporation.\n ** Contact: http://www.qt-project.org/\n **\n ** This file is part of the QtCore module of the Qt Toolkit.\n"", ""tst_qurl.cpp"": ""@@ -1,6 +1,7 @@\n /****************************************************************************\n **\n ** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n+** Copyright (C) 2012 Intel Corporation.\n ** Contact: http://www.qt-project.org/\n **\n ** This file is part of the test suite of the Qt Toolkit.\n""}",resource,"bug 
",bug;resource;
24129.0,24129.0,resource ,Frederik Gladhorn,Improve test to use actual double click timeout.,"Improve test to use actual double click timeout.

I'll keep the function marked as skip since I have no clue if this
is even remotely connected to the issues it was having.

Change-Id: I04b2a4f61321553804d29ef076178ea7c63b0deb",['tests/auto/quick/qquickmousearea/tst_qquickmousearea.cpp'],"{""tst_qquickmousearea.cpp"": ""@@ -48,6 +48,7 @@\n #include <QtQml/qqmlcontext.h>\n #include <QtQml/qqmlengine.h>\n #include \""../../shared/util.h\""\n+#include <QtGui/qstylehints.h>\n \n //#define OLDWAY\n \n@@ -626,7 +627,9 @@ void tst_QQuickMouseArea::clickThrough()\n     QTRY_COMPARE(canvas->rootObject()->property(\""presses\"").toInt(), 0);\n     QTRY_COMPARE(canvas->rootObject()->property(\""clicks\"").toInt(), 1);\n \n-    QTest::qWait(800); // to avoid generating a double click.\n+    // to avoid generating a double click.\n+    int doubleClickInterval = qApp->styleHints()->mouseDoubleClickInterval() + 10;\n+    QTest::qWait(doubleClickInterval);\n \n     QTest::mousePress(canvas, Qt::LeftButton, 0, QPoint(100,100));\n     QTest::qWait(1000);\n@@ -659,7 +662,7 @@ void tst_QQuickMouseArea::clickThrough()\n     QCOMPARE(canvas->rootObject()->property(\""presses\"").toInt(), 0);\n     QCOMPARE(canvas->rootObject()->property(\""clicks\"").toInt(), 0);\n \n-    QTest::qWait(800); // to avoid generating a double click.\n+    QTest::qWait(doubleClickInterval); // to avoid generating a double click.\n \n     QTest::mousePress(canvas, Qt::LeftButton, 0, QPoint(100,100));\n     QTest::qWait(1000);\n@@ -680,14 +683,14 @@ void tst_QQuickMouseArea::clickThrough()\n \n     canvas->rootObject()->setProperty(\""letThrough\"", QVariant(true));\n \n-    QTest::qWait(800); // to avoid generating a double click.\n+    QTest::qWait(doubleClickInterval); // to avoid generating a double click.\n     QTest::mousePress(canvas, Qt::LeftButton, 0, QPoint(100,100));\n     QTest::mouseRelease(canvas, Qt::LeftButton, 0, QPoint(100,100));\n \n     QCOMPARE(canvas->rootObject()->property(\""presses\"").toInt(), 0);\n     QTRY_COMPARE(canvas->rootObject()->property(\""clicks\"").toInt(), 1);\n \n-    QTest::qWait(800); // to avoid generating a double click.\n+    QTest::qWait(doubleClickInterval); // to avoid generating a double click.\n     QTest::mousePress(canvas, Qt::LeftButton, 0, QPoint(100,100));\n     QTest::qWait(1000);\n     QTest::mouseRelease(canvas, Qt::LeftButton, 0, QPoint(100,100));\n@@ -707,11 +710,11 @@ void tst_QQuickMouseArea::clickThrough()\n \n     canvas->rootObject()->setProperty(\""noPropagation\"", QVariant(true));\n \n-    QTest::qWait(800); // to avoid generating a double click.\n+    QTest::qWait(doubleClickInterval); // to avoid generating a double click.\n     QTest::mousePress(canvas, Qt::LeftButton, 0, QPoint(100,100));\n     QTest::mouseRelease(canvas, Qt::LeftButton, 0, QPoint(100,100));\n \n-    QTest::qWait(800); // to avoid generating a double click.\n+    QTest::qWait(doubleClickInterval); // to avoid generating a double click.\n     QTest::mousePress(canvas, Qt::LeftButton, 0, QPoint(100,100));\n     QTest::qWait(1000);\n     QTest::mouseRelease(canvas, Qt::LeftButton, 0, QPoint(100,100));\n""}",test,"test 
",test;
11638.0,11638.0,test ,Denis Dzyubenko (old account),Fixed small mistakes in the doc,"Fixed small mistakes in the doc

Change-Id: I817808dbfdf30be77ee3ce89e663f2efb7b387ee",['doc/src/expression-examples.qdoc'],"{""expression-examples.qdoc"": ""@@ -36,11 +36,8 @@\n \\o \\c {[?_type=\""Application\""]}\n \\o Return all objects that are Application types.\n \\row\n-\\o \\c {[*][/_type]}\n-\\o All objects in the database, sorted by _type.\n-\\row\n-\\o \\c {[/_type]}\n-\\o All objects in the database, sorted by _type.\n+\\o \\c {[*]}\n+\\o All objects in the database.\n \\row\n \\o \\c {[?name exists][/_type]}\n \\o All objects with a \""name\"" field in the database, sorted by _type.\n@@ -69,16 +66,16 @@ binding for thename in the bindings object provided to find, sorted by _type.\n \\o \\c {[?count != 47]}\n \\o All objects in the database with a \""count\"" field not equal to 47.\n \\row\n-\\o \\c {[?name < 47]}\n+\\o \\c {[?count < 47]}\n \\o All objects in the database with a \""count\"" field less than 47.\n \\row\n-\\o \\c {[?name <= 47]}\n+\\o \\c {[?count <= 47]}\n \\o All objects in the database with a \""count field less than or equal to 47.\n \\row\n-\\o \\c {[?name > 47]}\n+\\o \\c {[?count > 47]}\n \\o All objects in the database with a \""count\"" field greater than 47.\n \\row\n-\\o \\c {[?name >= 47]}\n+\\o \\c {[?count >= 47]}\n \\o All objects in the database with a \""count\"" field greater than or equal to 47.\n \\row\n \\o \\c {[?email contains \""foo@example.com\""]}\n@@ -100,7 +97,7 @@ list [3, 4, 5].\n \\o All objects in the database with a \""size\"" field that is not contained in the\n list [3, 4, 5].\n \\row\n-\\o \\c {?name =~ \""!fred.*!\""]}\n+\\o \\c {[?name =~ \""!fred.*!\""]}\n \\o Objects with a name field matching the regular expression \""fred.*\"", case\n sensitive.\n \\row\n""}",resource,"resource
",bug;
21878.0,21878.0,resource ,Thomas McGuire,Don't assume windows and GL contexts are created on the primary screen,"Don't assume windows and GL contexts are created on the primary screen

Change-Id: Ib4f1c377bf93b1041b5f5e3fc56c0e01e35aeb38","['src/plugins/platforms/qnx/qqnxwindow.cpp', 'src/plugins/platforms/qnx/qqnxnavigatoreventhandler.cpp', 'src/plugins/platforms/qnx/qqnxglcontext.cpp']","{""qqnxglcontext.cpp"": ""@@ -48,6 +48,7 @@\n \n #include <QtCore/QDebug>\n #include <QtGui/QOpenGLContext>\n+#include <QtGui/QScreen>\n \n QT_BEGIN_NAMESPACE\n \n@@ -103,7 +104,7 @@ QQnxGLContext::QQnxGLContext(QOpenGLContext *glContext)\n     // Check if all channels are don't care\n     if (alphaSize == -1 && redSize == -1 && greenSize == -1 && blueSize == -1) {\n         // Set colour channels based on depth of window's screen\n-        QQnxScreen *screen = static_cast<QQnxScreen*>(QQnxScreen::screens().first());\n+        QQnxScreen *screen = static_cast<QQnxScreen*>(glContext->screen()->handle());\n         int depth = screen->depth();\n         if (depth == 32) {\n             // SCREEN_FORMAT_RGBA8888\n"", ""qqnxnavigatoreventhandler.cpp"": ""@@ -202,6 +202,7 @@ void QQnxNavigatorEventHandler::handleMessage(const QByteArray &msg, const QByte\n #if defined(QQNXNAVIGATOREVENTHANDLER_DEBUG)\n         qDebug() << \""PPS: orientation, o=\"" << dat;\n #endif\n+        // ### Can secondary screens not get rotated?\n         m_primaryScreen.setRotation( dat.toInt() );\n         QWindowSystemInterface::handleScreenGeometryChange(0, m_primaryScreen.geometry());\n         replyPPS(msg, id, \""\"");\n"", ""qqnxwindow.cpp"": ""@@ -121,8 +121,7 @@ QQnxWindow::QQnxWindow(QWindow *window, screen_context_t context)\n         qFatal(\""QQnxWindow: failed to set window swap interval, errno=%d\"", errno);\n     }\n \n-    // Assign the window to the primary display (this is the default specified by screen).\n-    setScreen(QQnxScreen::primaryDisplay());\n+    setScreen(static_cast<QQnxScreen *>(window->screen()->handle()));\n \n     // Add the window to the root of the hierarchy\n     QQnxScreen::addWindow(this);\n""}",bug,"bug, refactor 
",others;
4852.0,4852.0,bug,Jason McDonald,Fix missing/incorrect license headers,"Fix missing/incorrect license headers

Change-Id: I9db33c63c951f288f7a106c3008771699662d104","['src/plugins/platforminputcontexts/ibus/main.cpp', 'src/plugins/platforms/cocoa/qmenu_mac.h', 'src/plugins/platforms/cocoa/qcocoaglcontext.h', 'src/plugins/platforms/openwfd/qopenwfdbackingstore.cpp', 'src/widgets/kernel/qplatformmenu_qpa.cpp', 'src/gui/painting/qpagedpaintdevice.h', 'src/plugins/platforms/cocoa/qcocoaglcontext.mm']","{""qpagedpaintdevice.h"": ""@@ -1,3 +1,43 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the QtGui module of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n \n #ifndef QPAGEDPAINTDEVICE_H\n #define QPAGEDPAINTDEVICE_H\n"", ""main.cpp"": ""@@ -2,7 +2,7 @@\n **\n ** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n ** All rights reserved.\n-** Contact: Nokia Corporation (info@qt.nokia.com)\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n **\n ** This file is part of the plugins of the Qt Toolkit.\n **\n"", ""qcocoaglcontext.h"": ""@@ -1,3 +1,44 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the plugins of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n #ifndef QCOCOAGLCONTEXT_H\n #define QCOCOAGLCONTEXT_H\n \n"", ""qcocoaglcontext.mm"": ""@@ -1,3 +1,44 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the plugins of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n #include \""qcocoaglcontext.h\""\n #include \""qcocoawindow.h\""\n #include \""qcocoaautoreleasepool.h\""\n"", ""qmenu_mac.h"": ""@@ -1,3 +1,43 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the plugins of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n \n #include <private/qt_mac_p.h>\n #include <QtCore/qpointer.h>\n"", ""qopenwfdbackingstore.cpp"": ""@@ -1,3 +1,44 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the plugins of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n #include \""qopenwfdbackingstore.h\""\n \n QOpenWFDBackingStore::QOpenWFDBackingStore(QWindow *window)\n"", ""qplatformmenu_qpa.cpp"": ""@@ -1,3 +1,44 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the QtWidgets module of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n #include \""qplatformmenu_qpa.h\""\n \n //\n""}",resource,"bug, resource 
",bug;resource;
8320.0,8320.0,resource,Michael Brasser,Add missing doc snippet.,"Add missing doc snippet.

Change-Id: I039888fd0203ef23f1c9cc229d7d354d8c908ca0",['doc/src/snippets/declarative/multipointtoucharea/multipointtoucharea.qml'],"{""multipointtoucharea.qml"": ""@@ -0,0 +1,67 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the documentation of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:BSD$\n+** You may use this file under the terms of the BSD license as follows:\n+**\n+** \""Redistribution and use in source and binary forms, with or without\n+** modification, are permitted provided that the following conditions are\n+** met:\n+**   * Redistributions of source code must retain the above copyright\n+**     notice, this list of conditions and the following disclaimer.\n+**   * Redistributions in binary form must reproduce the above copyright\n+**     notice, this list of conditions and the following disclaimer in\n+**     the documentation and/or other materials provided with the\n+**     distribution.\n+**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor\n+**     the names of its contributors may be used to endorse or promote\n+**     products derived from this software without specific prior written\n+**     permission.\n+**\n+** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n+** \""AS IS\"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n+** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n+** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n+** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\""\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+//![0]\n+import QtQuick 2.0\n+\n+Rectangle {\n+    width: 400; height: 400\n+    MultiPointTouchArea {\n+        anchors.fill: parent\n+        touchPoints: [\n+            TouchPoint { id: point1 },\n+            TouchPoint { id: point2 }\n+        ]\n+    }\n+\n+    Rectangle {\n+        width: 30; height: 30\n+        color: \""green\""\n+        x: point1.x\n+        y: point1.y\n+    }\n+\n+    Rectangle {\n+        width: 30; height: 30\n+        color: \""yellow\""\n+        x: point2.x\n+        y: point2.y\n+    }\n+}\n+//![0]\n""}",resource,"resource 
",resource;
8232.0,8232.0,resource ,Jason McDonald,Cleanup corelib autotests,"Cleanup corelib autotests

Remove redundant empty constructors, destructors and test functions.

Change-Id: Idb51368895e67ec3fc0345a9a5d33d77730c051b","['tests/auto/corelib/kernel/qeventloop/tst_qeventloop.cpp', 'tests/auto/corelib/io/qdir/tst_qdir.cpp', 'tests/auto/corelib/kernel/qabstractitemmodel/tst_qabstractitemmodel.cpp', 'tests/auto/corelib/kernel/qvariant/tst_qvariant.cpp', 'tests/auto/corelib/kernel/qobject/tst_qobject.cpp', 'tests/auto/corelib/thread/qsemaphore/tst_qsemaphore.cpp', 'tests/auto/corelib/statemachine/qstatemachine/tst_qstatemachine.cpp', 'tests/auto/corelib/tools/qchar/tst_qchar.cpp', 'tests/auto/corelib/animation/qpropertyanimation/tst_qpropertyanimation.cpp', 'tests/auto/corelib/tools/qstring/tst_qstring.cpp', 'tests/auto/corelib/io/qdatastream/tst_qdatastream.cpp', 'tests/auto/corelib/io/qtextstream/tst_qtextstream.cpp', 'tests/auto/corelib/tools/qalgorithms/tst_qalgorithms.cpp', 'tests/auto/corelib/tools/qeasingcurve/tst_qeasingcurve.cpp', 'tests/auto/corelib/tools/qvarlengtharray/tst_qvarlengtharray.cpp', 'tests/auto/corelib/tools/qbitarray/tst_qbitarray.cpp', 'tests/auto/corelib/thread/qmutex/tst_qmutex.cpp', 'tests/auto/corelib/thread/qwaitcondition/tst_qwaitcondition.cpp', 'tests/auto/corelib/animation/qvariantanimation/tst_qvariantanimation.cpp', 'tests/auto/corelib/animation/qpauseanimation/tst_qpauseanimation.cpp', 'tests/auto/corelib/thread/qthreadstorage/tst_qthreadstorage.cpp', 'tests/auto/corelib/tools/qmargins/tst_qmargins.cpp', 'tests/auto/corelib/thread/qthread/tst_qthread.cpp', 'tests/auto/corelib/thread/qwritelocker/tst_qwritelocker.cpp', 'tests/auto/corelib/tools/qstringlist/tst_qstringlist.cpp', 'tests/auto/corelib/kernel/qtranslator/tst_qtranslator.cpp', 'tests/auto/corelib/io/qtemporaryfile/tst_qtemporaryfile.cpp', 'tests/auto/corelib/global/qgetputenv/tst_qgetputenv.cpp', 'tests/auto/corelib/tools/qregexp/tst_qregexp.cpp', 'tests/auto/corelib/tools/qhash/tst_qhash.cpp', 'tests/auto/corelib/tools/qstringmatcher/tst_qstringmatcher.cpp', 'tests/auto/corelib/plugin/qpluginloader/tst_qpluginloader.cpp', 'tests/auto/corelib/tools/qtimeline/tst_qtimeline.cpp', 'tests/auto/corelib/tools/qdate/tst_qdate.cpp', 'tests/auto/corelib/tools/qdatetime/tst_qdatetime.cpp', 'tests/auto/corelib/kernel/qtimer/tst_qtimer.cpp', 'tests/auto/corelib/tools/qrect/tst_qrect.cpp', 'tests/auto/corelib/io/qbuffer/tst_qbuffer.cpp', 'tests/auto/corelib/tools/qvector/tst_qvector.cpp', 'tests/auto/corelib/thread/qatomicint/tst_qatomicint.cpp', 'tests/auto/corelib/tools/qline/tst_qline.cpp', 'tests/auto/corelib/kernel/qsignalmapper/tst_qsignalmapper.cpp', 'tests/auto/corelib/animation/qparallelanimationgroup/tst_qparallelanimationgroup.cpp', 'tests/auto/corelib/codecs/qtextcodec/tst_qtextcodec.cpp', 'tests/auto/corelib/tools/qcache/tst_qcache.cpp', 'tests/auto/corelib/io/qfile/tst_qfile.cpp', 'tests/auto/corelib/io/qurl/tst_qurl.cpp', 'tests/auto/corelib/tools/qpoint/tst_qpoint.cpp', 'tests/auto/corelib/tools/qbytearray/tst_qbytearray.cpp', 'tests/auto/corelib/kernel/qmetaobjectbuilder/tst_qmetaobjectbuilder.cpp', 'tests/auto/corelib/animation/qanimationgroup/tst_qanimationgroup.cpp', 'tests/auto/corelib/tools/qringbuffer/tst_qringbuffer.cpp', 'tests/auto/corelib/kernel/qmetaobject/tst_qmetaobject.cpp', 'tests/auto/corelib/kernel/qsocketnotifier/tst_qsocketnotifier.cpp', 'tests/auto/corelib/tools/qstringref/tst_qstringref.cpp', 'tests/auto/corelib/tools/qsize/tst_qsize.cpp', 'tests/auto/corelib/tools/qsizef/tst_qsizef.cpp', 'tests/auto/corelib/tools/qcontiguouscache/tst_qcontiguouscache.cpp', 'tests/auto/corelib/animation/qsequentialanimationgroup/tst_qsequentialanimationgroup.cpp', 'tests/auto/corelib/kernel/qitemmodel/tst_qitemmodel.cpp', 'tests/auto/corelib/kernel/qwineventnotifier/tst_qwineventnotifier.cpp', 'tests/auto/corelib/statemachine/qstate/tst_qstate.cpp', 'tests/auto/corelib/io/qstandardpaths/tst_qstandardpaths.cpp', 'tests/auto/corelib/thread/qatomicpointer/tst_qatomicpointer.cpp', 'tests/auto/corelib/tools/qtextboundaryfinder/tst_qtextboundaryfinder.cpp', 'tests/auto/corelib/animation/qabstractanimation/tst_qabstractanimation.cpp', 'tests/auto/corelib/io/qiodevice/tst_qiodevice.cpp', 'tests/auto/corelib/tools/qtime/tst_qtime.cpp', 'tests/auto/corelib/thread/qmutexlocker/tst_qmutexlocker.cpp', 'tests/auto/corelib/thread/qreadwritelock/tst_qreadwritelock.cpp', 'tests/auto/corelib/io/qfileinfo/tst_qfileinfo.cpp', 'tests/auto/corelib/kernel/qmimedata/tst_qmimedata.cpp', 'tests/auto/corelib/tools/qmap/tst_qmap.cpp', 'tests/auto/corelib/thread/qreadlocker/tst_qreadlocker.cpp']",,deprecat;test;,"test, refactor 
",deprecat;test;
3575.0,3575.0,deprecat;test;,Rohan McGovern [inactive],"test: marked tst_qfiledialog as insignificant for qpa, xcb","test: marked tst_qfiledialog as insignificant for qpa, xcb

This autotest sometimes passes and sometimes fails.

Task-number: QTBUG-21109
Change-Id: I160b43a1abd0de7350029f2eb758f177e880d38d",['tests/auto/qfiledialog/qfiledialog.pro'],"{""qfiledialog.pro"": ""@@ -26,3 +26,5 @@ wince* {\n } else {\n     DEFINES += SRCDIR=\\\\\\\""$$PWD/\\\\\\\""\n }\n+\n+qpa:contains(QT_CONFIG,xcb):CONFIG+=insignificant_test\n""}",test,"test 
",bug;resource;test;
7426.0,7426.0,test,Qt Submodule Update Bot,Updated submodules.,"Updated submodules.

Change-Id: I69856eafe42e80566bb2d4b853038b6222948aa3",['qtlocation'],"{""qtlocation"": ""@@ -1 +1 @@\n-Subproject commit 98986530f6dc2c7596c38d019f11c85e29fc2e0e\n+Subproject commit bef5f51913200af264116a3f772effc717829d23\n""}",resource,"merge 
",resource;
23512.0,23512.0,resource ,Andy Cox,Improve QUOTED-PRINTABLE handling of malformed Versit Property,"Improve QUOTED-PRINTABLE handling of malformed Versit Property

-If malformed with '=crlfcrlf' this can be clearly
detected and taken as end of QUOTED-PRINTABLE property

Change-Id: Iaf22c547fd7c4f563869d1a6e67c1a0b8f09aa45","['tests/auto/versit/qversitreader/tst_qversitreader.cpp', 'src/versit/qversitreader_p.cpp']","{""qversitreader_p.cpp"": ""@@ -291,20 +291,32 @@ void LineReader::setCodecUtf8Incompatible() {\n bool LineReader::tryReadLine(LByteArray *cursor, bool atEnd)\n {\n     int crlfPos = -1;\n+    int doubleCrLfCheck = -1;\n     QByteArray space(VersitUtils::encode(' ', mCodec));\n     QByteArray tab(VersitUtils::encode('\\t', mCodec));\n+    QByteArray equals(VersitUtils::encode('=', mCodec));\n \n     int spaceLength = space.length();\n+    int equalsLength = equals.length();\n \n     forever {\n         foreach(const QByteArrayMatcher& crlf, mCrlfList) {\n             int crlfLength = crlf.pattern().length();\n             crlfPos = crlf.indexIn(cursor->mData, mSearchFrom);\n-            if (crlfPos == cursor->mStart) {\n-                // Newline at start of line.  Set mStart to directly after it.\n+            doubleCrLfCheck = crlf.indexIn(cursor->mData, mSearchFrom + crlfLength);\n+            if (crlfPos == cursor->mStart && doubleCrLfCheck != crlfPos + crlfLength) {\n+                // Single Newline at start of line.  Set mStart to directly after it.\n                 cursor->mStart += crlfLength;\n                 mSearchFrom = cursor->mStart;\n                 break;\n+            } else if (crlfPos == cursor->mStart && doubleCrLfCheck == crlfPos + crlfLength) {\n+                // Found '=CrLfCrLf' - We choose to see this as badly formed, but clear end of the property.\n+                cursor->mData.remove(crlfPos, crlfLength);\n+                cursor->mEnd = crlfPos;\n+                if (QVersitReaderPrivate::containsAt(cursor->mData, equals, crlfPos - equalsLength) ) {\n+                    cursor->mData.remove(crlfPos -1, 1);\n+                }\n+                return true;\n             } else if (crlfPos > cursor->mStart) {\n                 // Found the CRLF.\n                 if (QVersitReaderPrivate::containsAt(cursor->mData, space, crlfPos + crlfLength)\n"", ""tst_qversitreader.cpp"": ""@@ -379,6 +379,24 @@ void tst_QVersitReader::testReading()\n     QCOMPARE(mReader->error(), QVersitReader::NoError);\n     QCOMPARE(results.count(),1);\n \n+\n+    // Exception case for a property ending in soft line break and doubdle crlf, ie \""=\\r\\n\\r\\n\""\n+    const QByteArray& myTest =\n+            \""BEGIN:VCARD\\r\\nVERSION:4.0\\r\\nFN:John\\r\\n\""\n+            \""EMAIL;ENCODING=QUOTED-PRINTABLE:john.citizen=40exam=\\r\\nple.com=abc=\\r\\n\\r\\n\""\n+            \""END:VCARD\\r\\n\"";\n+    mInputDevice->close();\n+    mInputDevice->setData(myTest);\n+    mInputDevice->open(QBuffer::ReadOnly);\n+    mInputDevice->seek(0);\n+    QVERIFY2(mReader->startReading(), QString::number(mReader->error()).toAscii().data());\n+    QVERIFY2(mReader->waitForFinished(), QString::number(mReader->error()).toAscii().data());\n+    results = mReader->results();\n+    QCOMPARE(mReader->state(), QVersitReader::FinishedState);\n+    QCOMPARE(mReader->error(), QVersitReader::NoError);\n+    QCOMPARE(results.count(),1);\n+\n+\n     // vCard 4.0\n     const QByteArray& vcard40 =\n         \""BEGIN:VCARD\\r\\nVERSION:4.0\\r\\nFN:John\\r\\nEND:VCARD\\r\\n\"";\n""}",feature; test,"bug 
",feature;
398.0,398.0,feature; test,hjk,BuildstepConfigWidgets can be set expanded by default,"BuildstepConfigWidgets can be set expanded by default

(cherry picked from commit 517aef8b8bc705b055b10ef0b7b0b234fd80b920)

Change-Id: I517aef8b8bc705b055b10ef0b7b0b234fd80b920x","['src/plugins/projectexplorer/buildstep.h', 'src/plugins/projectexplorer/buildstepspage.cpp']","{""buildstep.h"": ""@@ -167,6 +167,7 @@ public:\n     virtual void init() = 0;\n     virtual QString summaryText() const = 0;\n     virtual QString displayName() const = 0;\n+    virtual bool showExpanded() const { return false; }\n signals:\n     void updateSummary();\n };\n"", ""buildstepspage.cpp"": ""@@ -159,6 +159,8 @@ void BuildStepListWidget::addBuildStepWidget(int pos, BuildStep *step)\n     s.detailsWidget = new Utils::DetailsWidget(this);\n     s.detailsWidget->setSummaryText(s.widget->summaryText());\n     s.detailsWidget->setWidget(s.widget);\n+    if(s.widget->showExpanded())\n+        s.detailsWidget->setState(Utils::DetailsWidget::Expanded);\n \n     // layout\n     Utils::FadingPanel *toolWidget = new Utils::FadingPanel(s.detailsWidget);\n""}",merge; feature,"feature 
",resource;
22046.0,22046.0,merge; feature,Jason Barron,Change default value of QMAKE_LIBS_OPENGL_ES1 to libGLESv1_CM,"Change default value of QMAKE_LIBS_OPENGL_ES1 to libGLESv1_CM

The naming convention for these libraries says that libGLES_CM is to be
used when EGL is included while libGLESv1_CM should be used when EGL is
not included. Since we have a seperate variable for libEGL, it
makes sense to have this variable represent the non-EGL version of the
library.

Change-Id: I9147c116da7be4a296a0ebeac39762b46725f10e",['mkspecs/common/linux.conf'],"{""linux.conf"": ""@@ -30,7 +30,7 @@ QMAKE_LIBS_NIS        = -lnsl\n QMAKE_LIBS_EGL        = -lEGL\n QMAKE_LIBS_OPENGL     = -lGL\n QMAKE_LIBS_OPENGL_QT  = -lGL\n-QMAKE_LIBS_OPENGL_ES1 = -lGLES_CM\n+QMAKE_LIBS_OPENGL_ES1 = -lGLESv1_CM\n QMAKE_LIBS_OPENGL_ES2 = -lGLESv2\n QMAKE_LIBS_OPENVG     = -lOpenVG\n QMAKE_LIBS_THREAD     = -lpthread\n""}",resource,"refactor 
",resource;
10412.0,10412.0,resource,Yann Bodson,Support inline images with <img> tag in StyledText,"WIP: Support inline images with <img> tag in QDeclarativeStyledText

Task-number: QTBUG-21793
Change-Id: Ie7b9f293c6c9a949c1899152c38b61251b0069d3","['src/quick/util/qdeclarativestyledtext_p.h', 'src/quick/util/qdeclarativestyledtext.cpp', 'src/quick/items/qquicktext.cpp', 'src/quick/items/qquicktext_p.h', 'src/quick/items/qquicktext_p_p.h']","{""qquicktext.cpp"": ""@@ -111,7 +111,6 @@ QQuickTextPrivate::QQuickTextPrivate()\n #if defined(Q_OS_MAC)\n , layoutThread(0), paintingThread(0)\n #endif\n-\n {\n     cacheAllTextAsImage = enableImageCache();\n }\n@@ -254,8 +253,18 @@ void QQuickTextPrivate::updateLayout()\n         } else {\n             singleline = false;\n             if (textHasChanged) {\n-                QDeclarativeStyledText::parse(text, layout);\n+                imgTags.clear();\n+                QDeclarativeStyledText::parse(text, layout, imgTags);\n                 textHasChanged = false;\n+                foreach (QDeclarativeStyledText::ImgTagInfo *img, imgTags) {\n+                    QDeclarativeContext *context = qmlContext(q);\n+                    QUrl url = context->resolvedUrl(img->url);\n+                    QDeclarativePixmap *p = new QDeclarativePixmap(context->engine(), url);\n+                    img->pix = p;\n+                    if (p->isLoading()) {\n+                        p->connectFinished(q, SLOT(imageDownloadFinished()));\n+                    }\n+                }\n             }\n         }\n     } else {\n@@ -273,6 +282,11 @@ void QQuickTextPrivate::updateLayout()\n     updateSize();\n }\n \n+void QQuickText::imageDownloadFinished()\n+{\n+    update();\n+}\n+\n void QQuickTextPrivate::updateSize()\n {\n     Q_Q(QQuickText);\n@@ -564,6 +578,8 @@ QRect QQuickTextPrivate::setupTextLayout()\n         lineWidth = INT_MAX;\n     int linesLeft = maximumLineCount;\n     int visibleTextLength = 0;\n+    qreal xOffset = 0;\n+    qreal yOffset = 0;\n     forever {\n         QTextLine line = layout.createLine();\n         if (!line.isValid())\n@@ -575,9 +591,13 @@ QRect QQuickTextPrivate::setupTextLayout()\n         if (customLayout) {\n             setupCustomLineGeometry(line, height);\n         } else if (lineWidth) {\n-            line.setLineWidth(lineWidth);\n-            line.setPosition(QPointF(line.position().x(), height));\n-            height += (lineHeightMode == QQuickText::FixedHeight) ? lineHeight : line.height() * lineHeight;\n+            setupLineHeightAndPosition(line, lineWidth, height);\n+\n+//            line.setLineWidth(lineWidth);\n+//            line.setPosition(QPointF(line.position().x(), height));\n+//            height += (lineHeightMode == QQuickText::FixedHeight) ? lineHeight : line.height() * lineHeight;\n+\n+//            hasImageInLine(line, height, lineWidth, xOffset, yOffset);\n         }\n \n         bool elide = false;\n@@ -649,6 +669,86 @@ QRect QQuickTextPrivate::setupTextLayout()\n     return QRect(qRound(br.x()), qRound(br.y()), qCeil(br.width()), qCeil(br.height()));\n }\n \n+void QQuickTextPrivate::setupLineHeightAndPosition(QTextLine &line, qreal lineWidth, qreal &height)\n+{\n+    line.setLineWidth(lineWidth);\n+\n+    qreal textHeight = line.height();\n+    qreal textTop = 0;\n+    qreal totalLineHeight = textHeight;\n+\n+    QList<qreal> imgsY;\n+    foreach (const QDeclarativeStyledText::ImgTagInfo *i, imgTags) {\n+        if (i->position >= line.textStart() && i->position < (line.textStart() + line.textLength())) {\n+            qreal ih = qreal(i->height);\n+            if (i->align == \""top\"") {\n+                totalLineHeight = qMax(totalLineHeight, textTop + ih);\n+                imgsY << 0;\n+            } else if (i->align == \""middle\"") {\n+                totalLineHeight = qMax(totalLineHeight, textTop + ih);\n+                imgsY << (ih / 2.0) - (textHeight / 2.0);\n+            } else {\n+                totalLineHeight = qMax(totalLineHeight, ih);\n+                textTop = qMax(textTop, ih - textHeight);\n+                imgsY << textHeight - ih;\n+            }\n+        }\n+    }\n+\n+    int j = 0;\n+    foreach (QDeclarativeStyledText::ImgTagInfo *i, imgTags) {\n+        if (i->position >= line.textStart() && i->position < (line.textStart() + line.textLength())) {\n+            i->x = line.cursorToX(i->position);\n+            i->y = height + textTop + imgsY.at(j);\n+            ++j;\n+        }\n+    }\n+    line.setPosition(QPointF(line.position().x(), height + textTop));\n+    height += totalLineHeight;\n+\n+    // height += (lineHeightMode == QQuickText::FixedHeight) ? lineHeight : line.height() * lineHeight;\n+}\n+\n+void QQuickTextPrivate::hasImageInLine(QTextLine &line, qreal &height, qreal lineWidth, qreal &xOffset, qreal &yOffset)\n+{\n+    line.setLineWidth(lineWidth - xOffset);\n+\n+    // we need to find out if there is an image in the line.\n+    QDeclarativeStyledText::ImgTagInfo *image = 0;\n+    foreach (QDeclarativeStyledText::ImgTagInfo *i, imgTags) {\n+        if (i->position >= line.textStart() && i->position < (line.textStart() + line.textLength())) {\n+            image = i;\n+            break;\n+        }\n+    }\n+\n+    if (image) {\n+        line.setNumColumns(image->position - line.textStart());\n+        if (line.naturalTextWidth() + image->width >= (lineWidth - xOffset)) {\n+            // the text and the image won't fit, the image needs to be on the next line.\n+            line.setPosition(QPointF(xOffset + line.position().x(), height));\n+            image->x = 0;\n+            image->y = height + line.height();\n+            xOffset = image->width;\n+            yOffset = 0;\n+            height += qMax(line.height(), qreal(image->height));\n+        } else {\n+            // we can fit the text and the image\n+            yOffset = qMax(line.height(), qreal(image->height)) - line.height();\n+            line.setPosition(QPointF(xOffset + line.position().x(), height + yOffset));\n+            image->x = xOffset + line.naturalTextWidth();\n+            image->y = height;\n+            xOffset = image->x + image->width;\n+        }\n+    } else {\n+        line.setPosition(QPointF(xOffset + line.position().x(), height + yOffset));\n+        height += yOffset + line.height();\n+        // height += (lineHeightMode == QQuickText::FixedHeight) ? lineHeight : line.height() * lineHeight;\n+        xOffset = 0;\n+        yOffset = 0;\n+    }\n+}\n+\n /*!\n     Returns a painted version of the QQuickTextPrivate::layout QTextLayout.\n     If \\a drawStyle is true, the style color overrides all colors in the document.\n@@ -1741,11 +1841,29 @@ QSGNode *QQuickText::updatePaintNode(QSGNode *oldNode, UpdatePaintNodeData *data\n             node->addTextDocument(bounds.topLeft(), d->doc, d->color, d->style, d->styleColor);\n \n         } else {\n-            node->addTextLayout(QPoint(0, bounds.y()), &d->layout, d->color, d->style, d->styleColor);\n+            node->addTextLayout(QPoint(0, 0), &d->layout, d->color, d->style, d->styleColor);\n             if (d->elipsisLayout)\n                 node->addTextLayout(QPoint(0, bounds.y()), d->elipsisLayout, d->color, d->style, d->styleColor);\n         }\n \n+        foreach (QDeclarativeStyledText::ImgTagInfo *img, d->imgTags) {\n+            // grey rect for debugging\n+            QSGRectangleNode *rectangle = d->sceneGraphContext()->createRectangleNode();\n+            rectangle->setRect(QRectF(img->x, img->y, img->width, img->height));\n+            rectangle->setColor(QColor(\""#dedede\""));\n+            rectangle->update();\n+            node->appendChildNode(rectangle);\n+\n+            QDeclarativePixmap *pix = img->pix;\n+            if (pix && pix->status() == QDeclarativePixmap::Ready) {\n+                QSGTexture *texture = d->sceneGraphContext()->textureForFactory(pix->textureFactory());\n+                QSGImageNode *imgnode = d->sceneGraphContext()->createImageNode();\n+                imgnode->setTexture(texture);\n+                imgnode->setTargetRect(QRectF(img->x, img->y, pix->width(), pix->height()));\n+                imgnode->update();\n+                node->appendChildNode(imgnode);\n+            }\n+        }\n         return node;\n     }\n }\n"", ""qquicktext_p.h"": ""@@ -203,6 +203,9 @@ protected:\n     virtual QSGNode *updatePaintNode(QSGNode *, UpdatePaintNodeData *);\n     virtual bool event(QEvent *);\n \n+private slots:\n+    void imageDownloadFinished();\n+\n private:\n     Q_DISABLE_COPY(QQuickText)\n     Q_DECLARE_PRIVATE(QQuickText)\n"", ""qquicktext_p_p.h"": ""@@ -59,12 +59,14 @@\n \n #include <QtDeclarative/qdeclarative.h>\n #include <QtGui/qtextlayout.h>\n+#include <private/qdeclarativestyledtext_p.h>\n \n QT_BEGIN_NAMESPACE\n \n class QTextLayout;\n class QQuickTextDocumentWithImageResources;\n class QSGPlainTexture;\n+class QDeclarativePixmap;\n \n class Q_AUTOTEST_EXPORT QQuickTextPrivate : public QQuickImplicitSizeItemPrivate\n {\n@@ -81,6 +83,8 @@ public:\n     void mirrorChange();\n     QTextDocument *textDocument();\n     bool isLineLaidOutConnected();\n+    void setupLineHeightAndPosition(QTextLine &line, qreal lineWidth, qreal &height);\n+    void hasImageInLine(QTextLine &line, qreal &height, qreal lineWidth, qreal &xOffset, qreal &yOffset);\n \n     QString text;\n     QFont font;\n@@ -162,6 +166,7 @@ public:\n     QThread *layoutThread;\n     QThread *paintingThread;\n #endif\n+    QList<QDeclarativeStyledText::ImgTagInfo *> imgTags;\n };\n \n QT_END_NAMESPACE\n"", ""qdeclarativestyledtext.cpp"": ""@@ -59,6 +59,7 @@\n     <h1> to <h6> - headers\n     <a href=\""\""> - anchor\n     <ol type=\""\"">, <ul type=\""\""> and <li> - ordered and unordered lists\n+    <img src=\""\""> - images\n \n     The opening and closing tags must be correctly nested.\n */\n@@ -77,8 +78,8 @@ public:\n         ListFormat format;\n     };\n \n-    QDeclarativeStyledTextPrivate(const QString &t, QTextLayout &l)\n-        : text(t), layout(l), baseFont(layout.font()), hasNewLine(false)\n+    QDeclarativeStyledTextPrivate(const QString &t, QTextLayout &l, QList<QDeclarativeStyledText::ImgTagInfo*> &imgTags)\n+        : text(t), layout(l), imgTags(&imgTags), baseFont(layout.font()), hasNewLine(false)\n     {\n     }\n \n@@ -90,6 +91,7 @@ public:\n     bool parseOrderedListAttributes(const QChar *&ch, const QString &textIn);\n     bool parseUnorderedListAttributes(const QChar *&ch, const QString &textIn);\n     bool parseAnchorAttributes(const QChar *&ch, const QString &textIn, QTextCharFormat &format);\n+    bool parseImageAttributes(const QChar *&ch, const QString &textIn, QString &textOut);\n     QPair<QStringRef,QStringRef> parseAttribute(const QChar *&ch, const QString &textIn);\n     QStringRef parseValue(const QChar *&ch, const QString &textIn);\n \n@@ -103,6 +105,7 @@ public:\n \n     QString text;\n     QTextLayout &layout;\n+    QList<QDeclarativeStyledText::ImgTagInfo*> *imgTags;\n     QFont baseFont;\n     QStack<List> listStack;\n     bool hasNewLine;\n@@ -131,8 +134,8 @@ const QChar QDeclarativeStyledTextPrivate::bullet(0x2022);\n const QChar QDeclarativeStyledTextPrivate::disc(0x25e6);\n const QChar QDeclarativeStyledTextPrivate::square(0x25a1);\n \n-QDeclarativeStyledText::QDeclarativeStyledText(const QString &string, QTextLayout &layout)\n-: d(new QDeclarativeStyledTextPrivate(string, layout))\n+QDeclarativeStyledText::QDeclarativeStyledText(const QString &string, QTextLayout &layout, QList<QDeclarativeStyledText::ImgTagInfo*> &imgTags)\n+    : d(new QDeclarativeStyledTextPrivate(string, layout, imgTags))\n {\n }\n \n@@ -141,11 +144,11 @@ QDeclarativeStyledText::~QDeclarativeStyledText()\n     delete d;\n }\n \n-void QDeclarativeStyledText::parse(const QString &string, QTextLayout &layout)\n+void QDeclarativeStyledText::parse(const QString &string, QTextLayout &layout, QList<QDeclarativeStyledText::ImgTagInfo*> &imgTags)\n {\n     if (string.isEmpty())\n         return;\n-    QDeclarativeStyledText styledText(string, layout);\n+    QDeclarativeStyledText styledText(string, layout, imgTags);\n     styledText.d->parse();\n }\n \n@@ -324,9 +327,10 @@ bool QDeclarativeStyledTextPrivate::parseTag(const QChar *&ch, const QString &te\n                 return parseOrderedListAttributes(ch, textIn);\n             if (tag == QLatin1String(\""ul\""))\n                 return parseUnorderedListAttributes(ch, textIn);\n-            if (tag == QLatin1String(\""a\"")) {\n+            if (tag == QLatin1String(\""a\""))\n                 return parseAnchorAttributes(ch, textIn, format);\n-            }\n+            if (tag == QLatin1String(\""img\""))\n+                return parseImageAttributes(ch, textIn, textOut);\n             if (*ch == greaterThan || ch->isNull())\n                 continue;\n         } else if (*ch != slash) {\n@@ -521,6 +525,42 @@ bool QDeclarativeStyledTextPrivate::parseAnchorAttributes(const QChar *&ch, cons\n     return valid;\n }\n \n+bool QDeclarativeStyledTextPrivate::parseImageAttributes(const QChar *&ch, const QString &textIn, QString &textOut)\n+{\n+    bool valid = false;\n+\n+    QDeclarativeStyledText::ImgTagInfo *img = new QDeclarativeStyledText::ImgTagInfo;\n+    img->width = 0;\n+    img->height = 0;\n+    img->pix = 0;\n+    img->position = textOut.length();\n+\n+    QPair<QStringRef,QStringRef> attr;\n+    do {\n+        attr = parseAttribute(ch, textIn);\n+        if (attr.first == QLatin1String(\""src\"")) {\n+            img->url =  QUrl(attr.second.toString());\n+            valid = true;\n+        } else if (attr.first == QLatin1String(\""width\"")) {\n+            img->width = attr.second.toString().toInt();\n+            valid = true;\n+        } else if (attr.first == QLatin1String(\""height\"")) {\n+            img->height = attr.second.toString().toInt();\n+            valid = true;\n+        } else if (attr.first == QLatin1String(\""align\"")) {\n+            img->align = attr.second.toString();\n+            valid = true;\n+        }\n+    } while (!ch->isNull() && !attr.first.isEmpty());\n+\n+    QFontMetrics fm(layout.font());\n+    QString padding(qRound(qreal(img->width) / fm.width(QChar::Nbsp)), QChar::Nbsp);\n+    textOut.append(padding);\n+\n+    imgTags->append(img);\n+    return valid;\n+}\n+\n QPair<QStringRef,QStringRef> QDeclarativeStyledTextPrivate::parseAttribute(const QChar *&ch, const QString &textIn)\n {\n     skipSpace(ch);\n"", ""qdeclarativestyledtext_p.h"": ""@@ -43,6 +43,8 @@\n #define QDECLARATIVESTYLEDTEXT_H\n \n #include <QSizeF>\n+#include <QList>\n+#include <QUrl>\n \n QT_BEGIN_NAMESPACE\n \n@@ -50,15 +52,26 @@ class QPainter;\n class QPointF;\n class QString;\n class QDeclarativeStyledTextPrivate;\n-class QTextLayout;\n+class QDeclarativePixmap;\n \n class Q_AUTOTEST_EXPORT QDeclarativeStyledText\n {\n public:\n-    static void parse(const QString &string, QTextLayout &layout);\n+    typedef struct {\n+        QUrl url;\n+        qreal x;\n+        qreal y;\n+        int width;\n+        int height;\n+        int position;\n+        QString align;\n+        QDeclarativePixmap *pix;\n+    } ImgTagInfo;\n+\n+    static void parse(const QString &string, QTextLayout &layout, QList<QDeclarativeStyledText::ImgTagInfo*> &imgTags);\n \n private:\n-    QDeclarativeStyledText(const QString &string, QTextLayout &layout);\n+    QDeclarativeStyledText(const QString &string, QTextLayout &layout, QList<QDeclarativeStyledText::ImgTagInfo*> &imgTags);\n     ~QDeclarativeStyledText();\n \n     QDeclarativeStyledTextPrivate *d;\n""}",bug,"feature 
",bug;refactor;
12740.0,12740.0,bug ,hjk,ProjectExplorer: use enum instead of QString for run mode,"ProjectExplorer: use enum instead of QString for run mode

Change-Id: Ia906944a489b09afdea59f74afbf759b4caebe37","['src/plugins/debugger/debuggerrunner.cpp', 'src/plugins/projectexplorer/runconfiguration.cpp', 'src/plugins/projectexplorer/projectexplorer.h', 'src/plugins/qmlprofiler/remotelinuxqmlprofilerrunner.cpp', 'src/plugins/debugger/debuggerplugin.cpp', 'src/plugins/qt4projectmanager/qt-s60/codaruncontrol.cpp', 'src/plugins/analyzerbase/analyzerruncontrolfactory.cpp', 'src/plugins/madde/maemorunfactories.h', 'src/plugins/qt4projectmanager/qt-s60/s60runcontrolfactory.cpp', 'src/plugins/valgrind/valgrindtool.cpp', 'src/plugins/qt4projectmanager/qt-s60/s60devicedebugruncontrol.h', 'src/plugins/valgrind/callgrindtool.cpp', 'src/plugins/madde/maemorunconfiguration.h', 'src/plugins/projectexplorer/projectexplorer.cpp', 'src/plugins/remotelinux/remotelinuxruncontrolfactory.h', 'src/plugins/valgrind/valgrindplugin.cpp', 'src/plugins/analyzerbase/ianalyzertool.h', 'src/plugins/qmlprojectmanager/qmlprojectruncontrol.cpp', 'src/plugins/qt4projectmanager/qt-s60/s60runcontrolbase.cpp', 'src/plugins/valgrind/memchecktool.cpp', 'src/plugins/qmlprofiler/codaqmlprofilerrunner.cpp', 'src/plugins/debugger/debuggerruncontrolfactory.h', 'src/plugins/valgrind/valgrindtool.h', 'src/plugins/valgrind/callgrindtool.h', 'src/plugins/qt4projectmanager/qt-s60/s60runcontrolbase.h', 'src/plugins/remotelinux/remotelinuxruncontrol.cpp', 'src/plugins/madde/maemorunfactories.cpp', 'src/plugins/qt4projectmanager/qt-s60/s60devicedebugruncontrol.cpp', 'src/plugins/projectexplorer/localapplicationruncontrol.h', 'src/plugins/qmlprojectmanager/qmlprojectruncontrol.h', 'src/plugins/projectexplorer/localapplicationruncontrol.cpp', 'src/plugins/projectexplorer/projectexplorerconstants.h', 'src/plugins/projectexplorer/runconfiguration.h', 'src/plugins/analyzerbase/analyzerruncontrolfactory.h', 'src/plugins/qmlprofiler/qmlprofilertool.cpp', 'src/plugins/qt4projectmanager/qt-s60/s60emulatorrunconfiguration.h', 'src/plugins/qt4projectmanager/qt-s60/s60runcontrolfactory.h', 'src/plugins/madde/maemorunconfiguration.cpp', 'src/plugins/analyzerbase/analyzerruncontrol.cpp', 'src/plugins/analyzerbase/analyzermanager.cpp', 'src/plugins/qt4projectmanager/qt-s60/s60manager.cpp', 'src/plugins/qt4projectmanager/qt-s60/s60emulatorrunconfiguration.cpp', 'src/plugins/qt4projectmanager/qt-s60/codaruncontrol.h', 'src/plugins/valgrind/memchecktool.h', 'src/plugins/analyzerbase/analyzermanager.h', 'src/plugins/debugger/debuggerconstants.h', 'src/plugins/qmlprofiler/qmlprofilertool.h', 'src/plugins/remotelinux/remotelinuxruncontrolfactory.cpp']",,refactor,"refactor
",others;
8853.0,8853.0,refactor,Olivier Goffart (Woboq GmbH),moc: fix Q_INVOKABLE returning references,"moc: fix Q_INVOKABLE returning references

The moc generated code would not compile otherwise

Keep Moc::parseFunction and Moc::parseMaybeFunction in sync
(the first is used for signals and slots, and the second for normal
 functions such as Q_INVOKABLE)
Last patch that introduced function pointer updated parseFunction
but not parseMaybeFunction

When a slot return a reference, moc generate code that make the
MetaObject system think it is a void, so qt_metacall and invokeMethod
do not mess with the return value.
But when we want to take the function signature, in the IndexOfMethod
call, we need to have the exact return type.

Change-Id: I4661218d7ce367ad3934e73929e7d04f0a6dbc09","['tests/auto/tools/moc/tst_moc.cpp', 'src/tools/moc/moc.cpp']","{""moc.cpp"": ""@@ -503,8 +503,11 @@ bool Moc::parseMaybeFunction(const ClassDef *cdef, FunctionDef *def)\n     }\n \n     // we don't support references as return types, it's too dangerous\n-    if (def->type.referenceType == Type::Reference)\n+    if (def->type.referenceType == Type::Reference) {\n+        QByteArray rawName = def->type.rawName;\n         def->type = Type(\""void\"");\n+        def->type.rawName = rawName;\n+    }\n \n     def->normalizedType = normalizeType(def->type.name);\n \n"", ""tst_moc.cpp"": ""@@ -373,6 +373,11 @@ public slots:\n \n public:\n     Q_INVOKABLE void const slotWithSillyConst2() {}\n+    Q_INVOKABLE QObject& myInvokableReturningRef()\n+    { return *this; }\n+    Q_INVOKABLE const QObject& myInvokableReturningConstRef() const\n+    { return *this; }\n+\n \n     // that one however should be fine\n public slots:\n@@ -530,6 +535,7 @@ private slots:\n     void privateClass();\n     void cxx11Enums_data();\n     void cxx11Enums();\n+    void returnRefs();\n \n signals:\n     void sigWithUnsignedArg(unsigned foo);\n@@ -1687,6 +1693,16 @@ void tst_Moc::cxx11Enums()\n     }\n }\n \n+void tst_Moc::returnRefs()\n+{\n+    TestClass tst;\n+    const QMetaObject *mobj = tst.metaObject();\n+    QVERIFY(mobj->indexOfMethod(\""myInvokableReturningRef()\"") != -1);\n+    QVERIFY(mobj->indexOfMethod(\""myInvokableReturningConstRef()\"") != -1);\n+    // Those two functions are copied from the qscriptextqobject test in qtscript\n+    // they used to cause miscompilation of the moc generated file.\n+}\n+\n QTEST_APPLESS_MAIN(tst_Moc)\n #include \""tst_moc.moc\""\n \n""}",bug,"bug, refactor 
",bug;
9055.0,9055.0,bug ,Oswald Buddenhagen,Harfbuzz shaper: kerning adjustment does not need to be modified by RTL,"Harfbuzz shaper: kerning adjustment does not need to be modified by RTL

Merge-request: 1435
Reviewed-by: Oswald Buddenhagen <oswald.buddenhagen@nokia.com>
(cherry picked from commit 1b928f5e41888150c4d85ff4df8a9fcab9b06d90)
Change-Id: I1b928f5e41888150c4d85ff4df8a9fcab9b06d90",['src/3rdparty/harfbuzz/src/harfbuzz-shaper.cpp'],"{""harfbuzz-shaper.cpp"": ""@@ -1293,7 +1293,7 @@ HB_Bool HB_OpenTypePosition(HB_ShaperItem *item, int availableGlyphs, HB_Bool do\n //                    (int)(positions[i].x_pos >> 6), (int)(positions[i].y_pos >> 6),\n //                    positions[i].back, positions[i].new_advance);\n \n-            HB_Fixed adjustment = (item->item.bidiLevel % 2) ? -positions[i].x_advance : positions[i].x_advance;\n+            HB_Fixed adjustment = positions[i].x_advance;\n \n             if (!(face->current_flags & HB_ShaperFlag_UseDesignMetrics))\n                 adjustment = HB_FIXED_ROUND(adjustment);\n""}",merge,"bug 
",others;
7686.0,7686.0,merge,Jason McDonald,Remove obsolete code from QChar autotest.,"Remove obsolete code from QChar autotest.

QUnicodeTables::ligature() was removed from the API in 2006.  The
commit that disabled the test also changed the code to call
QChar::ligature(), which has never existed.

Change-Id: I056c17c178a527b076538fb007404ff0b735ba02",['tests/auto/corelib/tools/qchar/tst_qchar.cpp'],"{""tst_qchar.cpp"": ""@@ -92,7 +92,6 @@ private slots:\n     void combiningClass();\n     void digitValue();\n     void decomposition();\n-//     void ligature();\n     void lineBreakClass();\n     void normalization_data();\n     void normalization();\n@@ -589,19 +588,6 @@ void tst_QChar::decomposition()\n     }\n }\n \n-#if 0\n-void tst_QChar::ligature()\n-{\n-    QVERIFY(QChar::ligature(0x0041, 0x00300) == 0xc0);\n-    QVERIFY(QChar::ligature(0x0049, 0x00308) == 0xcf);\n-    QVERIFY(QChar::ligature(0x0391, 0x00301) == 0x386);\n-    QVERIFY(QChar::ligature(0x0627, 0x00653) == 0x622);\n-\n-    QVERIFY(QChar::ligature(0x1100, 0x1161) == 0xac00);\n-    QVERIFY(QChar::ligature(0xac00, 0x11a8) == 0xac01);\n-}\n-#endif\n-\n void tst_QChar::lineBreakClass()\n {\n     QVERIFY(QUnicodeTables::lineBreakClass(0x0041u) == QUnicodeTables::LineBreak_AL);\n""}",deprecat,"bug, test 
",deprecat;test;
9301.0,9301.0,deprecat ,hjk,analyzer: fix tab order in 'start remote' dialog,"analyzer: fix tab order in 'start remote' dialog

Task-number: QTCREATORBUG-5765
Change-Id: I24f4a0bab178f32da12dc6842945cff2f7ffa993
Reviewed-by: hjk <qthjk@ovi.com>
(cherry picked from commit e64c33e0f7a8a360a2bfa8c3169f770ea635eea9)",['src/plugins/analyzerbase/startremotedialog.ui'],"{""startremotedialog.ui"": ""@@ -7,7 +7,7 @@\n     <x>0</x>\n     <y>0</y>\n     <width>446</width>\n-    <height>296</height>\n+    <height>329</height>\n    </rect>\n   </property>\n   <property name=\""windowTitle\"">\n@@ -49,26 +49,6 @@\n       <item row=\""1\"" column=\""1\"">\n        <widget class=\""QLineEdit\"" name=\""user\""/>\n       </item>\n-      <item row=\""3\"" column=\""0\"">\n-       <widget class=\""QLabel\"" name=\""label_4\"">\n-        <property name=\""toolTip\"">\n-         <string>You need to pass either a password or an SSH key.</string>\n-        </property>\n-        <property name=\""text\"">\n-         <string>Password:</string>\n-        </property>\n-        <property name=\""buddy\"">\n-         <cstring>password</cstring>\n-        </property>\n-       </widget>\n-      </item>\n-      <item row=\""3\"" column=\""1\"">\n-       <widget class=\""QLineEdit\"" name=\""password\"">\n-        <property name=\""echoMode\"">\n-         <enum>QLineEdit::Password</enum>\n-        </property>\n-       </widget>\n-      </item>\n       <item row=\""2\"" column=\""0\"">\n        <widget class=\""QLabel\"" name=\""label_5\"">\n         <property name=\""text\"">\n@@ -92,6 +72,26 @@\n         </property>\n        </widget>\n       </item>\n+      <item row=\""3\"" column=\""0\"">\n+       <widget class=\""QLabel\"" name=\""label_4\"">\n+        <property name=\""toolTip\"">\n+         <string>You need to pass either a password or an SSH key.</string>\n+        </property>\n+        <property name=\""text\"">\n+         <string>Password:</string>\n+        </property>\n+        <property name=\""buddy\"">\n+         <cstring>password</cstring>\n+        </property>\n+       </widget>\n+      </item>\n+      <item row=\""3\"" column=\""1\"">\n+       <widget class=\""QLineEdit\"" name=\""password\"">\n+        <property name=\""echoMode\"">\n+         <enum>QLineEdit::Password</enum>\n+        </property>\n+       </widget>\n+      </item>\n       <item row=\""4\"" column=\""0\"">\n        <widget class=\""QLabel\"" name=\""label_8\"">\n         <property name=\""toolTip\"">\n@@ -167,12 +167,6 @@\n    <container>1</container>\n   </customwidget>\n  </customwidgets>\n- <tabstops>\n-  <tabstop>host</tabstop>\n-  <tabstop>user</tabstop>\n-  <tabstop>password</tabstop>\n-  <tabstop>buttonBox</tabstop>\n- </tabstops>\n  <resources/>\n  <connections/>\n </ui>\n""}",bug;resource;,"bug 
",bug;resource;
5028.0,5028.0,bug;resource;,Lars Knoll,Fix the QNetworkConnectionManagerPrivate initialisation code.,"Fix the QNetworkConnectionManagerPrivate initialisation code.

The current code was meant to be a thread-safe initialisation that
also ran a couple of extra steps. But it wasn't. While it's ok to call
qAddPostRoutine(), the call to updateConfigurations() was
thread-unsafe. It is possible that another thread got the pointer to
the Private before updateConfigurations() finished.

So instead protect the initialisation with a mutex.

It's possible that the value of the pointer becomes visible to
other processors before the other contained values, so use
atomics here.

To call qAddPostRoutine safely from the main thread, use the trick
of deleteLater() (which is thread-safe) in another thread connecting
to a slot.

Change-Id: If9bab88138755df95a791f34b0be8684207979d7","['src/network/bearer/qnetworkconfigmanager.cpp', 'src/network/bearer/qnetworkconfigmanager_p.h']","{""qnetworkconfigmanager.cpp"": ""@@ -46,34 +46,55 @@\n \n #include <QtCore/qstringlist.h>\n #include <QtCore/qcoreapplication.h>\n+#include <QtCore/qmutex.h>\n+#include <QtCore/qthread.h>\n+#include <QtCore/private/qcoreapplication_p.h>\n \n #ifndef QT_NO_BEARERMANAGEMENT\n \n QT_BEGIN_NAMESPACE\n \n-#define Q_GLOBAL_STATIC_QAPP_DESTRUCTION(TYPE, NAME)                    \\\n-    static QGlobalStatic<TYPE > this_##NAME                             \\\n-                = { Q_BASIC_ATOMIC_INITIALIZER(0), false };             \\\n-    static void NAME##_cleanup()                                        \\\n-    {                                                                   \\\n-        delete this_##NAME.pointer;                                     \\\n-        this_##NAME.pointer = 0;                                        \\\n-    }                                                                   \\\n-    static TYPE *NAME()                                                 \\\n-    {                                                                   \\\n-        if (!this_##NAME.pointer) {                                     \\\n-            TYPE *x = new TYPE;                                         \\\n-            if (!this_##NAME.pointer.testAndSetOrdered(0, x))           \\\n-                delete x;                                               \\\n-            else {                                                      \\\n-                qAddPostRoutine(NAME##_cleanup);                        \\\n-                this_##NAME.pointer->updateConfigurations();            \\\n-            }                                                           \\\n-        }                                                               \\\n-        return this_##NAME.pointer;                                     \\\n-    }\n+static QBasicAtomicPointer<QNetworkConfigurationManagerPrivate> connManager_ptr;\n+Q_GLOBAL_STATIC(QMutex, connManager_mutex)\n+\n+static void connManager_cleanup()\n+{\n+    // this is not atomic or thread-safe!\n+    delete connManager_ptr.load();\n+    connManager_ptr.store(0);\n+}\n+\n+void QNetworkConfigurationManagerPrivate::addPostRoutine()\n+{\n+    qAddPostRoutine(connManager_cleanup);\n+}\n \n-Q_GLOBAL_STATIC_QAPP_DESTRUCTION(QNetworkConfigurationManagerPrivate, connManager);\n+static QNetworkConfigurationManagerPrivate *connManager()\n+{\n+    QNetworkConfigurationManagerPrivate *ptr = connManager_ptr.loadAcquire();\n+    if (!ptr) {\n+        QMutexLocker locker(connManager_mutex());\n+        if (!(ptr = connManager_ptr.loadAcquire())) {\n+            ptr = new QNetworkConfigurationManagerPrivate;\n+\n+            if (QCoreApplicationPrivate::mainThread() == QThread::currentThread()) {\n+                // right thread or no main thread yet\n+                ptr->addPostRoutine();\n+                ptr->updateConfigurations();\n+            } else {\n+                // wrong thread, we need to make the main thread do this\n+                QObject *obj = new QObject;\n+                QObject::connect(obj, SIGNAL(destroyed()), ptr, SLOT(addPostRoutine()), Qt::DirectConnection);\n+                ptr->updateConfigurations(); // this moves us to the main thread\n+                obj->moveToThread(QCoreApplicationPrivate::mainThread());\n+                obj->deleteLater();\n+            }\n+\n+            connManager_ptr.storeRelease(ptr);\n+        }\n+    }\n+    return ptr;\n+}\n \n QNetworkConfigurationManagerPrivate *qNetworkConfigurationManagerPrivate()\n {\n"", ""qnetworkconfigmanager_p.h"": ""@@ -92,6 +92,8 @@ public:\n public Q_SLOTS:\n     void updateConfigurations();\n \n+    static void addPostRoutine();\n+\n Q_SIGNALS:\n     void configurationAdded(const QNetworkConfiguration &config);\n     void configurationRemoved(const QNetworkConfiguration &config);\n@@ -106,6 +108,7 @@ private Q_SLOTS:\n \n     void pollEngines();\n \n+\n private:\n     Q_INVOKABLE void startPolling();\n     QTimer *pollTimer;\n""}",bug,"bug, refactor 
",bug;resource;
16609.0,16609.0,bug ,removed,Resource handling needs refactoring.,"Resource handling needs refactoring.

Some minor memory leaks were fixed.

Task-number: QTBUG-24043
Change-Id: I35389eff158f2ea0476e1dadb6c521f23c685358","['src/quick3d/qdeclarativeeffect.cpp', 'src/threed/materials/qglmaterial.cpp']","{""qdeclarativeeffect.cpp"": ""@@ -320,7 +320,7 @@ void QDeclarativeEffect::setTextureImage(const QImage& value)\n     if (!material()->texture())\n     {\n         // Should this texture be parented?\n-        tex = new QGLTexture2D();\n+        tex = new QGLTexture2D(material());\n         material()->setTexture(tex);\n     } else\n     {\n"", ""qglmaterial.cpp"": ""@@ -306,6 +306,8 @@ void QGLMaterial::setTexture(QGLTexture2D *value, int layer)\n     Q_D(QGLMaterial);\n     QGLTexture2D *prev = d->textures.value(layer, 0);\n     if (prev != value) {\n+        if (prev)\n+            prev->cleanupResources();\n         delete prev;\n         d->textures[layer] = value;\n         emit texturesChanged();\n""}",bug,"bug, refactor 
",bug;refactor;
9102.0,9102.0,bug ,Michael Brasser,Rewrite signal handlers at compile time.,"Rewrite signal handlers at compile time.

Task-number: QTBUG-22726
Change-Id: If2c3c00c646b2ed6b6899573a0b487c8deeaad3f","['src/declarative/qml/qdeclarativeinstruction_p.h', 'src/declarative/qml/qdeclarativecompiler.cpp', 'src/declarative/qml/qdeclarativerewrite_p.h', 'src/declarative/qml/qdeclarativevme.cpp', 'src/declarative/qml/qdeclarativerewrite.cpp', 'tests/auto/declarative/debugger/qdeclarativeenginedebug/tst_qdeclarativeenginedebug.cpp']","{""qdeclarativecompiler.cpp"": ""@@ -1227,10 +1227,11 @@ void QDeclarativeCompiler::genObjectBody(QDeclarativeScript::Object *obj)\n \n             Instruction::StoreSignal store;\n             store.signalIndex = prop->index;\n-            store.value =\n-                output->indexForString(v->value.asScript().trimmed());\n+            QDeclarativeRewrite::RewriteSignalHandler rewriteSignalHandler;\n+            const QString &rewrite =\n+                    rewriteSignalHandler(v->value.asScript().trimmed(), prop->name().toString());\n+            store.value = output->indexForString(rewrite);\n             store.context = v->signalExpressionContextStack;\n-            store.name = output->indexForByteArray(prop->name().toUtf8());\n             store.line = v->location.start.line;\n             output->addInstruction(store);\n \n"", ""qdeclarativeinstruction_p.h"": ""@@ -382,7 +382,6 @@ union QDeclarativeInstruction\n         int signalIndex;\n         int value;\n         short context;\n-        int name;\n         ushort line;\n     };\n     struct instr_assignSignalObject {\n"", ""qdeclarativerewrite.cpp"": ""@@ -266,6 +266,11 @@ void RewriteBinding::endVisit(AST::LocalForEachStatement *)\n     --_inLoop;\n }\n \n+QString RewriteSignalHandler::operator()(const QString &code, const QString &name)\n+{\n+    return QStringLiteral(\""(function \"") + name + QStringLiteral(\""() { \"") + code + QStringLiteral(\"" })\"");\n+}\n+\n } // namespace QDeclarativeRewrite\n \n QT_END_NAMESPACE\n"", ""qdeclarativerewrite_p.h"": ""@@ -119,6 +119,12 @@ private:\n     int _inLoop;\n };\n \n+class RewriteSignalHandler\n+{\n+public:\n+    QString operator()(const QString &code, const QString &name);\n+};\n+\n } // namespace QDeclarativeRewrite\n \n QT_END_NAMESPACE\n"", ""qdeclarativevme.cpp"": ""@@ -863,9 +863,7 @@ QObject *QDeclarativeVME::run(QList<QDeclarativeError> *errors,\n \n             QDeclarativeBoundSignal *bs = new QDeclarativeBoundSignal(target, signal, target);\n             QDeclarativeExpression *expr = \n-                new QDeclarativeExpression(CTXT, context, PRIMITIVES.at(instr.value));\n-            expr->setSourceLocation(COMP->name, instr.line);\n-            static_cast<QDeclarativeExpressionPrivate *>(QObjectPrivate::get(expr))->name = QString::fromUtf8(DATAS.at(instr.name));\n+                new QDeclarativeExpression(CTXT, context, PRIMITIVES.at(instr.value), true, COMP->name, instr.line, *new QDeclarativeExpressionPrivate);\n             bs->setExpression(expr);\n         QML_END_INSTR(StoreSignal)\n \n"", ""tst_qdeclarativeenginedebug.cpp"": ""@@ -53,6 +53,7 @@\n #include <QtDeclarative/qquickitem.h>\n \n #include <private/qdeclarativebinding_p.h>\n+#include <private/qdeclarativeboundsignal_p.h>\n #include <private/qdeclarativeenginedebug_p.h>\n #include <private/qdeclarativedebugservice_p.h>\n #include <private/qdeclarativemetatype_p.h>\n@@ -209,7 +210,15 @@ void tst_QDeclarativeEngineDebug::recursiveObjectTest(QObject *o, const QDeclara\n \n         // signal properties are fake - they are generated from QDeclarativeBoundSignal children\n         if (p.name().startsWith(\""on\"") && p.name().length() > 2 && p.name()[2].isUpper()) {\n-            QVERIFY(p.value().toString().startsWith('{') && p.value().toString().endsWith('}'));\n+            QList<QDeclarativeBoundSignal*> signalHandlers = o->findChildren<QDeclarativeBoundSignal*>();\n+            QString signal = p.value().toString();\n+            bool found = false;\n+            for (int i = 0; i < signalHandlers.count(); ++i)\n+                if (signalHandlers.at(i)->expression()->expression() == signal) {\n+                    found = true;\n+                    break;\n+                }\n+            QVERIFY(found);\n             QVERIFY(p.valueTypeName().isEmpty());\n             QVERIFY(p.binding().isEmpty());\n             QVERIFY(!p.hasNotifySignal());\n@@ -1031,7 +1040,7 @@ void tst_QDeclarativeEngineDebug::setBindingForObject()\n     QDeclarativeDebugPropertyReference onEnteredRef = findProperty(mouseAreaObject.properties(), \""onEntered\"");\n \n     QCOMPARE(onEnteredRef.name(), QString(\""onEntered\""));\n-    QCOMPARE(onEnteredRef.value(),  QVariant(\""{ console.log('hello') }\""));\n+    QCOMPARE(onEnteredRef.value(),  QVariant(\""(function onEntered() { { console.log('hello') } })\""));\n \n     m_dbg->setBindingForObject(mouseAreaObject.debugId(), \""onEntered\"", \""{console.log('hello, world') }\"", false) ;\n \n""}",bug,"feature, refactor 
",bug;
11536.0,11536.0,bug ,Robin Burchell,Remove non-const getters marked for elimination.,"Remove non-const getters marked for elimination.

These all have consted overloads, so there's no need for them.

Change-Id: I3d4f63b8eb8f1b7df7fa772d6172e0a954184d24","['src/gui/kernel/qevent.cpp', 'src/gui/kernel/qevent.h']","{""qevent.cpp"": ""@@ -941,15 +941,6 @@ QFocusEvent::~QFocusEvent()\n {\n }\n \n-// ### Qt 5: remove\n-/*!\n-    \\internal\n- */\n-Qt::FocusReason QFocusEvent::reason()\n-{\n-    return m_reason;\n-}\n-\n /*!\n     Returns the reason for this focus event.\n  */\n@@ -3232,13 +3223,6 @@ QClipboardEvent::~QClipboardEvent()\n     Returns the key sequence that triggered the event.\n */\n \n-// ### Qt 5: remove\n-/*!\n-    \\fn const QKeySequence &QShortcutEvent::key()\n-\n-    \\internal\n-*/\n-\n /*!\n     \\fn int QShortcutEvent::shortcutId() const\n \n@@ -3248,14 +3232,6 @@ QClipboardEvent::~QClipboardEvent()\n     \\sa QShortcut::id()\n */\n \n-// ### Qt 5: remove\n-/*!\n-    \\fn int QShortcutEvent::shortcutId()\n-    \\overload\n-\n-    \\internal\n-*/\n-\n /*!\n     \\fn bool QShortcutEvent::isAmbiguous() const\n \n@@ -3265,13 +3241,6 @@ QClipboardEvent::~QClipboardEvent()\n     \\sa QShortcut::activatedAmbiguously()\n */\n \n-// ### Qt 5: remove\n-/*!\n-    \\fn bool QShortcutEvent::isAmbiguous()\n-\n-    \\internal\n-*/\n-\n /*!\n     \\class QWindowStateChangeEvent\n     \\ingroup events\n"", ""qevent.h"": ""@@ -266,7 +266,6 @@ public:\n     inline bool gotFocus() const { return type() == FocusIn; }\n     inline bool lostFocus() const { return type() == FocusOut; }\n \n-    Qt::FocusReason reason();\n     Qt::FocusReason reason() const;\n \n private:\n@@ -639,11 +638,8 @@ public:\n     QShortcutEvent(const QKeySequence &key, int id, bool ambiguous = false);\n     ~QShortcutEvent();\n \n-    inline const QKeySequence &key() { return sequence; }\n     inline const QKeySequence &key() const { return sequence; }\n-    inline int shortcutId() { return sid; }\n     inline int shortcutId() const { return sid; }\n-    inline bool isAmbiguous() { return ambig; }\n     inline bool isAmbiguous() const { return ambig; }\n protected:\n     QKeySequence sequence;\n""}",deprecat,"refactor, deprecate 
",deprecat;
20668.0,20668.0,deprecat ,Niels Weber,small cleanup in debug output,"small cleanup in debug output

Change-Id: Ia74a334d5c08f9bf83ca20d003cf3b8a83e2776b",['tools/common/repositorygen.cpp'],"{""repositorygen.cpp"": ""@@ -282,8 +282,7 @@ void QInstallerTools::generateMetaDataDirectory(const QString &outDir, const QSt\n             }\n \n             for (QStringList::const_iterator ui = uis.begin(); ui != uis.end(); ++ui) {\n-                qDebug() << \""\\tCopying associated user interface \"" << *ui << \"" into the meta \""\n-                    \""package...\"";\n+                qDebug() << \""\\tCopying associated user interface\"" << *ui << \""into the meta package...\"";\n                 userinterfaces.push_back(*ui);\n                 if (!QFile::copy(QString::fromLatin1(\""%1/meta/%2\"").arg(it->directory, *ui),\n                     QString::fromLatin1(\""%1/%2/%3\"").arg(metapath, it->name, *ui))) {\n@@ -318,8 +317,7 @@ void QInstallerTools::generateMetaDataDirectory(const QString &outDir, const QSt\n                 }\n \n                 for (QStringList::const_iterator qm = qms.begin(); qm != qms.end(); ++qm) {\n-                    qDebug() << \""\\tCopying associated translation \"" << *qm << \"" into the meta \""\n-                        \""package...\"";\n+                    qDebug() << \""\\tCopying associated translation\"" << *qm << \""into the meta package...\"";\n                     translations.push_back(*qm);\n                     if (!QFile::copy(QString::fromLatin1(\""%1/meta/%2\"").arg(it->directory, *qm),\n                         QString::fromLatin1(\""%1/%2/%3\"").arg(metapath, it->name, *qm))) {\n@@ -353,8 +351,7 @@ void QInstallerTools::generateMetaDataDirectory(const QString &outDir, const QSt\n                         \""copying license files of %2.\"").arg(licenseFile, it->name));\n                 }\n \n-                qDebug() << \""\\tCopying associated license file \"" << licenseFile << \"" into \""\n-                    \""the meta package...\"";\n+                qDebug() << \""\\tCopying associated license file\"" << licenseFile << \""into the meta package...\"";\n                 if (!QFile::copy(sourceFile, QString::fromLatin1(\""%1/%2/%3\"")\n                     .arg(metapath, it->name, licenseFile))) {\n                         qDebug() << \""failed!\"";\n""}",refactor,"bug, refactor 
",bug;
18791.0,18791.0,refactor,Fawzi Mohamed,zeroconf: fix registering of types (adding Qlist of ErrorMessages),"zeroconf: fix registering of types (adding Qlist of ErrorMessages)

Change-Id: I0017bec5adfb4aceb95871d018ca71083fac8f29",['src/libs/zeroconf/servicebrowser.cpp'],"{""servicebrowser.cpp"": ""@@ -146,9 +146,10 @@ ZeroConfLib::ZeroConfLib(): m_lock(QMutex::Recursive),\n                  ZConfLib::createDnsSdLib(QLatin1String(\""dns_sd\""),\n                  ZConfLib::createEmbeddedLib(QLatin1String(\""mdnssd\"")))))\n {\n-    qRegisterMetaType<Service::ConstPtr>(\""ZeroConf::Service::ConstPtr\"");\n-    qRegisterMetaType<ErrorMessage::SeverityLevel>(\""ZeroConf::ErrorMessage::SeverityLevel\"");\n-    qRegisterMetaType<ErrorMessage>(\""ZeroConf::ErrorMessage\"");\n+    qRegisterMetaType<ZeroConf::Service::ConstPtr>(\""ZeroConf::Service::ConstPtr\"");\n+    qRegisterMetaType<ZeroConf::ErrorMessage::SeverityLevel>(\""ZeroConf::ErrorMessage::SeverityLevel\"");\n+    qRegisterMetaType<ZeroConf::ErrorMessage>(\""ZeroConf::ErrorMessage\"");\n+    qRegisterMetaType<QList<ZeroConf::ErrorMessage> >(\""QList<ZeroConf::ErrorMessage>\"");\n }\n \n ZConfLib::Ptr ZeroConfLib::defaultLib(){\n""}",bug,"bug 
",bug;resource;
6179.0,6179.0,bug ,Fawzi Mohamed,gdb: workaround to lookup anonymous namespaces,"gdb: workaround to lookup anonymous namespaces

work around for http://sourceware.org/bugzilla/show_bug.cgi?id=13269

Change-Id: Ibfaf409d48146bbed09c0e563c140a1b7a712d4f
Reviewed-by: hjk <qthjk@ovi.com>",['share/qtcreator/dumper/dumper.py'],"{""dumper.py"": ""@@ -147,6 +147,11 @@ def lookupType(typestring):\n         type = gdb.lookup_type(ts)\n     except RuntimeError, error:\n         #warn(\""LOOKING UP '%s': %s\"" % (ts, error))\n+        if type is None:\n+            pos = typestring.find(\""<unnamed>\"")\n+            if pos != -1:\n+                # See http://sourceware.org/bugzilla/show_bug.cgi?id=13269\n+                return lookupType(typestring.replace(\""<unnamed>\"", \""(anonymous namespace)\""))\n         # See http://sourceware.org/bugzilla/show_bug.cgi?id=11912\n         exp = \""(class '%s'*)0\"" % ts\n         try:\n""}",bug,"bug 
",bug;
14745.0,14745.0,bug,Daniel Teske,"Remove class SessionNodeImpl, just use SessionNode directly","Remove class SessionNodeImpl, just use SessionNode directly

The class added nothing over SessionNode.

Change-Id: I137c274514b2c5897a591b7e093ba84e1a91e9d7","['src/plugins/projectexplorer/projectnodes.h', 'src/plugins/projectexplorer/projectexplorer.pro', 'src/plugins/projectexplorer/session.cpp', 'src/plugins/projectexplorer/projectnodes.cpp', 'src/plugins/projectexplorer/sessionnodeimpl.cpp', 'src/plugins/projectexplorer/sessionnodeimpl.h', 'src/plugins/projectexplorer/session.h']","{""projectexplorer.pro"": ""@@ -94,7 +94,6 @@ HEADERS += projectexplorer.h \\\n     taskhub.h \\\n     localapplicationruncontrol.h \\\n     customexecutableconfigurationwidget.h \\\n-    sessionnodeimpl.h \\\n     metatypedeclarations.h \\\n     publishing/publishingwizardselectiondialog.h \\\n     publishing/ipublishingwizardfactory.h \\\n@@ -185,7 +184,6 @@ SOURCES += projectexplorer.cpp \\\n     processparameters.cpp \\\n     localapplicationruncontrol.cpp \\\n     customexecutableconfigurationwidget.cpp \\\n-    sessionnodeimpl.cpp \\\n     publishing/publishingwizardselectiondialog.cpp \\\n     appoutputpane.cpp \\\n     codestylesettingspropertiespage.cpp \\\n"", ""projectnodes.cpp"": ""@@ -595,8 +595,8 @@ bool ProjectNode::sortNodesByPath(Node *n1, Node *n2) {\n   \\class ProjectExplorer::SessionNode\n */\n \n-SessionNode::SessionNode(const QString &sessionPath, QObject *parentObject)\n-        : FolderNode(sessionPath)\n+SessionNode::SessionNode(QObject *parentObject)\n+    : FolderNode(QLatin1String(\""session\""))\n {\n     setParent(parentObject);\n     setNodeType(SessionNodeType);\n"", ""projectnodes.h"": ""@@ -77,6 +77,7 @@ class FolderNode;\n class ProjectNode;\n class NodesWatcher;\n class NodesVisitor;\n+class SessionManager;\n \n // Documentation inside.\n class PROJECTEXPLORER_EXPORT Node : public QObject {\n@@ -245,8 +246,9 @@ private:\n // Documentation inside.\n class PROJECTEXPLORER_EXPORT SessionNode : public FolderNode {\n     Q_OBJECT\n+    friend class SessionManager;\n public:\n-    SessionNode(const QString &sessionFilePath, QObject *parentObject);\n+    SessionNode(QObject *parentObject);\n \n     QList<ProjectNode*> projectNodes() const;\n \n"", ""session.cpp"": ""@@ -31,13 +31,13 @@\n **************************************************************************/\n \n #include \""session.h\""\n-#include \""sessionnodeimpl.h\""\n \n #include \""project.h\""\n #include \""projectexplorer.h\""\n #include \""projectexplorerconstants.h\""\n #include \""nodesvisitor.h\""\n #include \""editorconfiguration.h\""\n+#include \""projectnodes.h\""\n \n #include <coreplugin/icore.h>\n #include <coreplugin/imode.h>\n@@ -323,7 +323,7 @@ void SessionFile::clearFailedProjectFileNames()\n SessionManager::SessionManager(QObject *parent)\n   : QObject(parent),\n     m_file(new SessionFile),\n-    m_sessionNode(new Internal::SessionNodeImpl(this)),\n+    m_sessionNode(new SessionNode(this)),\n     m_virginSession(true)\n {\n     connect(ModeManager::instance(), SIGNAL(currentModeChanged(Core::IMode*)),\n@@ -502,7 +502,7 @@ void SessionManager::addProjects(const QList<Project*> &projects)\n         if (!m_file->m_projects.contains(pro)) {\n             clearedList.append(pro);\n             m_file->m_projects.append(pro);\n-            m_sessionNode->addProjectNode(pro->rootProjectNode());\n+            m_sessionNode->addProjectNodes(QList<ProjectNode *>() << pro->rootProjectNode());\n \n             connect(pro, SIGNAL(fileListChanged()),\n                     this, SLOT(clearProjectFileCache()));\n@@ -923,7 +923,7 @@ void SessionManager::removeProjects(QList<Project *> remove)\n \n         if (debug)\n             qDebug() << \""SessionManager - emitting projectRemoved(\"" << pro->displayName() << \"")\"";\n-        m_sessionNode->removeProjectNode(pro->rootProjectNode());\n+        m_sessionNode->removeProjectNode(QList<ProjectNode *>() << pro->rootProjectNode());\n         emit projectRemoved(pro);\n         delete pro;\n     }\n"", ""session.h"": ""@@ -163,7 +163,7 @@ private:\n     void updateName(const QString &session);\n \n     Internal::SessionFile *m_file;\n-    Internal::SessionNodeImpl *m_sessionNode;\n+    SessionNode *m_sessionNode;\n     QString m_sessionName;\n     bool m_virginSession;\n \n"", ""sessionnodeimpl.cpp"": ""@@ -1,64 +0,0 @@\n-/**************************************************************************\n-**\n-** This file is part of Qt Creator\n-**\n-** Copyright (c) 2012 Nokia Corporation and/or its subsidiary(-ies).\n-**\n-** Contact: Nokia Corporation (qt-info@nokia.com)\n-**\n-**\n-** GNU Lesser General Public License Usage\n-**\n-** This file may be used under the terms of the GNU Lesser General Public\n-** License version 2.1 as published by the Free Software Foundation and\n-** appearing in the file LICENSE.LGPL included in the packaging of this file.\n-** Please review the following information to ensure the GNU Lesser General\n-** Public License version 2.1 requirements will be met:\n-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n-**\n-** In addition, as a special exception, Nokia gives you certain additional\n-** rights. These rights are described in the Nokia Qt LGPL Exception\n-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n-**\n-** Other Usage\n-**\n-** Alternatively, this file may be used in accordance with the terms and\n-** conditions contained in a signed written agreement between you and Nokia.\n-**\n-** If you have questions regarding the use of this file, please contact\n-** Nokia at qt-info@nokia.com.\n-**\n-**************************************************************************/\n-\n-#include \""sessionnodeimpl.h\""\n-#include \""session.h\""\n-\n-namespace ProjectExplorer {\n-namespace Internal {\n-\n-SessionNodeImpl::SessionNodeImpl(SessionManager *manager)\n-        : ProjectExplorer::SessionNode(\n-              manager->sessionNameToFileName(manager->currentSession()),\n-              manager)\n-{\n-    setFileName(QLatin1String(\""session\""));\n-}\n-\n-void SessionNodeImpl::addProjectNode(ProjectNode *projectNode)\n-{\n-    addProjectNodes(QList<ProjectNode*>() << projectNode);\n-}\n-\n-void SessionNodeImpl::removeProjectNode(ProjectNode *projectNode)\n-{\n-    removeProjectNodes(QList<ProjectNode*>() << projectNode);\n-}\n-\n-void SessionNodeImpl::setFileName(const QString &fileName)\n-{\n-    setPath(fileName);\n-    setDisplayName(fileName);\n-}\n-\n-} // namespace Internal\n-} // namespace ProjectExplorer\n"", ""sessionnodeimpl.h"": ""@@ -1,60 +0,0 @@\n-/**************************************************************************\n-**\n-** This file is part of Qt Creator\n-**\n-** Copyright (c) 2012 Nokia Corporation and/or its subsidiary(-ies).\n-**\n-** Contact: Nokia Corporation (qt-info@nokia.com)\n-**\n-**\n-** GNU Lesser General Public License Usage\n-**\n-** This file may be used under the terms of the GNU Lesser General Public\n-** License version 2.1 as published by the Free Software Foundation and\n-** appearing in the file LICENSE.LGPL included in the packaging of this file.\n-** Please review the following information to ensure the GNU Lesser General\n-** Public License version 2.1 requirements will be met:\n-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n-**\n-** In addition, as a special exception, Nokia gives you certain additional\n-** rights. These rights are described in the Nokia Qt LGPL Exception\n-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n-**\n-** Other Usage\n-**\n-** Alternatively, this file may be used in accordance with the terms and\n-** conditions contained in a signed written agreement between you and Nokia.\n-**\n-** If you have questions regarding the use of this file, please contact\n-** Nokia at qt-info@nokia.com.\n-**\n-**************************************************************************/\n-\n-#ifndef SESSIONNODEIMPL_H\n-#define SESSIONNODEIMPL_H\n-\n-#include \""projectnodes.h\""\n-\n-namespace ProjectExplorer {\n-class SessionManager;\n-\n-namespace Internal {\n-\n-// Must be in a header as otherwise moc has issues\n-// with ProjectExplorer::SessionNode on msvc2005\n-class SessionNodeImpl : public ProjectExplorer::SessionNode\n-{\n-    Q_OBJECT\n-public:\n-    explicit SessionNodeImpl(SessionManager *manager);\n-\n-    void addProjectNode(ProjectNode *projectNode);\n-    void removeProjectNode(ProjectNode *projectNode);\n-\n-    void setFileName(const QString &fileName);\n-};\n-\n-} // namespace Internal\n-} // namespace ProjectExplorer\n-\n-#endif // SESSIONNODEIMPL_H\n""}",deprecat,"refactor 
",deprecat;
15510.0,15510.0,deprecat ,Daniel Teske,SesssionManger: Remove unused #include <QPointer>,"SesssionManger: Remove unused #include <QPointer>

Change-Id: I7a6b19838761bffdd38abd988efa8f1af8f2cb4b",['src/plugins/projectexplorer/session.h'],"{""session.h"": ""@@ -39,7 +39,6 @@\n #include <QtCore/QString>\n #include <QtCore/QStringList>\n #include <QtCore/QMap>\n-#include <QtCore/QPointer>\n \n QT_BEGIN_NAMESPACE\n class QAbstractItemModel;\n""}",deprecat,"refactor 
",deprecat;
26152.0,26152.0,deprecat ,Kai Köhne,Debugger: Remove actions from object pool,"Debugger: Remove actions from object pool

The actions were added to the object pool so that QmlJsInspector
plugin can access them. This is obsolete now.

Change-Id: I7c33428b834c372fab354b39ffeb6c8d181c162a","['src/plugins/debugger/debuggeractions.cpp', 'src/plugins/debugger/debuggerconstants.h']","{""debuggeractions.cpp"": ""@@ -41,8 +41,6 @@\n #include <utils/qtcassert.h>\n #include <utils/pathchooser.h>\n \n-#include <extensionsystem/pluginmanager.h>\n-\n #include <QDebug>\n #include <QVariant>\n #include <QSettings>\n@@ -102,13 +100,9 @@ DebuggerSettings::DebuggerSettings(QSettings *settings)\n \n     SavedAction *item = 0;\n \n-    //The Actions that are accessed by QML Inspector are added to PluginManager\n-    //Needed by QML Inspector\n     item = new SavedAction(this);\n     insertItem(SettingsDialog, item);\n     item->setText(tr(\""Debugger Properties...\""));\n-    item->setObjectName(QLatin1String(Constants::SETTINGS_DIALOG));\n-    ExtensionSystem::PluginManager::instance()->addObject(item);\n \n     //\n     // View\n@@ -183,8 +177,6 @@ DebuggerSettings::DebuggerSettings(QSettings *settings)\n     item->setCheckable(true);\n     item->setDefaultValue(false);\n     insertItem(UseAlternatingRowColors, item);\n-    item->setObjectName(QLatin1String(Constants::USE_ALTERNATING_ROW_COLORS));\n-    ExtensionSystem::PluginManager::instance()->addObject(item);\n \n     item = new SavedAction(this);\n     item->setText(tr(\""Debugger Font Size Follows Main Editor\""));\n@@ -257,7 +249,6 @@ DebuggerSettings::DebuggerSettings(QSettings *settings)\n     item->setValue(true);\n     insertItem(ShowQtNamespace, item);\n \n-    //Needed by QML Inspector\n     item = new SavedAction(this);\n     item->setSettingsKey(debugModeGroup, QLatin1String(\""SortStructMembers\""));\n     item->setText(tr(\""Sort Members of Classes and Structs Alphabetically\""));\n@@ -265,8 +256,6 @@ DebuggerSettings::DebuggerSettings(QSettings *settings)\n     item->setDefaultValue(true);\n     item->setValue(true);\n     insertItem(SortStructMembers, item);\n-    item->setObjectName(QLatin1String(Constants::SORT_STRUCT_MEMBERS));\n-    ExtensionSystem::PluginManager::instance()->addObject(item);\n \n     //\n     // DebuggingHelper\n@@ -577,18 +566,6 @@ DebuggerSettings::DebuggerSettings(QSettings *settings)\n \n DebuggerSettings::~DebuggerSettings()\n {\n-    ExtensionSystem::PluginManager *pluginManager =\n-        ExtensionSystem::PluginManager::instance();\n-    QObject *o = pluginManager->getObjectByName(Constants::SETTINGS_DIALOG);\n-    if (o)\n-        pluginManager->removeObject(o);\n-    o = pluginManager->getObjectByName(Constants::USE_ALTERNATING_ROW_COLORS);\n-    if (o)\n-        pluginManager->removeObject(o);\n-    o = pluginManager->getObjectByName(Constants::SORT_STRUCT_MEMBERS);\n-    if (o)\n-        pluginManager->removeObject(o);\n-\n     qDeleteAll(m_items);\n }\n \n"", ""debuggerconstants.h"": ""@@ -80,12 +80,6 @@ const char DOCKWIDGET_WATCHERS[]     = \""Debugger.Docks.LocalsAndWatchers\"";\n const char DOCKWIDGET_QML_INSPECTOR[]     = \""Debugger.Docks.QmlInspector\"";\n const char DOCKWIDGET_QML_SCRIPTCONSOLE[] = \""Debugger.Docks.ScriptConsole\"";\n const char DOCKWIDGET_DEFAULT_AREA[]      = \""Debugger.Docks.DefaultArea\"";\n-\n-// Saved Actions\n-const char SETTINGS_DIALOG[]            = \""SettingsDialog\"";\n-const char USE_ALTERNATING_ROW_COLORS[] = \""UseAlternatingRowColors\"";\n-const char SORT_STRUCT_MEMBERS[]        = \""SortStructMembers\"";\n-\n } // namespace Constants\n \n enum DebuggerState\n""}",deprecat,"bug, refactor 
",bug;deprecat;
16556.0,16556.0,deprecat,"NOT IN USE, DO NOT ADD (was Bradley T. Hughes)",Expect failure in tst_QStyleSheetStyle::hoverColors(),"Expect failure in tst_QStyleSheetStyle::hoverColors()

This is similar to the focusColors() failures in QTBUG-23686.

Task-number: QTBUG-23686
Change-Id: I1f01a4e41e61a7a664309be34cfa4fe916a92b15",['tests/auto/widgets/styles/qstylesheetstyle/tst_qstylesheetstyle.cpp'],"{""tst_qstylesheetstyle.cpp"": ""@@ -881,6 +881,11 @@ void tst_QStyleSheetStyle::hoverColors()\n         QVERIFY2(testForColors(image, QColor(0xe8, 0xff, 0x66)),\n                  (QString::fromLatin1(widget->metaObject()->className())\n                  + \"" did not contain background color #e8ff66\"").toLocal8Bit().constData());\n+#ifdef Q_OS_MAC\n+        if (qobject_cast<QPushButton *>(widget)\n+            || qobject_cast<QComboBox *>(widget))\n+            QEXPECT_FAIL(\""\"", \""Failure only for QPushButton and QComboBox, see QTBUG-23686\"", Continue);\n+#endif\n         QVERIFY2(testForColors(image, QColor(0xff, 0x00, 0x84)),\n                 (QString::fromLatin1(widget->metaObject()->className())\n                 + \"" did not contain text color #ff0084\"").toLocal8Bit().constData());\n""}",test,"test, bug 
",bug;refactor;
8114.0,8114.0,test,Robert Löhning,Typo fixes,"Typo fix

Change-Id: Id73f96267e34e7c85ee74dd8264c6c350e095ce9",['src/plugins/git/gitplugin.cpp'],"{""gitplugin.cpp"": ""@@ -412,7 +412,7 @@ bool GitPlugin::initialize(const QStringList &arguments, QString *errorMessage)\n                            globalcontext, true, &GitClient::status);\n \n     createRepositoryAction(actionManager, gitContainer,\n-                           tr(\""Undo Uncommited Changes...\""), QLatin1String(\""Git.UndoRepository\""),\n+                           tr(\""Undo Uncommitted Changes...\""), QLatin1String(\""Git.UndoRepository\""),\n                            globalcontext, false, SLOT(undoRepositoryChanges()));\n \n \n""}",resource,"bug 
",bug;
19608.0,19608.0,resource,Oswald Buddenhagen,introduce ability to build projects for the host system,"introduce ability to build projects for the host system

when qmake runs into the new option(host_build) command, it will restart
the project evaluation with a host spec.

the new default host spec is called default-host (gasp!). it is
overridden with the pre-exising -spec / -platform option, while the new
-xspec / -xplatform option overrides the pre-existing default spec.
specifying -spec but not -xspec will set the xspec, too, so the behavior
is backwards-compatible. same for the XQMAKESPEC override read from
.qmake.cache.
the cleaner solution would be adding -hostspec, to be symmetrical with
the override semantics, but that would deviate from configure in turn.

Change-Id: I4297c873780af16ab7928421b434ce0f1d3820da","['qmake/generators/makefile.cpp', 'qmake/option.h', 'qmake/generators/win32/msvc_vcproj.cpp', 'qmake/option.cpp', 'tools/configure/configureapp.cpp', 'configure', 'qmake/project.cpp', 'qmake/project.h', 'qmake/generators/makefile.h']","{""configure"": ""@@ -3931,8 +3931,9 @@ if true; then ###[ '!' -f \""$outpath/bin/qmake\"" ];\n     mv -f \""$QMAKE_QCONFIG_H\"" \""$QCONFIG_H\""\n \n     #mkspecs/default is used as a (gasp!) default mkspec so QMAKESPEC needn't be set once configured\n-    rm -rf mkspecs/default\n+    rm -rf mkspecs/default mkspecs/default-host\n     ln -s `echo $XQMAKESPEC | sed \""s,^${relpath}/mkspecs/,,\""` mkspecs/default\n+    ln -s `echo $QMAKESPEC | sed \""s,^${relpath}/mkspecs/,,\""` mkspecs/default-host\n     mkdir -p \""$outpath/qmake\"" || exit\n     # fix makefiles\n     for mkfile in GNUmakefile Makefile; do\n"", ""makefile.cpp"": ""@@ -2193,7 +2193,9 @@ QString MakefileGenerator::buildArgs(const QString &outdir)\n     if(!Option::mkfile::do_dep_heuristics)\n         ret += \"" -nodependheuristics\"";\n     if(!Option::mkfile::qmakespec_commandline.isEmpty())\n-        ret += \"" -spec \"" + specdir(outdir);\n+        ret += \"" -spec \"" + specdir(outdir, 1);\n+    if (!Option::mkfile::xqmakespec_commandline.isEmpty())\n+        ret += \"" -xspec \"" + specdir(outdir, 0);\n     if (Option::target_mode_overridden) {\n         if (Option::target_mode == Option::TARG_MACX_MODE)\n             ret += \"" -macx\"";\n@@ -3046,13 +3048,14 @@ QStringList\n }\n \n QString\n-MakefileGenerator::specdir(const QString &outdir)\n+MakefileGenerator::specdir(const QString &outdir, int host_build)\n {\n #if 0\n     if(!spec.isEmpty())\n         return spec;\n #endif\n-    spec = fileFixify(Option::mkfile::qmakespec, outdir);\n+    spec = fileFixify((host_build >= 0 ? bool(host_build) : project->isHostBuild())\n+                      ? Option::mkfile::qmakespec : Option::mkfile::xqmakespec, outdir);\n     return spec;\n }\n \n"", ""makefile.h"": ""@@ -187,7 +187,7 @@ protected:\n \n     //subclasses can use these to query information about how the generator was \""run\""\n     QString buildArgs(const QString &outdir=QString());\n-    QString specdir(const QString &outdir=QString());\n+    QString specdir(const QString &outdir = QString(), int host_build = -1);\n \n     virtual QStringList &findDependencies(const QString &file);\n     virtual bool doDepends() const { return Option::mkfile::do_deps; }\n"", ""msvc_vcproj.cpp"": ""@@ -644,12 +644,15 @@ nextfile:\n     t << _slnProjConfBeg;\n     for(QList<VcsolutionDepend*>::Iterator it = solution_cleanup.begin(); it != solution_cleanup.end(); ++it) {\n         QString platform = is64Bit ? \""x64\"" : \""Win32\"";\n+        QString xplatform = platform;\n         if (!project->isEmpty(\""CE_SDK\"") && !project->isEmpty(\""CE_ARCH\""))\n-            platform = project->values(\""CE_SDK\"").join(\"" \"") + \"" (\"" + project->first(\""CE_ARCH\"") + \"")\"";\n-        t << \""\\n\\t\\t\"" << (*it)->uuid << QString(_slnProjDbgConfTag1).arg(platform) << platform;\n-        t << \""\\n\\t\\t\"" << (*it)->uuid << QString(_slnProjDbgConfTag2).arg(platform) << platform;\n-        t << \""\\n\\t\\t\"" << (*it)->uuid << QString(_slnProjRelConfTag1).arg(platform) << platform;\n-        t << \""\\n\\t\\t\"" << (*it)->uuid << QString(_slnProjRelConfTag2).arg(platform) << platform;\n+            xplatform = project->values(\""CE_SDK\"").join(\"" \"") + \"" (\"" + project->first(\""CE_ARCH\"") + \"")\"";\n+        if (!project->isHostBuild())\n+            platform = xplatform;\n+        t << \""\\n\\t\\t\"" << (*it)->uuid << QString(_slnProjDbgConfTag1).arg(xplatform) << platform;\n+        t << \""\\n\\t\\t\"" << (*it)->uuid << QString(_slnProjDbgConfTag2).arg(xplatform) << platform;\n+        t << \""\\n\\t\\t\"" << (*it)->uuid << QString(_slnProjRelConfTag1).arg(xplatform) << platform;\n+        t << \""\\n\\t\\t\"" << (*it)->uuid << QString(_slnProjRelConfTag2).arg(xplatform) << platform;\n     }\n     t << _slnProjConfEnd;\n     t << _slnExtSections;\n@@ -853,7 +856,7 @@ void VcprojGenerator::initProject()\n     }\n \n     vcProject.Keyword = project->first(\""VCPROJ_KEYWORD\"");\n-    if (project->isEmpty(\""CE_SDK\"") || project->isEmpty(\""CE_ARCH\"")) {\n+    if (project->isHostBuild() || project->isEmpty(\""CE_SDK\"") || project->isEmpty(\""CE_ARCH\"")) {\n         vcProject.PlatformName = (is64Bit ? \""x64\"" : \""Win32\"");\n     } else {\n         vcProject.PlatformName = project->values(\""CE_SDK\"").join(\"" \"") + \"" (\"" + project->first(\""CE_ARCH\"") + \"")\"";\n@@ -917,7 +920,7 @@ void VcprojGenerator::initConfiguration()\n     if (conf.Name.isEmpty())\n         conf.Name = isDebug ? \""Debug\"" : \""Release\"";\n     conf.ConfigurationName = conf.Name;\n-    if (project->isEmpty(\""CE_SDK\"") || project->isEmpty(\""CE_ARCH\"")) {\n+    if (project->isHostBuild() || project->isEmpty(\""CE_SDK\"") || project->isEmpty(\""CE_ARCH\"")) {\n         conf.Name += (is64Bit ? \""|x64\"" : \""|Win32\"");\n     } else {\n         conf.Name += \""|\"" + project->values(\""CE_SDK\"").join(\"" \"") + \"" (\"" + project->first(\""CE_ARCH\"") + \"")\"";\n@@ -943,7 +946,7 @@ void VcprojGenerator::initConfiguration()\n     initPreBuildEventTools();\n     initPostBuildEventTools();\n     // Only deploy for CE projects\n-    if (!project->isEmpty(\""CE_SDK\"") && !project->isEmpty(\""CE_ARCH\""))\n+    if (!project->isHostBuild() && !project->isEmpty(\""CE_SDK\"") && !project->isEmpty(\""CE_ARCH\""))\n         initDeploymentTool();\n     initPreLinkEventTools();\n \n@@ -1079,7 +1082,7 @@ void VcprojGenerator::initPostBuildEventTools()\n \n     QString signature = !project->isEmpty(\""SIGNATURE_FILE\"") ? var(\""SIGNATURE_FILE\"") : var(\""DEFAULT_SIGNATURE\"");\n     bool useSignature = !signature.isEmpty() && !project->isActiveConfig(\""staticlib\"") &&\n-                        !project->isEmpty(\""CE_SDK\"") && !project->isEmpty(\""CE_ARCH\"");\n+                        !project->isHostBuild() && !project->isEmpty(\""CE_SDK\"") && !project->isEmpty(\""CE_ARCH\"");\n     if (useSignature) {\n         conf.postBuild.CommandLine.prepend(\n                 QLatin1String(\""signtool sign /F \"") + signature + QLatin1String(\"" \\\""$(TargetPath)\\\""\""));\n@@ -1573,7 +1576,8 @@ QString VcprojGenerator::findTemplate(QString file)\n {\n     QString ret;\n     if(!exists((ret = file)) &&\n-       !exists((ret = QString(Option::mkfile::qmakespec + \""/\"" + file))) &&\n+       !exists((ret = QString((project->isHostBuild()\n+                               ? Option::mkfile::qmakespec : Option::mkfile::xqmakespec) + '/' + file))) &&\n        !exists((ret = QString(QLibraryInfo::location(QLibraryInfo::HostDataPath) + \""/win32-msvc.net/\"" + file))) &&\n        !exists((ret = QString(QLibraryInfo::location(QLibraryInfo::HostDataPath) + \""/win32-msvc2002/\"" + file))) &&\n        !exists((ret = QString(QLibraryInfo::location(QLibraryInfo::HostDataPath) + \""/win32-msvc2003/\"" + file))) &&\n"", ""option.cpp"": ""@@ -107,6 +107,7 @@ QStringList Option::projfile::project_dirs;\n \n //QMAKE_GENERATE_MAKEFILE stuff\n QString Option::mkfile::qmakespec;\n+QString Option::mkfile::xqmakespec;\n int Option::mkfile::cachefile_depth = -1;\n bool Option::mkfile::do_deps = true;\n bool Option::mkfile::do_mocs = true;\n@@ -119,6 +120,7 @@ QString Option::mkfile::project_build_root;\n QString Option::mkfile::cachefile;\n QStringList Option::mkfile::project_files;\n QString Option::mkfile::qmakespec_commandline;\n+QString Option::mkfile::xqmakespec_commandline;\n \n static Option::QMAKE_MODE default_mode(QString progname)\n {\n@@ -329,6 +331,9 @@ Option::parseCommandLine(int argc, char **argv, int skip)\n                     } else if(opt == \""platform\"" || opt == \""spec\"") {\n                         Option::mkfile::qmakespec = cleanSpec(argv[++x]);\n                         Option::mkfile::qmakespec_commandline = argv[x];\n+                    } else if (opt == \""xplatform\"" || opt == \""xspec\"") {\n+                        Option::mkfile::xqmakespec = cleanSpec(argv[++x]);\n+                        Option::mkfile::xqmakespec_commandline = argv[x];\n                     } else {\n                         fprintf(stderr, \""***Unknown option -%s\\n\"", opt.toLatin1().constData());\n                         return Option::QMAKE_CMDLINE_SHOW_USAGE | Option::QMAKE_CMDLINE_ERROR;\n@@ -540,6 +545,8 @@ Option::init(int argc, char **argv)\n         Option::qmake_mode == Option::QMAKE_GENERATE_PRL) {\n         if(Option::mkfile::qmakespec.isNull() || Option::mkfile::qmakespec.isEmpty())\n             Option::mkfile::qmakespec = QString::fromLocal8Bit(qgetenv(\""QMAKESPEC\"").constData());\n+        if (Option::mkfile::xqmakespec.isEmpty())\n+            Option::mkfile::xqmakespec = Option::mkfile::qmakespec;\n \n         //try REALLY hard to do it for them, lazy..\n         if(Option::mkfile::project_files.isEmpty()) {\n@@ -603,11 +610,11 @@ QStringList Option::mkspecPaths()\n     return ret;\n }\n \n-bool Option::resolveSpec(QString *spec)\n+bool Option::resolveSpec(QString *spec, const char *dflt)\n {\n     QString qmakespec = fixEnvVariables(*spec);\n     if (qmakespec.isEmpty())\n-        qmakespec = \""default\"";\n+        qmakespec = dflt;\n     if (QDir::isRelativePath(qmakespec)) {\n         QStringList mkspec_roots = mkspecPaths();\n         debug_msg(2, \""Looking for mkspec %s in (%s)\"", qmakespec.toLatin1().constData(),\n@@ -643,11 +650,17 @@ bool Option::prepareProject(const QString &pfile)\n             mkfile::project_build_root = QDir::cleanPath(fi.absolutePath());\n         }\n \n-        if (mkfile::qmakespec.isEmpty()) {\n+        if (mkfile::qmakespec.isEmpty() || mkfile::xqmakespec.isEmpty()) {\n             QMakeProject cproj;\n             if (!cproj.read(mkfile::cachefile, QMakeProject::ReadProFile))\n                 return false;\n-            mkfile::qmakespec = cproj.first(QLatin1String(\""QMAKESPEC\""));\n+            if (mkfile::xqmakespec.isEmpty())\n+                mkfile::xqmakespec = cproj.first(QLatin1String(\""XQMAKESPEC\""));\n+            if (mkfile::qmakespec.isEmpty()) {\n+                mkfile::qmakespec = cproj.first(QLatin1String(\""QMAKESPEC\""));\n+                if (mkfile::xqmakespec.isEmpty())\n+                    mkfile::xqmakespec = mkfile::qmakespec;\n+            }\n         }\n     }\n   no_cache:\n@@ -679,7 +692,8 @@ bool Option::prepareProject(const QString &pfile)\n         mkfile::project_root.clear();\n     }\n \n-    if (!resolveSpec(&Option::mkfile::qmakespec))\n+    if (!resolveSpec(&Option::mkfile::xqmakespec, \""default\"")\n+        || !resolveSpec(&Option::mkfile::qmakespec, \""default-host\""))\n         return false;\n \n     return true;\n"", ""option.h"": ""@@ -198,6 +198,7 @@ struct Option\n     //QMAKE_GENERATE_MAKEFILE options\n     struct mkfile {\n         static QString qmakespec;\n+        static QString xqmakespec;\n         static bool do_cache;\n         static bool do_deps;\n         static bool do_mocs;\n@@ -210,11 +211,12 @@ struct Option\n         static int cachefile_depth;\n         static QStringList project_files;\n         static QString qmakespec_commandline;\n+        static QString xqmakespec_commandline;\n     };\n \n private:\n     static int parseCommandLine(int, char **, int=0);\n-    static bool resolveSpec(QString *spec);\n+    static bool resolveSpec(QString *spec, const char *dflt);\n };\n \n inline QString fixEnvVariables(const QString &x) { return Option::fixString(x, Option::FixEnvVars); }\n"", ""project.cpp"": ""@@ -528,7 +528,7 @@ static void qmake_error_msg(const QString &msg)\n    1) features/(unix|win32|macx)/\n    2) features/\n */\n-QStringList qmake_feature_paths(QMakeProperty *prop=0)\n+QStringList qmake_feature_paths(QMakeProperty *prop = 0, bool host_build = false)\n {\n     const QString mkspecs_concat = QLatin1String(\""/mkspecs\"");\n     const QString base_concat = QLatin1String(\""/features\"");\n@@ -575,12 +575,13 @@ QStringList qmake_feature_paths(QMakeProperty *prop=0)\n                     feature_roots << ((*it) + mkspecs_concat + (*concat_it));\n         }\n     }\n-    if(!Option::mkfile::qmakespec.isEmpty()) {\n+    QString *specp = host_build ? &Option::mkfile::qmakespec : &Option::mkfile::xqmakespec;\n+    if (!specp->isEmpty()) {\n         // The spec is already platform-dependent, so no subdirs here.\n-        feature_roots << Option::mkfile::qmakespec + base_concat;\n+        feature_roots << *specp + base_concat;\n \n         // Also check directly under the root directory of the mkspecs collection\n-        QFileInfo specfi(Option::mkfile::qmakespec);\n+        QFileInfo specfi(*specp);\n         QDir specrootdir(specfi.absolutePath());\n         while (!specrootdir.isRoot()) {\n             const QString specrootpath = specrootdir.path();\n@@ -606,16 +607,7 @@ QMakeProject::~QMakeProject()\n {\n     if(own_prop)\n         delete prop;\n-    for(QHash<QString, FunctionBlock*>::iterator it = replaceFunctions.begin(); it != replaceFunctions.end(); ++it) {\n-        if(!it.value()->deref())\n-            delete it.value();\n-    }\n-    replaceFunctions.clear();\n-    for(QHash<QString, FunctionBlock*>::iterator it = testFunctions.begin(); it != testFunctions.end(); ++it) {\n-        if(!it.value()->deref())\n-            delete it.value();\n-    }\n-    testFunctions.clear();\n+    cleanup();\n }\n \n \n@@ -630,14 +622,29 @@ QMakeProject::init(QMakeProperty *p)\n         own_prop = false;\n     }\n     recursive = false;\n+    host_build = false;\n     reset();\n }\n \n+void\n+QMakeProject::cleanup()\n+{\n+    for (QHash<QString, FunctionBlock*>::iterator it = replaceFunctions.begin(); it != replaceFunctions.end(); ++it)\n+        if (!it.value()->deref())\n+            delete it.value();\n+    replaceFunctions.clear();\n+    for (QHash<QString, FunctionBlock*>::iterator it = testFunctions.begin(); it != testFunctions.end(); ++it)\n+        if (!it.value()->deref())\n+            delete it.value();\n+    testFunctions.clear();\n+}\n+\n // Duplicate project. It is *not* allowed to call the complex read() functions on the copy.\n QMakeProject::QMakeProject(QMakeProject *p, const QHash<QString, QStringList> *_vars)\n {\n     init(p->properties());\n     vars = _vars ? *_vars : p->variables();\n+    host_build = p->host_build;\n     for(QHash<QString, FunctionBlock*>::iterator it = p->replaceFunctions.begin(); it != p->replaceFunctions.end(); ++it) {\n         it.value()->ref();\n         replaceFunctions.insert(it.key(), it.value());\n@@ -657,6 +664,7 @@ QMakeProject::reset()\n     iterator = 0;\n     function = 0;\n     backslashWarned = false;\n+    need_restart = false;\n }\n \n bool\n@@ -1205,6 +1213,8 @@ QMakeProject::read(QTextStream &file, QHash<QString, QStringList> &place)\n                 }\n                 s = \""\"";\n                 numLines = 0;\n+                if (need_restart)\n+                    break;\n             }\n         }\n     }\n@@ -1244,7 +1254,7 @@ QMakeProject::read(const QString &file, QHash<QString, QStringList> &place)\n         if(!using_stdin)\n             qfile.close();\n     }\n-    if(scope_blocks.count() != 1) {\n+    if (!need_restart && scope_blocks.count() != 1) {\n         qmake_error_msg(\""Unterminated conditional block at end of file\"");\n         ret = false;\n     }\n@@ -1263,6 +1273,7 @@ QMakeProject::read(const QString &project, uchar cmd)\n bool\n QMakeProject::read(uchar cmd)\n {\n+  again:\n     if ((cmd & ReadSetup) && base_vars.isEmpty()) {\n         // hack to get the Option stuff in there\n         base_vars[\""QMAKE_EXT_CPP\""] = Option::cpp_ext;\n@@ -1278,7 +1289,7 @@ QMakeProject::read(uchar cmd)\n                         Option::output_dir.mid(Option::mkfile::project_build_root.length()).count('/');\n         }\n         {             // parse mkspec\n-            QString qmakespec = Option::mkfile::qmakespec;\n+            QString qmakespec = host_build ? Option::mkfile::qmakespec : Option::mkfile::xqmakespec;\n             while(qmakespec.endsWith(QLatin1Char('/')))\n                 qmakespec.truncate(qmakespec.length()-1);\n             QString spec = qmakespec + QLatin1String(\""/qmake.conf\"");\n@@ -1341,6 +1352,11 @@ QMakeProject::read(uchar cmd)\n             pfile += Option::pro_ext;\n         if(!read(pfile, vars))\n             return false;\n+        if (need_restart) {\n+            base_vars.clear();\n+            cleanup();\n+            goto again;\n+        }\n     }\n \n     if (cmd & ReadSetup) {\n@@ -1437,7 +1453,7 @@ QMakeProject::resolveSpec(QString *spec, const QString &qmakespec)\n {\n     if (spec->isEmpty()) {\n         *spec = QFileInfo(qmakespec).fileName();\n-        if (*spec == \""default\"") {\n+        if (*spec == \""default\"" || *spec == \""default-host\"") {\n #ifdef Q_OS_UNIX\n             char buffer[1024];\n             int l = readlink(qmakespec.toLatin1().constData(), buffer, 1023);\n@@ -1486,9 +1502,14 @@ QMakeProject::isActiveConfig(const QString &x, bool regex, QHash<QString, QStrin\n         return Option::target_mode == Option::TARG_WIN_MODE;\n     }\n \n+    if (x == \""host_build\"")\n+        return host_build ? \""true\"" : \""false\"";\n+\n     //mkspecs\n-    static QString spec;\n-    resolveSpec(&spec, Option::mkfile::qmakespec);\n+    static QString hspec, xspec;\n+    resolveSpec(&hspec, Option::mkfile::qmakespec);\n+    resolveSpec(&xspec, Option::mkfile::xqmakespec);\n+    const QString &spec = host_build ? hspec : xspec;\n     QRegExp re(x, Qt::CaseSensitive, QRegExp::Wildcard);\n     if((regex && re.exactMatch(spec)) || (!regex && spec == x))\n         return true;\n@@ -1546,7 +1567,8 @@ QMakeProject::doProjectInclude(QString file, uchar flags, QHash<QString, QString\n             file += Option::prf_ext;\n         validateModes(); // init dir_sep\n         if(file.indexOf(QLatin1Char('/')) == -1 || !QFile::exists(file)) {\n-            static QStringList *feature_roots = 0;\n+            static QStringList *all_feature_roots[2] = { 0, 0 };\n+            QStringList *&feature_roots = all_feature_roots[host_build];\n             if(!feature_roots) {\n                 feature_roots = new QStringList(qmake_feature_paths(prop));\n                 qmakeAddCacheClear(qmakeDeleteCacheClear<QStringList>, (void**)&feature_roots);\n@@ -2640,6 +2662,11 @@ QMakeProject::doProjectTest(QString func, QList<QStringList> args_list, QHash<QS\n         }\n         if (args.first() == \""recursive\"") {\n             recursive = true;\n+        } else if (args.first() == \""host_build\"") {\n+            if (!host_build && isActiveConfig(\""cross_compile\"")) {\n+                host_build = true;\n+                need_restart = true;\n+            }\n         } else {\n             fprintf(stderr, \""%s:%d: unrecognized option() argument '%s'.\\n\"",\n                     parser.file.toLatin1().constData(), parser.line_no,\n"", ""project.h"": ""@@ -79,6 +79,8 @@ class QMakeProject\n     QHash<QString, FunctionBlock*> testFunctions, replaceFunctions;\n \n     bool recursive;\n+    bool host_build;\n+    bool need_restart;\n     bool own_prop;\n     bool backslashWarned;\n     QString pfile;\n@@ -107,6 +109,7 @@ class QMakeProject\n     bool doVariableReplace(QString &str, QHash<QString, QStringList> &place);\n     QStringList doVariableReplaceExpand(const QString &str, QHash<QString, QStringList> &place, bool *ok=0);\n     void init(QMakeProperty *);\n+    void cleanup();\n     QStringList &values(const QString &v, QHash<QString, QStringList> &place);\n     void validateModes();\n     void resolveSpec(QString *spec, const QString &qmakespec);\n@@ -159,6 +162,7 @@ public:\n     QHash<QString, QStringList> &variables(); // No compat mapping and magic, obviously\n \n     bool isRecursive() const { return recursive; }\n+    bool isHostBuild() const { return host_build; }\n \n protected:\n     friend class MakefileGenerator;\n"", ""configureapp.cpp"": ""@@ -2840,7 +2840,8 @@ void Configure::generateConfigfiles()\n     }\n \n     QString spec = dictionary.contains(\""XQMAKESPEC\"") ? dictionary[\""XQMAKESPEC\""] : dictionary[\""QMAKESPEC\""];\n-    if (!copySpec(\""default\"", \""\"", spec))\n+    if (!copySpec(\""default\"", \""\"", spec)\n+        || !copySpec(\""default-host\"", \""host \"", dictionary[\""QMAKESPEC\""]))\n         return;\n \n     // Generate the new qconfig.cpp file\n""}",reource,"feature 
",resource;
7298.0,7298.0,reource,Daniel Teske,Improve messages of buildmanager to say build/deploy,"Improve messages of buildmanager to say build/deploy

As the buildmanager also deploys

Task-number: QTCREATORBUG-6374
Change-Id: I55e2a29b0b6e0942637c6da5eb8087d8903b6899",['src/plugins/projectexplorer/buildmanager.cpp'],"{""buildmanager.cpp"": ""@@ -64,7 +64,7 @@\n \n static inline QString msgProgress(int progress, int total)\n {\n-    return ProjectExplorer::BuildManager::tr(\""Finished %1 of %n build steps\"", 0, total).arg(progress);\n+    return ProjectExplorer::BuildManager::tr(\""Finished %1 of %n steps\"", 0, total).arg(progress);\n }\n \n namespace ProjectExplorer {\n@@ -156,9 +156,9 @@ BuildManager::BuildManager(ProjectExplorerPlugin *parent)\n void BuildManager::extensionsInitialized()\n {\n     d->m_taskHub->addCategory(Constants::TASK_CATEGORY_COMPILE,\n-        tr(\""Compile\"", \""Category for compiler isses listened under 'Build Issues'\""));\n+        tr(\""Compile\"", \""Category for compiler isses listened under 'Issues'\""));\n     d->m_taskHub->addCategory(Constants::TASK_CATEGORY_BUILDSYSTEM,\n-        tr(\""Build System\"", \""Category for build system isses listened under 'Build Issues'\""));\n+        tr(\""Build System\"", \""Category for build system isses listened under 'Issues'\""));\n }\n \n BuildManager::~BuildManager()\n@@ -222,7 +222,7 @@ void BuildManager::cancel()\n         disconnectOutput(d->m_currentBuildStep);\n         decrementActiveBuildSteps(d->m_currentBuildStep->project());\n \n-        d->m_progressFutureInterface->setProgressValueAndText(d->m_progress*100, tr(\""Build canceled\"")); //TODO NBS fix in qtconcurrent\n+        d->m_progressFutureInterface->setProgressValueAndText(d->m_progress*100, tr(\""Build/Deployment canceled\"")); //TODO NBS fix in qtconcurrent\n         clearBuildQueue();\n     }\n     return;\n@@ -249,7 +249,7 @@ void BuildManager::finish()\n \n void BuildManager::emitCancelMessage()\n {\n-    addToOutputWindow(tr(\""Canceled build.\""), BuildStep::ErrorMessageOutput);\n+    addToOutputWindow(tr(\""Canceled build/deployment.\""), BuildStep::ErrorMessageOutput);\n }\n \n void BuildManager::clearBuildQueue()\n@@ -388,10 +388,10 @@ void BuildManager::nextBuildQueue()\n         // Build Failure\n         const QString projectName = d->m_currentBuildStep->project()->displayName();\n         const QString targetName = d->m_currentBuildStep->target()->displayName();\n-        addToOutputWindow(tr(\""Error while building project %1 (target: %2)\"").arg(projectName, targetName), BuildStep::ErrorOutput);\n-        addToOutputWindow(tr(\""When executing build step '%1'\"").arg(d->m_currentBuildStep->displayName()), BuildStep::ErrorOutput);\n+        addToOutputWindow(tr(\""Error while building/deploying project %1 (target: %2)\"").arg(projectName, targetName), BuildStep::ErrorOutput);\n+        addToOutputWindow(tr(\""When executing step '%1'\"").arg(d->m_currentBuildStep->displayName()), BuildStep::ErrorOutput);\n         // NBS TODO fix in qtconcurrent\n-        d->m_progressFutureInterface->setProgressValueAndText(d->m_progress*100, tr(\""Error while building project %1 (target: %2)\"").arg(projectName, targetName));\n+        d->m_progressFutureInterface->setProgressValueAndText(d->m_progress*100, tr(\""Error while building/deploying project %1 (target: %2)\"").arg(projectName, targetName));\n     }\n \n     if (result)\n@@ -430,7 +430,7 @@ void BuildManager::nextStep()\n \n         if (d->m_currentBuildStep->project() != d->m_previousBuildStepProject) {\n             const QString projectName = d->m_currentBuildStep->project()->displayName();\n-            addToOutputWindow(tr(\""Running build steps for project %1...\"")\n+            addToOutputWindow(tr(\""Running steps for project %1...\"")\n                               .arg(projectName), BuildStep::MessageOutput);\n             d->m_previousBuildStepProject = d->m_currentBuildStep->project();\n         }\n@@ -477,8 +477,8 @@ bool BuildManager::buildQueueAppend(QList<BuildStep *> steps)\n         // print something for the user\n         const QString projectName = bs->project()->displayName();\n         const QString targetName = bs->project()->displayName();\n-        addToOutputWindow(tr(\""Error while building project %1 (target: %2)\"").arg(projectName, targetName), BuildStep::ErrorOutput);\n-        addToOutputWindow(tr(\""When executing build step '%1'\"").arg(bs->displayName()), BuildStep::ErrorOutput);\n+        addToOutputWindow(tr(\""Error while building/deploying project %1 (target: %2)\"").arg(projectName, targetName), BuildStep::ErrorOutput);\n+        addToOutputWindow(tr(\""When executing step '%1'\"").arg(bs->displayName()), BuildStep::ErrorOutput);\n \n         // disconnect the buildsteps again\n         for (int j = 0; j <= i; ++j)\n""}",bug,"bug, resource 
",bug;
8372.0,8372.0,bug ,Michal Klocek,Change zoom levels to real in Slider to enable fractial zooming,"Change zoom levels to real in Slider to enable fractial zooming

Change-Id: Ib35528bbf1f697cf662386deaf88a393e55e81c7",['examples/declarative/mapviewer/mapviewer/content/components/Slider.qml'],"{""Slider.qml"": ""@@ -43,7 +43,7 @@ import QtQuick 2.0\n Item {\n     id: slider;\n     height: 10\n-    property int value // value is read/write.\n+    property real value // value is read/write.\n     property real minimum: 0\n     property real maximum: 1\n     property int length: width - handle.width\n""}",resource,"feature 
",resource;
6209.0,6209.0,resource,Alan Alpert (Inactive),We no longer depend on qtsvg,"We no longer depend on qtsvg

Change-Id: I5980634dd4f234d9b7d0bed56c4f4cab9459fb37",['sync.profile'],"{""sync.profile"": ""@@ -27,6 +27,5 @@\n #\n %dependencies = (\n         \""qtbase\"" => \""refs/heads/master\"",\n-        \""qtsvg\"" => \""refs/heads/master\"",\n         \""qtxmlpatterns\"" => \""refs/heads/master\"",\n );\n""}",deprecat,"deprecate 
",resource;
9976.0,9976.0,deprecat ,Peng Wu,Improve organizer QML unit tests,"Improve organizer QML unit tests

Change-Id: I3f8db2416afb2a293a364f89f805f19b9f16bfc2","['tests/auto/qmlorganizer/testcases/tst_organizeraudiblereminder.qml', 'tests/auto/qmlorganizer/testcases/tst_organizerunionfilter.qml', 'tests/auto/qmlorganizer/testcases/tst_organizeritems.qml', 'tests/auto/qmlorganizer/testcases/QOrganizerTestUtility.qml', 'tests/auto/qmlorganizer/testcases/tst_organizercollectionfilter.qml', 'tests/auto/qmlorganizer/testcases/tst_organizeremailreminder.qml', 'tests/auto/qmlorganizer/testcases/tst_organizervisualreminder.qml', 'tests/auto/qmlorganizer/testcases/tst_organizerintersectionfilter.qml']","{""QOrganizerTestUtility.qml"": ""@@ -47,6 +47,7 @@ TestCase {\n     id: testUtility\n     property OrganizerModel model\n     property SignalSpy spy\n+    property var signalWaitTime : 400\n \n     function debug(string, flag) {\n         if (flag == 1)\n@@ -63,14 +64,14 @@ TestCase {\n         var count = 0;\n         if (model.itemCount < expect_count) {\n             do {\n-                spy.wait(400);\n+                spy.wait(signalWaitTime);\n                 count ++;\n                 verify(model.itemCount <= expect_count)\n                 verify(count <= 10)\n             } while (model.itemCount < expect_count)\n         } else if (model.itemCount > expect_count) {\n             do {\n-                spy.wait(500);\n+                spy.wait(signalWaitTime);\n                 count ++;\n                 verify(model.itemCount >= expect_count)\n                 verify(count <= 10)\n"", ""tst_organizeraudiblereminder.qml"": ""@@ -135,15 +135,9 @@ Rectangle {\n                 event.addDetail(audibleReminderDetail);\n                 model.saveItem(event);\n                 //Let's wait for the model to be up-to-date\n-                var count = 0;\n-                do {\n-                   organizerChangedSpy.wait(200);\n-                   count ++;\n-                   verify(model.itemCount <= 1)\n-                   verify(count <= 10)\n-                } while (model.itemCount < 1)\n+                utility.waiting_model_signal(1);\n+                compare(model.itemCount, 1)\n \n-                model.update();\n                 var fetchlist = model.items;\n                 var savedEvent = fetchlist[0];\n                 verify(savedEvent != undefined);\n"", ""tst_organizercollectionfilter.qml"": ""@@ -81,7 +81,6 @@ Rectangle {\n             for (var i = 0; i < list.length; i ++) {\n                 var managerName = list[i];\n                 var debugFlag = 0;\n-                var waitTime = 400;\n                 console.log(\""test_collectionFilter test start! :\"" + managerName);\n                 var model = Qt.createQmlObject(\n                         \""import QtOrganizer 5.0;\""\n@@ -127,7 +126,7 @@ Rectangle {\n                 //Let's wait for the model to be up-to-date\n                 var count = 0;\n                 do {\n-                    organizerCollectionChangedSpy.wait(waitTime);\n+                    organizerCollectionChangedSpy.wait(utility.signalWaitTime);\n                     count ++;\n                     verify(count <= 10)\n                 } while (model.collections.length < collectionLegnth + 1)\n"", ""tst_organizeremailreminder.qml"": ""@@ -141,15 +141,8 @@ Rectangle {\n                 event.addDetail(emailReminderDetail);\n                 model.saveItem(event);\n                 //Wait for the model to be up-to-date\n-                var count = 0;\n-                do {\n-                   organizerChangedSpy.wait(200);\n-                   count ++;\n-                   verify(model.itemCount <= 1)\n-                   verify(count <= 10)\n-                } while (model.itemCount < 1)\n-\n-                model.update();\n+                utility.waiting_model_signal(1);\n+                compare(model.itemCount, 1)\n                 var fetchlist = model.items;\n                 compare(model.itemCount, 1)\n                 var savedEvent = fetchlist[0];\n@@ -179,8 +172,6 @@ Rectangle {\n \n                 model.saveItem(savedEvent);\n                 organizerChangedSpy.wait();\n-                model.update();\n-                organizerChangedSpy.wait();\n                 //no new event created\n                 compare(model.itemCount, 1)\n                 fetchlist = model.items;\n@@ -195,8 +186,6 @@ Rectangle {\n                 updatedEvent.removeDetail(removeEventDetail);\n                 model.saveItem(updatedEvent);\n                 organizerChangedSpy.wait();\n-                model.update();\n-                organizerChangedSpy.wait();\n                 //no new event created\n                 compare(model.itemCount, 1)\n                 fetchlist = model.items;\n"", ""tst_organizerintersectionfilter.qml"": ""@@ -111,51 +111,40 @@ Rectangle {\n                         \""import QtTest 1.0;\""\n                         + \""SignalSpy {id : organizerChangedSpy;}\""\n                         , test);\n-\n+                var organizerCollectionChangedSpy = Qt.createQmlObject(\n+                        \""import QtTest 1.0;\""\n+                        + \""SignalSpy {id : organizerChangedSpy;}\""\n+                        , test);\n                 organizerChangedSpy.target = model\n-                organizerChangedSpy.signalName = \""collectionsChanged\""\n+                organizerChangedSpy.signalName = \""modelChanged\""\n+                organizerCollectionChangedSpy.target = model;\n+                organizerCollectionChangedSpy.signalName = \""collectionsChanged\"";\n                 utility.model = model\n                 utility.spy = organizerChangedSpy\n                 utility.empty_calendar()\n                 //------prepare filter data: save event and collection------//\n                 var collectionLegnth = model.collections.length\n-                model.saveCollection(testCollection)\n \n+                model.saveCollection(testCollection)\n                 //Let's wait for the model to be up-to-date\n                 var count = 0;\n                 do {\n-                    organizerChangedSpy.wait(400)\n+                    organizerCollectionChangedSpy.wait(utility.signalWaitTime)\n                     count ++\n                     verify(count <= 10)\n                 } while (model.collections.length < collectionLegnth + 1)\n+                compare(model.collections.length, collectionLegnth + 1)\n \n                 //we should have more than default collection now\n                 var savedCollection = model.collections[model.collections.length - 1];\n-                organizerChangedSpy.signalName = \""modelChanged\"";\n                 model.saveItem(event);\n-                count = 0;\n-                do {\n-                    organizerChangedSpy.wait(200);\n-                    count ++;\n-                    verify(model.itemCount <= 1)\n-                    verify(count <= 10)\n-                } while (model.itemCount < 1)\n-\n-                model.update();\n+                utility.waiting_model_signal(1);\n                 compare(model.itemCount, 1)\n \n                 //event with new collection id\n                 event.collectionId = savedCollection.collectionId;\n                 model.saveItem(event);\n-                count = 0;\n-                do {\n-                    organizerChangedSpy.wait(200);\n-                    count ++;\n-                    verify(model.itemCount <= 2)\n-                    verify(count <= 10)\n-                } while (model.itemCount < 2)\n-\n-                model.update();\n+                utility.waiting_model_signal(2);\n                 compare(model.itemCount, 2)\n                 var fetchlist = model.items;\n                 var idEventId;\n@@ -175,30 +164,14 @@ Rectangle {\n                 //Single filter\n                 intersectionFilter.filters = [idFilter];\n                 model.filter = intersectionFilter;\n-                count = 0;\n-                do {\n-                    organizerChangedSpy.wait(100);\n-                    count ++;\n-                    verify(model.itemCount <= 1)\n-                    verify(count <= 10)\n-                } while (model.itemCount < 1)\n-\n-                model.update();\n+                utility.waiting_model_signal(1);\n                 compare(model.itemCount, 1)\n                 //Change collection filter id\n                 collectionFilter.ids = [savedCollection.collectionId];\n                 //Duoble filters\n                 model.filter.filters = [idFilter, collectionFilter]\n                 utility.debug(\""Duoble filter\"", debugFlag);\n-                count = 0;\n-                do {\n-                    organizerChangedSpy.wait(100);\n-                    count ++;\n-                    verify(model.itemCount <= 1)\n-                    verify(count <= 10)\n-                } while (model.itemCount != 0)\n-\n-                model.update();\n+                utility.waiting_model_signal(0);\n                 compare(model.itemCount, 0)\n \n                 //Double filter 2\n@@ -206,15 +179,7 @@ Rectangle {\n                 collectionFilter.ids = [savedCollection.collectionId, model.defaultCollection().collectionId];\n                 model.filter.filters = [idFilter, collectionFilter]\n                 utility.debug(\""Duoble filter 2\"", debugFlag);\n-                count = 0;\n-                do {\n-                    organizerChangedSpy.wait(100);\n-                    count ++;\n-                    verify(model.itemCount <= 1)\n-                    verify(count <= 10)\n-                } while (model.itemCount < 1)\n-\n-                model.update();\n+                utility.waiting_model_signal(1);\n                 compare(model.itemCount, 1)\n \n                 //Double filter 3\n@@ -224,14 +189,7 @@ Rectangle {\n                 utility.debug(\""Duoble filter ~3\"", debugFlag);\n                 model.filter.filters = [idFilter, collectionFilter]\n                 utility.debug(\""Duoble filter 3\"" + collectionFilter.ids, debugFlag);\n-                count = 0;\n-                do {\n-                    organizerChangedSpy.wait(100);\n-                    count ++;\n-                    verify(model.itemCount <= 2)\n-                    verify(count <= 10)\n-                } while (model.itemCount < 2)\n-                model.update();\n+                utility.waiting_model_signal(2);\n                 compare(model.itemCount, 2)\n                 utility.debug(\""Test over!\"", debugFlag);\n             }\n"", ""tst_organizeritems.qml"": ""@@ -61,7 +61,6 @@ Rectangle {\n         Component.onCompleted: {\n             model.update();\n             model.autoUpdate = true;\n-            console.log(\""model is created!\"");\n         }\n     }\n \n"", ""tst_organizerunionfilter.qml"": ""@@ -111,52 +111,43 @@ Rectangle {\n                         \""import QtTest 1.0;\""\n                         + \""SignalSpy {id : organizerChangedSpy;}\""\n                         , test);\n+                var organizerCollectionChangedSpy = Qt.createQmlObject(\n+                        \""import QtTest 1.0;\""\n+                        + \""SignalSpy {id : organizerChangedSpy;}\""\n+                        , test);\n \n                 organizerChangedSpy.target = model\n-                organizerChangedSpy.signalName = \""collectionsChanged\""\n+                organizerChangedSpy.signalName = \""modelChanged\""\n+                organizerCollectionChangedSpy.target = model;\n+                organizerCollectionChangedSpy.signalName = \""collectionsChanged\"";\n                 utility.model = model\n                 utility.spy = organizerChangedSpy\n                 utility.empty_calendar()\n                 //------prepare filter data: save event and collection------//\n                 var collectionLegnth = model.collections.length\n-                model.saveCollection(testCollection)\n \n+                model.saveCollection(testCollection)\n                 //Let's wait for the model to be up-to-date\n                 var count = 0;\n                 do {\n-                    organizerChangedSpy.wait(500)\n+                    organizerCollectionChangedSpy.wait(utility.signalWaitTime)\n                     count ++\n                     verify(count <= 10)\n                 } while (model.collections.length < collectionLegnth + 1)\n+                compare(model.collections.length, collectionLegnth + 1)\n \n                 //we should have more than default collection now\n                 var savedCollection = model.collections[model.collections.length - 1];\n-                organizerChangedSpy.signalName = \""modelChanged\"";\n                 model.saveItem(event);\n-                count = 0;\n-                do {\n-                    organizerChangedSpy.wait(200);\n-                    count ++;\n-                    verify(model.itemCount <= 1)\n-                    verify(count <= 10)\n-                } while (model.itemCount < 1)\n-\n-                model.update();\n+                utility.waiting_model_signal(1);\n                 compare(model.itemCount, 1)\n \n                 //event with new collection id\n                 event.collectionId = savedCollection.collectionId;\n                 model.saveItem(event);\n-                count = 0;\n-                do {\n-                    organizerChangedSpy.wait(200);\n-                    count ++;\n-                    verify(model.itemCount <= 2)\n-                    verify(count <= 10)\n-                } while (model.itemCount < 2)\n-\n-                model.update();\n+                utility.waiting_model_signal(2);\n                 compare(model.itemCount, 2)\n+\n                 var fetchlist = model.items;\n                 var idEventId;\n                 var collectionEventId;\n@@ -175,30 +166,15 @@ Rectangle {\n                 //Single filter\n                 unionFilter.filters = [idFilter];\n                 model.filter = unionFilter;\n-                count = 0;\n-                do {\n-                    organizerChangedSpy.wait(100);\n-                    count ++;\n-                    verify(model.itemCount <= 1)\n-                    verify(count <= 10)\n-                } while (model.itemCount < 1)\n+                utility.waiting_model_signal(1);\n \n-                model.update();\n                 compare(model.itemCount, 1)\n                 //Change collection filter id\n                 collectionFilter.ids = [savedCollection.collectionId];\n                 //Duoble filters\n                 model.filter.filters = [idFilter, collectionFilter]\n                 utility.debug(\""Duoble filter\"", debugFlag);\n-                count = 0;\n-                do {\n-                    organizerChangedSpy.wait(100);\n-                    count ++;\n-                    verify(model.itemCount <= 2)\n-                    verify(count <= 10)\n-                } while (model.itemCount < 2)\n-\n-                model.update();\n+                utility.waiting_model_signal(2);\n                 compare(model.itemCount, 2)\n \n                 //Double filter 2\n@@ -206,15 +182,7 @@ Rectangle {\n                 collectionFilter.ids = [savedCollection.collectionId, model.defaultCollection().collectionId];\n                 model.filter.filters = [idFilter, collectionFilter]\n                 utility.debug(\""Duoble filter 2\"", debugFlag);\n-                count = 0;\n-                do {\n-                    organizerChangedSpy.wait(100);\n-                    count ++;\n-                    verify(model.itemCount <= 2)\n-                    verify(count <= 10)\n-                } while (model.itemCount < 2)\n-\n-                model.update();\n+                utility.waiting_model_signal(2);\n                 compare(model.itemCount, 2)\n \n                 //Double filter 3\n@@ -224,14 +192,7 @@ Rectangle {\n                 utility.debug(\""Duoble filter ~3\"", debugFlag);\n                 model.filter.filters = [idFilter, collectionFilter]\n                 utility.debug(\""Duoble filter 3\"" + collectionFilter.ids, debugFlag);\n-                count = 0;\n-                do {\n-                    organizerChangedSpy.wait(100);\n-                    count ++;\n-                    verify(model.itemCount <= 2)\n-                    verify(count <= 10)\n-                } while (model.itemCount < 2)\n-                model.update();\n+                utility.waiting_model_signal(2);\n                 compare(model.itemCount, 2)\n                 utility.debug(\""Test over!\"", debugFlag);\n             }\n"", ""tst_organizervisualreminder.qml"": ""@@ -143,14 +143,7 @@ Rectangle {\n                 visualReminderEvent.addDetail(visualReminderDetail);\n                 model.saveItem(visualReminderEvent);\n                 //Let's wait for the model to be up-to-date\n-                var count = 0;\n-                do {\n-                   organizerChangedSpy.wait(200);\n-                   count ++;\n-                   verify(model.itemCount <= 1)\n-                   verify(count <= 10)\n-                } while (model.itemCount < 1)\n-\n+                utility.waiting_model_signal(1);\n                 compare(model.itemCount, 1)\n                 var fetchVisuallist = model.items;\n                 var savedVisualEvent = fetchVisuallist[0];\n@@ -174,7 +167,6 @@ Rectangle {\n \n                 model.saveItem(savedVisualEvent);\n                 organizerChangedSpy.wait();\n-                model.update();\n                 //no new event created\n                 compare(model.itemCount, 1)\n                 fetchVisuallist = model.items;\n@@ -190,7 +182,6 @@ Rectangle {\n                 updatedEvent.removeDetail(removeEventDetail);\n                 model.saveItem(updatedEvent);\n                 organizerChangedSpy.wait();\n-                model.update();\n                 //no new event created\n                 compare(model.itemCount, 1)\n                 fetchVisuallist = model.items;\n""}",test,"test 
",resource;test;
27056.0,27056.0,test,Carl Schumann,Fix bug when destruction fields in QWizard,"Fix bug when destruction fields in QWizard

Cherry-picked a70b8d407e1ca46e5dc208580534feee7ddfe51a from
Qt5's qtbase master branch.

Maintain the consistency of QWizardPrivate's two members:
    QVector<QWizardField> fields;
    QMap<QString, int> fieldIndexMap;
during and after calls to QWizardPrivate's
void _q_handleFieldObjectDestroyed(QObject *)
member function.  The failure to maintain this consistency
caused an out of bounds access and core dump in
QWizard's field(const QString &name) member function.

QWizard's field(const QString &name) member function expects
the values in the QMap fieldIndexMap to be indexes into the
QVector fields.  Prior to this change
_q_handleFieldObjectDestroyed only removed the appropriate
entry from the map and erased it from the vector.  It did
not decrement by one all the indexes greater than the index
that was removed from the map and erased from the vector
in the rest of the map.

For example ...
So if initially have the following mapping ...
""field0"" -> 0,
""field1"" -> 1, and
""field2"" -> 2
with fields of size 3. After destruction of ""field1"" have ...
""field0"" -> 0, and
""field2"" -> 2
with fields of size 2.
Now attempts to look up ""field2"" using QWizard::field will
have an out of bounds error and possibly core dump or trigger
an internal Qt assert because an attempt to access
this->fields[2] will be made.   It should be accessing
this->fields[1], but does not because the map is no longer
consistent with the vector.

This change adds a decrement by one for all the indexes
greater than the index that was removed from the map and
erased from the vector.

Task-number: QTBUG-25691
Change-Id: Ia2a41027628a65faec4ecdd5da235ddd19746a57
Reviewed-by: Shane Kearns <shane.kearns@accenture.com>
Reviewed-by: Lars Knoll <lars.knoll@nokia.com>","['tests/auto/qwizard/qwizard.pro', 'tests/auto/qwizard/tst_qwizard.cpp', 'tests/auto/qwizard/tst_qwizard_2.cpp', 'src/gui/dialogs/qwizard.cpp']","{""qwizard.cpp"": ""@@ -1703,16 +1703,29 @@ void QWizardPrivate::_q_updateButtonStates()\n \n void QWizardPrivate::_q_handleFieldObjectDestroyed(QObject *object)\n {\n+    int destroyed_index = -1;\n     QVector<QWizardField>::iterator it = fields.begin();\n     while (it != fields.end()) {\n         const QWizardField &field = *it;\n         if (field.object == object) {\n+            destroyed_index = fieldIndexMap.value(field.name, -1);\n             fieldIndexMap.remove(field.name);\n             it = fields.erase(it);\n         } else {\n             ++it;\n         }\n     }\n+    if (destroyed_index != -1) {\n+        QMap<QString, int>::iterator it2 = fieldIndexMap.begin();\n+        while (it2 != fieldIndexMap.end()) {\n+            int index = it2.value();\n+            if (index > destroyed_index) {\n+                QString field_name = it2.key();\n+                fieldIndexMap.insert(field_name, index-1);\n+            }\n+            ++it2;\n+        }\n+    }\n }\n \n void QWizardPrivate::setStyle(QStyle *style)\n"", ""qwizard.pro"": ""@@ -1,5 +1,5 @@\n load(qttest_p4)\n-SOURCES  += tst_qwizard.cpp\n+SOURCES  += tst_qwizard.cpp tst_qwizard_2.cpp\n #SOURCES  += /home/jasmin/dev/solutions/widgets/qtwizard/src/qtwizard.cpp\n #HEADERS  += /home/jasmin/dev/solutions/widgets/qtwizard/src/qtwizard.h\n #SOURCES  += /home/jasplin/dev/research/qwizard/src/qwizard.cpp\n"", ""tst_qwizard.cpp"": ""@@ -114,6 +114,7 @@ private slots:\n     void task177022_setFixedSize();\n     void task248107_backButton();\n     void task255350_fieldObjectDestroyed();\n+    void taskQTBUG_25691_fieldObjectDestroyed2();\n \n     /*\n         Things that could be added:\n@@ -2640,5 +2641,15 @@ void tst_QWizard::task255350_fieldObjectDestroyed()\n     delete page;\n }\n \n+// Global taskQTBUG_25691_fieldObjectDestroyed2 is defined in\n+// tst_qwizard_2.cpp to avoid cluttering up this file with\n+// the QWizardPage subclasses, etc. required to complete this\n+// test.\n+void taskQTBUG_25691_fieldObjectDestroyed2(void);\n+void tst_QWizard::taskQTBUG_25691_fieldObjectDestroyed2()\n+{\n+    ::taskQTBUG_25691_fieldObjectDestroyed2();\n+}\n+\n QTEST_MAIN(tst_QWizard)\n #include \""tst_qwizard.moc\""\n"", ""tst_qwizard_2.cpp"": ""@@ -0,0 +1,208 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).\n+** Contact: http://www.qt-project.org/\n+**\n+** This file is part of the test suite of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+\n+#include <QComboBox>\n+#include <QDebug>\n+#include <QLineEdit>\n+#include <QMainWindow>\n+#include <QVBoxLayout>\n+#include <QWizard>\n+#include <QWizardPage>\n+\n+#include <QtTest/QtTest>\n+\n+class taskQTBUG_25691 : public QWizard\n+{\n+    Q_OBJECT\n+public:\n+    taskQTBUG_25691( QWidget * parent = 0 );\n+\n+    ~taskQTBUG_25691(void);\n+};\n+\n+class taskQTBUG_25691Page1 : public QWizardPage\n+{\n+    Q_OBJECT\n+public:\n+    taskQTBUG_25691Page1( QWidget * parent = 0 );\n+\n+    ~taskQTBUG_25691Page1(void);\n+};\n+\n+class taskQTBUG_25691Page2 : public QWizardPage\n+{\n+    Q_OBJECT\n+public:\n+    taskQTBUG_25691Page2( QWidget * parent = 0 );\n+\n+    virtual void initializePage(void);\n+\n+    ~taskQTBUG_25691Page2(void);\n+\n+private:\n+    QVBoxLayout * layout;\n+    QLineEdit * field0_value;\n+    QLineEdit * field1_value;\n+    QLineEdit * field2_value;\n+};\n+\n+\n+taskQTBUG_25691::taskQTBUG_25691( QWidget * parent )\n+    : QWizard( parent )\n+{\n+    this->addPage( new taskQTBUG_25691Page1 );\n+    this->addPage( new taskQTBUG_25691Page2 );\n+    this->show();\n+}\n+\n+taskQTBUG_25691::~taskQTBUG_25691(void)\n+{\n+}\n+\n+taskQTBUG_25691Page1::taskQTBUG_25691Page1( QWidget * parent )\n+    : QWizardPage( parent )\n+{\n+    QComboBox * field0_needed = new QComboBox( this );\n+    field0_needed->addItem( \""No\"" );\n+    field0_needed->addItem( \""Yes\"" );\n+    field0_needed->setCurrentIndex(0);\n+    this->registerField( \""field0_needed\"", field0_needed );\n+\n+    QComboBox * field1_needed = new QComboBox( this );\n+    field1_needed->addItem( \""No\"" );\n+    field1_needed->addItem( \""Yes\"" );\n+    field1_needed->setCurrentIndex(0);\n+    this->registerField( \""field1_needed\"", field1_needed );\n+\n+    QComboBox * field2_needed = new QComboBox( this );\n+    field2_needed->addItem( \""No\"" );\n+    field2_needed->addItem( \""Yes\"" );\n+    field2_needed->setCurrentIndex(0);\n+    this->registerField( \""field2_needed\"", field2_needed );\n+\n+    QVBoxLayout * layout = new QVBoxLayout;\n+    layout->addWidget( field0_needed );\n+    layout->addWidget( field1_needed );\n+    layout->addWidget( field2_needed );\n+    this->setLayout( layout );\n+}\n+\n+taskQTBUG_25691Page1::~taskQTBUG_25691Page1(void)\n+{\n+}\n+\n+taskQTBUG_25691Page2::taskQTBUG_25691Page2( QWidget * parent )\n+    : QWizardPage( parent )\n+{\n+    this->layout = new QVBoxLayout;\n+    this->setLayout( this->layout );\n+\n+    this->field0_value = 0;\n+    this->field1_value = 0;\n+    this->field2_value = 0;\n+}\n+\n+void taskQTBUG_25691Page2::initializePage(void)\n+{\n+    QWizard * wizard = this->wizard();\n+    bool field0_needed = wizard->field( \""field0_needed\"" ).toBool();\n+    bool field1_needed = wizard->field( \""field1_needed\"" ).toBool();\n+    bool field2_needed = wizard->field( \""field2_needed\"" ).toBool();\n+\n+    if ( field0_needed  &&  this->field0_value == 0 ){\n+        this->field0_value = new QLineEdit( \""field0_default\"" );\n+        this->registerField( \""field0_value\"", this->field0_value );\n+        this->layout->addWidget( this->field0_value );\n+    } else if ( ! field0_needed  &&  this->field0_value != 0 ){\n+        this->layout->removeWidget( this->field0_value );\n+        delete this->field0_value;\n+        this->field0_value = 0;\n+    }\n+\n+    if ( field1_needed  &&  this->field1_value == 0  ){\n+        this->field1_value = new QLineEdit( \""field1_default\"" );\n+        this->registerField( \""field1_value\"", this->field1_value );\n+        this->layout->addWidget( this->field1_value );\n+    } else if ( ! field1_needed  &&  this->field1_value != 0 ){\n+        this->layout->removeWidget( this->field1_value );\n+        delete this->field1_value;\n+        this->field1_value = 0;\n+    }\n+\n+    if ( field2_needed  &&  this->field2_value == 0  ){\n+        this->field2_value = new QLineEdit( \""field2_default\"" );\n+        this->registerField( \""field2_value\"", this->field2_value );\n+        this->layout->addWidget( this->field2_value );\n+    } else if ( ! field2_needed  &&  this->field2_value != 0 ){\n+        this->layout->removeWidget( this->field2_value );\n+        delete this->field2_value;\n+        this->field2_value = 0;\n+    }\n+}\n+\n+taskQTBUG_25691Page2::~taskQTBUG_25691Page2(void)\n+{\n+}\n+\n+void taskQTBUG_25691_fieldObjectDestroyed2(void)\n+{\n+    QMainWindow mw;\n+    taskQTBUG_25691 wb( &mw );\n+\n+    wb.setField( \""field0_needed\"", true );\n+    wb.setField( \""field1_needed\"", true );\n+    wb.setField( \""field2_needed\"", true );\n+    wb.next(); // Results in registration of all three field_Nvalue fields\n+    wb.back(); // Back up to cancel need for field1_value\n+    wb.setField( \""field1_needed\"", false ); // cancel need for field1_value\n+    wb.next(); // Results in destruction of field field1_value's widget\n+    wb.next(); // Commit wizard's results\n+\n+    // Now collect the value from fields that was not destroyed.\n+    QString field0_value = wb.field( \""field0_value\"" ).toString();\n+    QCOMPARE( field0_value, QString(\""field0_default\"") );\n+\n+    QString field2_value = wb.field( \""field2_value\"" ).toString();\n+    QCOMPARE( field2_value, QString(\""field2_default\"") );\n+}\n+\n+#include \""tst_qwizard_2.moc\""\n""}",test;bug,"bug
",bug;deprecat;
20595.0,20595.0,test;bug ,hjk,debugger: increase max number of vtable entried from 20 to 100,"debugger: increase max number of vtable entried from 20 to 100

Change-Id: I9cc62402830f9ca5b2af389df5f790515ed0383c",['share/qtcreator/dumper/dumper.py'],"{""dumper.py"": ""@@ -1766,7 +1766,7 @@ class Dumper:\n                 if field.name.startswith(\""_vptr.\""):\n                     with SubItem(self, \""[vptr]\""):\n                         # int (**)(void)\n-                        n = 20\n+                        n = 100\n                         self.putType(\"" \"")\n                         self.putValue(value[field.name])\n                         self.putNumChild(n)\n""}",resource,"bug 
",bug;
959.0,959.0,resource,"Daniel Molkentin (CLOSED NOKIA IDENTITY, DO NOT USE ANYMORE!)",WelcomeScreen: remove debug output,"WelcomeScreen: remove debug output

Change-Id: Ie1dc4be339c23d0a50c71e131e264ca5eda8e63a","['src/plugins/qtsupport/exampleslistmodel.cpp', 'share/qtcreator/welcomescreen/components/styleitem/qstyleplugin.cpp']","{""qstyleplugin.cpp"": ""@@ -78,7 +78,7 @@ public:\n \n void StylePlugin::registerTypes(const char *uri)\n {\n-    qDebug() << \""register\"" << uri;\n+//    qDebug() << \""register\"" << uri;\n     qmlRegisterType<QStyleItem>(uri, 1, 0, \""QStyleItem\"");\n     qmlRegisterType<QRangeModel>(uri, 1, 0, \""RangeModel\"");\n     qmlRegisterType<QGraphicsDropShadowEffect>(uri, 1, 0, \""DropShadow\"");\n"", ""exampleslistmodel.cpp"": ""@@ -262,7 +262,7 @@ QStringList ExamplesListModel::exampleSources() const\n \n     // Try Creator-provided XML file only\n     if (sources.isEmpty()) {\n-        qDebug() << Q_FUNC_INFO << \""falling through to Creator-provided XML file\"";\n+        // qDebug() << Q_FUNC_INFO << \""falling through to Creator-provided XML file\"";\n         sources << QString(resourceDir + QLatin1String(\""/examples_fallback.xml\""));\n     }\n \n""}",deprecat,"bug 
",bug;deprecat;
23484.0,23484.0,deprecat,Oswald Buddenhagen,make splitPathList() return an empty list for an empty string,"make splitPathList() return an empty list for an empty string

this makes the user code a bit cleaner

Change-Id: I3713c73c5c19cf69341be65480917eda0b967b77","['qmake/option.h', 'qmake/option.cpp', 'qmake/project.cpp']","{""option.cpp"": ""@@ -108,8 +108,6 @@ QStringList Option::projfile::project_dirs;\n //QMAKE_GENERATE_MAKEFILE stuff\n QString Option::mkfile::qmakespec;\n QString Option::mkfile::xqmakespec;\n-QStringList Option::mkfile::qmakepath;\n-QStringList Option::mkfile::qmakefeatures;\n int Option::mkfile::cachefile_depth = -1;\n bool Option::mkfile::do_deps = true;\n bool Option::mkfile::do_mocs = true;\n@@ -601,8 +599,6 @@ QStringList Option::mkspecPaths()\n     const QString concat = QLatin1String(\""/mkspecs\"");\n \n     QStringList qmakepath = splitPathList(QString::fromLocal8Bit(qgetenv(\""QMAKEPATH\"")));\n-    if (!Option::mkfile::qmakepath.isEmpty())\n-        qmakepath += Option::mkfile::qmakepath;\n     foreach (const QString &path, qmakepath)\n         ret << (path + concat);\n     if (!Option::mkfile::project_build_root.isEmpty())\n@@ -654,18 +650,18 @@ bool Option::prepareProject(const QString &pfile)\n             mkfile::project_build_root = QDir::cleanPath(fi.absolutePath());\n         }\n \n-        QMakeProject cproj;\n-        if (!cproj.read(mkfile::cachefile, QMakeProject::ReadProFile))\n-            return false;\n-        if (mkfile::qmakespec.isEmpty())\n-            mkfile::qmakespec = cproj.first(QLatin1String(\""QMAKESPEC\""));\n-        if (mkfile::xqmakespec.isEmpty()) {\n-            mkfile::xqmakespec = cproj.first(QLatin1String(\""XQMAKESPEC\""));\n-            if (mkfile::xqmakespec.isEmpty())\n-                mkfile::xqmakespec = mkfile::qmakespec;\n+        if (mkfile::qmakespec.isEmpty() || mkfile::xqmakespec.isEmpty()) {\n+            QMakeProject cproj;\n+            if (!cproj.read(mkfile::cachefile, QMakeProject::ReadProFile))\n+                return false;\n+            if (mkfile::qmakespec.isEmpty())\n+                mkfile::qmakespec = cproj.first(QLatin1String(\""QMAKESPEC\""));\n+            if (mkfile::xqmakespec.isEmpty()) {\n+                mkfile::xqmakespec = cproj.first(QLatin1String(\""XQMAKESPEC\""));\n+                if (mkfile::xqmakespec.isEmpty())\n+                    mkfile::xqmakespec = mkfile::qmakespec;\n+            }\n         }\n-        mkfile::qmakepath = cproj.values(QLatin1String(\""QMAKEPATH\""));\n-        mkfile::qmakefeatures = cproj.values(QLatin1String(\""QMAKEFEATURES\""));\n     }\n   no_cache:\n \n"", ""option.h"": ""@@ -199,8 +199,6 @@ struct Option\n     struct mkfile {\n         static QString qmakespec;\n         static QString xqmakespec;\n-        static QStringList qmakepath;\n-        static QStringList qmakefeatures;\n         static bool do_cache;\n         static bool do_deps;\n         static bool do_mocs;\n@@ -222,7 +220,7 @@ private:\n };\n \n inline QString fixEnvVariables(const QString &x) { return Option::fixString(x, Option::FixEnvVars); }\n-inline QStringList splitPathList(const QString &paths) { return paths.split(Option::dirlist_sep); }\n+inline QStringList splitPathList(const QString &paths) { return paths.isEmpty() ? QStringList() : paths.split(Option::dirlist_sep); }\n \n QT_END_NAMESPACE\n \n"", ""project.cpp"": ""@@ -552,11 +552,7 @@ QStringList qmake_feature_paths(QMakeProperty *prop = 0, bool host_build = false\n         concat << base_concat;\n     }\n \n-    QStringList feature_roots;\n-    QByteArray mkspec_path = qgetenv(\""QMAKEFEATURES\"");\n-    if(!mkspec_path.isNull())\n-        feature_roots += splitPathList(QString::fromLocal8Bit(mkspec_path));\n-    feature_roots += Option::mkfile::qmakefeatures;\n+    QStringList feature_roots = splitPathList(QString::fromLocal8Bit(qgetenv(\""QMAKEFEATURES\"")));\n     if(prop)\n         feature_roots += splitPathList(prop->value(\""QMAKEFEATURES\""));\n     if(!Option::mkfile::cachefile.isEmpty()) {\n@@ -569,8 +565,6 @@ QStringList qmake_feature_paths(QMakeProperty *prop = 0, bool host_build = false\n             feature_roots << (path + (*concat_it));\n     }\n     QStringList qmakepath = splitPathList(QString::fromLocal8Bit(qgetenv(\""QMAKEPATH\"")));\n-    if (!Option::mkfile::qmakepath.isEmpty())\n-        qmakepath += Option::mkfile::qmakepath;\n     foreach (const QString &path, qmakepath)\n         foreach (const QString &cat, concat)\n             feature_roots << (path + mkspecs_concat + cat);\n""}",feature,"bug
",others;
9237.0,9237.0,feature,Jason McDonald,Fix indentation of QPluginLoader test.,"Fix indentation of QPluginLoader test.

Change-Id: I4c6957d2a67ac387232226098b4490e3d5a86d51",['tests/auto/corelib/plugin/qpluginloader/tst_qpluginloader.cpp'],"{""tst_qpluginloader.cpp"": ""@@ -260,27 +260,27 @@ void tst_QPluginLoader::loadDebugObj()\n void tst_QPluginLoader::loadCorruptElf()\n {\n #if defined (__ELF__)\n-if (sizeof(void*) == 8) {\n-    QVERIFY(QFile::exists(SRCDIR \""elftest/corrupt1.elf64.so\""));\n-\n-    QPluginLoader lib1(SRCDIR \""elftest/corrupt1.elf64.so\"");\n-    QCOMPARE(lib1.load(), false);\n-    QVERIFY(lib1.errorString().contains(\""not a valid Qt plugin\""));\n-\n-    QPluginLoader lib2(SRCDIR \""elftest/corrupt2.elf64.so\"");\n-    QCOMPARE(lib2.load(), false);\n-    QVERIFY(lib2.errorString().contains(\""not a valid Qt plugin\""));\n-\n-    QPluginLoader lib3(SRCDIR \""elftest/corrupt3.elf64.so\"");\n-    QCOMPARE(lib3.load(), false);\n-    QVERIFY(lib3.errorString().contains(\""not a valid Qt plugin\""));\n-} else if (sizeof(void*) == 4) {\n-    QPluginLoader libW(SRCDIR \""elftest/corrupt3.elf64.so\"");\n-    QCOMPARE(libW.load(), false);\n-    QVERIFY(libW.errorString().contains(\""architecture\""));\n-} else {\n-    QFAIL(\""Please port QElfParser to this platform or blacklist this test.\"");\n-}\n+    if (sizeof(void*) == 8) {\n+        QVERIFY(QFile::exists(SRCDIR \""elftest/corrupt1.elf64.so\""));\n+\n+        QPluginLoader lib1(SRCDIR \""elftest/corrupt1.elf64.so\"");\n+        QCOMPARE(lib1.load(), false);\n+        QVERIFY(lib1.errorString().contains(\""not a valid Qt plugin\""));\n+\n+        QPluginLoader lib2(SRCDIR \""elftest/corrupt2.elf64.so\"");\n+        QCOMPARE(lib2.load(), false);\n+        QVERIFY(lib2.errorString().contains(\""not a valid Qt plugin\""));\n+\n+        QPluginLoader lib3(SRCDIR \""elftest/corrupt3.elf64.so\"");\n+        QCOMPARE(lib3.load(), false);\n+        QVERIFY(lib3.errorString().contains(\""not a valid Qt plugin\""));\n+    } else if (sizeof(void*) == 4) {\n+        QPluginLoader libW(SRCDIR \""elftest/corrupt3.elf64.so\"");\n+        QCOMPARE(libW.load(), false);\n+        QVERIFY(libW.errorString().contains(\""architecture\""));\n+    } else {\n+        QFAIL(\""Please port QElfParser to this platform or blacklist this test.\"");\n+    }\n #endif\n }\n \n""}",test,"bug, test 
",bug;test;
26071.0,26071.0,test,Glenn Watson,Add private API for finding symbols on Linux,"Add private API for finding symbols on Linux

Add an API for use by declarative that allows searching for a
symbol that has been loaded, without opening a specific library.
This makes it possible for declarative to determine if the
profiling library has been preloaded, and to call functions on
it that enable / disable / save the current profile.

Change-Id: I2ec12d9babea2a152990c19735e98d4d7c10a062",['src/corelib/plugin/qlibrary_unix.cpp'],"{""qlibrary_unix.cpp"": ""@@ -258,6 +258,13 @@ bool QLibraryPrivate::unload_sys()\n     return true;\n }\n \n+#ifdef Q_OS_LINUX\n+Q_CORE_EXPORT QFunctionPointer qt_linux_find_symbol_sys(const char *symbol)\n+{\n+    return QFunctionPointer(dlsym(RTLD_DEFAULT, symbol));\n+}\n+#endif\n+\n #ifdef Q_OS_MAC\n Q_CORE_EXPORT QFunctionPointer qt_mac_resolve_sys(void *handle, const char *symbol)\n {\n""}",feature,"feature 
",deprecat;
3593.0,3593.0,feature,Kai Köhne,QmlCpp debugger: Fix clicking on QML stack traces,"QmlCpp debugger: Fix clicking on QML stack traces

Change-Id: I1e83dfc490bc871d106fb44357759829b3a1a6c4",['src/plugins/debugger/qml/qmlcppengine.cpp'],"{""qmlcppengine.cpp"": ""@@ -129,7 +129,7 @@ void QmlCppEnginePrivate::qmlStackChanged()\n {\n     StackFrames frames = m_qmlEngine->stackHandler()->frames();\n     q->stackHandler()->setFrames(frames);\n-    m_stackBoundary = frames.size();\n+    m_stackBoundary = 0;\n }\n \n \n""}",bug,"bug 
",bug;
2964.0,2964.0,bug,Oliver Wolff,Disable WindowsXP/-Vista styles for now,"Disable WindowsXP/-Vista styles for now

As these styles need functionality from qregion_win
we disable them for now.

Change-Id: I0d5d38f2f684d1ee619967341849d891d17c75e6",['src/widgets/styles/styles.pri'],"{""styles.pri"": ""@@ -40,6 +40,7 @@ contains( styles, all ) {\n }\n \n x11|qpa|!macx-*:styles -= mac\n+win32:qpa:styles -= windowsxp windowsvista\n \n x11{\n     QMAKE_CXXFLAGS += $$QT_CFLAGS_QGTKSTYLE\n""}",resource,"bug 
",deprecat;refactor;resource;
26308.0,26308.0,resource,Yunqiao Yin (Nokia ID),Only genereate new texture if texture id is 0,"Only genereate new texture if texture id is 0

Otherwise a new texture would be created for accessing textureId()
function everytime and even worse thing is these textures will never
been deleted and eventually cause gl out of memory.

Change-Id: I349fcf15b5aeabbd9420a8dd645e0fdcc1d256bf",['src/quick/scenegraph/util/qsgtexture.cpp'],"{""qsgtexture.cpp"": ""@@ -499,7 +499,7 @@ int QSGPlainTexture::textureId() const\n             // The actual texture and id will be updated/deleted in a later bind()\n             // or ~QSGPlainTexture so just keep it minimal here.\n             return 0;\n-        } else {\n+        } else if (m_texture_id == 0){\n             // Generate a texture id for use later and return it.\n             glGenTextures(1, &const_cast<QSGPlainTexture *>(this)->m_texture_id);\n             return m_texture_id;\n""}",bug,"bug, refactor 
",deprecat;
4564.0,4564.0,bug,Takumi ASAKI,Modify mkspecs/unsupported/macx-clang/qplatformdefs.h,"Modify mkspecs/unsupported/macx-clang/qplatformdefs.h

Now mkspecs/unsupported/macx-clang/qplatformdefs.h includes
mkspecs/common/mac/qplatformdefs.h.
This patch fixes that Qt built with clang failes to load cocoa platform
plugin without QT_QPA_PLATFORM environment variable.

Change-Id: Id48268eaf7ba24403f91497539ef0dab6f22a9dc",['mkspecs/unsupported/macx-clang/qplatformdefs.h'],"{""qplatformdefs.h"": ""@@ -39,59 +39,5 @@\n **\n ****************************************************************************/\n \n-#ifndef QPLATFORMDEFS_H\n-#define QPLATFORMDEFS_H\n+#include \""../../common/mac/qplatformdefs.h\""\n \n-// Get Qt defines/settings\n-\n-#include \""qglobal.h\""\n-\n-// Set any POSIX/XOPEN defines at the top of this file to turn on specific APIs\n-\n-#include <unistd.h>\n-\n-\n-// We are hot - unistd.h should have turned on the specific APIs we requested\n-\n-\n-#include <pthread.h>\n-#include <dirent.h>\n-#include <fcntl.h>\n-#include <grp.h>\n-#include <pwd.h>\n-#include <signal.h>\n-#define QT_NO_LIBRARY_UNLOAD\n-\n-#include <sys/types.h>\n-#include <sys/ioctl.h>\n-#include <sys/ipc.h>\n-#include <sys/time.h>\n-#include <sys/shm.h>\n-#include <sys/socket.h>\n-#include <sys/stat.h>\n-#include <sys/wait.h>\n-#include <netinet/in.h>\n-#ifndef QT_NO_IPV6IFNAME\n-#include <net/if.h>\n-#endif\n-\n-#include \""../../common/posix/qplatformdefs.h\""\n-\n-#undef QT_OPEN_LARGEFILE\n-#undef QT_SOCKLEN_T\n-#undef QT_SIGNAL_IGNORE\n-\n-#define QT_OPEN_LARGEFILE       0\n-\n-#if (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_4)\n-#define QT_SOCKLEN_T            socklen_t\n-#else\n-#define QT_SOCKLEN_T            int\n-#endif\n-\n-#define QT_SIGNAL_IGNORE        (void (*)(int))1\n-\n-#define QT_SNPRINTF\t\t::snprintf\n-#define QT_VSNPRINTF\t\t::vsnprintf\n-\n-#endif // QPLATFORMDEFS_H\n""}",bug; resource,"bug, refactor 
",bug;
25386.0,25386.0,bug; resource,David Faure KDE,Fix typos in bcd477e0bc48b,"Fix typos in bcd477e0bc48b

Change-Id: Ia1981c86f799a749aa8fab5cdd8f6563b2ebe77f","['src/corelib/kernel/qobject.cpp', 'src/corelib/doc/snippets/code/src_corelib_kernel_qobject.cpp']","{""src_corelib_kernel_qobject.cpp"": ""@@ -480,7 +480,7 @@ QObject::disconnect(lineEdit, &QLineEdit::textChanged,\n //! [48]\n \n //! [49]\n-if (isSignalConnected(QMethaMethod::fromSignal(&MyObject::valueChanged))) {\n+if (isSignalConnected(QMetaMethod::fromSignal(&MyObject::valueChanged))) {\n     QByteArray data;\n     data = get_the_value();       // expensive operation\n     emit valueChanged(data);\n"", ""qobject.cpp"": ""@@ -2233,7 +2233,7 @@ bool QObject::isSignalConnected(const QMetaMethod &signal) const\n         return false;\n \n     Q_ASSERT_X(signal.mobj->cast(this) && signal.methodType() == QMetaMethod::Signal,\n-               \""QObject::isSignalConnected\"" , \""the parametter must be a signal member of the object\"");\n+               \""QObject::isSignalConnected\"" , \""the parameter must be a signal member of the object\"");\n     uint signalIndex = (signal.handle - QMetaObjectPrivate::get(signal.mobj)->methodData)/5;\n \n     if (signal.mobj->d.data[signal.handle + 4] & MethodCloned)\n""}",bug,"bug 
",bug;
5006.0,5006.0,bug,Holger Ihrig,Removed insignificant_test from tst_v8,"Removed insignificant_test from tst_v8

Problem was fixed by Change Ie172e935: Revert accidental v8 submodule version downgrade

Change-Id: Ie0467170df70e9fcc10837150103d48ddd48734b",['tests/auto/v8/v8.pro'],"{""v8.pro"": ""@@ -7,5 +7,3 @@ HEADERS += v8test.h\n CONFIG += parallel_test\n \n QT += v8-private\n-\n-CONFIG += insignificant_test # QTBUG-21402\n""}",test: deprecat,"test 
",bug;deprecat;resource;test;
8730.0,8730.0,test: deprecat,Orgad Shaneh,VCS: Fix Apply/Revert for last line of chunk,"VCS: Fix Apply/Revert for last line of chunk

Task-number: QTCREATORBUG-6487

Change-Id: Id225856e267a4c8ac6dc15d5573175e7f0ce777f",['src/plugins/vcsbase/vcsbaseeditor.cpp'],"{""vcsbaseeditor.cpp"": ""@@ -796,8 +796,7 @@ DiffChunk VCSBaseEditorWidget::diffChunk(QTextCursor cursor) const\n     DiffChunk rc;\n     // Search back for start of chunk.\n     QTextBlock block = cursor.block();\n-    QTextBlock next = block.next();\n-    if (next.isValid() && TextEditor::BaseTextDocumentLayout::foldingIndent(next) <= 1)\n+    if (block.isValid() && TextEditor::BaseTextDocumentLayout::foldingIndent(block) <= 1)\n         /* We are in a diff header, not in a chunk! DiffHighlighter sets the foldingIndent for us. */\n         return rc;\n \n""}",bug,"bug 
",bug;
9191.0,9191.0,bug,Qt Submodule Update Bot,Updated submodules.,"Updated submodules.

Change-Id: I02f30cc15f31dad35df3b9b9333fd72a095c92d8","['qtbase', 'qtquick3d', 'qtlocation', 'qtqa', 'qtmultimedia', 'qtdeclarative', 'qtjsondb', 'qtdoc', 'qtsystems']","{""qtbase"": ""@@ -1 +1 @@\n-Subproject commit 577feb71ca98021804bd0111858a48f8421e08f0\n+Subproject commit e9478a1e8a2c49560c8964fc7bf5d6172f6978b2\n"", ""qtdeclarative"": ""@@ -1 +1 @@\n-Subproject commit 82dac4c5c1ad7a3704558dca4d70068fe0383c17\n+Subproject commit a6f31700192cb700e6ea5b1e8b0d57c8146be0bd\n"", ""qtdoc"": ""@@ -1 +1 @@\n-Subproject commit cdd851f6a232408e856e8527d3ab72fcac61d5f0\n+Subproject commit 3e7f031375639b501ef5bf99ea2a57c95c47aed9\n"", ""qtjsondb"": ""@@ -1 +1 @@\n-Subproject commit 3d459ec9800a04fd2ea8ecd25a130eb8c390abc0\n+Subproject commit 58026e33401cc35647c20f62ebb1860222ef5ae6\n"", ""qtlocation"": ""@@ -1 +1 @@\n-Subproject commit de0545a022880cf0f3b4cab73dc73bb9b33ed624\n+Subproject commit ffa2417a04fc7bd94df5ab76d963db867fee05d9\n"", ""qtmultimedia"": ""@@ -1 +1 @@\n-Subproject commit d0655b3ced1cb8aa74f84dcb15a8cccb24564971\n+Subproject commit 6ea8d63729dd1f4cb392d079b9b03f9ba9199eb1\n"", ""qtqa"": ""@@ -1 +1 @@\n-Subproject commit 2499dd279d6f84f8006e5ed590fe226c76b79abe\n+Subproject commit f09f087494d51893c7c77dbca0108a928ca40bff\n"", ""qtquick3d"": ""@@ -1 +1 @@\n-Subproject commit 201294d05aa1430ef6d96ebf8053ed982ad869ea\n+Subproject commit 03c073181b1842efe9d8ea7e7f1d774f4bc76404\n"", ""qtsystems"": ""@@ -1 +1 @@\n-Subproject commit 194a8079e12bcfbaeb2764fdac366ebfcab3dead\n+Subproject commit d55b80a9b5f00cf6c88442952d0f9e474a69d41d\n""}",resource,"merge 
",feature;
19251.0,19251.0,resource,hjk,debugger: make tooltips non-editable,"debugger: make tooltips non-editable

Task-number: QTCREATORBUG-7028
Change-Id: I8b70435df8b958961204f8498f63b0752a6ad0bf","['src/plugins/debugger/debuggertooltipmanager.cpp', 'src/plugins/debugger/watchhandler.cpp']","{""debuggertooltipmanager.cpp"": ""@@ -905,6 +905,7 @@ DebuggerToolTipTreeView::DebuggerToolTipTreeView(QWidget *parent) :\n     QTreeView(parent)\n {\n     setHeaderHidden(true);\n+    setEditTriggers(NoEditTriggers);\n \n     setUniformRowHeights(true);\n     setVerticalScrollBarPolicy(Qt::ScrollBarAlwaysOff);\n"", ""watchhandler.cpp"": ""@@ -954,7 +954,7 @@ Qt::ItemFlags WatchModel::flags(const QModelIndex &idx) const\n             if (idx.column() == 1 && data.valueEditable)\n                 return editable; // Watcher values are sometimes editable.\n         }\n-    } else {\n+    } else if (data.isLocal()) {\n         if (idx.column() == 1 && data.valueEditable)\n             return editable; // Locals values are sometimes editable.\n     }\n""}",feature,"bug 
",bug;
25807.0,25807.0,feature,Simon Hausmann,Avoid trying to load libthai again and again if it's not present,"Avoid trying to load libthai again and again if it's not present

Change-Id: I3bcbde7bbb307fb27c36709c33c8ff5cd09ab7f8",['src/3rdparty/harfbuzz/src/harfbuzz-thai.c'],"{""harfbuzz-thai.c"": ""@@ -53,12 +53,14 @@ static th_render_cell_win_def th_render_cell_win = 0;\n static th_render_cell_mac_def th_render_cell_mac = 0;\n \n static int init_libthai() {\n-    if (!th_brk || !th_next_cell || !th_render_cell_tis || !th_render_cell_win || !th_render_cell_mac) {\n+    static HB_Bool initialized = false;\n+    if (!initialized && (!th_brk || !th_next_cell || !th_render_cell_tis || !th_render_cell_win || !th_render_cell_mac)) {\n         th_brk = (th_brk_def) HB_Library_Resolve(\""thai\"", (int)LIBTHAI_MAJOR, \""th_brk\"");\n         th_next_cell = (th_next_cell_def)HB_Library_Resolve(\""thai\"", LIBTHAI_MAJOR, \""th_next_cell\"");\n         th_render_cell_tis = (th_render_cell_tis_def) HB_Library_Resolve(\""thai\"", (int)LIBTHAI_MAJOR, \""th_render_cell_tis\"");\n         th_render_cell_win = (th_render_cell_win_def) HB_Library_Resolve(\""thai\"", (int)LIBTHAI_MAJOR, \""th_render_cell_win\"");\n         th_render_cell_mac = (th_render_cell_mac_def) HB_Library_Resolve(\""thai\"", (int)LIBTHAI_MAJOR, \""th_render_cell_mac\"");\n+        initialized = true;\n     }\n     if (th_brk && th_next_cell && th_render_cell_tis && th_render_cell_win && th_render_cell_mac)\n         return 1;\n""}",bug,"bug 
",others;
4707.0,4707.0,bug,Sarah Jane Smith,Fix problems with spaces.,"Fix problems with spaces.

This version required that it be quoted, so remove that problem by
taking out the spaces.

Change-Id: Ide167f0d8d65ea7f90b837872010f64a284d9229
Reviewed-on: http://codereview.qt.nokia.com/3826
Reviewed-by: Qt Sanity Bot <qt_sanity_bot@ovi.com>
Reviewed-by: Patrick Burke <patrick.burke@nokia.com>",['doc/src/qt3d-building.qdoc'],"{""qt3d-building.qdoc"": ""@@ -90,7 +90,7 @@\n     \\bold{Special note: Harmattan SDK.}  When using the Harmattan support in the Qt SDK:\n     \\list\n         \\o in Step 2 below ensure you choose the appropriate Qt Build eg \\c{Meego 1.2 Harmattan API}; and\n-        \\o in Step 3 under \\c{Build Steps > QMake > Additional arguments} add in \\c{CONFIG += qtc_harmattan}\n+        \\o in Step 3 under \\c{Build Steps > QMake > Additional arguments} add in \\c{CONFIG+=qtc_harmattan}\n     \\endlist\n \n     \\image build-qt3d-qtcreator-1.png\n""}",resource,"bug, resource 
",bug;deprecat;
5347.0,5347.0,resource,Alan Alpert (Inactive),Constrain while loop on item count,"Constrain while loop on item count

pos won't necessarily change, but item count does like in the above loop

Task-number: QTBUG-21315
Change-Id: Iaedabeacf4ebe3cd0505193395047b3d65a09442",['src/declarative/items/qsgpathview.cpp'],"{""qsgpathview.cpp"": ""@@ -1367,7 +1367,7 @@ void QSGPathView::refill()\n             }\n             ++it;\n         } else {\n-//            qDebug() << \""release\"";\n+            // qDebug() << \""release\"";\n             d->updateItem(item, 1.0);\n             d->releaseItem(item);\n             if (it == d->items.begin()) {\n@@ -1397,7 +1397,7 @@ void QSGPathView::refill()\n             }\n             qreal pos = d->positionOfIndex(idx);\n             while ((pos > startPos || !d->items.count()) && d->items.count() < count) {\n-    //            qDebug() << \""append\"" << idx;\n+                // qDebug() << \""append\"" << idx;\n                 QSGItem *item = d->getItem(idx);\n                 if (d->model->completePending())\n                     item->setZ(idx+1);\n@@ -1411,6 +1411,7 @@ void QSGPathView::refill()\n                 d->updateItem(item, pos);\n                 if (d->model->completePending())\n                     d->model->completeItem();\n+                int lastIdx = idx;\n                 ++idx;\n                 if (idx >= d->modelCount)\n                     idx = 0;\n@@ -1421,8 +1422,8 @@ void QSGPathView::refill()\n             if (idx < 0)\n                 idx = d->modelCount - 1;\n             pos = d->positionOfIndex(idx);\n-            while (pos >= 0.0 && pos < startPos) {\n-    //            qDebug() << \""prepend\"" << idx;\n+            while ((pos >= 0.0 && pos < startPos) && d->items.count() < count) {\n+                // qDebug() << \""prepend\"" << idx;\n                 QSGItem *item = d->getItem(idx);\n                 if (d->model->completePending())\n                     item->setZ(idx+1);\n""}",bug,"bug 
",bug;
7808.0,7808.0,bug ,Martin Jones,Ensure that chained incubation works from componentCompleted.,"Ensure that chained incubation works from componentCompleted.

Make chained AsynchronousIfNested initiated from componentComplete
work correctly, i.e. asynchronous incubator is not Ready until
all chained creation is Ready.

Change-Id: I286cc10e2f09e36dcc6034f3f23681e833d7e6e8","['tests/auto/declarative/qdeclarativeincubator/testtypes.h', 'src/declarative/qml/qdeclarativeengine.cpp', 'src/declarative/qml/qdeclarativevme_p.h', 'tests/auto/declarative/qdeclarativeincubator/tst_qdeclarativeincubator.cpp', 'src/declarative/qml/qdeclarativeincubator_p.h', 'src/declarative/qml/qdeclarativeincubator.cpp', 'src/declarative/qml/qdeclarativevme.cpp', 'tests/auto/declarative/qdeclarativeincubator/testtypes.cpp', 'src/declarative/qml/qdeclarativecontext_p.h', 'tests/auto/declarative/qdeclarativeincubator/data/chainInCompletion.qml', 'src/declarative/qml/qdeclarativecontext.cpp']","{""qdeclarativecontext.cpp"": ""@@ -511,7 +511,7 @@ QObject *QDeclarativeContextPrivate::context_at(QDeclarativeListProperty<QObject\n \n QDeclarativeContextData::QDeclarativeContextData()\n : parent(0), engine(0), isInternal(false), ownedByParent(false), isJSContext(false), \n-  isPragmaLibraryContext(false), publicContext(0), activeVME(0), propertyNames(0), contextObject(0), \n+  isPragmaLibraryContext(false), publicContext(0), activeVMEData(0), propertyNames(0), contextObject(0), \n   imports(0), childContexts(0), nextChild(0), prevChild(0), expressions(0), contextObjects(0), \n   contextGuards(0), idValues(0), idValueCount(0), linkedContext(0), componentAttached(0), \n   v4bindings(0), v8bindings(0)\n@@ -520,7 +520,7 @@ QDeclarativeContextData::QDeclarativeContextData()\n \n QDeclarativeContextData::QDeclarativeContextData(QDeclarativeContext *ctxt)\n : parent(0), engine(0), isInternal(false), ownedByParent(false), isJSContext(false), \n-  isPragmaLibraryContext(false), publicContext(ctxt), activeVME(0), propertyNames(0), \n+  isPragmaLibraryContext(false), publicContext(ctxt), activeVMEData(0), propertyNames(0), \n   contextObject(0), imports(0), childContexts(0), nextChild(0), prevChild(0), expressions(0), \n   contextObjects(0), contextGuards(0), idValues(0), idValueCount(0), linkedContext(0), \n   componentAttached(0), v4bindings(0), v8bindings(0)\n"", ""qdeclarativecontext_p.h"": ""@@ -146,9 +146,8 @@ public:\n     quint32 dummy:28;\n     QDeclarativeContext *publicContext;\n \n-    // VME that is constructing this context if any\n-    // XXX remove if possible\n-    QDeclarativeVME *activeVME;\n+    // VME data that is constructing this context if any\n+    void *activeVMEData;\n \n     // Property name cache\n     QDeclarativeIntegerCache *propertyNames;\n"", ""qdeclarativeengine.cpp"": ""@@ -542,6 +542,9 @@ QDeclarativeEngine::~QDeclarativeEngine()\n \n     // ensure we clean up QObjects with JS ownership\n     d->v8engine()->gc();\n+\n+    if (d->incubationController)\n+        d->incubationController->d = 0;\n }\n \n /*! \\fn void QDeclarativeEngine::quit()\n"", ""qdeclarativeincubator.cpp"": ""@@ -65,8 +65,8 @@ void QDeclarativeEnginePrivate::incubate(QDeclarativeIncubator &i, QDeclarativeC\n         QDeclarativeIncubatorPrivate *parentIncubator = 0;\n         QDeclarativeContextData *cctxt = forContext;\n         while (cctxt) {\n-            if (cctxt->activeVME) {\n-                parentIncubator = (QDeclarativeIncubatorPrivate *)cctxt->activeVME->data;\n+            if (cctxt->activeVMEData) {\n+                parentIncubator = (QDeclarativeIncubatorPrivate *)cctxt->activeVMEData;\n                 break;\n             }\n             cctxt = cctxt->parent;\n@@ -113,6 +113,8 @@ and it does not take ownership of it.\n void QDeclarativeEngine::setIncubationController(QDeclarativeIncubationController *controller)\n {\n     Q_D(QDeclarativeEngine);\n+    if (d->incubationController)\n+        d->incubationController->d = 0;\n     d->incubationController = controller;\n     if (controller) controller->d = d;\n }\n@@ -155,6 +157,10 @@ void QDeclarativeIncubatorPrivate::clear()\n         component->release();\n         component = 0;\n     }\n+    if (!rootContext.isNull()) {\n+        rootContext->activeVMEData = 0;\n+        rootContext = 0;\n+    }\n \n     if (nextWaitingFor.isInList()) {\n         Q_ASSERT(waitingOnMe);\n@@ -250,6 +256,8 @@ void QDeclarativeIncubationController::incubatingObjectCountChanged(int incubati\n \n void QDeclarativeIncubatorPrivate::incubate(QDeclarativeVME::Interrupt &i)\n {\n+    if (!component)\n+        return;\n     typedef QDeclarativeIncubatorPrivate IP;\n     QRecursionWatcher<IP, &IP::recursion> watcher(this);\n \n@@ -311,7 +319,9 @@ void QDeclarativeIncubatorPrivate::incubate(QDeclarativeVME::Interrupt &i)\n             if (watcher.hasRecursed())\n                 return;\n \n-            if (vme.complete(i)) {\n+            QDeclarativeContextData *ctxt = vme.complete(i);\n+            if (ctxt) {\n+                rootContext = ctxt;\n                 progress = QDeclarativeIncubatorPrivate::Completed;\n                 goto finishIncubate;\n             }\n@@ -570,7 +580,6 @@ void QDeclarativeIncubator::forceCompletion()\n         if (Loading == status())\n             d->incubate(i);\n     }\n-\n }\n \n /*!\n"", ""qdeclarativeincubator_p.h"": ""@@ -46,6 +46,7 @@\n #include <private/qdeclarativevme_p.h>\n #include <private/qrecursionwatcher_p.h>\n #include <private/qdeclarativeengine_p.h>\n+#include <private/qdeclarativecontext_p.h>\n \n //\n //  W A R N I N G\n@@ -83,6 +84,7 @@ public:\n     Progress progress;\n \n     QObject *result;\n+    QDeclarativeGuardedContextData rootContext;\n     QDeclarativeCompiledData *component;\n     QDeclarativeVME vme;\n     QDeclarativeVMEGuard vmeGuard;\n"", ""qdeclarativevme.cpp"": ""@@ -310,7 +310,7 @@ QObject *QDeclarativeVME::run(QList<QDeclarativeError> *errors,\n             }\n             if (states.count() == 1) {\n                 rootContext = CTXT;\n-                rootContext->activeVME = this;\n+                rootContext->activeVMEData = data;\n             }\n             if (states.count() == 1 && !creationContext.isNull()) {\n                 // A component that is logically created within another component instance shares the \n@@ -1207,7 +1207,7 @@ void QDeclarativeVME::reset()\n         delete objects.at(0); \n     \n     if (!rootContext.isNull()) \n-        rootContext->activeVME = 0;\n+        rootContext->activeVMEData = 0;\n \n     // Remove the QDeclarativeParserStatus and QDeclarativeAbstractBinding back pointers\n     blank(parserStatus);\n@@ -1342,7 +1342,7 @@ void **QDeclarativeVME::instructionJumpTable()\n }\n #endif\n \n-bool QDeclarativeVME::complete(const Interrupt &interrupt) \n+QDeclarativeContextData *QDeclarativeVME::complete(const Interrupt &interrupt) \n {\n     Q_ASSERT(engine ||\n              (bindValues.isEmpty() &&\n@@ -1352,7 +1352,7 @@ bool QDeclarativeVME::complete(const Interrupt &interrupt)\n               finalizeCallbacks.isEmpty()));\n \n     if (!engine)\n-        return true;\n+        return 0;\n \n     ActiveVMERestorer restore(this, QDeclarativeEnginePrivate::get(engine));\n     QRecursionWatcher<QDeclarativeVME, &QDeclarativeVME::recursion> watcher(this);\n@@ -1367,7 +1367,7 @@ bool QDeclarativeVME::complete(const Interrupt &interrupt)\n         }\n \n         if (watcher.hasRecursed() || interrupt.shouldInterrupt())\n-            return false;\n+            return 0;\n     }\n     bindValues.deallocate();\n \n@@ -1380,7 +1380,7 @@ bool QDeclarativeVME::complete(const Interrupt &interrupt)\n         }\n         \n         if (watcher.hasRecursed() || interrupt.shouldInterrupt())\n-            return false;\n+            return 0;\n     }\n     parserStatus.deallocate();\n \n@@ -1394,12 +1394,9 @@ bool QDeclarativeVME::complete(const Interrupt &interrupt)\n         emit a->completed();\n \n         if (watcher.hasRecursed() || interrupt.shouldInterrupt())\n-            return false;\n+            return 0;\n     }\n \n-    if (!rootContext.isNull()) \n-        rootContext->activeVME = 0;\n-\n     for (int ii = 0; ii < finalizeCallbacks.count(); ++ii) {\n         QDeclarativeEnginePrivate::FinalizeCallback callback = finalizeCallbacks.at(ii);\n         QObject *obj = callback.first;\n@@ -1408,13 +1405,17 @@ bool QDeclarativeVME::complete(const Interrupt &interrupt)\n             QMetaObject::metacall(obj, QMetaObject::InvokeMetaMethod, callback.second, args);\n         }\n         if (watcher.hasRecursed())\n-            return false;\n+            return 0;\n     }\n     finalizeCallbacks.clear();\n \n+    QDeclarativeContextData *rv = rootContext;\n+\n     reset();\n \n-    return true;\n+    if (rv) rv->activeVMEData = data;\n+\n+    return rv;\n }\n \n void QDeclarativeVME::blank(QFiniteStack<QDeclarativeAbstractBinding *> &bs)\n"", ""qdeclarativevme_p.h"": ""@@ -125,7 +125,7 @@ public:\n     void reset();\n \n     QObject *execute(QList<QDeclarativeError> *errors, const Interrupt & = Interrupt());\n-    bool complete(const Interrupt & = Interrupt());\n+    QDeclarativeContextData *complete(const Interrupt & = Interrupt());\n \n private:\n     friend class QDeclarativeVMEGuard;\n"", ""chainInCompletion.qml"": ""@@ -0,0 +1,5 @@\n+import Qt.test 1.0\n+\n+SelfRegistering {\n+    property variant a: CompletionCallback {}\n+}\n"", ""testtypes.cpp"": ""@@ -101,9 +101,37 @@ void CallbackRegisteringType::registerCallback(callback c, void *d)\n     m_data = d;\n }\n \n+CompletionCallbackType::callback CompletionCallbackType::m_callback = 0;\n+void *CompletionCallbackType::m_data = 0;\n+CompletionCallbackType::CompletionCallbackType()\n+{\n+}\n+\n+void CompletionCallbackType::classBegin()\n+{\n+}\n+\n+void CompletionCallbackType::componentComplete()\n+{\n+    if (m_callback) m_callback(this, m_data);\n+}\n+\n+void CompletionCallbackType::clearCallback()\n+{\n+    m_callback = 0;\n+    m_data = 0;\n+}\n+\n+void CompletionCallbackType::registerCallback(callback c, void *d)\n+{\n+    m_callback = c;\n+    m_data = d;\n+}\n+\n void registerTypes()\n {\n     qmlRegisterType<SelfRegisteringType>(\""Qt.test\"", 1,0, \""SelfRegistering\"");\n     qmlRegisterType<CompletionRegisteringType>(\""Qt.test\"", 1,0, \""CompletionRegistering\"");\n     qmlRegisterType<CallbackRegisteringType>(\""Qt.test\"", 1,0, \""CallbackRegistering\"");\n+    qmlRegisterType<CompletionCallbackType>(\""Qt.test\"", 1,0, \""CompletionCallback\"");\n }\n"", ""testtypes.h"": ""@@ -100,6 +100,24 @@ private:\n     static CompletionRegisteringType *m_me;\n };\n \n+class CompletionCallbackType : public QObject, public QDeclarativeParserStatus\n+{\n+Q_OBJECT\n+public:\n+    CompletionCallbackType();\n+\n+    virtual void classBegin();\n+    virtual void componentComplete();\n+\n+    typedef void (*callback)(CompletionCallbackType *, void *);\n+    static void clearCallback();\n+    static void registerCallback(callback, void *);\n+\n+private:\n+    static callback m_callback;\n+    static void *m_data;\n+};\n+\n void registerTypes();\n \n #endif // TESTTYPES_H\n"", ""tst_qdeclarativeincubator.cpp"": ""@@ -83,6 +83,7 @@ private slots:\n     void asynchronousIfNested();\n     void nestedComponent();\n     void chainedAsynchronousIfNested();\n+    void chainedAsynchronousIfNestedOnCompleted();\n     void selfDelete();\n \n private:\n@@ -773,6 +774,134 @@ void tst_qdeclarativeincubator::chainedAsynchronousIfNested()\n     QVERIFY(incubator2.isReady());\n }\n \n+// Checks that new AsynchronousIfNested incubators can be correctly chained if started in\n+// componentCompleted().\n+void tst_qdeclarativeincubator::chainedAsynchronousIfNestedOnCompleted()\n+{\n+    SelfRegisteringType::clearMe();\n+\n+    QDeclarativeComponent component(&engine, TEST_FILE(\""chainInCompletion.qml\""));\n+    QVERIFY(component.isReady());\n+\n+    QDeclarativeComponent c1(&engine, TEST_FILE(\""chainedAsynchronousIfNested.qml\""));\n+    QVERIFY(c1.isReady());\n+\n+    struct MyIncubator : public QDeclarativeIncubator {\n+        MyIncubator(MyIncubator *next, QDeclarativeComponent *component, QDeclarativeContext *ctxt)\n+        : QDeclarativeIncubator(AsynchronousIfNested), next(next), component(component), ctxt(ctxt) {}\n+\n+    protected:\n+        virtual void statusChanged(Status s) {\n+            if (s == Ready && next) {\n+                component->create(*next, 0, ctxt);\n+            }\n+        }\n+\n+    private:\n+        MyIncubator *next;\n+        QDeclarativeComponent *component;\n+        QDeclarativeContext *ctxt;\n+    };\n+\n+    struct CallbackData {\n+        CallbackData(QDeclarativeComponent *c, MyIncubator *i, QDeclarativeContext *ct)\n+            : component(c), incubator(i), ctxt(ct) {}\n+        QDeclarativeComponent *component;\n+        MyIncubator *incubator;\n+        QDeclarativeContext *ctxt;\n+        static void callback(CompletionCallbackType *o, void *data) {\n+            CallbackData *d = (CallbackData *)data;\n+            d->component->create(*d->incubator, 0, d->ctxt);\n+        }\n+    };\n+\n+    QDeclarativeIncubator incubator(QDeclarativeIncubator::Asynchronous);\n+    component.create(incubator);\n+\n+    QVERIFY(incubator.isLoading());\n+    QVERIFY(SelfRegisteringType::me() == 0);\n+\n+    while (SelfRegisteringType::me() == 0 && incubator.isLoading()) {\n+        bool b = false;\n+        controller.incubateWhile(&b);\n+    }\n+\n+    QVERIFY(SelfRegisteringType::me() != 0);\n+    QVERIFY(incubator.isLoading());\n+\n+    MyIncubator incubator3(0, &c1, qmlContext(SelfRegisteringType::me()));\n+    MyIncubator incubator2(&incubator3, &c1, qmlContext(SelfRegisteringType::me()));\n+    MyIncubator incubator1(&incubator2, &c1, qmlContext(SelfRegisteringType::me()));\n+\n+    // start incubator1 in componentComplete\n+    CallbackData cd(&c1, &incubator1, qmlContext(SelfRegisteringType::me()));\n+    CompletionCallbackType::registerCallback(&CallbackData::callback, &cd);\n+\n+    while (!incubator1.isLoading()) {\n+        QVERIFY(incubator.isLoading());\n+        QVERIFY(incubator2.isNull());\n+        QVERIFY(incubator3.isNull());\n+\n+        bool b = false;\n+        controller.incubateWhile(&b);\n+    }\n+\n+    QVERIFY(incubator.isLoading());\n+    QVERIFY(incubator1.isLoading());\n+    QVERIFY(incubator2.isNull());\n+    QVERIFY(incubator3.isNull());\n+\n+    while (incubator1.isLoading()) {\n+        QVERIFY(incubator.isLoading());\n+        QVERIFY(incubator1.isLoading());\n+        QVERIFY(incubator2.isNull());\n+        QVERIFY(incubator3.isNull());\n+\n+        bool b = false;\n+        controller.incubateWhile(&b);\n+    }\n+\n+    QVERIFY(incubator.isLoading());\n+    QVERIFY(incubator1.isReady());\n+    QVERIFY(incubator2.isLoading());\n+    QVERIFY(incubator3.isNull());\n+\n+    while (incubator2.isLoading()) {\n+        QVERIFY(incubator.isLoading());\n+        QVERIFY(incubator1.isReady());\n+        QVERIFY(incubator2.isLoading());\n+        QVERIFY(incubator3.isNull());\n+\n+        bool b = false;\n+        controller.incubateWhile(&b);\n+    }\n+\n+    QVERIFY(incubator.isLoading());\n+    QVERIFY(incubator1.isReady());\n+    QVERIFY(incubator2.isReady());\n+    QVERIFY(incubator3.isLoading());\n+\n+    while (incubator3.isLoading()) {\n+        QVERIFY(incubator.isLoading());\n+        QVERIFY(incubator1.isReady());\n+        QVERIFY(incubator2.isReady());\n+        QVERIFY(incubator3.isLoading());\n+\n+        bool b = false;\n+        controller.incubateWhile(&b);\n+    }\n+\n+    {\n+    bool b = true;\n+    controller.incubateWhile(&b);\n+    }\n+\n+    QVERIFY(incubator.isReady());\n+    QVERIFY(incubator1.isReady());\n+    QVERIFY(incubator2.isReady());\n+    QVERIFY(incubator3.isReady());\n+}\n+\n void tst_qdeclarativeincubator::selfDelete()\n {\n     struct MyIncubator : public QDeclarativeIncubator {\n""}",bug,"bug, test 
",others;
24929.0,24929.0,bug,Aaron McCarthy,Fix inconsistent API for clear() and reset() in models.,"Fix inconsistent API for clear() and reset() in models.

Models in Qt Location contained a mixture of clear() and reset() methods.
Simplify by only providing a reset() method in all models.

Change-Id: I40505793d9b387322a455064fb74e91f8052831f","['tests/auto/declarative_ui/tst_map_geocoding.qml', 'src/imports/location/declarativeplaces/qdeclarativesearchmodelbase.cpp', 'src/imports/location/qdeclarativegeoroutemodel.cpp', 'src/imports/location/qdeclarativegeoroutemodel_p.h', 'tests/auto/declarative_ui/tst_map_itemview.qml', 'src/imports/location/declarativeplaces/qdeclarativerecommendationmodel.cpp', 'src/imports/location/qdeclarativegeocodemodel.cpp', 'src/imports/location/declarativeplaces/qdeclarativesearchresultmodel.cpp', 'examples/declarative/mapviewer/content/map/MapComponent.qml', 'src/imports/location/declarativeplaces/qdeclarativesearchmodelbase.h', 'examples/declarative/places/content/places/SearchResultView.qml', 'examples/declarative/mapviewer/mapviewer.qml', 'src/imports/location/declarativeplaces/qdeclarativesearchsuggestionmodel.cpp', 'src/imports/location/qdeclarativegeocodemodel_p.h']","{""MapComponent.qml"": ""@@ -768,7 +768,7 @@ Map {\n         onClicked: {\n             switch (button) {\n                 case \""Delete\"": {//delete route\n-                    routeModel.clear()\n+                    routeModel.reset()\n                     routeInfoModel.update()\n                     break;\n                 }\n@@ -798,7 +798,7 @@ Map {\n                     break;\n                 }\n                 case \""Delete\"": {\n-                    geocodeModel.clear()\n+                    geocodeModel.reset()\n                     break;\n                 }\n             }\n"", ""mapviewer.qml"": ""@@ -403,7 +403,6 @@ Item {\n             geocodeAddress.postalCode = dialogModel.get(4).inputText\n \n             // send the geocode request\n-            map.geocodeModel.clear()\n             map.geocodeModel.query = geocodeAddress\n             map.geocodeModel.update()\n         }\n@@ -436,7 +435,6 @@ Item {\n             messageDialog.state = \""\""\n             reverseGeocodeCoordinate.latitude = dialogModel.get(0).inputText\n             reverseGeocodeCoordinate.longitude = dialogModel.get(1).inputText\n-            map.geocodeModel.clear()\n             map.geocodeModel.query = reverseGeocodeCoordinate\n             map.geocodeModel.update();\n         }\n"", ""SearchResultView.qml"": ""@@ -110,7 +110,7 @@ Item {\n \n                         Button {\n                             text: qsTr(\""Clear\"")\n-                            onClicked: placeSearchModel.clear()\n+                            onClicked: placeSearchModel.reset()\n \n                             anchors.horizontalCenter: parent.horizontalCenter\n                         }\n"", ""qdeclarativerecommendationmodel.cpp"": ""@@ -185,6 +185,9 @@ QT_USE_NAMESPACE\n     This property holds the status of the model.  It can be one of:\n \n     \\table\n+        \\row\n+            \\li PlaceRecommendationModel.Null\n+            \\li No search query has been executed.  The model is empty.\n         \\row\n             \\li PlaceRecommendationModel.Ready\n             \\li The search query has completed and the result are available.\n@@ -216,9 +219,10 @@ QT_USE_NAMESPACE\n */\n \n /*!\n-    \\qmlmethod PlaceRecommendationModel::clear()\n+    \\qmlmethod PlaceRecommendationModel::reset()\n \n-    Clears the current place recommendations stored in the model.\n+    Resets the model.  All place recommendations are cleared, any outstanding requests are aborted\n+    and possible errors are cleared.  Model status will be set to PlaceRecommendationModel.Null.\n */\n \n /*!\n"", ""qdeclarativesearchmodelbase.cpp"": ""@@ -217,10 +217,11 @@ void QDeclarativeSearchModelBase::cancel()\n /*!\n     \\internal\n */\n-void QDeclarativeSearchModelBase::clear()\n+void QDeclarativeSearchModelBase::reset()\n {\n     beginResetModel();\n     clearData();\n+    setStatus(Null);\n     endResetModel();\n }\n \n"", ""qdeclarativesearchmodelbase.h"": ""@@ -74,6 +74,7 @@ class QDeclarativeSearchModelBase : public QAbstractListModel, public QQmlParser\n \n public:\n     enum Status {\n+        Null,\n         Ready,\n         Executing,\n         Error\n@@ -99,7 +100,7 @@ public:\n \n     Q_INVOKABLE void execute();\n     Q_INVOKABLE void cancel();\n-    Q_INVOKABLE void clear();\n+    Q_INVOKABLE void reset();\n \n     Q_INVOKABLE QString errorString() const;\n \n"", ""qdeclarativesearchresultmodel.cpp"": ""@@ -238,6 +238,9 @@ QT_USE_NAMESPACE\n     This property holds the status of the model.  It can be one of:\n \n     \\table\n+        \\row\n+            \\li PlaceSearchModel.Null\n+            \\li No search query has been executed.  The model is empty.\n         \\row\n             \\li PlaceSearchModel.Ready\n             \\li The search query has completed, and the results are available.\n@@ -269,9 +272,10 @@ QT_USE_NAMESPACE\n */\n \n /*!\n-    \\qmlmethod PlaceSearchModel::clear()\n+    \\qmlmethod PlaceSearchModel::reset()\n \n-    Clears the current search results stored in the model.\n+    Resets the model.  All search results are cleared, any outstanding requests are aborted and\n+    possible errors are cleared.  Model status will be set to PlaceSearchModel.Null.\n */\n \n /*!\n"", ""qdeclarativesearchsuggestionmodel.cpp"": ""@@ -137,6 +137,9 @@ QT_USE_NAMESPACE\n     This property holds the status of the model.  It can be one of:\n \n     \\table\n+        \\row\n+            \\li SearchSuggestionModel.Null\n+            \\li No search query has been executed.  The model is empty.\n         \\row\n             \\li SearchSuggestionModel.Ready\n             \\li The search query has completed, and the results are available.\n@@ -167,9 +170,10 @@ QT_USE_NAMESPACE\n */\n \n /*!\n-    \\qmlmethod PlaceSearchSuggestionModel::clear()\n+    \\qmlmethod PlaceSearchSuggestionModel::reset()\n \n-    Clears the current search suggestions stored in the model.\n+    Resets the model.  All search suggestions are cleared, any outstanding requests are aborted and\n+    possible errors are cleared.  Model status will be set to PlaceSearchSuggestionModel.Null.\n */\n \n \n"", ""qdeclarativegeocodemodel.cpp"": ""@@ -579,21 +579,6 @@ void QDeclarativeGeocodeModel::setOffset(int offset)\n     emit offsetChanged();\n }\n \n-/*!\n-    \\qmlmethod QtLocation5::GeocodeModel::clear()\n-\n-    Clears the location data of the model. Any outstanding requests or\n-    errors remain intact.\n-*/\n-\n-void QDeclarativeGeocodeModel::clear()\n-{\n-    bool hasChanged = !declarativeLocations_.isEmpty();\n-    setLocations(QList<QGeoLocation>());\n-    if (hasChanged)\n-        emit countChanged();\n-}\n-\n /*!\n     \\qmlmethod QtLocation5::GeocodeModel::reset()\n \n@@ -604,9 +589,15 @@ void QDeclarativeGeocodeModel::clear()\n \n void QDeclarativeGeocodeModel::reset()\n {\n-    clear();\n+    beginResetModel();\n+    if (!declarativeLocations_.isEmpty()) {\n+        setLocations(QList<QGeoLocation>());\n+        emit countChanged();\n+    }\n+    endResetModel();\n+\n     abortRequest();\n-    setErrorString(\""\"");\n+    setErrorString(QString());\n     setError(NoError);\n     setStatus(QDeclarativeGeocodeModel::Null);\n }\n"", ""qdeclarativegeocodemodel_p.h"": ""@@ -133,7 +133,6 @@ public:\n \n     QVariant query() const;\n     void setQuery(const QVariant& query);\n-    Q_INVOKABLE void clear();\n     Q_INVOKABLE void reset();\n \n Q_SIGNALS:\n"", ""qdeclarativegeoroutemodel.cpp"": ""@@ -153,26 +153,6 @@ int QDeclarativeGeoRouteModel::count() const\n     return routes_.count();\n }\n \n-/*!\n-    \\qmlmethod QtLocation5::RouteModel::clear()\n-\n-    Clears the route data of the model. Any outstanding requests or\n-    errors remain intact.\n-*/\n-\n-void QDeclarativeGeoRouteModel::clear()\n-{\n-    int oldCount = routes_.count();\n-    beginResetModel();\n-    qDeleteAll(routes_);\n-    routes_.clear();\n-    if (oldCount) {\n-       emit countChanged();\n-       emit routesChanged();\n-    }\n-    endResetModel();\n-}\n-\n /*!\n     \\qmlmethod QtLocation5::RouteModel::reset()\n \n@@ -183,9 +163,17 @@ void QDeclarativeGeoRouteModel::clear()\n \n void QDeclarativeGeoRouteModel::reset()\n {\n-    clear();\n+    if (!routes_.isEmpty()) {\n+        beginResetModel();\n+        qDeleteAll(routes_);\n+        routes_.clear();\n+        emit countChanged();\n+        emit routesChanged();\n+        endResetModel();\n+    }\n+\n     abortRequest();\n-    setErrorString(\""\"");\n+    setErrorString(QString());\n     setError(NoError);\n     setStatus(QDeclarativeGeoRouteModel::Null);\n }\n"", ""qdeclarativegeoroutemodel_p.h"": ""@@ -125,7 +125,6 @@ public:\n \n     int count() const;\n     Q_INVOKABLE QDeclarativeGeoRoute* get(int index);\n-    Q_INVOKABLE void clear();\n     Q_INVOKABLE void reset();\n \n Q_SIGNALS:\n"", ""tst_map_geocoding.qml"": ""@@ -181,7 +181,6 @@ Item {\n          SignalSpy {id: countInvalidSpy; target: invalidModel; signalName: \""countChanged\""}\n          function test_invalid_plugin() {\n              invalidModel.update()\n-             invalidModel.clear()\n              invalidModel.reset()\n              invalidModel.update()\n              invalidModel.get(-1)\n@@ -275,7 +274,7 @@ Item {\n     TestCase {\n         name: \""Map GeocodeModel basic (reverse) geocoding\""\n         function clear_slack_model() {\n-            slackModel.clear()\n+            slackModel.reset()\n             locationsSlackSpy.clear()\n             countSlackSpy.clear()\n             querySlackSpy.clear()\n@@ -285,7 +284,7 @@ Item {\n             slackModel.offset = 0\n         }\n         function clear_immediate_model() {\n-            immediateModel.clear()\n+            immediateModel.reset()\n             locationsImmediateSpy.clear()\n             countImmediateSpy.clear()\n             queryImmediateSpy.clear()\n@@ -389,7 +388,7 @@ Item {\n             immediateModel.query = errorCoordinate1\n             immediateModel.update()\n             if (immediateModel.errorString != \""\"")\n-                compare (errorStringImmediateSpy.count, 2) // the previous error is cleared upon update()\n+                compare (errorStringImmediateSpy.count, 1) // the previous error is cleared upon update()\n             else\n                 compare (errorImmediateSpy.count, 1)\n             compare (immediateModel.errorString, \""error\"")\n@@ -424,7 +423,7 @@ Item {\n             testQuerySpy.clear()\n             locationsSpy.clear()\n             testStatusSpy.clear()\n-            testModel.clear()\n+            testModel.reset()\n             countSpy.clear()\n             compare (locationsSpy.count, 0)\n             compare (testModel.errorString, \""\"")\n@@ -448,7 +447,7 @@ Item {\n             testQuerySpy.clear()\n             locationsSpy.clear()\n             testStatusSpy.clear()\n-            testModel.clear()\n+            testModel.reset()\n             countSpy.clear()\n             compare (locationsSpy.count, 0)\n             compare (testModel.errorString, \""\"")\n@@ -473,7 +472,7 @@ Item {\n             tryCompare(testModel, \""count\"", 0)\n             compare(testModel.errorString, \""2\"")\n             compare (testModel.error, GeocodeModel.CommunicationError)\n-            testModel.clear()\n+            testModel.reset()\n             tryCompare(countSpy, \""count\"", 2)\n             compare (testModel.count, 0)\n         }\n@@ -495,7 +494,7 @@ Item {\n             compare (countSlackSpy.count, 1)\n             compare (locationsSlackSpy.count, 1)\n             // Frequent updates, previous requests are aborted\n-            slackModel.clear()\n+            slackModel.reset()\n             locationsSlackSpy.clear()\n             countSlackSpy.clear()\n             slackModel.update()\n@@ -544,7 +543,7 @@ Item {\n \n         function test_delayed_geocode() {\n             // basic delayed response\n-            slackModel.clear()\n+            slackModel.reset()\n             querySlackSpy.clear()\n             countSlackSpy.clear()\n             locationsSlackSpy.clear()\n@@ -561,7 +560,7 @@ Item {\n             compare (locationsSlackSpy.count, 1)\n             compare (slackModel.count, 7) //  slackAddress1.county)\n             // Frequent updates, previous requests are aborted\n-            slackModel.clear()\n+            slackModel.reset()\n             locationsSlackSpy.clear()\n             countSlackSpy.clear()\n             slackModel.update()\n@@ -603,7 +602,7 @@ Item {\n             compare (testModel.errorString, \""\"")\n             compare (testModel.error, GeocodeModel.NoError)\n             compare (testModel.count, 2)\n-            testModel.clear()\n+            testModel.reset()\n             tryCompare(countSpy, \""count\"", 2)\n             compare (testModel.count, 0)\n         }\n@@ -621,7 +620,7 @@ Item {\n             compare (locationsSlackSpy.count, 1)\n             compare (slackModel.count, 3) //  slackCoordinate1.longitude\n             // Frequent updates, previous requests are aborted\n-            slackModel.clear()\n+            slackModel.reset()\n             locationsSlackSpy.clear()\n             countSlackSpy.clear()\n             slackModel.update()\n"", ""tst_map_itemview.qml"": ""@@ -421,9 +421,9 @@ Item {\n             routeQuery.numberAlternativeRoutes = 3\n             routeModel.update();\n             compare(mapForTestingRouteModel.mapItems.length, 3)\n-            routeModel.clear();\n+            routeModel.reset();\n             compare(mapForTestingRouteModel.mapItems.length, 0)\n-            routeModel.clear(); // clear empty model\n+            routeModel.reset(); // clear empty model\n             routeQuery.numberAlternativeRoutes = 3\n             routeModel.update();\n             compare(mapForTestingRouteModel.mapItems.length, 3)\n""}",bug,"bug, refactor 
",bug;
25042.0,25042.0,bug ,Thiago Macieira,Remove references to to/fromAscii in QString and QByteArray main docs,"Remove references to to/fromAscii in QString and QByteArray main docs

Those functions are about to be deprecated and shouldn't be referred
to in the main documentation. Since they were temporarily changed to
mean UTF-8, this is not a behaviour change.

The next commit will update the code to match the documentation.

Change-Id: Ia8c2843c7f2b478f5691fe0224d5e631d94b1af6","['src/corelib/tools/qbytearray.cpp', 'src/corelib/tools/qstring.cpp', 'src/corelib/tools/qchar.cpp', 'src/corelib/doc/snippets/qstring/main.cpp', 'src/corelib/kernel/qvariant.cpp']","{""main.cpp"": ""@@ -765,7 +765,7 @@ void Widget::sprintfFunction()\n     char buf[BufSize];\n \n     ::snprintf(buf, BufSize, \""%lld\"", 123456789LL);\n-    QString str = QString::fromAscii(buf);\n+    QString str = QString::fromUtf8(buf);\n     //! [63]\n \n     //! [64]\n"", ""qvariant.cpp"": ""@@ -1969,7 +1969,7 @@ QEasingCurve QVariant::toEasingCurve() const\n     \\fn QByteArray QVariant::toByteArray() const\n \n     Returns the variant as a QByteArray if the variant has type() \\l\n-    ByteArray or \\l String (converted using QString::fromAscii());\n+    ByteArray or \\l String (converted using QString::fromUtf8());\n     otherwise returns an empty byte array.\n \n     \\sa canConvert(), convert()\n"", ""qbytearray.cpp"": ""@@ -1249,12 +1249,12 @@ void QByteArray::chop(int n)\n \n     Appends the string \\a str onto the end of this byte array and\n     returns a reference to this byte array. The Unicode data is\n-    converted into 8-bit characters using QString::toAscii().\n+    converted into 8-bit characters using QString::toUtf8().\n \n     If the QString contains non-ASCII Unicode characters, using this\n     operator can lead to loss of information. You can disable this\n     operator by defining \\c QT_NO_CAST_TO_ASCII when you compile your\n-    applications. You then need to call QString::toAscii() (or\n+    applications. You then need to call QString::toUtf8() (or\n     QString::toLatin1() or QString::toUtf8() or QString::toLocal8Bit())\n     explicitly if you want to convert the data to \\c{const char *}.\n */\n@@ -1613,12 +1613,12 @@ QByteArray &QByteArray::append(const QByteArray &ba)\n     \\overload\n \n     Appends the string \\a str to this byte array. The Unicode data is\n-    converted into 8-bit characters using QString::toAscii().\n+    converted into 8-bit characters using QString::toUtf8().\n \n     If the QString contains non-ASCII Unicode characters, using this\n     function can lead to loss of information. You can disable this\n     function by defining \\c QT_NO_CAST_TO_ASCII when you compile your\n-    applications. You then need to call QString::toAscii() (or\n+    applications. You then need to call QString::toUtf8() (or\n     QString::toLatin1() or QString::toUtf8() or QString::toLocal8Bit())\n     explicitly if you want to convert the data to \\c{const char *}.\n */\n@@ -1729,17 +1729,15 @@ QByteArray &QByteArray::insert(int i, const QByteArray &ba)\n \n     Inserts the string \\a str at index position \\a i in the byte\n     array. The Unicode data is converted into 8-bit characters using\n-    QString::toAscii().\n+    QString::toUtf8().\n \n     If \\a i is greater than size(), the array is first extended using\n     resize().\n \n-    If the QString contains non-ASCII Unicode characters, using this\n-    function can lead to loss of information. You can disable this\n-    function by defining \\c QT_NO_CAST_TO_ASCII when you compile your\n-    applications. You then need to call QString::toAscii() (or\n-    QString::toLatin1() or QString::toUtf8() or QString::toLocal8Bit())\n-    explicitly if you want to convert the data to \\c{const char *}.\n+    You can disable this function by defining \\c QT_NO_CAST_TO_ASCII when you\n+    compile your applications. You then need to call QString::toUtf8() (or\n+    QString::toLatin1() or QString::toLocal8Bit()) explicitly if you want to\n+    convert the data to \\c{const char *}.\n */\n \n /*!\n@@ -2053,14 +2051,12 @@ QByteArray &QByteArray::replace(const char *before, int bsize, const char *after\n \n     Replaces every occurrence of the string \\a before with the byte\n     array \\a after. The Unicode data is converted into 8-bit\n-    characters using QString::toAscii().\n+    characters using QString::toUtf8().\n \n-    If the QString contains non-ASCII Unicode characters, using this\n-    function can lead to loss of information. You can disable this\n-    function by defining \\c QT_NO_CAST_TO_ASCII when you compile your\n-    applications. You then need to call QString::toAscii() (or\n-    QString::toLatin1() or QString::toUtf8() or QString::toLocal8Bit())\n-    explicitly if you want to convert the data to \\c{const char *}.\n+    You can disable this function by defining \\c QT_NO_CAST_TO_ASCII when you\n+    compile your applications. You then need to call QString::toUtf8() (or\n+    QString::toLatin1() or QString::toLocal8Bit()) explicitly if you want to\n+    convert the data to \\c{const char *}.\n */\n \n /*! \\fn QByteArray &QByteArray::replace(const QString &before, const char *after)\n@@ -2098,12 +2094,12 @@ QByteArray &QByteArray::replace(char before, const QByteArray &after)\n \n     Replaces every occurrence of the character \\a before with the\n     string \\a after. The Unicode data is converted into 8-bit\n-    characters using QString::toAscii().\n+    characters using QString::toUtf8().\n \n     If the QString contains non-ASCII Unicode characters, using this\n     function can lead to loss of information. You can disable this\n     function by defining \\c QT_NO_CAST_TO_ASCII when you compile your\n-    applications. You then need to call QString::toAscii() (or\n+    applications. You then need to call QString::toUtf8() (or\n     QString::toLatin1() or QString::toUtf8() or QString::toLocal8Bit())\n     explicitly if you want to convert the data to \\c{const char *}.\n */\n@@ -2244,14 +2240,12 @@ int QByteArray::indexOf(const QByteArray &ba, int from) const\n     \\a from. Returns -1 if \\a str could not be found.\n \n     The Unicode data is converted into 8-bit characters using\n-    QString::toAscii().\n+    QString::toUtf8().\n \n-    If the QString contains non-ASCII Unicode characters, using this\n-    function can lead to loss of information. You can disable this\n-    function by defining \\c QT_NO_CAST_TO_ASCII when you compile your\n-    applications. You then need to call QString::toAscii() (or\n-    QString::toLatin1() or QString::toUtf8() or QString::toLocal8Bit())\n-    explicitly if you want to convert the data to \\c{const char *}.\n+    You can disable this function by defining \\c QT_NO_CAST_TO_ASCII when you\n+    compile your applications. You then need to call QString::toUtf8() (or\n+    QString::toLatin1() or QString::toLocal8Bit()) explicitly if you want to\n+    convert the data to \\c{const char *}.\n */\n \n /*! \\fn int QByteArray::indexOf(const char *str, int from) const\n@@ -2371,14 +2365,12 @@ int QByteArray::lastIndexOf(const QByteArray &ba, int from) const\n     last (size() - 1) byte. Returns -1 if \\a str could not be found.\n \n     The Unicode data is converted into 8-bit characters using\n-    QString::toAscii().\n+    QString::toUtf8().\n \n-    If the QString contains non-ASCII Unicode characters, using this\n-    function can lead to loss of information. You can disable this\n-    function by defining \\c QT_NO_CAST_TO_ASCII when you compile your\n-    applications. You then need to call QString::toAscii() (or\n-    QString::toLatin1() or QString::toUtf8() or QString::toLocal8Bit())\n-    explicitly if you want to convert the data to \\c{const char *}.\n+    You can disable this function by defining \\c QT_NO_CAST_TO_ASCII when you\n+    compile your applications. You then need to call QString::toUtf8() (or\n+    QString::toLatin1() or QString::toLocal8Bit()) explicitly if you want to\n+    convert the data to \\c{const char *}.\n */\n \n /*! \\fn int QByteArray::lastIndexOf(const char *str, int from) const\n@@ -2772,16 +2764,15 @@ QDataStream &operator>>(QDataStream &in, QByteArray &ba)\n     otherwise returns false.\n \n     The Unicode data is converted into 8-bit characters using\n-    QString::toAscii().\n+    QString::toUtf8().\n \n     The comparison is case sensitive.\n \n     You can disable this operator by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. You\n-    then need to call QString::fromAscii(), QString::fromLatin1(),\n-    QString::fromUtf8(), or QString::fromLocal8Bit() explicitly if\n-    you want to convert the byte array to a QString before doing the\n-    comparison.\n+    then need to call QString::fromUtf8(), QString::fromLatin1(),\n+    or QString::fromLocal8Bit() explicitly if you want to convert the byte\n+    array to a QString before doing the comparison.\n */\n \n /*! \\fn bool QByteArray::operator!=(const QString &str) const\n@@ -2790,16 +2781,15 @@ QDataStream &operator>>(QDataStream &in, QByteArray &ba)\n     otherwise returns false.\n \n     The Unicode data is converted into 8-bit characters using\n-    QString::toAscii().\n+    QString::toUtf8().\n \n     The comparison is case sensitive.\n \n     You can disable this operator by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. You\n-    then need to call QString::fromAscii(), QString::fromLatin1(),\n-    QString::fromUtf8(), or QString::fromLocal8Bit() explicitly if\n-    you want to convert the byte array to a QString before doing the\n-    comparison.\n+    then need to call QString::fromUtf8(), QString::fromLatin1(),\n+    or QString::fromLocal8Bit() explicitly if you want to convert the byte\n+    array to a QString before doing the comparison.\n */\n \n /*! \\fn bool QByteArray::operator<(const QString &str) const\n@@ -2808,16 +2798,15 @@ QDataStream &operator>>(QDataStream &in, QByteArray &ba)\n     str; otherwise returns false.\n \n     The Unicode data is converted into 8-bit characters using\n-    QString::toAscii().\n+    QString::toUtf8().\n \n     The comparison is case sensitive.\n \n     You can disable this operator by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. You\n-    then need to call QString::fromAscii(), QString::fromLatin1(),\n-    QString::fromUtf8(), or QString::fromLocal8Bit() explicitly if\n-    you want to convert the byte array to a QString before doing the\n-    comparison.\n+    then need to call QString::fromUtf8(), QString::fromLatin1(),\n+    or QString::fromLocal8Bit() explicitly if you want to convert the byte\n+    array to a QString before doing the comparison.\n */\n \n /*! \\fn bool QByteArray::operator>(const QString &str) const\n@@ -2826,16 +2815,15 @@ QDataStream &operator>>(QDataStream &in, QByteArray &ba)\n     \\a str; otherwise returns false.\n \n     The Unicode data is converted into 8-bit characters using\n-    QString::toAscii().\n+    QString::toUtf8().\n \n     The comparison is case sensitive.\n \n     You can disable this operator by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. You\n-    then need to call QString::fromAscii(), QString::fromLatin1(),\n-    QString::fromUtf8(), or QString::fromLocal8Bit() explicitly if\n-    you want to convert the byte array to a QString before doing the\n-    comparison.\n+    then need to call QString::fromUtf8(), QString::fromLatin1(),\n+    or QString::fromLocal8Bit() explicitly if you want to convert the byte\n+    array to a QString before doing the comparison.\n */\n \n /*! \\fn bool QByteArray::operator<=(const QString &str) const\n@@ -2844,16 +2832,15 @@ QDataStream &operator>>(QDataStream &in, QByteArray &ba)\n     to string \\a str; otherwise returns false.\n \n     The Unicode data is converted into 8-bit characters using\n-    QString::toAscii().\n+    QString::toUtf8().\n \n     The comparison is case sensitive.\n \n     You can disable this operator by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. You\n-    then need to call QString::fromAscii(), QString::fromLatin1(),\n-    QString::fromUtf8(), or QString::fromLocal8Bit() explicitly if\n-    you want to convert the byte array to a QString before doing the\n-    comparison.\n+    then need to call QString::fromUtf8(), QString::fromLatin1(),\n+    or QString::fromLocal8Bit() explicitly if you want to convert the byte\n+    array to a QString before doing the comparison.\n */\n \n /*! \\fn bool QByteArray::operator>=(const QString &str) const\n@@ -2862,16 +2849,15 @@ QDataStream &operator>>(QDataStream &in, QByteArray &ba)\n     \\a str; otherwise returns false.\n \n     The Unicode data is converted into 8-bit characters using\n-    QString::toAscii().\n+    QString::toUtf8().\n \n     The comparison is case sensitive.\n \n     You can disable this operator by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. You\n-    then need to call QString::fromAscii(), QString::fromLatin1(),\n-    QString::fromUtf8(), or QString::fromLocal8Bit() explicitly if\n-    you want to convert the byte array to a QString before doing the\n-    comparison.\n+    then need to call QString::fromUtf8(), QString::fromLatin1(),\n+    or QString::fromLocal8Bit() explicitly if you want to convert the byte\n+    array to a QString before doing the comparison.\n */\n \n /*! \\fn bool operator==(const QByteArray &a1, const QByteArray &a2)\n"", ""qchar.cpp"": ""@@ -151,9 +151,9 @@ QT_BEGIN_NAMESPACE\n     to convert to and from traditional 8-bit \\c{char}s. If you\n     defined \\c QT_NO_CAST_FROM_ASCII and \\c QT_NO_CAST_TO_ASCII, as\n     explained in the QString documentation, you will need to\n-    explicitly call fromAscii() or fromLatin1(), or use QLatin1Char,\n+    explicitly call fromLatin1(), or use QLatin1Char,\n     to construct a QChar from an 8-bit \\c char, and you will need to\n-    call toAscii() or toLatin1() to get the 8-bit value back.\n+    call toLatin1() to get the 8-bit value back.\n \n     For more information see\n     \\l{http://www.unicode.org/ucd/}{\""About the Unicode Character Database\""}.\n@@ -1251,7 +1251,7 @@ ushort QChar::toCaseFolded(ushort ucs2)\n     \\note It is not possible to distinguish a non-Latin-1 character from a Latin-1 0\n     (NUL) character. Prefer to use unicode(), which does not have this ambiguity.\n \n-    \\sa toAscii(), unicode()\n+    \\sa unicode()\n */\n \n /*!\n@@ -1262,7 +1262,7 @@ ushort QChar::toCaseFolded(ushort ucs2)\n \n     An alternative is to use QLatin1Char.\n \n-    \\sa fromAscii(), unicode()\n+    \\sa toLatin1(), unicode()\n */\n \n /*!\n"", ""qstring.cpp"": ""@@ -470,13 +470,12 @@ const QString::Null QString::null = { };\n     \\snippet qstring/main.cpp 0\n \n     QString converts the \\c{const char *} data into Unicode using the\n-    fromAscii() function. fromAscii() treats ordinals above 128 as Latin-1\n-    characters.\n+    fromUtf8() function.\n \n     In all of the QString functions that take \\c{const char *}\n     parameters, the \\c{const char *} is interpreted as a classic\n-    C-style '\\\\0'-terminated string. It is legal for the \\c{const char\n-    *} parameter to be 0.\n+    C-style '\\\\0'-terminated string encoded in UTF-8. It is legal for\n+    the \\c{const char *} parameter to be 0.\n \n     You can also provide string data as an array of \\l{QChar}s:\n \n@@ -604,12 +603,11 @@ const QString::Null QString::null = { };\n \n     \\section1 Converting Between 8-Bit Strings and Unicode Strings\n \n-    QString provides the following four functions that return a\n-    \\c{const char *} version of the string as QByteArray: toAscii(),\n-    toLatin1(), toUtf8(), and toLocal8Bit().\n+    QString provides the following three functions that return a\n+    \\c{const char *} version of the string as QByteArray: toUtf8(),\n+    toLatin1(), and toLocal8Bit().\n \n     \\list\n-    \\li toAscii() returns a Latin-1 (ISO 8859-1) encoded 8-bit string.\n     \\li toLatin1() returns a Latin-1 (ISO 8859-1) encoded 8-bit string.\n     \\li toUtf8() returns a UTF-8 encoded 8-bit string. UTF-8 is a\n        superset of US-ASCII (ANSI X3.4-1986) that supports the entire\n@@ -619,7 +617,7 @@ const QString::Null QString::null = { };\n     \\endlist\n \n     To convert from one of these encodings, QString provides\n-    fromAscii(), fromLatin1(), fromUtf8(), and fromLocal8Bit(). Other\n+    fromLatin1(), fromUtf8(), and fromLocal8Bit(). Other\n     encodings are supported through the QTextCodec class.\n \n     As mentioned above, QString provides a lot of functions and\n@@ -644,14 +642,14 @@ const QString::Null QString::null = { };\n \n     \\snippet code/src_corelib_tools_qstring.cpp 0\n \n-    You then need to explicitly call fromAscii(), fromLatin1(),\n-    fromUtf8(), or fromLocal8Bit() to construct a QString from an\n+    You then need to explicitly call fromUtf8(), fromLatin1(),\n+    or fromLocal8Bit() to construct a QString from an\n     8-bit string, or use the lightweight QLatin1String class, for\n     example:\n \n     \\snippet code/src_corelib_tools_qstring.cpp 1\n \n-    Similarly, you must call toAscii(), toLatin1(), toUtf8(), or\n+    Similarly, you must call toLatin1(), toUtf8(), or\n     toLocal8Bit() explicitly to convert the QString to an 8-bit\n     string.  (Other encodings are supported through the QTextCodec\n     class.)\n@@ -688,7 +686,7 @@ const QString::Null QString::null = { };\n     \\snippet qstring/main.cpp 8\n \n     All functions except isNull() treat null strings the same as empty\n-    strings. For example, toAscii().constData() returns a pointer to a\n+    strings. For example, toUtf8().constData() returns a pointer to a\n     '\\\\0' character for a null string (\\e not a null pointer), and\n     QString() compares equal to QString(\""\""). We recommend that you\n     always use the isEmpty() function and avoid isNull().\n@@ -916,25 +914,25 @@ const QStaticStringData<1> QString::shared_empty = { Q_STATIC_STRING_DATA_HEADER\n \n     Constructs a string initialized with the 8-bit string \\a str. The\n     given const char pointer is converted to Unicode using the\n-    fromAscii() function.\n+    fromUtf8() function.\n \n     You can disable this constructor by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. This\n     can be useful if you want to ensure that all user-visible strings\n     go through QObject::tr(), for example.\n \n-    \\sa fromAscii(), fromLatin1(), fromLocal8Bit(), fromUtf8()\n+    \\sa fromLatin1(), fromLocal8Bit(), fromUtf8()\n */\n \n /*! \\fn QString QString::fromStdString(const std::string &str)\n \n     Returns a copy of the \\a str string. The given string is converted\n-    to Unicode using the fromAscii() function.\n+    to Unicode using the fromUtf8() function.\n \n     This constructor is only available if Qt is configured with STL\n     compatibility enabled.\n \n-    \\sa  fromAscii(), fromLatin1(), fromLocal8Bit(), fromUtf8()\n+    \\sa  fromLatin1(), fromLocal8Bit(), fromUtf8()\n */\n \n /*! \\fn QString QString::fromStdWString(const std::wstring &str)\n@@ -969,7 +967,7 @@ const QStaticStringData<1> QString::shared_empty = { Q_STATIC_STRING_DATA_HEADER\n     This operator is mostly useful to pass a QString to a function\n     that accepts a std::wstring object.\n \n-    \\sa utf16(), toAscii(), toLatin1(), toUtf8(), toLocal8Bit()\n+    \\sa utf16(), toLatin1(), toUtf8(), toLocal8Bit()\n */\n \n // ### replace with QCharIterator\n@@ -1002,11 +1000,11 @@ int QString::toUcs4_helper(const ushort *uc, int length, uint *out)\n   hold the complete string (allocating the array with the same length as the\n   string is always sufficient).\n \n-  returns the actual length of the string in \\a array.\n+  This function returns the actual length of the string in \\a array.\n \n   \\note This function does not append a null character to the array.\n \n-  \\sa utf16(), toUcs4(), toAscii(), toLatin1(), toUtf8(), toLocal8Bit(), toStdWString()\n+  \\sa utf16(), toUcs4(), toLatin1(), toUtf8(), toLocal8Bit(), toStdWString()\n */\n \n /*! \\fn QString::QString(const QString &other)\n@@ -1133,7 +1131,7 @@ QString::QString(QChar ch)\n /*! \\fn QString::QString(const QByteArray &ba)\n \n     Constructs a string initialized with the byte array \\a ba. The\n-    given byte array is converted to Unicode using fromAscii(). Stops\n+    given byte array is converted to Unicode using fromUtf8(). Stops\n     copying at the first 0 character, otherwise copies the entire byte\n     array.\n \n@@ -1142,7 +1140,7 @@ QString::QString(QChar ch)\n     can be useful if you want to ensure that all user-visible strings\n     go through QObject::tr(), for example.\n \n-    \\sa fromAscii(), fromLatin1(), fromLocal8Bit(), fromUtf8()\n+    \\sa fromLatin1(), fromLocal8Bit(), fromUtf8()\n */\n \n /*! \\fn QString::QString(const Null &)\n@@ -1369,7 +1367,7 @@ QString &QString::operator=(const QString &other)\n     \\overload operator=()\n \n     Assigns \\a ba to this string. The byte array is converted to Unicode\n-    using the fromAscii() function. This function stops conversion at the\n+    using the fromUtf8() function. This function stops conversion at the\n     first NUL character found, or the end of the \\a ba byte array.\n \n     You can disable this operator by defining \\c\n@@ -1383,7 +1381,7 @@ QString &QString::operator=(const QString &other)\n     \\overload operator=()\n \n     Assigns \\a str to this string. The const char pointer is converted\n-    to Unicode using the fromAscii() function.\n+    to Unicode using the fromUtf8() function.\n \n     You can disable this operator by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. This\n@@ -1395,8 +1393,9 @@ QString &QString::operator=(const QString &other)\n \n     \\overload operator=()\n \n-    Assigns character \\a ch to this string. The character is converted\n-    to Unicode using the fromAscii() function.\n+    Assigns character \\a ch to this string. Note that the character is\n+    converted to Unicode using the fromLatin1() function, unlike other 8-bit\n+    functions that operate on UTF-8 data.\n \n     You can disable this operator by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. This\n@@ -1560,7 +1559,7 @@ QString &QString::append(const QLatin1String &str)\n     \\overload append()\n \n     Appends the byte array \\a ba to this string. The given byte array\n-    is converted to Unicode using the fromAscii() function.\n+    is converted to Unicode using the fromUtf8() function.\n \n     You can disable this function by defining \\c QT_NO_CAST_FROM_ASCII\n     when you compile your applications. This can be useful if you want\n@@ -1573,7 +1572,7 @@ QString &QString::append(const QLatin1String &str)\n     \\overload append()\n \n     Appends the string \\a str to this string. The given const char\n-    pointer is converted to Unicode using the fromAscii() function.\n+    pointer is converted to Unicode using the fromUtf8() function.\n \n     You can disable this function by defining \\c QT_NO_CAST_FROM_ASCII\n     when you compile your applications. This can be useful if you want\n@@ -1619,7 +1618,7 @@ QString &QString::append(QChar ch)\n     \\overload prepend()\n \n     Prepends the byte array \\a ba to this string. The byte array is\n-    converted to Unicode using the fromAscii() function.\n+    converted to Unicode using the fromUtf8() function.\n \n     You can disable this function by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. This\n@@ -1632,7 +1631,7 @@ QString &QString::append(QChar ch)\n     \\overload prepend()\n \n     Prepends the string \\a str to this string. The const char pointer\n-    is converted to Unicode using the fromAscii() function.\n+    is converted to Unicode using the fromUtf8() function.\n \n     You can disable this function by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. This\n@@ -2179,7 +2178,7 @@ bool QString::operator==(const QLatin1String &other) const\n     \\overload operator==()\n \n     The \\a other byte array is converted to a QString using the\n-    fromAscii() function. This function stops conversion at the\n+    fromUtf8() function. This function stops conversion at the\n     first NUL character found, or the end of the byte array.\n \n     You can disable this operator by defining \\c\n@@ -2193,7 +2192,7 @@ bool QString::operator==(const QLatin1String &other) const\n     \\overload operator==()\n \n     The \\a other const char pointer is converted to a QString using\n-    the fromAscii() function.\n+    the fromUtf8() function.\n \n     You can disable this operator by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. This\n@@ -2242,7 +2241,7 @@ bool QString::operator<(const QLatin1String &other) const\n     \\overload operator<()\n \n     The \\a other byte array is converted to a QString using the\n-    fromAscii() function. If any NUL characters ('\\\\0') are embedded\n+    fromUtf8() function. If any NUL characters ('\\\\0') are embedded\n     in the byte array, they will be included in the transformation.\n \n     You can disable this operator by defining \\c\n@@ -2256,7 +2255,7 @@ bool QString::operator<(const QLatin1String &other) const\n     \\overload operator<()\n \n     The \\a other const char pointer is converted to a QString using\n-    the fromAscii() function.\n+    the fromUtf8() function.\n \n     You can disable this operator by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. This\n@@ -2285,7 +2284,7 @@ bool QString::operator<(const QLatin1String &other) const\n     \\overload operator<=()\n \n     The \\a other byte array is converted to a QString using the\n-    fromAscii() function. If any NUL characters ('\\\\0') are embedded\n+    fromUtf8() function. If any NUL characters ('\\\\0') are embedded\n     in the byte array, they will be included in the transformation.\n \n     You can disable this operator by defining \\c\n@@ -2299,7 +2298,7 @@ bool QString::operator<(const QLatin1String &other) const\n     \\overload operator<=()\n \n     The \\a other const char pointer is converted to a QString using\n-    the fromAscii() function.\n+    the fromUtf8() function.\n \n     You can disable this operator by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. This\n@@ -2344,7 +2343,7 @@ bool QString::operator>(const QLatin1String &other) const\n     \\overload operator>()\n \n     The \\a other byte array is converted to a QString using the\n-    fromAscii() function. If any NUL characters ('\\\\0') are embedded\n+    fromUtf8() function. If any NUL characters ('\\\\0') are embedded\n     in the byte array, they will be included in the transformation.\n \n     You can disable this operator by defining \\c\n@@ -2358,7 +2357,7 @@ bool QString::operator>(const QLatin1String &other) const\n     \\overload operator>()\n \n     The \\a other const char pointer is converted to a QString using\n-    the fromAscii() function.\n+    the fromUtf8() function.\n \n     You can disable this operator by defining \\c QT_NO_CAST_FROM_ASCII\n     when you compile your applications. This can be useful if you want\n@@ -2388,7 +2387,7 @@ bool QString::operator>(const QLatin1String &other) const\n     \\overload operator>=()\n \n     The \\a other byte array is converted to a QString using the\n-    fromAscii() function. If any NUL characters ('\\\\0') are embedded in\n+    fromUtf8() function. If any NUL characters ('\\\\0') are embedded in\n     the byte array, they will be included in the transformation.\n \n     You can disable this operator by defining \\c QT_NO_CAST_FROM_ASCII\n@@ -2402,7 +2401,7 @@ bool QString::operator>(const QLatin1String &other) const\n     \\overload operator>=()\n \n     The \\a other const char pointer is converted to a QString using\n-    the fromAscii() function.\n+    the fromUtf8() function.\n \n     You can disable this operator by defining \\c QT_NO_CAST_FROM_ASCII\n     when you compile your applications. This can be useful if you want\n@@ -2432,7 +2431,7 @@ bool QString::operator>(const QLatin1String &other) const\n     \\overload operator!=()\n \n     The \\a other byte array is converted to a QString using the\n-    fromAscii() function. If any NUL characters ('\\\\0') are embedded\n+    fromUtf8() function. If any NUL characters ('\\\\0') are embedded\n     in the byte array, they will be included in the transformation.\n \n     You can disable this operator by defining \\c QT_NO_CAST_FROM_ASCII\n@@ -2446,7 +2445,7 @@ bool QString::operator>(const QLatin1String &other) const\n     \\overload operator!=()\n \n     The \\a other const char pointer is converted to a QString using\n-    the fromAscii() function.\n+    the fromUtf8() function.\n \n     You can disable this operator by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. This\n@@ -3945,7 +3944,7 @@ static QByteArray toLatin1_helper(const QChar *data, int length)\n     characters. Those characters may be suppressed or replaced with a\n     question mark.\n \n-    \\sa fromLatin1(), toAscii(), toUtf8(), toLocal8Bit(), QTextCodec\n+    \\sa fromLatin1(), toUtf8(), toLocal8Bit(), QTextCodec\n */\n QByteArray QString::toLatin1() const\n {\n@@ -3991,7 +3990,7 @@ static QByteArray toLocal8Bit_helper(const QChar *data, int length)\n     locale, the returned byte array is undefined. Those characters may be\n     suppressed or replaced by another.\n \n-    \\sa fromLocal8Bit(), toAscii(), toLatin1(), toUtf8(), QTextCodec\n+    \\sa fromLocal8Bit(), toLatin1(), toUtf8(), QTextCodec\n */\n QByteArray QString::toLocal8Bit() const\n {\n@@ -4016,7 +4015,7 @@ QByteArray QString::toLocal8Bit() const\n     may be discarded and will not appear in the UTF-8 representation, or they\n     may be replaced by one or more replacement characters.\n \n-    \\sa fromUtf8(), toAscii(), toLatin1(), toLocal8Bit(), QTextCodec\n+    \\sa fromUtf8(), toLatin1(), toLocal8Bit(), QTextCodec\n */\n QByteArray QString::toUtf8() const\n {\n@@ -4034,7 +4033,7 @@ QByteArray QString::toUtf8() const\n     UCS-4 is a Unicode codec and is lossless. All characters from this string\n     can be encoded in UCS-4. The vector is not null terminated.\n \n-    \\sa fromUtf8(), toAscii(), toLatin1(), toLocal8Bit(), QTextCodec, fromUcs4(), toWCharArray()\n+    \\sa fromUtf8(), toUtf8(), toLatin1(), toLocal8Bit(), QTextCodec, fromUcs4(), toWCharArray()\n */\n QVector<uint> QString::toUcs4() const\n {\n@@ -4107,7 +4106,7 @@ QString::Data *QString::fromAscii_helper(const char *str, int size)\n     If \\a size is -1 (default), it is taken to be strlen(\\a\n     str).\n \n-    \\sa toLatin1(), fromAscii(), fromUtf8(), fromLocal8Bit()\n+    \\sa toLatin1(), fromUtf8(), fromLocal8Bit()\n */\n \n \n@@ -4120,7 +4119,7 @@ QString::Data *QString::fromAscii_helper(const char *str, int size)\n \n     QTextCodec::codecForLocale() is used to perform the conversion.\n \n-    \\sa toLocal8Bit(), fromAscii(), fromLatin1(), fromUtf8()\n+    \\sa toLocal8Bit(), fromLatin1(), fromUtf8()\n */\n QString QString::fromLocal8Bit_helper(const char *str, int size)\n {\n@@ -4171,7 +4170,7 @@ QString QString::fromLocal8Bit_helper(const char *str, int size)\n     Unicode Plane (U+FFFE, U+FFFF, U+1FFFE, U+1FFFF, U+2FFFE, etc.), as well\n     as 16 codepoints in the range U+FDD0..U+FDDF, inclusive.\n \n-    \\sa toUtf8(), fromAscii(), fromLatin1(), fromLocal8Bit()\n+    \\sa toUtf8(), fromLatin1(), fromLocal8Bit()\n */\n QString QString::fromUtf8_helper(const char *str, int size)\n {\n@@ -4596,7 +4595,7 @@ QString& QString::fill(QChar ch, int size)\n     \\overload operator+=()\n \n     Appends the byte array \\a ba to this string. The byte array is converted\n-    to Unicode using the fromAscii() function. If any NUL characters ('\\\\0')\n+    to Unicode using the fromUtf8() function. If any NUL characters ('\\\\0')\n     are embedded in the \\a ba byte array, they will be included in the\n     transformation.\n \n@@ -4611,7 +4610,7 @@ QString& QString::fill(QChar ch, int size)\n     \\overload operator+=()\n \n     Appends the string \\a str to this string. The const char pointer\n-    is converted to Unicode using the fromAscii() function.\n+    is converted to Unicode using the fromUtf8() function.\n \n     You can disable this function by defining \\c QT_NO_CAST_FROM_ASCII\n     when you compile your applications. This can be useful if you want\n@@ -4630,8 +4629,9 @@ QString& QString::fill(QChar ch, int size)\n \n     \\overload operator+=()\n \n-    Appends the character \\a ch to this string. The character is\n-    converted to Unicode using the fromAscii() function.\n+    Appends the character \\a ch to this string. Note that the character is\n+    converted to Unicode using the fromLatin1() function, unlike other 8-bit\n+    functions that operate on UTF-8 data.\n \n     You can disable this function by defining \\c QT_NO_CAST_FROM_ASCII\n     when you compile your applications. This can be useful if you want\n@@ -4754,10 +4754,10 @@ QString& QString::fill(QChar ch, int size)\n     \\relates QString\n \n     Returns a string which is the result of concatenating \\a s1 and \\a\n-    s2 (\\a s2 is converted to Unicode using the QString::fromAscii()\n+    s2 (\\a s2 is converted to Unicode using the QString::fromUtf8()\n     function).\n \n-    \\sa QString::fromAscii()\n+    \\sa QString::fromUtf8()\n */\n \n /*!\n@@ -4765,10 +4765,10 @@ QString& QString::fill(QChar ch, int size)\n     \\relates QString\n \n     Returns a string which is the result of concatenating \\a s1 and \\a\n-    s2 (\\a s1 is converted to Unicode using the QString::fromAscii()\n+    s2 (\\a s1 is converted to Unicode using the QString::fromUtf8()\n     function).\n \n-    \\sa QString::fromAscii()\n+    \\sa QString::fromUtf8()\n */\n \n /*!\n@@ -7384,7 +7384,7 @@ bool QString::isRightToLeft() const\n \n     Returns a std::string object with the data contained in this\n     QString. The Unicode data is converted into 8-bit characters using\n-    the toAscii() function.\n+    the toUtf8() function.\n \n     This operator is mostly useful to pass a QString to a function\n     that accepts a std::string object.\n@@ -7392,7 +7392,7 @@ bool QString::isRightToLeft() const\n     If the QString contains non-Latin1 Unicode characters, using this\n     can lead to loss of information.\n \n-    \\sa toAscii(), toLatin1(), toUtf8(), toLocal8Bit()\n+    \\sa toLatin1(), toUtf8(), toLocal8Bit()\n */\n \n /*!\n@@ -7581,7 +7581,7 @@ QString &QString::setRawData(const QChar *unicode, int size)\n     \\overload\n \n     The \\a other const char pointer is converted to a QString using\n-    the QString::fromAscii() function.\n+    the QString::fromUtf8() function.\n \n     You can disable this operator by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. This\n@@ -7606,7 +7606,7 @@ QString &QString::setRawData(const QChar *unicode, int size)\n     \\overload operator!=()\n \n     The \\a other const char pointer is converted to a QString using\n-    the QString::fromAscii() function.\n+    the QString::fromUtf8() function.\n \n     You can disable this operator by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. This\n@@ -7632,7 +7632,7 @@ QString &QString::setRawData(const QChar *unicode, int size)\n     \\overload\n \n     The \\a other const char pointer is converted to a QString using\n-    the QString::fromAscii() function.\n+    the QString::fromUtf8() function.\n \n     You can disable this operator by defining \\c QT_NO_CAST_FROM_ASCII\n     when you compile your applications. This can be useful if you want\n@@ -7658,7 +7658,7 @@ QString &QString::setRawData(const QChar *unicode, int size)\n     \\overload\n \n     The \\a other const char pointer is converted to a QString using\n-    the QString::fromAscii() function.\n+    the QString::fromUtf8() function.\n \n     You can disable this operator by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. This\n@@ -7684,7 +7684,7 @@ QString &QString::setRawData(const QChar *unicode, int size)\n     \\overload\n \n     The \\a other const char pointer is converted to a QString using\n-    the QString::fromAscii() function.\n+    the QString::fromUtf8() function.\n \n     You can disable this operator by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. This\n@@ -7709,7 +7709,7 @@ QString &QString::setRawData(const QChar *unicode, int size)\n     \\overload\n \n     The \\a other const char pointer is converted to a QString using\n-    the QString::fromAscii() function.\n+    the QString::fromUtf8() function.\n \n     You can disable this operator by defining \\c\n     QT_NO_CAST_FROM_ASCII when you compile your applications. This\n@@ -9061,7 +9061,7 @@ static inline bool qt_ends_with(const QChar *haystack, int haystackLen,\n     characters. Those characters may be suppressed or replaced with a\n     question mark.\n \n-    \\sa toAscii(), toUtf8(), toLocal8Bit(), QTextCodec\n+    \\sa toUtf8(), toLocal8Bit(), QTextCodec\n */\n QByteArray QStringRef::toLatin1() const\n {\n@@ -9100,7 +9100,7 @@ QByteArray QStringRef::toAscii() const\n     locale, the returned byte array is undefined. Those characters may be\n     suppressed or replaced by another.\n \n-    \\sa toAscii(), toLatin1(), toUtf8(), QTextCodec\n+    \\sa toLatin1(), toUtf8(), QTextCodec\n */\n QByteArray QStringRef::toLocal8Bit() const\n {\n@@ -9127,7 +9127,7 @@ QByteArray QStringRef::toLocal8Bit() const\n     may be discarded and will not appear in the UTF-8 representation, or they\n     may be replaced by one or more replacement characters.\n \n-    \\sa toAscii(), toLatin1(), toLocal8Bit(), QTextCodec\n+    \\sa toLatin1(), toLocal8Bit(), QTextCodec\n */\n QByteArray QStringRef::toUtf8() const\n {\n@@ -9145,7 +9145,7 @@ QByteArray QStringRef::toUtf8() const\n     UCS-4 is a Unicode codec and is lossless. All characters from this string\n     can be encoded in UCS-4.\n \n-    \\sa toAscii(), toLatin1(), toLocal8Bit(), QTextCodec\n+    \\sa toUtf8(), toLatin1(), toLocal8Bit(), QTextCodec\n */\n QVector<uint> QStringRef::toUcs4() const\n {\n""}",deprecat,"deprecate, refactor, resource 
",deprecat;
5718.0,5718.0,deprecat,Kranthi Kuntala,qml test case for adding and removing details,"qml test case for adding and removing details from qdeclarativecontact

Change-Id: I399b9f9d6da280bc4bc4d092e75740022048b149","['tests/auto/qmlcontacts/testcases/contactsTestHelper.qml', 'tests/auto/qmlcontacts/testcases/tst_contacts.qml']","{""contactsTestHelper.qml"": ""@@ -89,7 +89,6 @@ Item {\n         for (var i = 0; i < temp; i++) {\n             id = model.contacts[0].contactId;\n             model.removeContact (id);\n-            console.log(\""----------------------------\""+id)\n             contactsChangedSpy.wait();\n         }\n     }\n"", ""tst_contacts.qml"": ""@@ -48,6 +48,10 @@ Rectangle {\n \n property bool start: false\n property SignalSpy contactsChangedSpy\n+property PhoneNumber phone\n+property Nickname nick\n+property ContactModel contactModel\n+property Contact testContact\n \n     TestCase {\n         name: \""ContactsTests\""\n@@ -296,5 +300,52 @@ property SignalSpy contactsChangedSpy\n             testHelper.destroy();\n             component.destroy();\n         }\n+\n+        function test_addAndRemoveDetails()\n+        {\n+            //TODO verify this test case when we remove dynamic properties from the Api\n+            //currently removing details from the contact is not updated in contact model\n+            var component = Qt.createComponent(\""contactsTestHelper.qml\"")\n+            var testHelper = component.createObject(top)\n+            var model = Qt.createQmlObject(\n+                    \""import QtAddOn.contacts 2.0;\"" +\n+                    \""ContactModel {id:model;manager:\\\""jsondb\\\"";autoUpdate:true;onContactsChanged:{console.log(\\\""CONTACTS CHANGED!\\\"")}}\"", testHelper);\n+            var tmp = Qt.createQmlObject(\n+                    \""import QtAddOn.contacts 2.0;\"" +\n+                    \""Contact {}\"", testHelper);\n+            var spy2 = Qt.createQmlObject(\""import QtTest 1.0;\"" +\""SignalSpy {id: theSpy;signalName: \\\""contactsChanged\\\"";}\"", testHelper);\n+            contactsChangedSpy = spy2;\n+            contactsChangedSpy.target = model;\n+            contactsChangedSpy.clear()\n+            testHelper.model = model;\n+            waitForContactsChanged (contactsChangedSpy.count + 1)\n+            testHelper.emptyContactsDb();\n+            contactModel = model;\n+            testContact = tmp;\n+            var tmpPhone = Qt.createQmlObject(\""import QtAddOn.contacts 2.0;\"" +\n+                                              \""PhoneNumber {number: '99999999'}\"", testContact);\n+            phone = tmpPhone\n+            var tmpNick = Qt.createQmlObject(\""import QtAddOn.contacts 2.0;\"" +\n+                                             \""Nickname {nickname: 'jack'}\"", testContact);\n+\n+            nick = tmpNick\n+            testContact.name.firstName = \""Joe\""\n+            testContact.name.lastName = \""John\""\n+            testContact.addDetail(phone)\n+            testContact.addDetail(nick)\n+            contactModel.saveContact(testContact)\n+            compare(testContact.phoneNumber.number,\""99999999\"")\n+            compare(testContact.nickname.nickname,\""jack\"")\n+            waitForContactsChanged (contactsChangedSpy.count + 1)\n+            testContact.removeDetail(phone);\n+            testContact.removeDetail(nick);\n+            contactModel.saveContact(testContact)\n+            compare(testContact.phoneNumber.number,\""\"")\n+            compare(testContact.nickname.nickname,\""\"")\n+            waitForContactsChanged (contactsChangedSpy.count + 1)\n+            testHelper.emptyContactsDb();\n+            testHelper.destroy();\n+            component.destroy();\n+          }\n     }\n }\n""}",test,"test 
",resource;test;
4253.0,4253.0,test,Leandro Melo,C++: More flexibility for string representation of macros,"C++: More flexibility for string representation of macros

It's now possible to get the macro definition with the actual
line breaks used on the code. This is particularly useful for
tooltips in order for them to look nice.

The preprocessor is changed so the macro also stores the breaks
positions. This doesn't seem to have any impact on performance.
In my machine, for example, the total time for parsing Creator's
source code is approx. 18100ms with or without the patch.

Change-Id: Ic7487236315c3567d26496315accdb2adfea894a","['src/libs/cplusplus/Macro.h', 'src/libs/cplusplus/Macro.cpp', 'src/libs/cplusplus/pp-engine.cpp', 'src/plugins/cppeditor/cppelementevaluator.cpp']","{""Macro.cpp"": ""@@ -62,7 +62,7 @@ Macro::Macro()\n       _state(0)\n { }\n \n-QString Macro::toString() const\n+QString Macro::toString(bool withLineBreaks) const\n {\n     QString text;\n     if (f._hidden)\n@@ -85,6 +85,13 @@ QString Macro::toString() const\n         text += QLatin1Char(')');\n     }\n     text += QLatin1Char(' ');\n-    text += QString::fromUtf8(_definition.constData(), _definition.size());\n+    if (!withLineBreaks) {\n+        text += QString::fromUtf8(_definition.constData(), _definition.size());\n+    } else  {\n+        QString s = _definition;\n+        foreach (unsigned pos, _lineBreaks)\n+            s[pos] = '\\n';\n+        text += s;\n+    }\n     return text;\n }\n"", ""Macro.h"": ""@@ -125,7 +125,13 @@ public:\n     void setVariadic(bool isVariadic)\n     { f._variadic = isVariadic; }\n \n-    QString toString() const;\n+    void setLineBreaks(const QList<unsigned> &breaks)\n+    { _lineBreaks = breaks; }\n+\n+    const QList<unsigned> &lineBreaks() const\n+    { return _lineBreaks; }\n+\n+    QString toString(bool withLineBreaks = false) const;\n \n // ### private\n     Macro *_next;\n@@ -143,6 +149,7 @@ private:\n     QByteArray _definition;\n     QVector<QByteArray> _formals;\n     QString _fileName;\n+    QList<unsigned> _lineBreaks;\n     unsigned _line;\n     unsigned _offset;\n     unsigned _length;\n"", ""pp-engine.cpp"": ""@@ -59,6 +59,7 @@\n \n #include <QtDebug>\n #include <algorithm>\n+#include <QtCore/QList>\n \n namespace CPlusPlus {\n \n@@ -1227,11 +1228,32 @@ void Preprocessor::processDefine(TokenIterator firstToken, TokenIterator lastTok\n         // ### make me fast!\n         const char *startOfDefinition = startOfToken(*tk);\n         const char *endOfDefinition = endOfToken(lastToken[- 1]);\n-        QByteArray definition(startOfDefinition,\n-                              endOfDefinition - startOfDefinition);\n-        definition.replace(\""\\\\\\n\"", \"" \"");\n-        definition.replace('\\n', ' ');\n-        macro.setDefinition(definition.trimmed());\n+        // It could be that the start is not really before that end, so the check...\n+        if (startOfDefinition < endOfDefinition) {\n+            QList<unsigned> lineBreaks;\n+            QByteArray definition;\n+            definition.reserve(endOfDefinition - startOfDefinition);\n+            while (startOfDefinition != endOfDefinition) {\n+                bool replace = false;\n+                if (*startOfDefinition == '\\n'\n+                        || (startOfDefinition + 1 != endOfDefinition\n+                            && *startOfDefinition == '\\\\'\n+                            && *(startOfDefinition + 1) == '\\n')) {\n+                    replace = true;\n+                    if (*startOfDefinition != '\\n')\n+                        ++startOfDefinition;\n+                }\n+                if (replace) {\n+                    definition.append(' ');\n+                    lineBreaks.append(definition.length() - 1);\n+                } else {\n+                    definition.append(*startOfDefinition);\n+                }\n+                ++startOfDefinition;\n+            }\n+            macro.setDefinition(definition.trimmed());\n+            macro.setLineBreaks(lineBreaks);\n+        }\n     }\n \n     env->bind(macro);\n"", ""cppelementevaluator.cpp"": ""@@ -320,7 +320,7 @@ CppMacro::CppMacro(const Macro &macro) : CppElement()\n     setHelpIdCandidates(QStringList(macro.name()));\n     setHelpMark(macro.name());\n     setLink(CPPEditorWidget::Link(macro.fileName(), macro.line()));\n-    setTooltip(macro.toString());\n+    setTooltip(macro.toString(true));\n }\n \n CppMacro::~CppMacro()\n""}",feature,"feature, refactor 
",others;
174.0,174.0,feature ,Friedemann Kleint,uic: Use QString::fromUtf8 for QUrl properties.,"uic: Use QString::fromUtf8 for QUrl properties.

As otherwise the compilation of ui_-files fails when
using QT_NO_CAST_FROM_ASCII. Bug reported on mailing list.

Reviewed-by: Jarek Kobus <jaroslaw.kobus@nokia.com>
Change-Id: I00bf2e2605b97ff77efdcb68b7968375b3e9d195
(cherry picked from commit 00bf2e2605b97ff77efdcb68b7968375b3e9d195)",['src/tools/uic/cpp/cppwriteinitialization.cpp'],"{""cppwriteinitialization.cpp"": ""@@ -1452,7 +1452,7 @@ void WriteInitialization::writeProperties(const QString &varName,\n \n         case DomProperty::Url: {\n             const DomUrl* u = p->elementUrl();\n-            propertyValue = QString::fromLatin1(\""QUrl(%1)\"")\n+            propertyValue = QString::fromLatin1(\""QUrl(QString::fromUtf8(%1))\"")\n                             .arg(fixString(u->elementString()->text(), m_dindent));\n             break;\n         }\n""}",bug,"Categories: bug 
",bug;
17019.0,17019.0,bug,Martin Smith,qdoc3: Separate parameter type and name by ' ',"qdoc3: Separate parameter type and name by ' '

Task-number:  QTBUG-24359

Change-Id: I968bd52d0c5fece9b50037f00cb9da008cd2e077","['tools/qdoc3/htmlgenerator.cpp', 'tools/qdoc3/qmlvisitor.cpp', 'tools/qdoc3/ditaxmlgenerator.cpp']","{""ditaxmlgenerator.cpp"": ""@@ -3432,7 +3432,7 @@ QString DitaXmlGenerator::getMarkedUpSynopsis(const Node* node,\n         marked.replace(tag.pos(1), tag.cap(1).length(), tmp);\n     }\n     marked.replace(QRegExp(\""<@param>([a-z]+)_([1-9n])</@param>\""),\n-                   \""<i>\\\\1<sub>\\\\2</sub></i>\"");\n+                   \""<i> \\\\1<sub>\\\\2</sub></i>\"");\n #if 0    \n     marked.replace(\""<@param>\"",\""<i>\"");\n     marked.replace(\""</@param>\"",\""</i>\"");\n@@ -3560,7 +3560,7 @@ void DitaXmlGenerator::writeText(const QString& markedCode,\n                             html.clear();\n                         }\n                         writeStartTag(DT_i);\n-                        writeCharacters(arg.toString());\n+                        writeCharacters(\"" \"" + arg.toString());\n                         writeEndTag(); // </i>\n                     }\n                     else if (k == 5) { // <@extra>\n"", ""htmlgenerator.cpp"": ""@@ -2891,6 +2891,7 @@ void HtmlGenerator::generateSynopsis(const Node *node,\n                                      const QString* prefix)\n {\n     QString marked = marker->markedUpSynopsis(node, relative, style);\n+\n     if (prefix)\n         marked.prepend(*prefix);\n     QRegExp templateTag(\""(<[^@>]*>)\"");\n@@ -2902,7 +2903,7 @@ void HtmlGenerator::generateSynopsis(const Node *node,\n     }\n     marked.replace(QRegExp(\""<@param>([a-z]+)_([1-9n])</@param>\""),\n                    \""<i>\\\\1<sub>\\\\2</sub></i>\"");\n-    marked.replace(\""<@param>\"", \""<i>\"");\n+    marked.replace(\""<@param>\"", \""<i> \"");\n     marked.replace(\""</@param>\"", \""</i>\"");\n \n     if (style == CodeMarker::Summary) {\n@@ -2923,6 +2924,7 @@ void HtmlGenerator::generateSynopsis(const Node *node,\n         marked.remove(\""<@type>\"");\n         marked.remove(\""</@type>\"");\n     }\n+\n     out() << highlightedCode(marked, marker, relative, alignNames);\n }\n \n@@ -2971,7 +2973,6 @@ QString HtmlGenerator::highlightedCode(const QString& markedCode,\n         }\n     }\n \n-\n     // replace all <@func> tags: \""(<@func target=\\\""([^\\\""]*)\\\"">)(.*)(</@func>)\""\n     src = html;\n     html = QString();\n@@ -3110,7 +3111,6 @@ QString HtmlGenerator::highlightedCode(const QString& markedCode,\n             ++i;\n         }\n     }\n-\n     return html;\n }\n \n"", ""qmlvisitor.cpp"": ""@@ -250,8 +250,6 @@ void QmlDocVisitor::applyMetacommands(QDeclarativeJS::AST::SourceLocation,\n                 }\n             }\n         }\n-        else if (topicsUsed.size() > 0)\n-            qDebug() << \""  \"" << topicsUsed.at(0).topic << topicsUsed.at(0).args;\n     }\n     QSet<QString> metacommands = doc.metaCommandsUsed();\n     if (metacommands.count() > 0) {\n""}",bug,"bug, refactor 
",bug;
18303.0,18303.0,bug ,Oswald Buddenhagen,fix configure -redo,"fix configure -redo

-redo must be the first argument (except -srcdir, which we treat
differently), so let's pass the user arguments first.

Change-Id: I5da37d1a6e1aec67449daf64b8bd2ffcc0b075a4",['configure.bat'],"{""configure.bat"": ""@@ -117,5 +117,5 @@ if errorlevel 1 (cd ..\\.. & exit /b 1)\n cd ..\\..\n \n :conf\n-configure.exe -srcdir %QTSRC% %nosyncqt% %*\n+configure.exe -srcdir %QTSRC% %* %nosyncqt%\n :exit\n""}",bug;resource;,"bug 
",bug;resource;
7121.0,7121.0,bug;resource;,Friedemann Kleint,qmake: Replace Q_WS_WIN by Q_OS_WIN,"qmake: Replace Q_WS_WIN by Q_OS_WIN

Change-Id: I6c63cda81a15759294321696feffa1150bd2a315","['qmake/main.cpp', 'qmake/qmake_pch.h']","{""main.cpp"": ""@@ -99,7 +99,7 @@ int runQMake(int argc, char **argv)\n     }\n \n     QString oldpwd = qmake_getpwd();\n-#ifdef Q_WS_WIN\n+#ifdef Q_OS_WIN\n     if(!(oldpwd.length() == 3 && oldpwd[0].isLetter() && oldpwd.endsWith(\"":/\"")))\n #endif\n     {\n"", ""qmake_pch.h"": ""@@ -42,7 +42,7 @@\n #ifndef QMAKE_PCH_H\n #define QMAKE_PCH_H\n #include <qglobal.h>\n-#ifdef Q_WS_WIN\n+#ifdef Q_OS_WIN\n # define _POSIX_\n # include <limits.h>\n # undef _POSIX_\n""}",resource,"refactor 
",others;
5666.0,5666.0,resource,Michael Brasser,More test fixes.,"More test fixes.

Change-Id: Ia70a8c8dc405310674b2f7f6426346676599cbbb","['src/declarative/animations/qabstractanimation2.cpp', 'src/declarative/util/qdeclarativetimer.cpp', 'tests/auto/declarative/qdeclarativetimer/qdeclarativetimer.pro', 'src/declarative/util/qdeclarativebehavior.cpp']","{""qabstractanimation2.cpp"": ""@@ -777,7 +777,7 @@ void QAbstractAnimation2::stateChanged(QAbstractAnimation2::State newState, QAbs\n         QPair<QDeclarativeGuard<QObject>, int> slot = m_stateChangedSlots.at(ii);\n         QObject *obj = slot.first;\n         if (obj) {\n-            void *args[] = { &newState, &oldState };\n+            void *args[] = { 0, &newState, &oldState };\n             QMetaObject::metacall(obj, QMetaObject::InvokeMetaMethod,\n                                   slot.second, args);\n         }\n@@ -790,7 +790,7 @@ void QAbstractAnimation2::currentLoopChanged(int currentLoop)\n         QPair<QDeclarativeGuard<QObject>, int> slot = m_currentLoopChangedSlots.at(ii);\n         QObject *obj = slot.first;\n         if (obj) {\n-            void *args[] = { &currentLoop };\n+            void *args[] = { 0, &currentLoop };\n             QMetaObject::metacall(obj, QMetaObject::InvokeMetaMethod,\n                                   slot.second, args);\n         }\n@@ -803,7 +803,7 @@ void QAbstractAnimation2::directionChanged(QAbstractAnimation2::Direction direct\n         QPair<QDeclarativeGuard<QObject>, int> slot = m_directionChangedSlots.at(ii);\n         QObject *obj = slot.first;\n         if (obj) {\n-            void *args[] = { &direction };\n+            void *args[] = { 0, &direction };\n             QMetaObject::metacall(obj, QMetaObject::InvokeMetaMethod,\n                                   slot.second, args);\n         }\n"", ""qdeclarativebehavior.cpp"": ""@@ -133,12 +133,12 @@ void QDeclarativeBehavior::setAnimation(QDeclarativeAbstractAnimation *animation\n         d->animation->setDefaultTarget(d->property);\n         d->animation->setDisableUserControl();\n         d->animation->qtAnimation()->registerStateChanged(this,\n-                                                          SLOT(qtAnimationStateChanged(QAbstractAnimation2::State,QAbstractAnimation2::State)));\n+                                                          \""qtAnimationStateChanged(QAbstractAnimation2::State,QAbstractAnimation2::State)\"");\n     }\n }\n \n \n-void QDeclarativeBehavior::qtAnimationStateChanged(QAbstractAnimation2::State newState,QAbstractAnimation2::State)\n+void QDeclarativeBehavior::qtAnimationStateChanged(QAbstractAnimation2::State newState,QAbstractAnimation2::State oldState)\n {\n     Q_D(QDeclarativeBehavior);\n     if (!d->blockRunningChanged)\n"", ""qdeclarativetimer.cpp"": ""@@ -111,8 +111,8 @@ QDeclarativeTimer::QDeclarativeTimer(QObject *parent)\n     : QObject(*(new QDeclarativeTimerPrivate), parent)\n {\n     Q_D(QDeclarativeTimer);\n-    d->pause.registerCurrentLoopChanged(this, SLOT(ticked()));\n-    d->pause.registerFinished(this, SLOT(finished()));\n+    d->pause.registerCurrentLoopChanged(this, \""ticked()\"");\n+    d->pause.registerFinished(this, \""finished()\"");\n     d->pause.setLoopCount(1);\n     d->pause.setDuration(d->interval);\n }\n"", ""qdeclarativetimer.pro"": ""@@ -9,4 +9,4 @@ SOURCES += tst_qdeclarativetimer.cpp\n }\n \n CONFIG += parallel_test\n-QT += core-private gui-private declarative-private\n+QT += core-private gui-private declarative-private v8-private\n""}",test,"test,bug 
",bug;test;
26862.0,26862.0,test,László Papp,Fix the broken tests with Qt4 due to the QSKIP API change,"Fix the broken tests with Qt4 due to the QSKIP API change

QSKIP went through a source incompatible change from Qt4 migration to Qt5.
Therefore, the customers cannot build the project with tests (default build)
without such a fix like this.

Change-Id: I376e88db723c61358d00cb737a30cde46e03c3a1",['tests/manual/serialport/tst_serialport.cpp'],"{""tst_serialport.cpp"": ""@@ -65,7 +65,11 @@ void tst_SerialPort::open()\n     const QList<SerialPortInfo> ports = SerialPortInfo::availablePorts();\n \n     if (ports.isEmpty()) {\n+#if (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))\n         QSKIP(\""Test doesn't work because the serial ports are not detected.\"");\n+#else\n+        QSKIP(\""Test doesn't work because the serial ports are not detected.\"", SkipAll);\n+#endif\n     }\n \n     foreach (const SerialPortInfo &info, ports) {\n@@ -106,7 +110,11 @@ void tst_SerialPort::rate()\n     const QList<SerialPortInfo> ports = SerialPortInfo::availablePorts();\n \n     if (ports.isEmpty()) {\n+#if (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))\n         QSKIP(\""Test doesn't work because the serial ports are not detected.\"");\n+#else\n+        QSKIP(\""Test doesn't work because the serial ports are not detected.\"", SkipAll);\n+#endif\n     }\n \n     foreach (const SerialPortInfo &info, ports) {\n@@ -141,7 +149,11 @@ void tst_SerialPort::dataBits()\n     const QList<SerialPortInfo> ports = SerialPortInfo::availablePorts();\n \n     if (ports.isEmpty()) {\n+#if (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))\n         QSKIP(\""Test doesn't work because the serial ports are not detected.\"");\n+#else\n+        QSKIP(\""Test doesn't work because the serial ports are not detected.\"", SkipAll);\n+#endif\n     }\n \n     foreach (const SerialPortInfo &info, ports) {\n@@ -162,7 +174,11 @@ void tst_SerialPort::parity()\n     const QList<SerialPortInfo> ports = SerialPortInfo::availablePorts();\n \n     if (ports.isEmpty()) {\n+#if (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))\n         QSKIP(\""Test doesn't work because the serial ports are not detected.\"");\n+#else\n+        QSKIP(\""Test doesn't work because the serial ports are not detected.\"", SkipAll);\n+#endif\n     }\n \n     foreach (const SerialPortInfo &info, ports) {\n@@ -191,7 +207,11 @@ void tst_SerialPort::stopBits()\n     const QList<SerialPortInfo> ports = SerialPortInfo::availablePorts();\n \n     if (ports.isEmpty()) {\n+#if (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))\n         QSKIP(\""Test doesn't work because the serial ports are not detected.\"");\n+#else\n+        QSKIP(\""Test doesn't work because the serial ports are not detected.\"", SkipAll);\n+#endif\n     }\n \n     foreach (const SerialPortInfo &info, ports) {\n@@ -215,7 +235,11 @@ void tst_SerialPort::flowControl()\n     const QList<SerialPortInfo> ports = SerialPortInfo::availablePorts();\n \n     if (ports.isEmpty()) {\n+#if (QT_VERSION >= QT_VERSION_CHECK(5, 0, 0))\n         QSKIP(\""Test doesn't work because the serial ports are not detected.\"");\n+#else\n+        QSKIP(\""Test doesn't work because the serial ports are not detected.\"", SkipAll);\n+#endif\n     }\n \n     foreach (const SerialPortInfo &info, ports) {\n""}",test,"bug,test 
",bug;test;
12619.0,12619.0,test,Sarah Jane Smith,Pin qtquick3d to a qtbase that works.,"Pin qtquick3d to a qtbase that works.

See change 88bce04 in qt5/qtdeclarative.

This is temporary and should be removed once the issue with qtbase is
resolved.

Change-Id: I832566de986093a9e7d120a583024d1b2558f2f3",['sync.profile'],"{""sync.profile"": ""@@ -25,7 +25,7 @@\n #   - any git symbolic ref resolvable from the module's repository (e.g. \""refs/heads/master\"" to track master branch)\n #\n %dependencies = (\n-    \""qtbase\"" => \""refs/heads/master\"",\n+    \""qtbase\"" => \""7aeccb183a827e8504d7dd8614d1ca555caf61d9\"",\n     \""qtsvg\"" => \""refs/heads/master\"",\n     \""qtxmlpatterns\"" => \""refs/heads/master\"",\n     \""qtdeclarative\"" => \""refs/heads/master\"",\n""}",resource,"bug 
",deprecat;resource;
15867.0,15867.0,resource ,Mika Tikkakoski,Test and fix for overlapping export and import requests.,"Test and fix for overlapping versit request errors.

-Added qml test for errors on overlapping requests to versit
 import and export in ContactModel. Renamed test file properly.
-Using now  proper url parameter in the error situations  of
 import and export requests.

Change-Id: I0e7e3605e38ba523fe6e39efaf8d4f2b54fb5be6","['tests/auto/qmlcontacts/testcases/tst_contacts_versit_export_import_signaling.qml', 'tests/auto/qmlcontacts/qmlcontacts.pro', 'src/imports/contacts/qdeclarativecontactmodel.cpp']","{""qdeclarativecontactmodel.cpp"": ""@@ -301,23 +301,27 @@ static QString urlToLocalFileName(const QUrl& url)\n   */\n void QDeclarativeContactModel::importContacts(const QUrl& url, const QStringList& profiles)\n {\n-    ImportError importError = ImportNoError;\n-    d->m_importProfiles = profiles;\n-\n-    //TODO: need to allow download vcard from network\n-    QFile*  file = new QFile(urlToLocalFileName(url));\n-    bool ok = file->open(QIODevice::ReadOnly);\n-    if (ok) {\n-        d->m_reader.setDevice(file);\n-        if (d->m_reader.startReading()) {\n-            d->m_lastImportUrl = url;\n-            return;\n+    // Reader is capable of handling only one request at the time.\n+    ImportError importError = ImportNotReadyError;\n+    if (d->m_reader.state() != QVersitReader::ActiveState) {\n+\n+        d->m_importProfiles = profiles;\n+\n+        //TODO: need to allow download vcard from network\n+        QFile*  file = new QFile(urlToLocalFileName(url));\n+        bool ok = file->open(QIODevice::ReadOnly);\n+        if (ok) {\n+            d->m_reader.setDevice(file);\n+            if (d->m_reader.startReading()) {\n+                d->m_lastImportUrl = url;\n+                return;\n+            }\n+            importError = QDeclarativeContactModel::ImportError(d->m_reader.error());\n+        } else {\n+            importError = ImportIOError;\n         }\n-        importError = QDeclarativeContactModel::ImportError(d->m_reader.error());\n-    } else {\n-        importError = ImportIOError;\n     }\n-    emit importCompleted(importError, d->m_lastImportUrl);\n+    emit importCompleted(importError, url);\n }\n \n /*!\n@@ -362,11 +366,12 @@ void QDeclarativeContactModel::exportContacts(const QUrl& url, const QStringList\n                 d->m_lastExportUrl = url;\n                 return;\n             }\n+            exportError = QDeclarativeContactModel::ExportError(d->m_writer.error());\n         } else {\n             exportError = ExportIOError;\n         }\n     }\n-    emit exportCompleted(exportError, d->m_lastExportUrl);\n+    emit exportCompleted(exportError, url);\n }\n \n void QDeclarativeContactModel::contactsExported(QVersitWriter::State state)\n@@ -374,8 +379,7 @@ void QDeclarativeContactModel::contactsExported(QVersitWriter::State state)\n     if (state == QVersitWriter::FinishedState || state == QVersitWriter::CanceledState) {\n          delete d->m_writer.device();\n          d->m_writer.setDevice(0);\n-         emit exportCompleted(QDeclarativeContactModel::ExportError(d->m_writer.error()),\n-                            d->m_lastExportUrl);\n+         emit exportCompleted(QDeclarativeContactModel::ExportError(d->m_writer.error()), d->m_lastExportUrl);\n     }\n }\n \n@@ -518,8 +522,7 @@ void QDeclarativeContactModel::startImport(QVersitReader::State state)\n                 }\n             }\n         }\n-        emit importCompleted(QDeclarativeContactModel::ImportError(d->m_reader.error()),\n-                                 d->m_lastImportUrl);\n+        emit importCompleted(QDeclarativeContactModel::ImportError(d->m_reader.error()), d->m_lastImportUrl);\n     }\n }\n \n"", ""qmlcontacts.pro"": ""@@ -34,5 +34,5 @@ OTHER_FILES += \\\n     testcases/tst_contacts_save_contact_e2e.qml \\\n     testcases/tst_contacts_sorting_e2e.qml \\\n     testcases/tst_contacts_versit_export_import_e2e.qml \\\n-    testcases/tst_contacts_versit_export_signaling.qml\n+    testcases/tst_contacts_versit_export_import_signaling.qml\n QT += qmltest contacts versit\n"", ""tst_contacts_versit_export_import_signaling.qml"": ""@@ -96,6 +96,31 @@ ContactsVersitTestCase {\n         compare(exportFileName, vcardFilePath, 'signal finished state filename');\n     }\n \n+    function test_overlappingExportEmitsSignalWithError() {\n+\n+        var signalSpy = initTestForTargetListeningToSignal(model, \""exportCompleted\"");\n+\n+        // Save and export test contact.\n+        var vcardFilePath = Qt.resolvedUrl(\""tst_contacts_versit_export_signaling.vcard\"");\n+        var vcardFilePath2 = Qt.resolvedUrl(\""tst_contacts_versit_export_signaling2.vcard\"");\n+        model.saveContact(testContact);\n+        waitForContactsChanged();\n+        model.exportContacts(vcardFilePath, [\""Sync\""]);\n+\n+        // Make immediate re-export which overlaps with the previous one and causes error.\n+        // We should get immediate singal with error showing the not ready yet.\n+        model.exportContacts(vcardFilePath2, [\""Sync\""]);\n+        waitForTargetSignal(signalSpy);\n+        compare(exportErrorCode, ContactModel.ExportNotReadyError, 'signal notready state error');\n+        compare(exportFileName, vcardFilePath2, 'signal notready state filename');\n+\n+        // Check if the first export enters finished state properly.\n+        waitForTargetSignal(signalSpy);\n+        compare(exportErrorCode, ContactModel.ExportNoError, 'signal finished state error');\n+        compare(exportFileName, vcardFilePath, 'signal finished state filename');\n+    }\n+\n+\n     function test_successfulImportEmitsSingalProperly() {\n \n         // Save and fetch test contact.\n@@ -121,6 +146,41 @@ ContactsVersitTestCase {\n     }\n \n \n+    function test_overlappingImportEmitsSingalWithError() {\n+\n+        // Save and fetch test contact.\n+        model.saveContact(testContact);\n+        waitForContactsChanged();\n+\n+        // Export contacts to two vcard files.\n+        var vcardFilePath = Qt.resolvedUrl(\""tst_contacts_versit_export_import_e2e.vcard\"");\n+        var vcardFilePath2 = Qt.resolvedUrl(\""tst_contacts_versit_export_import_e2e2.vcard\"");\n+        var signalSpy1 = initTestForTargetListeningToSignal(model, \""exportCompleted\"");\n+        model.exportContacts(vcardFilePath, [\""Sync\""]);\n+        waitForTargetSignal(signalSpy1);\n+        model.exportContacts(vcardFilePath2, [\""Sync\""]);\n+        waitForTargetSignal(signalSpy1);\n+\n+        // Import contacts form vcard file just created.\n+        var signalSpy2 = initTestForTargetListeningToSignal(model, \""importCompleted\"");\n+        listenToContactsChanged();\n+        model.importContacts(vcardFilePath, [\""Sync\""]);\n+\n+        // Make immediate second import request which should fail as reader is busy.\n+        // Check that import enters finished state properly.\n+        model.importContacts(vcardFilePath2, [\""Sync\""]);\n+        waitForTargetSignal(signalSpy2);\n+        compare(importErrorCode, ContactModel.ImportNotReadyError, 'signal finished state error');\n+        compare(importFileName, vcardFilePath2, 'signal finished state filename');\n+\n+        waitForContactsChanged();\n+\n+        // Check that the first import enters finished state properly.\n+        waitForTargetSignal(signalSpy2);\n+        compare(importFileName, vcardFilePath, 'signal finished state filename');\n+        compare(importErrorCode, ContactModel.ImportNoError, 'signal finished state error');\n+    }\n+\n     // Init & teardown\n \n     function initTestCase() {\n""}",test;bug,"bug, test 
",bug;test;
17606.0,17606.0,test;bug ,Cristiano di Flora,"Change default partition to ""database.System"".","Change default partition to ""database.System"".

Change-Id: I30b90a0dce119bd5c5c8077d860ca4b13d9072af","['tests/auto/contacts/qmlcontacts/testcases/SignalingJsonDb.qml', 'tests/auto/contacts/qmlcontacts/testcases/ContactsJsonDbTestHelper.qml', 'tests/auto/contacts/qmlcontacts/testcases/ContactsJsonDbPartitionTestHelper.qml', 'src/plugins/contacts/jsondb/qcontactjsondbstring.h']","{""qcontactjsondbstring.h"": ""@@ -116,7 +116,7 @@ public:\n     inline const static QString actionRemove() { return QStringLiteral(\""remove\""); }\n \n     // Queries related\n-    inline const static QString defaultPartition() { return QStringLiteral(\""com.nokia.qtjsondb.System\""); }\n+    inline const static QString defaultPartition() { return QStringLiteral(\""database.System\""); }\n     inline const static QString contactsJsonDbType() { return QStringLiteral(\""com.nokia.mp.contacts.Contact\""); }\n     inline const static QString contactsJsonDbNotificationQuery() { return QStringLiteral(\""[?_type in [\\\""com.nokia.mp.contacts.Contact\\\""]]\""); }\n \n"", ""ContactsJsonDbPartitionTestHelper.qml"": ""@@ -80,7 +80,7 @@ Item {\n \n     SignalingJsonDb {\n         id: jsonDb\n-        name: \""com.nokia.qtjsondb.System\""\n+        name: \""database.System\""\n     }\n \n     property SignalSpy jsonDbSpy\n"", ""ContactsJsonDbTestHelper.qml"": ""@@ -111,7 +111,7 @@ Item {\n \n     SignalingJsonDb {\n         id: jsonDb\n-        name: \""com.nokia.qtjsondb.System\""\n+        name: \""database.System\""\n     }\n \n     property SignalSpy jsonDbSpy\n"", ""SignalingJsonDb.qml"": ""@@ -47,7 +47,7 @@ import QtJsonDb 1.0\n Partition {\n     id: jsonDb\n \n-    name: \""com.nokia.qtjsondb.System\""\n+    name: \""database.System\""\n \n     function createAndSignal(object) {\n         logDebug(\""createAndSignal()\"");\n""}",resource; test,"refactor 
",others;
23376.0,23376.0,resource; test,Peter Varga,[V8] Add custom object compare callback,"[V8] Add custom object compare callback

A global custom object comparison callback can be set with:
    V8::SetUserObjectComparisonCallbackFunction()
When two JSObjects are compared (== or !=), if either one has
the MarkAsUseUserObjectComparison() bit set, the custom comparison
callback is invoked to do the actual comparison.

This is useful when you have ""value"" objects that you want to
compare as equal, even though they are actually different JS object
instances.

Change-Id: Icd3419349874ee845684fff8455862da73f5ff2d","['src/3rdparty/v8/src/objects.h', 'src/3rdparty/v8/src/mips/code-stubs-mips.cc', 'src/3rdparty/v8/src/runtime.h', 'src/3rdparty/v8/src/factory.cc', 'src/3rdparty/v8/src/isolate.cc', 'src/3rdparty/v8/src/runtime.cc', 'src/3rdparty/v8/src/x64/code-stubs-x64.cc', 'src/3rdparty/v8/src/api.cc', 'src/3rdparty/v8/src/isolate.h', 'src/3rdparty/v8/src/arm/code-stubs-arm.cc', 'src/3rdparty/v8/src/objects-inl.h', 'src/3rdparty/v8/src/ia32/code-stubs-ia32.cc', 'src/3rdparty/v8/src/objects.cc', 'src/3rdparty/v8/include/v8.h']","{""v8.h"": ""@@ -2526,6 +2526,12 @@ class V8EXPORT ObjectTemplate : public Template {\n   bool HasExternalResource();\n   void SetHasExternalResource(bool value);\n \n+  /**\n+   * Mark object instances of the template as using the user object \n+   * comparison callback.\n+   */\n+  void MarkAsUseUserObjectComparison();\n+\n  private:\n   ObjectTemplate();\n   static Local<ObjectTemplate> New(Handle<FunctionTemplate> constructor);\n@@ -2748,6 +2754,10 @@ typedef void (*FailedAccessCheckCallback)(Local<Object> target,\n                                           AccessType type,\n                                           Local<Value> data);\n \n+// --- User Object Comparisoa nCallback ---\n+typedef bool (*UserObjectComparisonCallback)(Local<Object> lhs, \n+                                             Local<Object> rhs);\n+\n // --- AllowCodeGenerationFromStrings callbacks ---\n \n /**\n@@ -3099,6 +3109,9 @@ class V8EXPORT V8 {\n   /** Callback function for reporting failed access checks.*/\n   static void SetFailedAccessCheckCallbackFunction(FailedAccessCheckCallback);\n \n+  /** Callback for user object comparisons */\n+  static void SetUserObjectComparisonCallbackFunction(UserObjectComparisonCallback);\n+\n   /**\n    * Enables the host application to receive a notification before a\n    * garbage collection.  Allocations are not allowed in the\n"", ""api.cc"": ""@@ -1493,6 +1493,17 @@ void ObjectTemplate::SetHasExternalResource(bool value)\n }\n \n \n+void ObjectTemplate::MarkAsUseUserObjectComparison()\n+{\n+  i::Isolate* isolate = Utils::OpenHandle(this)->GetIsolate();\n+  if (IsDeadCheck(isolate, \""v8::ObjectTemplate::MarkAsUseUserObjectComparison()\"")) {\n+    return;\n+  }\n+  ENTER_V8(isolate);\n+  EnsureConstructor(this);\n+  Utils::OpenHandle(this)->set_use_user_object_comparison(i::Smi::FromInt(1));\n+}\n+\n // --- S c r i p t D a t a ---\n \n \n@@ -5364,6 +5375,17 @@ void V8::SetFailedAccessCheckCallbackFunction(\n   isolate->SetFailedAccessCheckCallback(callback);\n }\n \n+\n+void V8::SetUserObjectComparisonCallbackFunction(\n+      UserObjectComparisonCallback callback) {\n+  i::Isolate* isolate = i::Isolate::Current();\n+  if (IsDeadCheck(isolate, \""v8::V8::SetUserObjectComparisonCallbackFunction()\"")) {\n+    return;\n+  }\n+  isolate->SetUserObjectComparisonCallback(callback);\n+}\n+\n+\n void V8::AddObjectGroup(Persistent<Value>* objects,\n                         size_t length,\n                         RetainedObjectInfo* info) {\n"", ""code-stubs-arm.cc"": ""@@ -1642,6 +1642,37 @@ void CompareStub::Generate(MacroAssembler* masm) {\n   // NOTICE! This code is only reached after a smi-fast-case check, so\n   // it is certain that at least one operand isn't a smi.\n \n+  {\n+      Label not_user_equal, user_equal;\n+      __ and_(r2, r1, Operand(r0));\n+      __ tst(r2, Operand(kSmiTagMask));\n+      __ b(eq, &not_user_equal);\n+\n+      __ CompareObjectType(r0, r2, r4, JS_OBJECT_TYPE);\n+      __ b(ne, &not_user_equal);\n+\n+      __ CompareObjectType(r1, r3, r4, JS_OBJECT_TYPE);\n+      __ b(ne, &not_user_equal);\n+\n+      __ ldrb(r2, FieldMemOperand(r2, Map::kBitField2Offset));\n+      __ and_(r2, r2, Operand(1 << Map::kUseUserObjectComparison));\n+      __ cmp(r2, Operand(1 << Map::kUseUserObjectComparison));\n+      __ b(eq, &user_equal);\n+\n+      __ ldrb(r3, FieldMemOperand(r3, Map::kBitField2Offset));\n+      __ and_(r3, r3, Operand(1 << Map::kUseUserObjectComparison));\n+      __ cmp(r3, Operand(1 << Map::kUseUserObjectComparison));\n+      __ b(ne, &not_user_equal);\n+\n+      __ bind(&user_equal);\n+\n+      __ Push(r0, r1);\n+      __ TailCallRuntime(Runtime::kUserObjectEquals, 2, 1);\n+\n+      __ bind(&not_user_equal);\n+  }\n+\n+\n   // Handle the case where the objects are identical.  Either returns the answer\n   // or goes to slow.  Only falls through if the objects were not identical.\n   EmitIdenticalObjectComparison(masm, &slow, cc_, never_nan_nan_);\n@@ -6749,10 +6780,18 @@ void ICCompareStub::GenerateObjects(MacroAssembler* masm) {\n   __ and_(r2, r1, Operand(r0));\n   __ JumpIfSmi(r2, &miss);\n \n-  __ CompareObjectType(r0, r2, r2, JS_OBJECT_TYPE);\n+  __ CompareObjectType(r0, r2, r3, JS_OBJECT_TYPE);\n   __ b(ne, &miss);\n-  __ CompareObjectType(r1, r2, r2, JS_OBJECT_TYPE);\n+  __ ldrb(r2, FieldMemOperand(r2, Map::kBitField2Offset));\n+  __ and_(r2, r2, Operand(1 << Map::kUseUserObjectComparison));\n+  __ cmp(r2, Operand(1 << Map::kUseUserObjectComparison));\n+  __ b(eq, &miss);\n+  __ CompareObjectType(r1, r2, r3, JS_OBJECT_TYPE);\n   __ b(ne, &miss);\n+  __ ldrb(r2, FieldMemOperand(r2, Map::kBitField2Offset));\n+  __ and_(r2, r2, Operand(1 << Map::kUseUserObjectComparison));\n+  __ cmp(r2, Operand(1 << Map::kUseUserObjectComparison));\n+  __ b(eq, &miss);\n \n   ASSERT(GetCondition() == eq);\n   __ sub(r0, r0, Operand(r1));\n@@ -6771,8 +6810,16 @@ void ICCompareStub::GenerateKnownObjects(MacroAssembler* masm) {\n   __ ldr(r3, FieldMemOperand(r1, HeapObject::kMapOffset));\n   __ cmp(r2, Operand(known_map_));\n   __ b(ne, &miss);\n+  __ ldrb(r2, FieldMemOperand(r0, Map::kBitField2Offset));\n+  __ and_(r2, r2, Operand(1 << Map::kUseUserObjectComparison));\n+  __ cmp(r2, Operand(1 << Map::kUseUserObjectComparison));\n+  __ b(eq, &miss);\n   __ cmp(r3, Operand(known_map_));\n   __ b(ne, &miss);\n+  __ ldrb(r3, FieldMemOperand(r1, Map::kBitField2Offset));\n+  __ and_(r3, r2, Operand(1 << Map::kUseUserObjectComparison));\n+  __ cmp(r3, Operand(1 << Map::kUseUserObjectComparison));\n+  __ b(eq, &miss);\n \n   __ sub(r0, r0, Operand(r1));\n   __ Ret();\n"", ""factory.cc"": ""@@ -1220,6 +1220,7 @@ Handle<JSFunction> Factory::CreateApiFunction(\n \n   int internal_field_count = 0;\n   bool has_external_resource = false;\n+  bool use_user_object_comparison = false;\n \n   if (!obj->instance_template()->IsUndefined()) {\n     Handle<ObjectTemplateInfo> instance_template =\n@@ -1229,6 +1230,8 @@ Handle<JSFunction> Factory::CreateApiFunction(\n         Smi::cast(instance_template->internal_field_count())->value();\n     has_external_resource =\n         !instance_template->has_external_resource()->IsUndefined();\n+    use_user_object_comparison =\n+        !instance_template->use_user_object_comparison()->IsUndefined();\n   }\n \n   int instance_size = kPointerSize * internal_field_count;\n@@ -1273,6 +1276,11 @@ Handle<JSFunction> Factory::CreateApiFunction(\n     map->set_has_external_resource(true);\n   }\n \n+  // Mark as using user object comparison if needed\n+  if (use_user_object_comparison) {\n+    map->set_use_user_object_comparison(true);\n+  }\n+\n   // Mark as undetectable if needed.\n   if (obj->undetectable()) {\n     map->set_is_undetectable();\n"", ""code-stubs-ia32.cc"": ""@@ -4261,6 +4261,39 @@ void CompareStub::Generate(MacroAssembler* masm) {\n   // NOTICE! This code is only reached after a smi-fast-case check, so\n   // it is certain that at least one operand isn't a smi.\n \n+  {\n+    Label not_user_equal, user_equal;\n+    __ test(eax, Immediate(kSmiTagMask));\n+    __ j(zero, &not_user_equal);\n+    __ test(edx, Immediate(kSmiTagMask));\n+    __ j(zero, &not_user_equal);\n+\n+    __ CmpObjectType(eax, JS_OBJECT_TYPE, ebx);\n+    __ j(not_equal, &not_user_equal);\n+\n+    __ CmpObjectType(edx, JS_OBJECT_TYPE, ecx);\n+    __ j(not_equal, &not_user_equal);\n+\n+    __ test_b(FieldOperand(ebx, Map::kBitField2Offset),\n+              1 << Map::kUseUserObjectComparison);\n+    __ j(not_zero, &user_equal);\n+    __ test_b(FieldOperand(ecx, Map::kBitField2Offset),\n+              1 << Map::kUseUserObjectComparison);\n+    __ j(not_zero, &user_equal);\n+\n+    __ jmp(&not_user_equal);\n+\n+    __ bind(&user_equal);\n+   \n+    __ pop(ebx); // Return address.\n+    __ push(eax);\n+    __ push(edx);\n+    __ push(ebx);\n+    __ TailCallRuntime(Runtime::kUserObjectEquals, 2, 1);\n+   \n+    __ bind(&not_user_equal);\n+  }\n+\n   // Identical objects can be compared fast, but there are some tricky cases\n   // for NaN and undefined.\n   {\n@@ -6750,8 +6783,14 @@ void ICCompareStub::GenerateObjects(MacroAssembler* masm) {\n \n   __ CmpObjectType(eax, JS_OBJECT_TYPE, ecx);\n   __ j(not_equal, &miss, Label::kNear);\n+  __ test_b(FieldOperand(ecx, Map::kBitField2Offset),\n+            1 << Map::kUseUserObjectComparison);\n+  __ j(not_zero, &miss, Label::kNear);\n   __ CmpObjectType(edx, JS_OBJECT_TYPE, ecx);\n   __ j(not_equal, &miss, Label::kNear);\n+  __ test_b(FieldOperand(ecx, Map::kBitField2Offset),\n+            1 << Map::kUseUserObjectComparison);\n+  __ j(not_zero, &miss, Label::kNear);\n \n   ASSERT(GetCondition() == equal);\n   __ sub(eax, edx);\n@@ -6772,8 +6811,14 @@ void ICCompareStub::GenerateKnownObjects(MacroAssembler* masm) {\n   __ mov(ebx, FieldOperand(edx, HeapObject::kMapOffset));\n   __ cmp(ecx, known_map_);\n   __ j(not_equal, &miss, Label::kNear);\n+  __ test_b(FieldOperand(ecx, Map::kBitField2Offset),\n+            1 << Map::kUseUserObjectComparison);\n+  __ j(not_zero, &miss, Label::kNear);\n   __ cmp(ebx, known_map_);\n   __ j(not_equal, &miss, Label::kNear);\n+  __ test_b(FieldOperand(ebx, Map::kBitField2Offset),\n+            1 << Map::kUseUserObjectComparison);\n+  __ j(not_zero, &miss, Label::kNear);\n \n   __ sub(eax, edx);\n   __ ret(0);\n"", ""isolate.cc"": ""@@ -97,6 +97,7 @@ void ThreadLocalTop::InitializeInternal() {\n   thread_id_ = ThreadId::Invalid();\n   external_caught_exception_ = false;\n   failed_access_check_callback_ = NULL;\n+  user_object_comparison_callback_ = NULL;\n   save_context_ = NULL;\n   catcher_ = NULL;\n   top_lookup_result_ = NULL;\n@@ -743,6 +744,12 @@ void Isolate::SetFailedAccessCheckCallback(\n   thread_local_top()->failed_access_check_callback_ = callback;\n }\n \n+ \n+void Isolate::SetUserObjectComparisonCallback(\n+    v8::UserObjectComparisonCallback callback) {\n+  thread_local_top()->user_object_comparison_callback_ = callback;\n+}\n+\n \n void Isolate::ReportFailedAccessCheck(JSObject* receiver, v8::AccessType type) {\n   if (!thread_local_top()->failed_access_check_callback_) return;\n"", ""isolate.h"": ""@@ -273,6 +273,9 @@ class ThreadLocalTop BASE_EMBEDDED {\n   // Head of the list of live LookupResults.\n   LookupResult* top_lookup_result_;\n \n+  // Call back function for user object comparisons\n+  v8::UserObjectComparisonCallback user_object_comparison_callback_;\n+\n   // Whether out of memory exceptions should be ignored.\n   bool ignore_out_of_memory_;\n \n@@ -702,6 +705,11 @@ class Isolate {\n   void SetFailedAccessCheckCallback(v8::FailedAccessCheckCallback callback);\n   void ReportFailedAccessCheck(JSObject* receiver, v8::AccessType type);\n \n+  void SetUserObjectComparisonCallback(v8::UserObjectComparisonCallback callback);\n+  inline v8::UserObjectComparisonCallback UserObjectComparisonCallback() { \n+      return thread_local_top()->user_object_comparison_callback_;\n+  }\n+\n   // Exception throwing support. The caller should use the result\n   // of Throw() as its return value.\n   Failure* Throw(Object* exception, MessageLocation* location = NULL);\n"", ""code-stubs-mips.cc"": ""@@ -1716,6 +1716,46 @@ void CompareStub::Generate(MacroAssembler* masm) {\n \n   // NOTICE! This code is only reached after a smi-fast-case check, so\n   // it is certain that at least one operand isn't a smi.\n+  {\n+    // This is optimized for reading the code and not benchmarked for\n+    // speed or amount of instructions. The code is not ordered for speed\n+    // or anything like this\n+    Label miss, user_compare;\n+\n+    // No global compare if both operands are SMIs\n+    __ And(a2, a1, Operand(a0));\n+    __ JumpIfSmi(a2, &miss);\n+\n+\n+    // We need to check if lhs and rhs are both objects, if not we are\n+    // jumping out of the function. We will keep the 'map' in t0 (lhs) and\n+    // t1 (rhs) for later usage.\n+    __ GetObjectType(a0, t0, a3);\n+    __ Branch(&miss, ne, a3, Operand(JS_OBJECT_TYPE));\n+\n+    __ GetObjectType(a1, t1, a3);\n+    __ Branch(&miss, ne, a3, Operand(JS_OBJECT_TYPE));\n+\n+    // Check if the UseUserComparison flag is set by using the map of t0 for lhs\n+    __ lbu(t0, FieldMemOperand(t0, Map::kBitField2Offset));\n+    __ And(t0, t0, Operand(1 << Map::kUseUserObjectComparison));\n+    __ Branch(&user_compare, eq, t0, Operand(1 << Map::kUseUserObjectComparison));\n+\n+\n+    // Check if the UseUserComparison flag is _not_ set by using the map of t1 for\n+    // rhs and then jump to the miss label.\n+    __ lbu(t1, FieldMemOperand(t1, Map::kBitField2Offset));\n+    __ And(t1, t1, Operand(1 << Map::kUseUserObjectComparison));\n+    __ Branch(&miss, ne, t1, Operand(1 << Map::kUseUserObjectComparison));\n+\n+    // Invoke the runtime function here\n+    __ bind(&user_compare);\n+    __ Push(a0, a1);\n+    __ TailCallRuntime(Runtime::kUserObjectEquals, 2, 1);\n+\n+    // We exit here without doing anything\n+    __ bind(&miss);\n+  }\n \n   // Handle the case where the objects are identical.  Either returns the answer\n   // or goes to slow.  Only falls through if the objects were not identical.\n@@ -6992,10 +7032,20 @@ void ICCompareStub::GenerateObjects(MacroAssembler* masm) {\n   __ And(a2, a1, Operand(a0));\n   __ JumpIfSmi(a2, &miss);\n \n-  __ GetObjectType(a0, a2, a2);\n-  __ Branch(&miss, ne, a2, Operand(JS_OBJECT_TYPE));\n-  __ GetObjectType(a1, a2, a2);\n-  __ Branch(&miss, ne, a2, Operand(JS_OBJECT_TYPE));\n+  // Compare lhs, a2 holds the map, a3 holds the type_reg\n+  __ GetObjectType(a0, a2, a3);\n+  __ Branch(&miss, ne, a3, Operand(JS_OBJECT_TYPE));\n+  __ lbu(a2, FieldMemOperand(a2, Map::kBitField2Offset));\n+  __ And(a2, a2, Operand(1 << Map::kUseUserObjectComparison));\n+  __ Branch(&miss, eq, a2, Operand(1 << Map::kUseUserObjectComparison));\n+\n+\n+  // Compare rhs, a2 holds the map, a3 holds the type_reg\n+  __ GetObjectType(a1, a2, a3);\n+  __ Branch(&miss, ne, a3, Operand(JS_OBJECT_TYPE));\n+  __ lbu(a2, FieldMemOperand(a2, Map::kBitField2Offset));\n+  __ And(a2, a2, Operand(1 << Map::kUseUserObjectComparison));\n+  __ Branch(&miss, eq, a2, Operand(1 << Map::kUseUserObjectComparison));\n \n   ASSERT(GetCondition() == eq);\n   __ Ret(USE_DELAY_SLOT);\n@@ -7013,7 +7063,13 @@ void ICCompareStub::GenerateKnownObjects(MacroAssembler* masm) {\n   __ lw(a2, FieldMemOperand(a0, HeapObject::kMapOffset));\n   __ lw(a3, FieldMemOperand(a1, HeapObject::kMapOffset));\n   __ Branch(&miss, ne, a2, Operand(known_map_));\n+  __ lbu(a2, FieldMemOperand(a0, Map::kBitField2Offset));\n+  __ And(a2, a2, Operand(1 << Map::kUseUserObjectComparison));\n+  __ Branch(&miss, eq, a2, Operand(1 << Map::kUseUserObjectComparison));\n   __ Branch(&miss, ne, a3, Operand(known_map_));\n+  __ lbu(a3, FieldMemOperand(a1, Map::kBitField2Offset));\n+  __ And(a3, a3, Operand(1 << Map::kUseUserObjectComparison));\n+  __ Branch(&miss, eq, a3, Operand(1 << Map::kUseUserObjectComparison));\n \n   __ Ret(USE_DELAY_SLOT);\n   __ subu(v0, a0, a1);\n"", ""objects-inl.h"": ""@@ -2908,14 +2908,14 @@ bool Map::is_extensible() {\n \n void Map::set_attached_to_shared_function_info(bool value) {\n   if (value) {\n-    set_bit_field2(bit_field2() | (1 << kAttachedToSharedFunctionInfo));\n+    set_bit_field3(bit_field3() | (1 << kAttachedToSharedFunctionInfo));\n   } else {\n-    set_bit_field2(bit_field2() & ~(1 << kAttachedToSharedFunctionInfo));\n+    set_bit_field3(bit_field3() & ~(1 << kAttachedToSharedFunctionInfo));\n   }\n }\n \n bool Map::attached_to_shared_function_info() {\n-  return ((1 << kAttachedToSharedFunctionInfo) & bit_field2()) != 0;\n+  return ((1 << kAttachedToSharedFunctionInfo) & bit_field3()) != 0;\n }\n \n \n@@ -2945,6 +2945,20 @@ bool Map::has_external_resource()\n }\n \n \n+void Map::set_use_user_object_comparison(bool value) {\n+  if (value) {\n+    set_bit_field2(bit_field2() | (1 << kUseUserObjectComparison));\n+  } else {\n+    set_bit_field2(bit_field2() & ~(1 << kUseUserObjectComparison));\n+  }\n+}\n+\n+\n+bool Map::use_user_object_comparison() {\n+    return ((1 << kUseUserObjectComparison) & bit_field2()) != 0;\n+}\n+\n+\n void Map::set_named_interceptor_is_fallback(bool value) {\n   if (value) {\n     set_bit_field3(bit_field3() | (1 << kNamedInterceptorIsFallback));\n@@ -3507,6 +3521,8 @@ ACCESSORS(ObjectTemplateInfo, internal_field_count, Object,\n           kInternalFieldCountOffset)\n ACCESSORS(ObjectTemplateInfo, has_external_resource, Object,\n           kHasExternalResourceOffset)\n+ACCESSORS(ObjectTemplateInfo, use_user_object_comparison, Object, \n+          kUseUserObjectComparisonOffset)\n \n ACCESSORS(SignatureInfo, receiver, Object, kReceiverOffset)\n ACCESSORS(SignatureInfo, args, Object, kArgsOffset)\n"", ""objects.cc"": ""@@ -7914,8 +7914,8 @@ void SharedFunctionInfo::DetachInitialMap() {\n   Map* map = reinterpret_cast<Map*>(initial_map());\n \n   // Make the map remember to restore the link if it survives the GC.\n-  map->set_bit_field2(\n-      map->bit_field2() | (1 << Map::kAttachedToSharedFunctionInfo));\n+  map->set_bit_field3(\n+      map->bit_field3() | (1 << Map::kAttachedToSharedFunctionInfo));\n \n   // Undo state changes made by StartInobjectTracking (except the\n   // construction_count). This way if the initial map does not survive the GC\n@@ -7935,8 +7935,8 @@ void SharedFunctionInfo::DetachInitialMap() {\n \n // Called from GC, hence reinterpret_cast and unchecked accessors.\n void SharedFunctionInfo::AttachInitialMap(Map* map) {\n-  map->set_bit_field2(\n-      map->bit_field2() & ~(1 << Map::kAttachedToSharedFunctionInfo));\n+  map->set_bit_field3(\n+      map->bit_field3() & ~(1 << Map::kAttachedToSharedFunctionInfo));\n \n   // Resume inobject slack tracking.\n   set_initial_map(map);\n"", ""objects.h"": ""@@ -4700,6 +4700,11 @@ class Map: public HeapObject {\n   inline void set_has_external_resource(bool value);\n   inline bool has_external_resource();\n \n+  // Tells whether the user object comparison callback should be used for\n+  // comparisons involving this object\n+  inline void set_use_user_object_comparison(bool value);\n+  inline bool use_user_object_comparison();\n+  \n   // [prototype]: implicit prototype object.\n   DECL_ACCESSORS(prototype, Object)\n \n@@ -4950,7 +4955,7 @@ class Map: public HeapObject {\n   static const int kIsExtensible = 0;\n   static const int kFunctionWithPrototype = 1;\n   static const int kStringWrapperSafeForDefaultValueOf = 2;\n-  static const int kAttachedToSharedFunctionInfo = 3;\n+  static const int kUseUserObjectComparison = 3;\n   // No bits can be used after kElementsKindFirstBit, they are all reserved for\n   // storing ElementKind.\n   static const int kElementsKindShift = 4;\n@@ -4969,6 +4974,7 @@ class Map: public HeapObject {\n   static const int kIsShared = 0;\n   static const int kNamedInterceptorIsFallback = 1;\n   static const int kHasInstanceCallHandler = 2;\n+  static const int kAttachedToSharedFunctionInfo = 3;\n \n   // Layout of the default cache. It holds alternating name and code objects.\n   static const int kCodeCacheEntrySize = 2;\n@@ -8321,6 +8327,7 @@ class ObjectTemplateInfo: public TemplateInfo {\n   DECL_ACCESSORS(constructor, Object)\n   DECL_ACCESSORS(internal_field_count, Object)\n   DECL_ACCESSORS(has_external_resource, Object)\n+  DECL_ACCESSORS(use_user_object_comparison, Object)\n \n   static inline ObjectTemplateInfo* cast(Object* obj);\n \n@@ -8338,7 +8345,8 @@ class ObjectTemplateInfo: public TemplateInfo {\n   static const int kInternalFieldCountOffset =\n       kConstructorOffset + kPointerSize;\n   static const int kHasExternalResourceOffset = kInternalFieldCountOffset + kPointerSize;\n-  static const int kSize = kHasExternalResourceOffset + kPointerSize;\n+  static const int kUseUserObjectComparisonOffset = kHasExternalResourceOffset + kPointerSize;\n+  static const int kSize = kUseUserObjectComparisonOffset + kPointerSize;\n };\n \n \n"", ""runtime.cc"": ""@@ -7135,6 +7135,29 @@ RUNTIME_FUNCTION(MaybeObject*, Runtime_StringEquals) {\n }\n \n \n+RUNTIME_FUNCTION(MaybeObject*, Runtime_UserObjectEquals) {\n+  NoHandleAllocation ha;\n+  ASSERT(args.length() == 2);\n+\n+  CONVERT_ARG_CHECKED(JSObject, lhs, 1);\n+  CONVERT_ARG_CHECKED(JSObject, rhs, 0);\n+\n+  bool result;\n+\n+  v8::UserObjectComparisonCallback callback = isolate->UserObjectComparisonCallback();\n+  if (callback) {\n+      HandleScope scope(isolate);\n+      Handle<JSObject> lhs_handle(lhs);\n+      Handle<JSObject> rhs_handle(rhs);\n+      result = callback(v8::Utils::ToLocal(lhs_handle), v8::Utils::ToLocal(rhs_handle));\n+  } else {\n+      result = (lhs == rhs);\n+  }\n+\n+  return Smi::FromInt(result?0:1);\n+}\n+\n+\n RUNTIME_FUNCTION(MaybeObject*, Runtime_NumberCompare) {\n   NoHandleAllocation ha;\n   ASSERT(args.length() == 3);\n"", ""runtime.h"": ""@@ -156,6 +156,7 @@ namespace internal {\n   /* Comparisons */ \\\n   F(NumberEquals, 2, 1) \\\n   F(StringEquals, 2, 1) \\\n+  F(UserObjectEquals, 2, 1) \\\n   \\\n   F(NumberCompare, 3, 1) \\\n   F(SmiLexicographicCompare, 2, 1) \\\n"", ""code-stubs-x64.cc"": ""@@ -3328,6 +3328,37 @@ void CompareStub::Generate(MacroAssembler* masm) {\n   // NOTICE! This code is only reached after a smi-fast-case check, so\n   // it is certain that at least one operand isn't a smi.\n \n+  {\n+    Label not_user_equal, user_equal;\n+    __ JumpIfSmi(rax, &not_user_equal);\n+    __ JumpIfSmi(rdx, &not_user_equal);\n+\n+    __ CmpObjectType(rax, JS_OBJECT_TYPE, rbx);\n+    __ j(not_equal, &not_user_equal);\n+\n+    __ CmpObjectType(rdx, JS_OBJECT_TYPE, rcx);\n+    __ j(not_equal, &not_user_equal);\n+\n+    __ testb(FieldOperand(rbx, Map::kBitField2Offset),\n+             Immediate(1 << Map::kUseUserObjectComparison));\n+    __ j(not_zero, &user_equal);\n+    __ testb(FieldOperand(rcx, Map::kBitField2Offset),\n+             Immediate(1 << Map::kUseUserObjectComparison));\n+    __ j(not_zero, &user_equal);\n+\n+    __ jmp(&not_user_equal);\n+\n+    __ bind(&user_equal);\n+   \n+    __ pop(rbx); // Return address.\n+    __ push(rax);\n+    __ push(rdx);\n+    __ push(rbx);\n+    __ TailCallRuntime(Runtime::kUserObjectEquals, 2, 1);\n+   \n+    __ bind(&not_user_equal);\n+  }\n+\n   // Two identical objects are equal unless they are both NaN or undefined.\n   {\n     Label not_identical;\n@@ -5725,8 +5756,14 @@ void ICCompareStub::GenerateObjects(MacroAssembler* masm) {\n \n   __ CmpObjectType(rax, JS_OBJECT_TYPE, rcx);\n   __ j(not_equal, &miss, Label::kNear);\n+  __ testb(FieldOperand(rcx, Map::kBitField2Offset),\n+           Immediate(1 << Map::kUseUserObjectComparison));\n+  __ j(not_zero, &miss, Label::kNear);\n   __ CmpObjectType(rdx, JS_OBJECT_TYPE, rcx);\n   __ j(not_equal, &miss, Label::kNear);\n+  __ testb(FieldOperand(rcx, Map::kBitField2Offset),\n+           Immediate(1 << Map::kUseUserObjectComparison));\n+  __ j(not_zero, &miss, Label::kNear);\n \n   ASSERT(GetCondition() == equal);\n   __ subq(rax, rdx);\n@@ -5746,8 +5783,14 @@ void ICCompareStub::GenerateKnownObjects(MacroAssembler* masm) {\n   __ movq(rbx, FieldOperand(rdx, HeapObject::kMapOffset));\n   __ Cmp(rcx, known_map_);\n   __ j(not_equal, &miss, Label::kNear);\n+  __ testb(FieldOperand(rcx, Map::kBitField2Offset),\n+           Immediate(1 << Map::kUseUserObjectComparison));\n+  __ j(not_zero, &miss, Label::kNear);\n   __ Cmp(rbx, known_map_);\n   __ j(not_equal, &miss, Label::kNear);\n+  __ testb(FieldOperand(rbx, Map::kBitField2Offset),\n+           Immediate(1 << Map::kUseUserObjectComparison));\n+  __ j(not_zero, &miss, Label::kNear);\n \n   __ subq(rax, rdx);\n   __ ret(0);\n""}",feature,"feature 
",feature;
5949.0,5949.0,feature ,Alex,QGeoManeuver should use implicit shared data copying,"QGeoManeuver should use implicit shared data copying

This commit also adds the relevant unit test for QGeoManeuver.

Change-Id: I4a55119f9aedea3d8e7a816225feae809d792ed7","['src/location/maps/qgeomaneuver.h', 'tests/auto/auto.pro', 'tests/auto/qgeomaneuver/tst_qgeomaneuver.h', 'src/location/maps/qgeomaneuver.cpp', 'tests/auto/qgeomaneuver/tst_qgeomaneuver.cpp', 'tests/auto/qgeomaneuver/qgeomaneuver.pro']","{""qgeomaneuver.cpp"": ""@@ -52,7 +52,6 @@ QT_BEGIN_NAMESPACE\n     point at which two QGeoRouteSegments meet.\n \n     \\inmodule QtLocation\n-    \\since 1.1\n \n     \\ingroup maps-routing\n \n"", ""qgeomaneuver.h"": ""@@ -42,7 +42,7 @@\n #ifndef QGEOMANEUVER_H\n #define QGEOMANEUVER_H\n \n-#include <QExplicitlySharedDataPointer>\n+#include <qshareddata.h>\n \n QT_BEGIN_HEADER\n \n@@ -104,7 +104,7 @@ public:\n     QGeoCoordinate waypoint() const;\n \n private:\n-    QExplicitlySharedDataPointer<QGeoManeuverPrivate> d_ptr;\n+    QSharedDataPointer<QGeoManeuverPrivate> d_ptr;\n };\n \n QT_END_NAMESPACE\n"", ""auto.pro"": ""@@ -6,6 +6,7 @@ SUBDIRS += geotestplugin \\\n            qgeoboundingbox \\\n            qgeoboundingcircle \\\n            qgeocoordinate \\\n+           qgeomaneuver \\\n            qgeolocation \\\n            qplace \\\n            qgeocodereply \\\n"", ""qgeomaneuver.pro"": ""@@ -0,0 +1,11 @@\n+TEMPLATE = app\n+CONFIG+=testcase\n+TARGET=tst_qgeomaneuver\n+\n+# Input\n+HEADERS += ../qgeocoordinate/qlocationtestutils_p.h \\\n+           tst_qgeomaneuver.h\n+SOURCES += tst_qgeomaneuver.cpp \\\n+           ../qgeocoordinate/qlocationtestutils.cpp\n+\n+QT += location testlib\n"", ""tst_qgeomaneuver.cpp"": ""@@ -0,0 +1,274 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the Qt Mobility Components.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#include \""tst_qgeomaneuver.h\""\n+\n+\n+tst_QGeoManeuver::tst_QGeoManeuver()\n+{\n+}\n+\n+void tst_QGeoManeuver::initTestCase()\n+{\n+\n+}\n+\n+void tst_QGeoManeuver::cleanupTestCase()\n+{\n+\n+}\n+\n+void tst_QGeoManeuver::init()\n+{\n+\n+    qgeomaneuver = new QGeoManeuver();\n+}\n+\n+void tst_QGeoManeuver::cleanup()\n+{\n+    delete qgeomaneuver;\n+}\n+\n+void tst_QGeoManeuver::constructor()\n+{\n+    QString empty =\""\"";\n+\n+    QVERIFY(!qgeomaneuver->isValid());\n+    QCOMPARE(qgeomaneuver->direction(),QGeoManeuver::NoDirection);\n+    QCOMPARE(qgeomaneuver->distanceToNextInstruction(), qreal(0.0));\n+    QCOMPARE(qgeomaneuver->instructionText(),empty);\n+    QCOMPARE(qgeomaneuver->timeToNextInstruction(),0);\n+}\n+\n+void tst_QGeoManeuver::copy_constructor()\n+{\n+    QGeoManeuver *qgeomaneuvercopy = new QGeoManeuver (*qgeomaneuver);\n+\n+    QCOMPARE(*qgeomaneuver,*qgeomaneuvercopy);\n+\n+    delete qgeomaneuvercopy;\n+}\n+\n+void tst_QGeoManeuver::destructor()\n+{\n+    QGeoManeuver *qgeomaneuvercopy;\n+\n+    QLocationTestUtils::uheap_mark();\n+    qgeomaneuvercopy = new QGeoManeuver();\n+    delete qgeomaneuvercopy;\n+    QLocationTestUtils::uheap_mark_end();\n+\n+    QLocationTestUtils::uheap_mark();\n+    qgeomaneuvercopy = new QGeoManeuver(*qgeomaneuver);\n+    delete qgeomaneuvercopy;\n+    QLocationTestUtils::uheap_mark_end();\n+}\n+\n+void tst_QGeoManeuver::direction()\n+{\n+    QFETCH(QGeoManeuver::InstructionDirection,direction);\n+\n+    qgeomaneuver->setDirection(direction);\n+\n+    QCOMPARE(qgeomaneuver->direction(),direction);\n+}\n+void tst_QGeoManeuver::direction_data()\n+{\n+    QTest::addColumn<QGeoManeuver::InstructionDirection>(\""direction\"");\n+\n+    QTest::newRow(\""instruction1\"") << QGeoManeuver::NoDirection;\n+    QTest::newRow(\""instruction2\"") << QGeoManeuver::DirectionForward;\n+    QTest::newRow(\""instruction3\"") << QGeoManeuver::DirectionBearRight;\n+    QTest::newRow(\""instruction4\"") << QGeoManeuver::DirectionLightRight;\n+    QTest::newRow(\""instruction5\"") << QGeoManeuver::DirectionRight;\n+    QTest::newRow(\""instruction6\"") << QGeoManeuver::DirectionHardRight;\n+    QTest::newRow(\""instruction7\"") << QGeoManeuver::DirectionUTurnRight;\n+    QTest::newRow(\""instruction8\"") << QGeoManeuver::DirectionUTurnLeft;\n+    QTest::newRow(\""instruction9\"") << QGeoManeuver::DirectionHardLeft;\n+    QTest::newRow(\""instruction10\"") << QGeoManeuver::DirectionLeft;\n+    QTest::newRow(\""instruction11\"") << QGeoManeuver::DirectionLightLeft;\n+    QTest::newRow(\""instruction12\"") << QGeoManeuver::DirectionBearLeft;\n+}\n+\n+void tst_QGeoManeuver::distanceToNextInstruction()\n+{\n+    qreal distance = 0.0;\n+    qgeomaneuver->setDistanceToNextInstruction(distance);\n+\n+    QCOMPARE (qgeomaneuver->distanceToNextInstruction(), distance);\n+\n+    distance = -3423.4324;\n+\n+    QVERIFY (qgeomaneuver->distanceToNextInstruction() != distance);\n+\n+    qgeomaneuver->setDistanceToNextInstruction(distance);\n+    QCOMPARE (qgeomaneuver->distanceToNextInstruction(),distance);\n+}\n+\n+void tst_QGeoManeuver::instructionText()\n+{\n+    QString text = \""After 50m turn left\"";\n+\n+    qgeomaneuver->setInstructionText(text);\n+\n+    QCOMPARE (qgeomaneuver->instructionText(),text);\n+\n+    text=\""After 40m, turn left\"";\n+    QVERIFY (qgeomaneuver->instructionText() != text);\n+\n+}\n+\n+void tst_QGeoManeuver::position()\n+{\n+    QFETCH(double, latitude);\n+    QFETCH(double, longitude);\n+\n+    qgeocoordinate = new QGeoCoordinate (latitude,longitude);\n+\n+    qgeomaneuver->setPosition(*qgeocoordinate);\n+\n+    QCOMPARE(qgeomaneuver->position(),*qgeocoordinate);\n+\n+    delete qgeocoordinate;\n+}\n+\n+void tst_QGeoManeuver::position_data()\n+{\n+    QTest::addColumn<double>(\""latitude\"");\n+    QTest::addColumn<double>(\""longitude\"");\n+\n+    QTest::newRow(\""invalid0\"") << -12220.0 << 0.0;\n+    QTest::newRow(\""invalid1\"") << 0.0 << 181.0;\n+\n+    QTest::newRow(\""correct0\"") << 0.0 << 0.0;\n+    QTest::newRow(\""correct1\"") << 90.0 << 0.0;\n+    QTest::newRow(\""correct2\"") << 0.0 << 180.0;\n+    QTest::newRow(\""correct3\"") << -90.0 << 0.0;\n+    QTest::newRow(\""correct4\"") << 0.0 << -180.0;\n+    QTest::newRow(\""correct5\"") << 45.0 << 90.0;\n+}\n+\n+void tst_QGeoManeuver::timeToNextInstruction()\n+{\n+    int time = 0;\n+    qgeomaneuver->setTimeToNextInstruction(time);\n+\n+    QCOMPARE (qgeomaneuver->timeToNextInstruction(),time);\n+\n+    time = 35;\n+\n+    QVERIFY (qgeomaneuver->timeToNextInstruction() != time);\n+\n+    qgeomaneuver->setTimeToNextInstruction(time);\n+    QCOMPARE (qgeomaneuver->timeToNextInstruction(),time);\n+}\n+\n+void tst_QGeoManeuver::waypoint()\n+{\n+    QFETCH(double, latitude);\n+    QFETCH(double, longitude);\n+\n+    qgeocoordinate = new QGeoCoordinate (latitude,longitude);\n+\n+    qgeomaneuver->setWaypoint(*qgeocoordinate);\n+\n+    QCOMPARE(qgeomaneuver->waypoint(),*qgeocoordinate);\n+\n+    qgeocoordinate->setLatitude(30.3);\n+    QVERIFY(qgeomaneuver->waypoint() != *qgeocoordinate);\n+\n+\n+    delete qgeocoordinate;\n+}\n+void tst_QGeoManeuver::waypoint_data()\n+{\n+    QTest::addColumn<double>(\""latitude\"");\n+    QTest::addColumn<double>(\""longitude\"");\n+\n+    QTest::newRow(\""invalid0\"") << -12220.0 << 0.0;\n+    QTest::newRow(\""invalid1\"") << 0.0 << 181.0;\n+\n+    QTest::newRow(\""correct0\"") << 0.0 << 0.0;\n+    QTest::newRow(\""correct1\"") << 90.0 << 0.0;\n+    QTest::newRow(\""correct2\"") << 0.0 << 180.0;\n+    QTest::newRow(\""correct3\"") << -90.0 << 0.0;\n+    QTest::newRow(\""correct4\"") << 0.0 << -180.0;\n+    QTest::newRow(\""correct5\"") << 45.0 << 90.0;\n+}\n+\n+void tst_QGeoManeuver::isValid()\n+{\n+    QVERIFY(!qgeomaneuver->isValid());\n+    qgeomaneuver->setDirection(QGeoManeuver::DirectionBearLeft);\n+    QVERIFY(qgeomaneuver->isValid());\n+}\n+\n+void tst_QGeoManeuver::operators(){\n+\n+    QGeoManeuver *qgeomaneuvercopy = new QGeoManeuver(*qgeomaneuver);\n+\n+    QVERIFY(qgeomaneuver->operator ==(*qgeomaneuvercopy));\n+    QVERIFY(!qgeomaneuver->operator !=(*qgeomaneuvercopy));\n+\n+    qgeomaneuver->setDirection(QGeoManeuver::DirectionBearLeft);\n+    qgeomaneuver->setInstructionText(\""Turn left in 50m\"");\n+    qgeomaneuver->setTimeToNextInstruction(60);\n+    qgeomaneuver->setDistanceToNextInstruction(560.45);\n+\n+    qgeomaneuvercopy->setDirection(QGeoManeuver::DirectionForward);\n+    qgeomaneuvercopy->setInstructionText(\""Turn left in 80m\"");\n+    qgeomaneuvercopy->setTimeToNextInstruction(70);\n+    qgeomaneuvercopy->setDistanceToNextInstruction(56065.45);\n+\n+// Not passing\n+   QVERIFY(!(qgeomaneuver->operator ==(*qgeomaneuvercopy)));\n+// Not passing\n+   QVERIFY(qgeomaneuver->operator !=(*qgeomaneuvercopy));\n+\n+    *qgeomaneuvercopy = qgeomaneuvercopy->operator =(*qgeomaneuver);\n+    QVERIFY(qgeomaneuver->operator ==(*qgeomaneuvercopy));\n+    QVERIFY(!qgeomaneuver->operator !=(*qgeomaneuvercopy));\n+\n+    delete qgeomaneuvercopy;\n+}\n+\n+\n+QTEST_APPLESS_MAIN(tst_QGeoManeuver);\n"", ""tst_qgeomaneuver.h"": ""@@ -0,0 +1,97 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the Qt Mobility Components.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser General Public\n+** License version 2.1 as published by the Free Software Foundation and\n+** appearing in the file LICENSE.LGPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU Lesser\n+** General Public License version 2.1 requirements will be met:\n+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights. These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** GNU General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU General\n+** Public License version 3.0 as published by the Free Software Foundation\n+** and appearing in the file LICENSE.GPL included in the packaging of this\n+** file. Please review the following information to ensure the GNU General\n+** Public License version 3.0 requirements will be met:\n+** http://www.gnu.org/copyleft/gpl.html.\n+**\n+** Other Usage\n+** Alternatively, this file may be used in accordance with the terms and\n+** conditions contained in a signed written agreement between you and Nokia.\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#ifndef TST_QGEOMANEUVER_H\n+#define TST_QGEOMANEUVER_H\n+\n+\n+#include <QtCore/QString>\n+#include <QtTest/QtTest>\n+#include <QtCore/QCoreApplication>\n+#include <QMetaType>\n+#include <QSignalSpy>\n+\n+#include \""../qgeocoordinate/qlocationtestutils_p.h\""\n+#include <qgeomaneuver.h>\n+#include <qgeocoordinate.h>\n+\n+\n+class tst_QGeoManeuver : public QObject\n+{\n+    Q_OBJECT\n+\n+public:\n+    tst_QGeoManeuver();\n+\n+private Q_SLOTS:\n+    void initTestCase();\n+    void cleanupTestCase();\n+    void init();\n+    void cleanup();\n+\n+    //Start unit test for QGeoRouteManeuver\n+    void constructor();\n+    void copy_constructor();\n+    void destructor();\n+    void direction();\n+    void direction_data();\n+    void distanceToNextInstruction();\n+    void instructionText();\n+    void position();\n+    void position_data();\n+    void timeToNextInstruction();\n+    void waypoint();\n+    void waypoint_data();\n+    void isValid();\n+    void operators();\n+    //End Unit Test for QGeoRouteManeuver\n+\n+private:\n+    QGeoManeuver *qgeomaneuver;\n+    QGeoCoordinate *qgeocoordinate;\n+\n+};\n+\n+Q_DECLARE_METATYPE( QList<double>);\n+Q_DECLARE_METATYPE (QGeoManeuver::InstructionDirection);\n+\n+#endif // TST_QGEOMANEUVER_H\n+\n""}",test,"bug, test 
",test;
24324.0,24324.0,test ,Jan Arve Sæther,Fix a regression where events were not delivered on windows,"Fix a regression where events were not delivered on windows

Regression caused by a17907829e6b180f2bb4af9a8594996b2a0e531a

Change-Id: I8a2ca35cf176b4db47f29d848cbc2cd8180596d0","['src/plugins/platforms/windows/accessible/qwindowsaccessibility.h', 'src/plugins/platforms/windows/accessible/qwindowsaccessibility.cpp']","{""qwindowsaccessibility.cpp"": ""@@ -110,10 +110,10 @@ QWindowsAccessibility::QWindowsAccessibility()\n {\n }\n \n-void QWindowsAccessibility::notifyAccessibilityUpdate(const QAccessibleEvent &event)\n+void QWindowsAccessibility::notifyAccessibilityUpdate(QAccessibleEvent *event)\n {\n     QString soundName;\n-    switch (event.type()) {\n+    switch (event->type()) {\n     case QAccessible::PopupMenuStart:\n         soundName = QLatin1String(\""MenuPopup\"");\n         break;\n@@ -184,7 +184,7 @@ void QWindowsAccessibility::notifyAccessibilityUpdate(const QAccessibleEvent &ev\n \n     // An event has to be associated with a window,\n     // so find the first parent that is a widget and that has a WId\n-    QAccessibleInterface *iface = event.accessibleInterface();\n+    QAccessibleInterface *iface = event->accessibleInterface();\n     QWindow *window = iface ? QWindowsAccessibility::windowHelper(iface) : 0;\n     delete iface;\n \n@@ -198,13 +198,13 @@ void QWindowsAccessibility::notifyAccessibilityUpdate(const QAccessibleEvent &ev\n     HWND hWnd = (HWND)platform->nativeResourceForWindow(\""handle\"", window);\n \n     static int eventNum = 0;\n-    if (event.type() != QAccessible::MenuCommand) { // MenuCommand is faked\n+    if (event->type() != QAccessible::MenuCommand) { // MenuCommand is faked\n         // See comment \""SENDING EVENTS TO OBJECTS WITH NO WINDOW HANDLE\""\n         eventNum %= 50;              //[0..49]\n         int eventId = - (eventNum - 1);\n \n-        qAccessibleRecentSentEvents()->insert(eventId, qMakePair(event.object(), event.child()));\n-        ptrNotifyWinEvent(event.type(), hWnd, OBJID_CLIENT, eventId );\n+        qAccessibleRecentSentEvents()->insert(eventId, qMakePair(event->object(), event->child()));\n+        ptrNotifyWinEvent(event->type(), hWnd, OBJID_CLIENT, eventId );\n \n         ++eventNum;\n     }\n"", ""qwindowsaccessibility.h"": ""@@ -56,7 +56,7 @@ class QWindowsAccessibility : public QPlatformAccessibility\n public:\n     QWindowsAccessibility();\n     static bool handleAccessibleObjectFromWindowRequest(HWND hwnd, WPARAM wParam, LPARAM lParam, LRESULT *lResult);\n-    virtual void notifyAccessibilityUpdate(const QAccessibleEvent &event);\n+    virtual void notifyAccessibilityUpdate(QAccessibleEvent *event);\n     /*\n     virtual void setRootObject(QObject *o);\n     virtual void initialize();\n""}",bug,"bug 
",bug;
12556.0,12556.0,bug ,Bill King,"Squish: Add no settings path variable, for runs without pre-settings.","Squish: Add no settings path variable, for runs without pre-settings.

Change-Id: I12cc0080e2423c48a43937e0f7219357e80d4120",['tests/system/shared/qtcreator.py'],"{""qtcreator.py"": ""@@ -70,6 +70,7 @@ tmpSettingsDir = tempDir()\n tmpSettingsDir = os.path.abspath(tmpSettingsDir+\""/settings\"")\n shutil.copytree(cwd, tmpSettingsDir)\n # the following only doesn't work if the test ends in an exception\n-atexit.register(__removeTmpSettingsDir__)\n-SettingsPath = ' -settingspath \""%s\""' % tmpSettingsDir\n+if os.getenv(\""SYSTEST_NOSETTINGSPATH\"") != \""1\"":\n+    atexit.register(__removeTmpSettingsDir__)\n+    SettingsPath = ' -settingspath \""%s\""' % tmpSettingsDir\n \n""}",test,"test 
",feature;
12062.0,12062.0,test,Robin Burchell,Remove OS X FSEvents watcher.,"Remove OS X FSEvents watcher.

Per QTBUG-9249, this backend is buggy, and not recommended for use by Apple.

Change-Id: I72ce88006a4badbbfdd825717020078778d16a36","['src/corelib/io/qfilesystemwatcher.cpp', 'src/corelib/io/io.pri', 'src/corelib/io/qfilesystemwatcher_fsevents_p.h', 'src/corelib/io/qfilesystemwatcher_fsevents.cpp']","{""io.pri"": ""@@ -90,9 +90,8 @@ win32 {\n                 io/qfilesystemiterator_unix.cpp \\\n \n         !nacl:macx-*: {\n-            HEADERS += io/qfilesystemwatcher_fsevents_p.h\n             SOURCES += io/qfilesystemengine_mac.cpp\n-            SOURCES += io/qsettings_mac.cpp io/qfilesystemwatcher_fsevents.cpp\n+            SOURCES += io/qsettings_mac.cpp\n         }\n         macx-*: {\n             SOURCES += io/qstandardpaths_mac.cpp\n"", ""qfilesystemwatcher.cpp"": ""@@ -57,9 +57,6 @@\n #elif defined(Q_OS_LINUX)\n #  include \""qfilesystemwatcher_inotify_p.h\""\n #elif defined(Q_OS_FREEBSD) || defined(Q_OS_MAC)\n-#  if (defined Q_OS_MAC) && (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)\n-#  include \""qfilesystemwatcher_fsevents_p.h\""\n-#  endif //MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)\n #  include \""qfilesystemwatcher_kqueue_p.h\""\n #endif\n \n@@ -250,12 +247,7 @@ QFileSystemWatcherEngine *QFileSystemWatcherPrivate::createNativeEngine()\n     // 2005), so we can't just new inotify directly.\n     return QInotifyFileSystemWatcherEngine::create();\n #elif defined(Q_OS_FREEBSD) || defined(Q_OS_MAC)\n-#  if 0 && defined(Q_OS_MAC) && (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)\n-    if (QSysInfo::MacintoshVersion >= QSysInfo::MV_10_5)\n-        return QFSEventsFileSystemWatcherEngine::create();\n-    else\n-#  endif\n-        return QKqueueFileSystemWatcherEngine::create();\n+    return QKqueueFileSystemWatcherEngine::create();\n #else\n     return 0;\n #endif\n"", ""qfilesystemwatcher_fsevents.cpp"": ""@@ -1,492 +0,0 @@\n-/****************************************************************************\n-**\n-** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n-** All rights reserved.\n-** Contact: Nokia Corporation (qt-info@nokia.com)\n-**\n-** This file is part of the QtCore module of the Qt Toolkit.\n-**\n-** $QT_BEGIN_LICENSE:LGPL$\n-** GNU Lesser General Public License Usage\n-** This file may be used under the terms of the GNU Lesser General Public\n-** License version 2.1 as published by the Free Software Foundation and\n-** appearing in the file LICENSE.LGPL included in the packaging of this\n-** file. Please review the following information to ensure the GNU Lesser\n-** General Public License version 2.1 requirements will be met:\n-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n-**\n-** In addition, as a special exception, Nokia gives you certain additional\n-** rights. These rights are described in the Nokia Qt LGPL Exception\n-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n-**\n-** GNU General Public License Usage\n-** Alternatively, this file may be used under the terms of the GNU General\n-** Public License version 3.0 as published by the Free Software Foundation\n-** and appearing in the file LICENSE.GPL included in the packaging of this\n-** file. Please review the following information to ensure the GNU General\n-** Public License version 3.0 requirements will be met:\n-** http://www.gnu.org/copyleft/gpl.html.\n-**\n-** Other Usage\n-** Alternatively, this file may be used in accordance with the terms and\n-** conditions contained in a signed written agreement between you and Nokia.\n-**\n-**\n-**\n-**\n-**\n-** $QT_END_LICENSE$\n-**\n-****************************************************************************/\n-\n-#define _DARWIN_USE_64_BIT_INODE\n-#include <qplatformdefs.h>\n-\n-#include \""qfilesystemwatcher.h\""\n-#include \""qfilesystemwatcher_fsevents_p.h\""\n-\n-#ifndef QT_NO_FILESYSTEMWATCHER\n-\n-#include <qdebug.h>\n-#include <qfile.h>\n-#include <qdatetime.h>\n-#include <qfileinfo.h>\n-#include <qvarlengtharray.h>\n-\n-#include <mach/mach.h>\n-#include <sys/types.h>\n-#include <CoreFoundation/CFRunLoop.h>\n-#include <CoreFoundation/CFUUID.h>\n-#include <CoreServices/CoreServices.h>\n-#include <AvailabilityMacros.h>\n-#include <private/qcore_mac_p.h>\n-\n-QT_BEGIN_NAMESPACE\n-\n-#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5\n-// Static operator overloading so for the sake of some convieniece.\n-// They only live in this compilation unit to avoid polluting Qt in general.\n-static bool operator==(const struct ::timespec &left, const struct ::timespec &right)\n-{\n-    return left.tv_sec == right.tv_sec\n-            && left.tv_nsec == right.tv_nsec;\n-}\n-\n-static bool operator==(const struct ::stat &left, const struct ::stat &right)\n-{\n-    return left.st_dev == right.st_dev\n-            && left.st_mode == right.st_mode\n-            && left.st_size == right.st_size\n-            && left.st_ino == right.st_ino\n-            && left.st_uid == right.st_uid\n-            && left.st_gid == right.st_gid\n-            && left.st_mtimespec == right.st_mtimespec\n-            && left.st_ctimespec == right.st_ctimespec\n-            && left.st_flags == right.st_flags;\n-}\n-\n-static bool operator!=(const struct ::stat &left, const struct ::stat &right)\n-{\n-    return !(operator==(left, right));\n-}\n-\n-\n-static void addPathToHash(PathHash &pathHash, const QString &key, const QFileInfo &fileInfo,\n-                          const QString &path)\n-{\n-    PathInfoList &list = pathHash[key];\n-    list.push_back(PathInfo(path,\n-                            fileInfo.canonicalFilePath().normalized(QString::NormalizationForm_D).toUtf8()));\n-    pathHash.insert(key, list);\n-}\n-\n-static void removePathFromHash(PathHash &pathHash, const QString &key, const QString &path)\n-{\n-    PathInfoList &list = pathHash[key];\n-    // We make the assumption that the list contains unique paths\n-    PathInfoList::iterator End = list.end();\n-    PathInfoList::iterator it = list.begin();\n-    while (it != End) {\n-        if (it->originalPath == path) {\n-            list.erase(it);\n-            break;\n-        }\n-        ++it;\n-    }\n-    if (list.isEmpty())\n-        pathHash.remove(key);\n-}\n-\n-static void stopFSStream(FSEventStreamRef stream)\n-{\n-    if (stream) {\n-        FSEventStreamStop(stream);\n-        FSEventStreamInvalidate(stream);\n-    }\n-}\n-\n-static QString createFSStreamPath(const QString &absolutePath)\n-{\n-    // The path returned has a trailing slash, so ensure that here.\n-    QString string = absolutePath;\n-    string.reserve(string.size() + 1);\n-    string.append(QLatin1Char('/'));\n-    return string;\n-}\n-\n-static void cleanupFSStream(FSEventStreamRef stream)\n-{\n-    if (stream)\n-        FSEventStreamRelease(stream);\n-}\n-\n-const FSEventStreamCreateFlags QtFSEventFlags = (kFSEventStreamCreateFlagUseCFTypes | kFSEventStreamCreateFlagNoDefer /* | kFSEventStreamCreateFlagWatchRoot*/);\n-\n-const CFTimeInterval Latency = 0.033; // This will do updates 30 times a second which is probably more than you need.\n-#endif\n-\n-QFSEventsFileSystemWatcherEngine::QFSEventsFileSystemWatcherEngine()\n-    : fsStream(0), pathsToWatch(0), threadsRunLoop(0)\n-{\n-}\n-\n-QFSEventsFileSystemWatcherEngine::~QFSEventsFileSystemWatcherEngine()\n-{\n-#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5\n-    // I assume that at this point, QFileSystemWatcher has already called stop\n-    // on me, so I don't need to invalidate or stop my stream, simply\n-    // release it.\n-    cleanupFSStream(fsStream);\n-    if (pathsToWatch)\n-        CFRelease(pathsToWatch);\n-#endif\n-}\n-\n-QFSEventsFileSystemWatcherEngine *QFSEventsFileSystemWatcherEngine::create()\n-{\n-    return new QFSEventsFileSystemWatcherEngine();\n-}\n-\n-QStringList QFSEventsFileSystemWatcherEngine::addPaths(const QStringList &paths,\n-                                                       QStringList *files,\n-                                                       QStringList *directories)\n-{\n-#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5\n-    stop();\n-    wait();\n-    QMutexLocker locker(&mutex);\n-    QStringList failedToAdd;\n-    // if we have a running FSStreamEvent, we have to kill it, we'll re-add the stream soon.\n-    FSEventStreamEventId idToCheck;\n-    if (fsStream) {\n-        idToCheck = FSEventStreamGetLatestEventId(fsStream);\n-        cleanupFSStream(fsStream);\n-    } else {\n-        idToCheck = kFSEventStreamEventIdSinceNow;\n-    }\n-\n-    // Brain-dead approach, but works. FSEvents actually can already read sub-trees, but since it's\n-    // work to figure out if we are doing a double register, we just register it twice as FSEvents\n-    // seems smart enough to only deliver one event. We also duplicate directory entries in here\n-    // (e.g., if you watch five files in the same directory, you get that directory included in the\n-    // array 5 times). This stupidity also makes remove work correctly though. I'll freely admit\n-    // that we could make this a bit smarter. If you do, check the auto-tests, they should catch at\n-    // least a couple of the issues.\n-    QCFType<CFMutableArrayRef> tmpArray = CFArrayCreateMutable(kCFAllocatorDefault, 0, &kCFTypeArrayCallBacks);\n-    for (int i = 0; i < paths.size(); ++i) {\n-        const QString &path = paths.at(i);\n-\n-        QFileInfo fileInfo(path);\n-        if (!fileInfo.exists()) {\n-            failedToAdd.append(path);\n-            continue;\n-        }\n-\n-        if (fileInfo.isDir()) {\n-            if (directories->contains(path)) {\n-                failedToAdd.append(path);\n-                continue;\n-            } else {\n-                directories->append(path);\n-                // Full file path for dirs.\n-                QCFString cfpath(createFSStreamPath(fileInfo.canonicalFilePath()));\n-                addPathToHash(dirPathInfoHash, cfpath, fileInfo, path);\n-                CFArrayAppendValue(tmpArray, cfpath);\n-            }\n-        } else {\n-            if (files->contains(path)) {\n-                failedToAdd.append(path);\n-                continue;\n-            } else {\n-                // Just the absolute path (minus it's filename) for files.\n-                QCFString cfpath(createFSStreamPath(fileInfo.canonicalPath()));\n-                files->append(path);\n-                addPathToHash(filePathInfoHash, cfpath, fileInfo, path);\n-                CFArrayAppendValue(tmpArray, cfpath);\n-            }\n-        }\n-    }\n-\n-    if (!pathsToWatch && failedToAdd.size() == paths.size()) {\n-        return failedToAdd;\n-    }\n-\n-    if (CFArrayGetCount(tmpArray) > 0) {\n-        if (pathsToWatch) {\n-            CFArrayAppendArray(tmpArray, pathsToWatch, CFRangeMake(0, CFArrayGetCount(pathsToWatch)));\n-            CFRelease(pathsToWatch);\n-        }\n-        pathsToWatch = CFArrayCreateCopy(kCFAllocatorDefault, tmpArray);\n-    }\n-\n-    FSEventStreamContext context = { 0, this, 0, 0, 0 };\n-    fsStream = FSEventStreamCreate(kCFAllocatorDefault,\n-                                   QFSEventsFileSystemWatcherEngine::fseventsCallback,\n-                                   &context, pathsToWatch,\n-                                   idToCheck, Latency, QtFSEventFlags);\n-    warmUpFSEvents();\n-\n-    return failedToAdd;\n-#else\n-    Q_UNUSED(paths);\n-    Q_UNUSED(files);\n-    Q_UNUSED(directories);\n-    return QStringList();\n-#endif\n-}\n-\n-void QFSEventsFileSystemWatcherEngine::warmUpFSEvents()\n-{\n-#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5\n-    // This function assumes that the mutex has already been grabbed before calling it.\n-    // It exits with the mutex still locked (Q_ASSERT(mutex.isLocked()) ;-).\n-    start();\n-    waitCondition.wait(&mutex);\n-#endif\n-}\n-\n-QStringList QFSEventsFileSystemWatcherEngine::removePaths(const QStringList &paths,\n-                                                          QStringList *files,\n-                                                          QStringList *directories)\n-{\n-#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5\n-    stop();\n-    wait();\n-    QMutexLocker locker(&mutex);\n-    // short circuit for smarties that call remove before add and we have nothing.\n-    if (pathsToWatch == 0)\n-        return paths;\n-    QStringList failedToRemove;\n-    // if we have a running FSStreamEvent, we have to stop it, we'll re-add the stream soon.\n-    FSEventStreamEventId idToCheck;\n-    if (fsStream) {\n-        idToCheck = FSEventStreamGetLatestEventId(fsStream);\n-        cleanupFSStream(fsStream);\n-        fsStream = 0;\n-    } else {\n-        idToCheck = kFSEventStreamEventIdSinceNow;\n-    }\n-\n-    CFIndex itemCount = CFArrayGetCount(pathsToWatch);\n-    QCFType<CFMutableArrayRef> tmpArray = CFArrayCreateMutableCopy(kCFAllocatorDefault, itemCount,\n-                                                                   pathsToWatch);\n-    CFRelease(pathsToWatch);\n-    pathsToWatch = 0;\n-    for (int i = 0; i < paths.size(); ++i) {\n-        // Get the itemCount at the beginning to avoid any overruns during the iteration.\n-        itemCount = CFArrayGetCount(tmpArray);\n-        const QString &path = paths.at(i);\n-        QFileInfo fi(path);\n-        QCFString cfpath(createFSStreamPath(fi.canonicalPath()));\n-\n-        CFIndex index = CFArrayGetFirstIndexOfValue(tmpArray, CFRangeMake(0, itemCount), cfpath);\n-        if (index != -1) {\n-            CFArrayRemoveValueAtIndex(tmpArray, index);\n-            files->removeAll(path);\n-            removePathFromHash(filePathInfoHash, cfpath, path);\n-        } else {\n-            // Could be a directory we are watching instead.\n-            QCFString cfdirpath(createFSStreamPath(fi.canonicalFilePath()));\n-            index = CFArrayGetFirstIndexOfValue(tmpArray, CFRangeMake(0, itemCount), cfdirpath);\n-            if (index != -1) {\n-                CFArrayRemoveValueAtIndex(tmpArray, index);\n-                directories->removeAll(path);\n-                removePathFromHash(dirPathInfoHash, cfpath, path);\n-            } else {\n-                failedToRemove.append(path);\n-            }\n-        }\n-    }\n-    itemCount = CFArrayGetCount(tmpArray);\n-    if (itemCount != 0) {\n-        pathsToWatch = CFArrayCreateCopy(kCFAllocatorDefault, tmpArray);\n-\n-        FSEventStreamContext context = { 0, this, 0, 0, 0 };\n-        fsStream = FSEventStreamCreate(kCFAllocatorDefault,\n-                                       QFSEventsFileSystemWatcherEngine::fseventsCallback,\n-                                       &context, pathsToWatch, idToCheck, Latency, QtFSEventFlags);\n-        warmUpFSEvents();\n-    }\n-    return failedToRemove;\n-#else\n-    Q_UNUSED(paths);\n-    Q_UNUSED(files);\n-    Q_UNUSED(directories);\n-    return QStringList();\n-#endif\n-}\n-\n-#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5\n-void QFSEventsFileSystemWatcherEngine::updateList(PathInfoList &list, bool directory, bool emitSignals)\n-{\n-    PathInfoList::iterator End = list.end();\n-    PathInfoList::iterator it = list.begin();\n-    while (it != End) {\n-        struct ::stat newInfo;\n-        if (::stat(it->absolutePath, &newInfo) == 0) {\n-            if (emitSignals) {\n-                if (newInfo != it->savedInfo) {\n-                    it->savedInfo = newInfo;\n-                    if (directory)\n-                        emit directoryChanged(it->originalPath, false);\n-                    else\n-                        emit fileChanged(it->originalPath, false);\n-                }\n-            } else {\n-                it->savedInfo = newInfo;\n-            }\n-        } else {\n-            if (errno == ENOENT) {\n-                if (emitSignals) {\n-                    if (directory)\n-                        emit directoryChanged(it->originalPath, true);\n-                    else\n-                        emit fileChanged(it->originalPath, true);\n-                }\n-                it = list.erase(it);\n-                continue;\n-            } else {\n-                qWarning(\""%s:%d:QFSEventsFileSystemWatcherEngine: stat error on %s:%s\"",\n-                         __FILE__, __LINE__, qPrintable(it->originalPath), strerror(errno));\n-\n-            }\n-        }\n-        ++it;\n-    }\n-}\n-\n-void QFSEventsFileSystemWatcherEngine::updateHash(PathHash &pathHash)\n-{\n-    PathHash::iterator HashEnd = pathHash.end();\n-    PathHash::iterator it = pathHash.begin();\n-    const bool IsDirectory = (&pathHash == &dirPathInfoHash);\n-    while (it != HashEnd) {\n-        updateList(it.value(), IsDirectory, false);\n-        if (it.value().isEmpty())\n-            it = pathHash.erase(it);\n-        else\n-            ++it;\n-    }\n-}\n-#endif\n-\n-void QFSEventsFileSystemWatcherEngine::fseventsCallback(ConstFSEventStreamRef ,\n-                                                        void *clientCallBackInfo, size_t numEvents,\n-                                                        void *eventPaths,\n-                                                        const FSEventStreamEventFlags eventFlags[],\n-                                                        const FSEventStreamEventId [])\n-{\n-#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5\n-    QFSEventsFileSystemWatcherEngine *watcher = static_cast<QFSEventsFileSystemWatcherEngine *>(clientCallBackInfo);\n-    QMutexLocker locker(&watcher->mutex);\n-    CFArrayRef paths = static_cast<CFArrayRef>(eventPaths);\n-    for (size_t i = 0; i < numEvents; ++i) {\n-        const QString path = QCFString::toQString(\n-                                    static_cast<CFStringRef>(CFArrayGetValueAtIndex(paths, i)));\n-        const FSEventStreamEventFlags pathFlags = eventFlags[i];\n-        // There are several flags that may be passed, but we really don't care about them ATM.\n-        // Here they are and why we don't care.\n-        // kFSEventStreamEventFlagHistoryDone--(very unlikely to be gotten, but even then, not much changes).\n-        // kFSEventStreamEventFlagMustScanSubDirs--Likely means the data is very much out of date, we\n-        //            aren't coalescing our directories, so again not so much of an issue\n-        // kFSEventStreamEventFlagRootChanged | kFSEventStreamEventFlagMount | kFSEventStreamEventFlagUnmount--\n-        // These three flags indicate something has changed, but the stat will likely show this, so\n-        // there's not really much to worry about.\n-        // (btw, FSEvents is not the correct way of checking for mounts/unmounts,\n-        //  there are real CarbonCore events for that.)\n-        Q_UNUSED(pathFlags);\n-        if (watcher->filePathInfoHash.contains(path))\n-            watcher->updateList(watcher->filePathInfoHash[path], false, true);\n-\n-        if (watcher->dirPathInfoHash.contains(path))\n-            watcher->updateList(watcher->dirPathInfoHash[path], true, true);\n-    }\n-#else\n-    Q_UNUSED(clientCallBackInfo);\n-    Q_UNUSED(numEvents);\n-    Q_UNUSED(eventPaths);\n-    Q_UNUSED(eventFlags);\n-#endif\n-}\n-\n-void QFSEventsFileSystemWatcherEngine::stop()\n-{\n-#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5\n-    QMutexLocker locker(&mutex);\n-    stopFSStream(fsStream);\n-    if (threadsRunLoop) {\n-        CFRunLoopStop(threadsRunLoop);\n-        waitForStop.wait(&mutex);\n-    }\n-#endif\n-}\n-\n-void QFSEventsFileSystemWatcherEngine::updateFiles()\n-{\n-#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5\n-    QMutexLocker locker(&mutex);\n-    updateHash(filePathInfoHash);\n-    updateHash(dirPathInfoHash);\n-    if (filePathInfoHash.isEmpty() && dirPathInfoHash.isEmpty()) {\n-        // Everything disappeared before we got to start, don't bother.\n-#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5\n-        // Code duplicated from stop(), with the exception that we\n-        // don't wait on waitForStop here. Doing this will lead to\n-        // a deadlock since this function is called from the worker\n-        // thread. (waitForStop.wakeAll() is only called from the\n-        // end of run()).\n-        stopFSStream(fsStream);\n-        if (threadsRunLoop)\n-            CFRunLoopStop(threadsRunLoop);\n-#endif\n-        cleanupFSStream(fsStream);\n-    }\n-    waitCondition.wakeAll();\n-#endif\n-}\n-\n-void QFSEventsFileSystemWatcherEngine::run()\n-{\n-#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5\n-    threadsRunLoop = CFRunLoopGetCurrent();\n-    FSEventStreamScheduleWithRunLoop(fsStream, threadsRunLoop, kCFRunLoopDefaultMode);\n-    bool startedOK = FSEventStreamStart(fsStream);\n-    // It's recommended by Apple that you only update the files after you've started\n-    // the stream, because otherwise you might miss an update in between starting it.\n-    updateFiles();\n-#ifdef QT_NO_DEBUG\n-    Q_UNUSED(startedOK);\n-#else\n-    Q_ASSERT(startedOK);\n-#endif\n-    // If for some reason we called stop up above (and invalidated our stream), this call will return\n-    // immediately.\n-    CFRunLoopRun();\n-    threadsRunLoop = 0;\n-    QMutexLocker locker(&mutex);\n-    waitForStop.wakeAll();\n-#endif\n-}\n-\n-QT_END_NAMESPACE\n-#endif //QT_NO_FILESYSTEMWATCHER\n"", ""qfilesystemwatcher_fsevents_p.h"": ""@@ -1,132 +0,0 @@\n-/****************************************************************************\n-**\n-** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n-** All rights reserved.\n-** Contact: Nokia Corporation (qt-info@nokia.com)\n-**\n-** This file is part of the QtCore module of the Qt Toolkit.\n-**\n-** $QT_BEGIN_LICENSE:LGPL$\n-** GNU Lesser General Public License Usage\n-** This file may be used under the terms of the GNU Lesser General Public\n-** License version 2.1 as published by the Free Software Foundation and\n-** appearing in the file LICENSE.LGPL included in the packaging of this\n-** file. Please review the following information to ensure the GNU Lesser\n-** General Public License version 2.1 requirements will be met:\n-** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n-**\n-** In addition, as a special exception, Nokia gives you certain additional\n-** rights. These rights are described in the Nokia Qt LGPL Exception\n-** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n-**\n-** GNU General Public License Usage\n-** Alternatively, this file may be used under the terms of the GNU General\n-** Public License version 3.0 as published by the Free Software Foundation\n-** and appearing in the file LICENSE.GPL included in the packaging of this\n-** file. Please review the following information to ensure the GNU General\n-** Public License version 3.0 requirements will be met:\n-** http://www.gnu.org/copyleft/gpl.html.\n-**\n-** Other Usage\n-** Alternatively, this file may be used in accordance with the terms and\n-** conditions contained in a signed written agreement between you and Nokia.\n-**\n-**\n-**\n-**\n-**\n-** $QT_END_LICENSE$\n-**\n-****************************************************************************/\n-\n-\n-#ifndef FILEWATCHER_FSEVENTS_P_H\n-#define FILEWATCHER_FSEVENTS_P_H\n-\n-//\n-//  W A R N I N G\n-//  -------------\n-//\n-// This file is not part of the Qt API.  It exists for the convenience\n-// of the QLibrary class.  This header file may change from\n-// version to version without notice, or even be removed.\n-//\n-// We mean it.\n-//\n-\n-#include \""qfilesystemwatcher_p.h\""\n-\n-#ifndef QT_NO_FILESYSTEMWATCHER\n-\n-#include <QtCore/qmutex.h>\n-#include <QtCore/qwaitcondition.h>\n-#include <QtCore/qthread.h>\n-#include <QtCore/qhash.h>\n-#include <QtCore/qlinkedlist.h>\n-#include <private/qcore_mac_p.h>\n-#include <sys/stat.h>\n-\n-typedef struct __FSEventStream *FSEventStreamRef;\n-typedef const struct __FSEventStream *ConstFSEventStreamRef;\n-typedef const struct __CFArray *CFArrayRef;\n-typedef UInt32 FSEventStreamEventFlags;\n-typedef uint64_t FSEventStreamEventId;\n-\n-QT_BEGIN_NAMESPACE\n-\n-#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5\n-// Yes, I use a stat element here. QFileInfo requires too much knowledge about implementation\n-// details to be used as a long-standing record. Since I'm going to have to store this information, I can\n-// do the stat myself too.\n-struct PathInfo {\n-    PathInfo(const QString &path, const QByteArray &absPath)\n-            : originalPath(path), absolutePath(absPath) {}\n-    QString originalPath; // The path we need to emit\n-    QByteArray absolutePath; // The path we need to stat.\n-    struct ::stat savedInfo;  // All the info for the path so we can compare it.\n-};\n-typedef QLinkedList<PathInfo> PathInfoList;\n-typedef QHash<QString, PathInfoList> PathHash;\n-#endif\n-\n-class QFSEventsFileSystemWatcherEngine : public QFileSystemWatcherEngine\n-{\n-    Q_OBJECT\n-public:\n-    ~QFSEventsFileSystemWatcherEngine();\n-\n-    static QFSEventsFileSystemWatcherEngine *create();\n-\n-    QStringList addPaths(const QStringList &paths, QStringList *files, QStringList *directories);\n-    QStringList removePaths(const QStringList &paths, QStringList *files, QStringList *directories);\n-\n-    void stop();\n-\n-private:\n-    QFSEventsFileSystemWatcherEngine();\n-    void warmUpFSEvents();\n-    void updateFiles();\n-\n-    static void fseventsCallback(ConstFSEventStreamRef streamRef, void *clientCallBackInfo, size_t numEvents,\n-                                  void *eventPaths, const FSEventStreamEventFlags eventFlags[],\n-                                  const FSEventStreamEventId eventIds[]);\n-    void run();\n-    FSEventStreamRef fsStream;\n-    CFArrayRef pathsToWatch;\n-    CFRunLoopRef threadsRunLoop;\n-    QMutex mutex;\n-    QWaitCondition waitCondition;\n-    QWaitCondition waitForStop;\n-#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5\n-    PathHash filePathInfoHash;\n-    PathHash dirPathInfoHash;\n-    void updateHash(PathHash &pathHash);\n-    void updateList(PathInfoList &list, bool directory, bool emitSignals);\n-#endif\n-};\n-\n-#endif //QT_NO_FILESYSTEMWATCHER\n-\n-#endif\n-\n-QT_END_NAMESPACE\n""}",bug; deprecat,"bug, deprecate 
",bug;deprecat;
1964.0,1964.0,bug; deprecat,Jędrzej Nowacki,New class: QJSValueIterator.,"New class: QJSValueIterator.

Add support for iteration over on object, replacement for old
QScriptValueIterator.

Change-Id: I0f94c6b268a04b9b2df4ae5707fd792097e436b2","['src/declarative/script/qjsvalue_impl_p.h', 'tests/auto/declarative/declarative.pro', 'tests/auto/declarative/qjsvalueiterator/qjsvalueiterator.pro', 'src/declarative/script/qjsvalueiterator.cpp', 'src/declarative/script/script.pri', 'src/declarative/script/qjsvalueiterator.h', 'tests/auto/declarative/qjsvalueiterator/tst_qjsvalueiterator.cpp']","{""qjsvalue_impl_p.h"": ""@@ -800,7 +800,7 @@ inline void QJSValuePrivate::setProperty(quint32 index, QJSValuePrivate* value,\n \n inline QScriptPassPointer<QJSValuePrivate> QJSValuePrivate::property(const QString& name) const\n {\n-    if (!isObject() || !name.length())\n+    if (!name.length())\n         return InvalidValue();\n \n     v8::HandleScope handleScope;\n@@ -810,7 +810,8 @@ inline QScriptPassPointer<QJSValuePrivate> QJSValuePrivate::property(const QStri\n inline QScriptPassPointer<QJSValuePrivate> QJSValuePrivate::property(v8::Handle<v8::String> name) const\n {\n     Q_ASSERT(!name.IsEmpty());\n-    Q_ASSERT(isObject());\n+    if (!isObject())\n+        return InvalidValue();\n     return property<>(name);\n }\n \n"", ""qjsvalueiterator.cpp"": ""@@ -0,0 +1,294 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the QtScript module of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL-ONLY$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser\n+** General Public License version 2.1 as published by the Free Software\n+** Foundation and appearing in the file LICENSE.LGPL included in the\n+** packaging of this file.  Please review the following information to\n+** ensure the GNU Lesser General Public License version 2.1 requirements\n+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** If you have questions regarding the use of this file, please contact\n+** Nokia at qt-info@nokia.com.\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#include \""qjsvalueiterator.h\""\n+\n+#include \""qscriptisolate_p.h\""\n+#include \""qjsvalue_p.h\""\n+#include \""qjsengine_p.h\""\n+#include \""qscript_impl_p.h\""\n+\n+QT_BEGIN_NAMESPACE\n+\n+/*!\n+    \\class QJSValueIterator\n+\n+    \\brief The QJSValueIterator class provides a Java-style iterator for QJSValue.\n+\n+    \\ingroup script\n+\n+\n+    The QJSValueIterator constructor takes a QJSValue as\n+    argument.  After construction, the iterator is located at the very\n+    beginning of the sequence of properties. Here's how to iterate over\n+    all the properties of a QJSValue:\n+\n+    \\snippet doc/src/snippets/code/src_script_QJSValueIterator.cpp 0\n+\n+    The next() advances the iterator. The name(), value() and flags()\n+    functions return the name, value and flags of the last item that was\n+    jumped over.\n+\n+    If you want to remove properties as you iterate over the\n+    QJSValue, use remove(). If you want to modify the value of a\n+    property, use setValue().\n+\n+    Note that QJSValueIterator only iterates over the QJSValue's\n+    own properties; i.e. it does not follow the prototype chain. You can\n+    use a loop like this to follow the prototype chain:\n+\n+    \\snippet doc/src/snippets/code/src_script_QJSValueIterator.cpp 1\n+\n+    Note that QJSValueIterator will not automatically skip over\n+    properties that have the QJSValue::SkipInEnumeration flag set;\n+    that flag only affects iteration in script code.  If you want, you\n+    can skip over such properties with code like the following:\n+\n+    \\snippet doc/src/snippets/code/src_script_QJSValueIterator.cpp 2\n+\n+    \\sa QJSValue::property()\n+*/\n+\n+using v8::Persistent;\n+using v8::Local;\n+using v8::Array;\n+using v8::String;\n+using v8::Handle;\n+using v8::Object;\n+using v8::Value;\n+\n+// FIXME (Qt5) This class should be refactored. It should use the common Iterator interface.\n+// FIXME it could be faster!\n+class QJSValueIteratorPrivate {\n+public:\n+    inline QJSValueIteratorPrivate(const QJSValuePrivate* value);\n+    inline ~QJSValueIteratorPrivate();\n+\n+    inline bool hasNext() const;\n+    inline bool next();\n+\n+    inline QString name() const;\n+\n+    inline QScriptPassPointer<QJSValuePrivate> value() const;\n+\n+    inline bool isValid() const;\n+    inline QJSEnginePrivate* engine() const;\n+private:\n+    Q_DISABLE_COPY(QJSValueIteratorPrivate)\n+    //void dump(QString) const;\n+\n+    QScriptSharedDataPointer<QJSValuePrivate> m_object;\n+    QList<v8::Persistent<v8::String> > m_names;\n+    QMutableListIterator<v8::Persistent<v8::String> > m_iterator;\n+};\n+\n+inline QJSValueIteratorPrivate::QJSValueIteratorPrivate(const QJSValuePrivate* value)\n+    : m_object(const_cast<QJSValuePrivate*>(value))\n+    , m_iterator(m_names)\n+{\n+    Q_ASSERT(value);\n+    QJSEnginePrivate *engine = m_object->engine();\n+    QScriptIsolate api(engine);\n+    if (!m_object->isObject())\n+        m_object = 0;\n+    else {\n+        v8::HandleScope scope;\n+        Handle<Value> tmp = *value;\n+        Handle<Object> obj = Handle<Object>::Cast(tmp);\n+        Local<Array> names;\n+\n+        // FIXME we need newer V8!\n+        //names = obj->GetOwnPropertyNames();\n+        names = engine->getOwnPropertyNames(obj);\n+\n+        // it is suboptimal, it would be better to write iterator instead\n+        uint32_t count = names->Length();\n+        Local<String> name;\n+        m_names.reserve(count); // The count is the maximal count of values.\n+        for (uint32_t i = count - 1; i < count; --i) {\n+            name = names->Get(i)->ToString();\n+            m_names.append(v8::Persistent<v8::String>::New(name));\n+        }\n+\n+        // Reinitialize the iterator.\n+        m_iterator = m_names;\n+    }\n+}\n+\n+inline QJSValueIteratorPrivate::~QJSValueIteratorPrivate()\n+{\n+    QMutableListIterator<v8::Persistent<v8::String> > it = m_names;\n+    //FIXME: we need register this QJSVAlueIterator\n+    if (engine()) {\n+        while (it.hasNext()) {\n+            it.next().Dispose();\n+        }\n+    } else {\n+        // FIXME leak ?\n+    }\n+}\n+\n+inline bool QJSValueIteratorPrivate::hasNext() const\n+{\n+    //dump(\""hasNext()\"");\n+    return isValid()\n+            ? m_iterator.hasNext() : false;\n+}\n+\n+inline bool QJSValueIteratorPrivate::next()\n+{\n+    //dump(\""next();\"");\n+    if (m_iterator.hasNext()) {\n+        m_iterator.next();\n+        return true;\n+    }\n+    return false;\n+}\n+\n+inline QString QJSValueIteratorPrivate::name() const\n+{\n+    //dump(\""name\"");\n+    if (!isValid())\n+        return QString();\n+\n+    return QScriptConverter::toString(m_iterator.value());\n+}\n+\n+inline QScriptPassPointer<QJSValuePrivate> QJSValueIteratorPrivate::value() const\n+{\n+    //dump(\""value()\"");\n+    if (!isValid())\n+        return InvalidValue();\n+\n+    return m_object->property(m_iterator.value());\n+}\n+\n+inline bool QJSValueIteratorPrivate::isValid() const\n+{\n+    bool result = m_object ? m_object->isValid() : false;\n+    // We know that if this object is still valid then it is an object\n+    // if this assumption is not correct then some other logic in this class\n+    // have to be changed too.\n+    Q_ASSERT(!result || m_object->isObject());\n+    return result;\n+}\n+\n+inline QJSEnginePrivate* QJSValueIteratorPrivate::engine() const\n+{\n+    return m_object ? m_object->engine() : 0;\n+}\n+\n+//void QJSValueIteratorPrivate::dump(QString fname) const\n+//{\n+//    qDebug() << \""    *** \"" << fname << \"" ***\"";\n+//    foreach(Persistent<String> name, m_names) {\n+//        qDebug() << \""        - \"" << QScriptConverter::toString(name);\n+//    }\n+//}\n+\n+/*!\n+    Constructs an iterator for traversing \\a object. The iterator is\n+    set to be at the front of the sequence of properties (before the\n+    first property).\n+*/\n+QJSValueIterator::QJSValueIterator(const QJSValue& object)\n+    : d_ptr(new QJSValueIteratorPrivate(QJSValuePrivate::get(object)))\n+{}\n+\n+/*!\n+    Destroys the iterator.\n+*/\n+QJSValueIterator::~QJSValueIterator()\n+{}\n+\n+/*!\n+    Returns true if there is at least one item ahead of the iterator\n+    (i.e. the iterator is \\e not at the back of the property sequence);\n+    otherwise returns false.\n+\n+    \\sa next(), hasPrevious()\n+*/\n+bool QJSValueIterator::hasNext() const\n+{\n+    Q_D(const QJSValueIterator);\n+    QScriptIsolate api(d->engine());\n+    return d->hasNext();\n+}\n+\n+/*!\n+    Advances the iterator by one position.\n+\n+    Calling this function on an iterator located at the back of the\n+    container leads to undefined results.\n+\n+    \\sa hasNext(), previous(), name()\n+*/\n+bool QJSValueIterator::next()\n+{\n+    Q_D(QJSValueIterator);\n+    QScriptIsolate api(d->engine());\n+    return d->next();\n+}\n+\n+/*!\n+    Returns the name of the last property that was jumped over using\n+    next() or previous().\n+\n+    \\sa value(), flags()\n+*/\n+QString QJSValueIterator::name() const\n+{\n+    Q_D(const QJSValueIterator);\n+    QScriptIsolate api(d->engine());\n+    return d_ptr->name();\n+}\n+\n+\n+/*!\n+    Returns the value of the last property that was jumped over using\n+    next() or previous().\n+\n+    \\sa setValue(), name()\n+*/\n+QJSValue QJSValueIterator::value() const\n+{\n+    Q_D(const QJSValueIterator);\n+    QScriptIsolate api(d->engine());\n+    return QJSValuePrivate::get(d->value());\n+}\n+\n+\n+/*!\n+    Makes the iterator operate on \\a object. The iterator is set to be\n+    at the front of the sequence of properties (before the first\n+    property).\n+*/\n+QJSValueIterator& QJSValueIterator::operator=(QJSValue& object)\n+{\n+    Q_D(QJSValueIterator);\n+    QScriptIsolate api(d->engine());\n+    d_ptr.reset(new QJSValueIteratorPrivate(QJSValuePrivate::get(object)));\n+    return *this;\n+}\n+\n+QT_END_NAMESPACE\n"", ""qjsvalueiterator.h"": ""@@ -0,0 +1,64 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the QtScript module of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL-ONLY$\n+** GNU Lesser General Public License Usage\n+** This file may be used under the terms of the GNU Lesser\n+** General Public License version 2.1 as published by the Free Software\n+** Foundation and appearing in the file LICENSE.LGPL included in the\n+** packaging of this file.  Please review the following information to\n+** ensure the GNU Lesser General Public License version 2.1 requirements\n+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** If you have questions regarding the use of this file, please contact\n+** Nokia at qt-info@nokia.com.\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+#ifndef QSCRIPTVALUEITERATOR_H\n+#define QSCRIPTVALUEITERATOR_H\n+\n+#include <QtDeclarative/qjsvalue.h>\n+#include <QtCore/qscopedpointer.h>\n+\n+QT_BEGIN_HEADER\n+\n+QT_BEGIN_NAMESPACE\n+\n+QT_MODULE(Script)\n+\n+class QString;\n+\n+class QJSValueIteratorPrivate;\n+class Q_SCRIPT_EXPORT QJSValueIterator\n+{\n+public:\n+    QJSValueIterator(const QJSValue &value);\n+    ~QJSValueIterator();\n+\n+    bool hasNext() const;\n+    bool next();\n+\n+    QString name() const;\n+\n+    QJSValue value() const;\n+    QJSValueIterator& operator=(QJSValue &value);\n+\n+private:\n+    QScopedPointer<QJSValueIteratorPrivate> d_ptr;\n+\n+    Q_DECLARE_PRIVATE(QJSValueIterator)\n+    Q_DISABLE_COPY(QJSValueIterator)\n+};\n+\n+QT_END_NAMESPACE\n+\n+QT_END_HEADER\n+\n+#endif // QSCRIPTVALUEITERATOR_H\n"", ""script.pri"": ""@@ -4,6 +4,7 @@ INCLUDEPATH += $$PWD\n SOURCES += \\\n     $$PWD/qjsengine.cpp \\\n     $$PWD/qjsvalue.cpp \\\n+    $$PWD/qjsvalueiterator.cpp \\\n \n HEADERS += \\\n     $$PWD/qjsengine.h \\\n@@ -11,6 +12,7 @@ HEADERS += \\\n     $$PWD/qjsengine_impl_p.h \\\n     $$PWD/qjsvalue.h \\\n     $$PWD/qjsvalue_p.h \\\n+    $$PWD/qjsvalueiterator.h \\\n     $$PWD/qjsvalue_impl_p.h \\\n     $$PWD/qscriptisolate_p.h \\\n     $$PWD/qscriptshareddata_p.h \\\n"", ""declarative.pro"": ""@@ -21,6 +21,7 @@ PUBLICTESTS += \\\n     qdeclarativeqt \\\n     qdeclarativexmlhttprequest \\\n     qscriptvalue \\\n+    qjsvalueiterator \\\n     qscriptengine\n \n PRIVATETESTS += \\\n"", ""qjsvalueiterator.pro"": ""@@ -0,0 +1,5 @@\n+load(qttest_p4)\n+QT = core declarative\n+SOURCES  += tst_qjsvalueiterator.cpp\n+\n+\n"", ""tst_qjsvalueiterator.cpp"": ""@@ -0,0 +1,527 @@\n+/****************************************************************************\n+**\n+** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).\n+** All rights reserved.\n+** Contact: Nokia Corporation (qt-info@nokia.com)\n+**\n+** This file is part of the test suite of the Qt Toolkit.\n+**\n+** $QT_BEGIN_LICENSE:LGPL$\n+** No Commercial Usage\n+** This file contains pre-release code and may not be distributed.\n+** You may use this file in accordance with the terms and conditions\n+** contained in the Technology Preview License Agreement accompanying\n+** this package.\n+**\n+** GNU Lesser General Public License Usage\n+** Alternatively, this file may be used under the terms of the GNU Lesser\n+** General Public License version 2.1 as published by the Free Software\n+** Foundation and appearing in the file LICENSE.LGPL included in the\n+** packaging of this file.  Please review the following information to\n+** ensure the GNU Lesser General Public License version 2.1 requirements\n+** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.\n+**\n+** In addition, as a special exception, Nokia gives you certain additional\n+** rights.  These rights are described in the Nokia Qt LGPL Exception\n+** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.\n+**\n+** If you have questions regarding the use of this file, please contact\n+** Nokia at qt-info@nokia.com.\n+**\n+**\n+**\n+**\n+**\n+**\n+**\n+**\n+** $QT_END_LICENSE$\n+**\n+****************************************************************************/\n+\n+\n+#include <QtTest/QtTest>\n+\n+#include <QJSEngine>\n+#include <QJSValue>\n+#include <QJSValueIterator>\n+\n+//TESTED_CLASS=\n+//TESTED_FILES=\n+\n+Q_DECLARE_METATYPE(QJSValue);\n+\n+class tst_QJSValueIterator : public QObject\n+{\n+    Q_OBJECT\n+\n+public:\n+    tst_QJSValueIterator();\n+    virtual ~tst_QJSValueIterator();\n+\n+private slots:\n+    void iterateForward_data();\n+    void iterateForward();\n+    void iterateArray_data();\n+    void iterateArray();\n+    void iterateString();\n+#if 0\n+    void iterateGetterSetter();\n+#endif\n+    void assignObjectToIterator();\n+    void iterateNonObject();\n+    void iterateOverObjectFromDeletedEngine();\n+};\n+\n+tst_QJSValueIterator::tst_QJSValueIterator()\n+{\n+}\n+\n+tst_QJSValueIterator::~tst_QJSValueIterator()\n+{\n+}\n+\n+void tst_QJSValueIterator::iterateForward_data()\n+{\n+    QTest::addColumn<QStringList>(\""propertyNames\"");\n+    QTest::addColumn<QStringList>(\""propertyValues\"");\n+\n+    QTest::newRow(\""no properties\"")\n+        << QStringList() << QStringList();\n+    QTest::newRow(\""foo=bar\"")\n+        << (QStringList() << \""foo\"")\n+        << (QStringList() << \""bar\"");\n+    QTest::newRow(\""foo=bar, baz=123\"")\n+        << (QStringList() << \""foo\"" << \""baz\"")\n+        << (QStringList() << \""bar\"" << \""123\"");\n+    QTest::newRow(\""foo=bar, baz=123, rab=oof\"")\n+        << (QStringList() << \""foo\"" << \""baz\"" << \""rab\"")\n+        << (QStringList() << \""bar\"" << \""123\"" << \""oof\"");\n+}\n+\n+void tst_QJSValueIterator::iterateForward()\n+{\n+    QFETCH(QStringList, propertyNames);\n+    QFETCH(QStringList, propertyValues);\n+    QMap<QString, QString> pmap;\n+    QVERIFY(propertyNames.size() == propertyValues.size());\n+\n+    QJSEngine engine;\n+    QJSValue object = engine.newObject();\n+    for (int i = 0; i < propertyNames.size(); ++i) {\n+        QString name = propertyNames.at(i);\n+        QString value = propertyValues.at(i);\n+        pmap.insert(name, value);\n+        object.setProperty(name, QJSValue(&engine, value));\n+    }\n+    QJSValue otherObject = engine.newObject();\n+    otherObject.setProperty(\""foo\"", QJSValue(&engine, 123456));\n+    otherObject.setProperty(\""protoProperty\"", QJSValue(&engine, 654321));\n+    object.setPrototype(otherObject); // should not affect iterator\n+\n+    QStringList lst;\n+    QJSValueIterator it(object);\n+    while (!pmap.isEmpty()) {\n+        QCOMPARE(it.hasNext(), true);\n+        QCOMPARE(it.hasNext(), true);\n+        it.next();\n+        QString name = it.name();\n+        QCOMPARE(pmap.contains(name), true);\n+        QCOMPARE(it.name(), name);\n+        QCOMPARE(it.value().strictlyEquals(QJSValue(&engine, pmap.value(name))), true);\n+        pmap.remove(name);\n+        lst.append(name);\n+    }\n+\n+    QCOMPARE(it.hasNext(), false);\n+    QCOMPARE(it.hasNext(), false);\n+\n+    it = object;\n+    for (int i = 0; i < lst.count(); ++i) {\n+        QCOMPARE(it.hasNext(), true);\n+        it.next();\n+        QCOMPARE(it.name(), lst.at(i));\n+    }\n+}\n+\n+void tst_QJSValueIterator::iterateArray_data()\n+{\n+    QTest::addColumn<QStringList>(\""propertyNames\"");\n+    QTest::addColumn<QStringList>(\""propertyValues\"");\n+\n+    QTest::newRow(\""no elements\"") << QStringList() << QStringList();\n+\n+    QTest::newRow(\""0=foo, 1=barr\"")\n+        << (QStringList() << \""0\"" << \""1\"")\n+        << (QStringList() << \""foo\"" << \""bar\"");\n+\n+\n+    QTest::newRow(\""0=foo, 3=barr\"")\n+        << (QStringList() << \""0\"" << \""1\"" << \""2\"" << \""3\"")\n+        << (QStringList() << \""foo\"" << \""\"" << \""\"" << \""bar\"");\n+}\n+\n+void tst_QJSValueIterator::iterateArray()\n+{\n+    QFETCH(QStringList, propertyNames);\n+    QFETCH(QStringList, propertyValues);\n+\n+    QJSEngine engine;\n+    QJSValue array = engine.newArray();\n+\n+    // Fill the array\n+    for (int i = 0; i < propertyNames.size(); ++i) {\n+        array.setProperty(propertyNames.at(i), propertyValues.at(i));\n+    }\n+\n+    // Iterate thru array properties. Note that the QJSValueIterator doesn't guarantee\n+    // any order on the iteration!\n+    int length = array.property(\""length\"").toInt32();\n+    QCOMPARE(length, propertyNames.size());\n+\n+    bool iteratedThruLength = false;\n+    QHash<QString, QJSValue> arrayProperties;\n+    QJSValueIterator it(array);\n+\n+    // Iterate forward\n+    while (it.hasNext()) {\n+        it.next();\n+\n+        const QString name = it.name();\n+        if (name == QString::fromLatin1(\""length\"")) {\n+            QVERIFY(it.value().isNumber());\n+            QCOMPARE(it.value().toInt32(), length);\n+            QVERIFY2(!iteratedThruLength, \""'length' appeared more than once during iteration.\"");\n+            iteratedThruLength = true;\n+            continue;\n+        }\n+\n+        // Storing the properties we iterate in a hash to compare with test data.\n+        QVERIFY2(!arrayProperties.contains(name), \""property appeared more than once during iteration.\"");\n+        arrayProperties.insert(name, it.value());\n+        QVERIFY(it.value().strictlyEquals(array.property(name)));\n+    }\n+\n+    // Verify properties\n+    QVERIFY(iteratedThruLength);\n+    QCOMPARE(arrayProperties.size(), propertyNames.size());\n+    for (int i = 0; i < propertyNames.size(); ++i) {\n+        QVERIFY(arrayProperties.contains(propertyNames.at(i)));\n+        QCOMPARE(arrayProperties.value(propertyNames.at(i)).toString(), propertyValues.at(i));\n+    }\n+\n+#if 0\n+\n+    // Iterate backwards\n+    arrayProperties.clear();\n+    iteratedThruLength = false;\n+    it.toBack();\n+\n+    while (it.hasPrevious()) {\n+        it.previous();\n+\n+        const QString name = it.name();\n+        if (name == QString::fromLatin1(\""length\"")) {\n+            QVERIFY(it.value().isNumber());\n+            QCOMPARE(it.value().toInt32(), length);\n+            QCOMPARE(it.flags(), QScriptValue::SkipInEnumeration | QScriptValue::Undeletable);\n+            QVERIFY2(!iteratedThruLength, \""'length' appeared more than once during iteration.\"");\n+            iteratedThruLength = true;\n+            continue;\n+        }\n+\n+        // Storing the properties we iterate in a hash to compare with test data.\n+        QVERIFY2(!arrayProperties.contains(name), \""property appeared more than once during iteration.\"");\n+        arrayProperties.insert(name, it.value());\n+        QCOMPARE(it.flags(), array.propertyFlags(name));\n+        QVERIFY(it.value().strictlyEquals(array.property(name)));\n+    }\n+\n+    // Verify properties\n+    QVERIFY(iteratedThruLength);\n+    QCOMPARE(arrayProperties.size(), propertyNames.size());\n+    for (int i = 0; i < propertyNames.size(); ++i) {\n+        QVERIFY(arrayProperties.contains(propertyNames.at(i)));\n+        QCOMPARE(arrayProperties.value(propertyNames.at(i)).toString(), propertyValues.at(i));\n+    }\n+\n+    // ### Do we still need this test?\n+    // Forward test again but as object\n+    arrayProperties.clear();\n+    iteratedThruLength = false;\n+    QJSValue arrayObject = engine.toObject(array);\n+    QJSValueIterator it2(arrayObject);\n+\n+    while (it2.hasNext()) {\n+        it2.next();\n+\n+        const QString name = it2.name();\n+        if (name == QString::fromLatin1(\""length\"")) {\n+            QVERIFY(it2.value().isNumber());\n+            QCOMPARE(it2.value().toInt32(), length);\n+            QCOMPARE(it2.flags(), QScriptValue::SkipInEnumeration | QScriptValue::Undeletable);\n+            QVERIFY2(!iteratedThruLength, \""'length' appeared more than once during iteration.\"");\n+            iteratedThruLength = true;\n+            continue;\n+        }\n+\n+        // Storing the properties we iterate in a hash to compare with test data.\n+        QVERIFY2(!arrayProperties.contains(name), \""property appeared more than once during iteration.\"");\n+        arrayProperties.insert(name, it2.value());\n+        QCOMPARE(it2.flags(), arrayObject.propertyFlags(name));\n+        QVERIFY(it2.value().strictlyEquals(arrayObject.property(name)));\n+    }\n+\n+    // Verify properties\n+    QVERIFY(iteratedThruLength);\n+    QCOMPARE(arrayProperties.size(), propertyNames.size());\n+    for (int i = 0; i < propertyNames.size(); ++i) {\n+        QVERIFY(arrayProperties.contains(propertyNames.at(i)));\n+        QCOMPARE(arrayProperties.value(propertyNames.at(i)).toString(), propertyValues.at(i));\n+    }\n+#endif\n+}\n+\n+void tst_QJSValueIterator::iterateString()\n+{\n+    QJSEngine engine;\n+    QJSValue str = QJSValue(&engine, QString::fromLatin1(\""ciao\""));\n+    QVERIFY(str.isString());\n+    QJSValue obj = str.toObject();\n+    QVERIFY(obj.property(\""length\"").isNumber());\n+    int length = obj.property(\""length\"").toInt32();\n+    QCOMPARE(length, 4);\n+\n+    QJSValueIterator it(obj);\n+    QHash<QString, QJSValue> stringProperties;\n+    bool iteratedThruLength = false;\n+\n+    while (it.hasNext()) {\n+        it.next();\n+        const QString name = it.name();\n+\n+        if (name == QString::fromLatin1(\""length\"")) {\n+            QVERIFY(it.value().isNumber());\n+            QCOMPARE(it.value().toInt32(), length);\n+            QVERIFY2(!iteratedThruLength, \""'length' appeared more than once during iteration.\"");\n+            iteratedThruLength = true;\n+            continue;\n+        }\n+\n+        QVERIFY2(!stringProperties.contains(name), \""property appeared more than once during iteration.\"");\n+        stringProperties.insert(name, it.value());\n+        QVERIFY(it.value().strictlyEquals(obj.property(name)));\n+    }\n+\n+    QVERIFY(iteratedThruLength);\n+    QCOMPARE(stringProperties.size(), length);\n+#if 0\n+    // And going backwards\n+    iteratedThruLength = false;\n+    stringProperties.clear();\n+    it.toBack();\n+\n+    while (it.hasPrevious()) {\n+        it.previous();\n+        const QString name = it.name();\n+\n+        if (name == QString::fromLatin1(\""length\"")) {\n+            QVERIFY(it.value().isNumber());\n+            QCOMPARE(it.value().toInt32(), length);\n+            QVERIFY2(!iteratedThruLength, \""'length' appeared more than once during iteration.\"");\n+            iteratedThruLength = true;\n+            continue;\n+        }\n+\n+        QVERIFY2(!stringProperties.contains(name), \""property appeared more than once during iteration.\"");\n+        stringProperties.insert(name, it.value());\n+        QVERIFY(it.value().strictlyEquals(obj.property(name)));\n+    }\n+#endif\n+}\n+\n+#if 0 // FIXME what we should to keep from here?\n+static QJSValue myGetterSetter(QScriptContext *ctx, QJSEngine *)\n+{\n+    if (ctx->argumentCount() == 1)\n+        ctx->thisObject().setProperty(\""bar\"", ctx->argument(0));\n+    return ctx->thisObject().property(\""bar\"");\n+}\n+\n+static QJSValue myGetter(QScriptContext *ctx, QJSEngine *)\n+{\n+    return ctx->thisObject().property(\""bar\"");\n+}\n+\n+static QJSValue mySetter(QScriptContext *ctx, QJSEngine *)\n+{\n+    ctx->thisObject().setProperty(\""bar\"", ctx->argument(0));\n+    return ctx->argument(0);\n+}\n+\n+void tst_QJSValueIterator::iterateGetterSetter()\n+{\n+    // unified getter/setter function\n+    {\n+        QJSEngine eng;\n+        QJSValue obj = eng.newObject();\n+        obj.setProperty(\""foo\"", eng.newFunction(myGetterSetter),\n+                        QScriptValue::PropertyGetter | QScriptValue::PropertySetter);\n+        QJSValue val(&eng, 123);\n+        obj.setProperty(\""foo\"", val);\n+        QVERIFY(obj.property(\""bar\"").strictlyEquals(val));\n+        QVERIFY(obj.property(\""foo\"").strictlyEquals(val));\n+\n+        QJSValueIterator it(obj);\n+        QVERIFY(it.hasNext());\n+        it.next();\n+        QCOMPARE(it.name(), QString::fromLatin1(\""foo\""));\n+        QCOMPARE(it.flags(), QScriptValue::PropertyFlags(QScriptValue::PropertyGetter | QScriptValue::PropertySetter));\n+        QVERIFY(it.value().strictlyEquals(val));\n+        QJSValue val2(&eng, 456);\n+        it.setValue(val2);\n+        QVERIFY(obj.property(\""bar\"").strictlyEquals(val2));\n+        QVERIFY(obj.property(\""foo\"").strictlyEquals(val2));\n+\n+        QVERIFY(it.hasNext());\n+        it.next();\n+        QCOMPARE(it.name(), QString::fromLatin1(\""bar\""));\n+        QVERIFY(!it.hasNext());\n+\n+        QVERIFY(it.hasPrevious());\n+        it.previous();\n+        QCOMPARE(it.name(), QString::fromLatin1(\""bar\""));\n+        QVERIFY(it.hasPrevious());\n+        it.previous();\n+        QCOMPARE(it.name(), QString::fromLatin1(\""foo\""));\n+        QCOMPARE(it.flags(), QScriptValue::PropertyFlags(QScriptValue::PropertyGetter | QScriptValue::PropertySetter));\n+        QVERIFY(it.value().strictlyEquals(val2));\n+        it.setValue(val);\n+        QVERIFY(obj.property(\""bar\"").strictlyEquals(val));\n+        QVERIFY(obj.property(\""foo\"").strictlyEquals(val));\n+    }\n+    // separate getter/setter function\n+    for (int x = 0; x < 2; ++x) {\n+        QJSEngine eng;\n+        QJSValue obj = eng.newObject();\n+        if (x == 0) {\n+            obj.setProperty(\""foo\"", eng.newFunction(myGetter), QScriptValue::PropertyGetter);\n+            obj.setProperty(\""foo\"", eng.newFunction(mySetter), QScriptValue::PropertySetter);\n+        } else {\n+            obj.setProperty(\""foo\"", eng.newFunction(mySetter), QScriptValue::PropertySetter);\n+            obj.setProperty(\""foo\"", eng.newFunction(myGetter), QScriptValue::PropertyGetter);\n+        }\n+        QJSValue val(&eng, 123);\n+        obj.setProperty(\""foo\"", val);\n+        QVERIFY(obj.property(\""bar\"").strictlyEquals(val));\n+        QVERIFY(obj.property(\""foo\"").strictlyEquals(val));\n+\n+        QJSValueIterator it(obj);\n+        QVERIFY(it.hasNext());\n+        it.next();\n+        QCOMPARE(it.name(), QString::fromLatin1(\""foo\""));\n+        QVERIFY(it.value().strictlyEquals(val));\n+        QJSValue val2(&eng, 456);\n+        it.setValue(val2);\n+        QVERIFY(obj.property(\""bar\"").strictlyEquals(val2));\n+        QVERIFY(obj.property(\""foo\"").strictlyEquals(val2));\n+\n+        QVERIFY(it.hasNext());\n+        it.next();\n+        QCOMPARE(it.name(), QString::fromLatin1(\""bar\""));\n+        QVERIFY(!it.hasNext());\n+\n+        QVERIFY(it.hasPrevious());\n+        it.previous();\n+        QCOMPARE(it.name(), QString::fromLatin1(\""bar\""));\n+        QVERIFY(it.hasPrevious());\n+        it.previous();\n+        QCOMPARE(it.name(), QString::fromLatin1(\""foo\""));\n+        QVERIFY(it.value().strictlyEquals(val2));\n+        it.setValue(val);\n+        QVERIFY(obj.property(\""bar\"").strictlyEquals(val));\n+        QVERIFY(obj.property(\""foo\"").strictlyEquals(val));\n+    }\n+}\n+#endif\n+\n+void tst_QJSValueIterator::assignObjectToIterator()\n+{\n+    QJSEngine eng;\n+    QJSValue obj1 = eng.newObject();\n+    obj1.setProperty(\""foo\"", 123);\n+    QJSValue obj2 = eng.newObject();\n+    obj2.setProperty(\""bar\"", 456);\n+\n+    QJSValueIterator it(obj1);\n+    QVERIFY(it.hasNext());\n+    it.next();\n+    it = obj2;\n+    QVERIFY(it.hasNext());\n+    it.next();\n+    QCOMPARE(it.name(), QString::fromLatin1(\""bar\""));\n+\n+    it = obj1;\n+    QVERIFY(it.hasNext());\n+    it.next();\n+    QCOMPARE(it.name(), QString::fromLatin1(\""foo\""));\n+\n+    it = obj2;\n+    QVERIFY(it.hasNext());\n+    it.next();\n+    QCOMPARE(it.name(), QString::fromLatin1(\""bar\""));\n+\n+    it = obj2;\n+    QVERIFY(it.hasNext());\n+    it.next();\n+    QCOMPARE(it.name(), QString::fromLatin1(\""bar\""));\n+}\n+\n+void tst_QJSValueIterator::iterateNonObject()\n+{\n+    QJSValueIterator it(123);\n+    QVERIFY(!it.hasNext());\n+    it.next();\n+    it.name();\n+    it.value();\n+    QJSValue num(5);\n+    it = num;\n+    QVERIFY(!it.hasNext());\n+}\n+\n+void tst_QJSValueIterator::iterateOverObjectFromDeletedEngine()\n+{\n+    QJSEngine *engine = new QJSEngine;\n+    QJSValue objet = engine->newObject();\n+\n+    // populate object with properties\n+    QHash<QString, int> properties;\n+    properties.insert(\""foo\"",1235);\n+    properties.insert(\""oof\"",5321);\n+    properties.insert(\""ofo\"",3521);\n+    QHash<QString, int>::const_iterator i = properties.constBegin();\n+    for(; i != properties.constEnd(); ++i) {\n+        objet.setProperty(i.key(), i.value());\n+    }\n+\n+    // start iterating\n+    QJSValueIterator it(objet);\n+    it.next();\n+    QVERIFY(properties.contains(it.name()));\n+\n+    delete engine;\n+\n+    QVERIFY(!objet.isValid());\n+    QVERIFY(it.name().isEmpty());\n+    QVERIFY(!it.value().isValid());\n+\n+    QVERIFY(!it.hasNext());\n+    it.next();\n+\n+    QVERIFY(it.name().isEmpty());\n+    QVERIFY(!it.value().isValid());\n+\n+}\n+\n+QTEST_MAIN(tst_QJSValueIterator)\n+#include \""tst_qjsvalueiterator.moc\""\n""}",feature,"feature, test 
",feature;
23303.0,23303.0,feature ,Kai Köhne,Zeroconf: Fix build warning about unused variable,"Zeroconf: Fix build warning about unused variable

Change-Id: I62160525b1bf2d9886cc75cf34d928ba7b4174f3",['src/libs/zeroconf/avahiLib.cpp'],"{""avahiLib.cpp"": ""@@ -561,7 +561,7 @@ extern \""C\"" int cAvahiPollFunction(struct pollfd *ufds, unsigned int nfds, int ti\n namespace ZeroConf {\n namespace Internal {\n \n-ZConfLib::Ptr ZConfLib::createAvahiLib(const QString &/*lib*/, const QString &version,\n+ZConfLib::Ptr ZConfLib::createAvahiLib(const QString &/*lib*/, const QString &/*version*/,\n                                        const ZConfLib::Ptr &fallback)\n {\n     return fallback;\n""}",bug,"bug 
",bug;resource;
21866.0,21866.0,bug,Denis Dzyubenko (old account),Got rid of double serialization of input in JsonStream,"Got rid of double serialization of input in JsonStream

When we got a blob of data from the socket, get the size of the QJsonObject
from the binary format directly instead of wasting time serializing object back
just to retrieve the size of the binary data.

Change-Id: I87240d6ab17b32b781d4e10d1529fae36d18c21e",['src/jsonstream/jsonstream.cpp'],"{""jsonstream.cpp"": ""@@ -110,6 +110,19 @@ bool JsonStream::send(const QJsonObject &object)\n \n void JsonStream::deviceReadyRead()\n {\n+    struct JsonHeader\n+    {\n+        struct Header\n+        {\n+            unsigned int tag;\n+            unsigned int version;\n+        } h;\n+        struct Base\n+        {\n+            unsigned int size;\n+        } b;\n+    };\n+\n     while (!mDevice->atEnd()) {\n         int bytesAvailable = mDevice->bytesAvailable();\n         int offset = mReadBuffer.size();\n@@ -119,12 +132,19 @@ void JsonStream::deviceReadyRead()\n             qWarning() << \""Error reading from socket\"" << mDevice->errorString();\n             continue;\n         }\n-        while (mReadBuffer.size()) {\n+        while (mReadBuffer.size() > sizeof(JsonHeader)) {\n+            JsonHeader header;\n+            memcpy(&header, mReadBuffer.constData(), sizeof(header));\n+            if (header.h.tag != QJsonDocument::BinaryFormatTag || header.h.version != qToLittleEndian(1u)) {\n+                mReadBuffer.clear();\n+                qWarning() << \""Got invalid binary json data\"";\n+                break;\n+            }\n             QJsonDocument doc(QJsonDocument::fromBinaryData(mReadBuffer, QJsonDocument::Validate));\n             if (doc.isEmpty())\n                 break;\n             receive(doc.object());\n-            mReadBuffer = mReadBuffer.mid(doc.toBinaryData().size());\n+            mReadBuffer.remove(0, sizeof(header.h) + header.b.size);\n         }\n     }\n }\n""}",feature,"bug, refactor 
",others;
18338.0,18338.0,feature,Natalia Shubina,"expanding set of tests ""interactions with mapitems""","expanding set of tests ""interactions with mapitems""

Change-Id: Ifd5b0002e5c9d2c959502a8a1cc6f0ccf3e1cb96",['tests/system/mapobjects/sys_mapobjects.qtt'],"{""sys_mapobjects.qtt"": ""@@ -390,20 +390,20 @@ testcase = {\n         ));\n     },\n \n-    qml_mapitem_interaction_data:{\n+    qml_mapquickitem_updating_coordinates_data:{\n         nodes:[\""-27.3644\"", \""153.0178\"", \""Sydney\""],\n     },\n \n-    qml_mapitem_interaction:function(latitude, longitude, city)\n+    qml_mapquickitem_updating_coordinates: function(latitude, longitude, city)\n     {\n         // Test meta data\n-        testTitle = \""QML: Maps and Navigation - Interaction with mapitems\"";\n+        testTitle = \""QML: Maps and Navigation - Updating coordinates of mapitems\"";\n         testBinary = \""qml_location_mapviewer\"";\n         testSource = \""$QTDIR/qtlocation/examples/declarative/mapviewer\""\n-        testGoal = \""Verify that mapitems can handle touch/mouse events.\"";\n+        testGoal = \""Verify that new coordinates can be set to mapitem.\"";\n         testPreconditions = \""Internet connection is required for this test case.\"";\n         testGroups = \""BAT, 5.0\"";\n-        testRequirements = \""MOBILITY-2861\"";\n+        testRequirements = \""MOBILITY-2861, QTBUG-23329\"";\n \n         // Test steps\n         prompt(twiki(\""---+++ \"" + testTitle + \""<br><br>\n@@ -416,13 +416,188 @@ testcase = {\n         | Launch \"" + testBinary + \"" | App launches normally. Map is displayed on the screen |\n         | Press and Hold on the map | |\n         | Select Add Marker button | |\n-        | Press and Hold on the marker | Verify that popup menu appears |\n+        | Press and Hold on the marker | |\n         | Select Move To button | |\n         | Fill in \"" + latitude + \"" in Latitude field | |\n         | Fill in \"" + longitude + \"" in Longitude | |\n-        | Select Go! button | Verify that marker places next to \"" + city + \""|\n-        | Drag the marker | Verify that marker can be dragged correctly |\""\n+        | Select Go! button | Verify that marker places next to \"" + city + \"" |\n+        | Pan the map | Verify that marker doesn't change it's coordinate. |\""\n         ));\n-    }\n+    },\n+\n+    qml_mapquickitem_interaction: function()\n+    {\n+        // Test meta data\n+        testTitle = \""QML: Maps and Navigation - Interaction with MapQuickItems\"";\n+        testBinary = \""qml_location_mapviewer\"";\n+        testSource = \""$QTDIR/qtlocation/examples/declarative/mapviewer\""\n+        testGoal = \""Verify that mapitem can handle touch/mouse events.\"";\n+        testPreconditions = \""Internet connection is required for this test case.\"";\n+        testGroups = \""BAT, 5.0\"";\n+        testRequirements = \""MOBILITY-2861\"";\n \n+        // Test steps\n+        prompt(twiki(\""---+++ \"" + testTitle + \""<br><br>\n+        *Goal:* \"" + testGoal + \""<br>\n+        *Pre-Requisites:* \"" + testPreconditions + \""<br>\n+        *Tested Binary:* \"" + testBinary + \""<br>\n+        *Requirements:* \"" + testRequirements + \""<br>\n+\n+        | *Step* | *Verification* |\n+        | Launch \"" + testBinary + \"" | App launches normally. Map is displayed on the screen |\n+        | Press and Hold on the map | |\n+        | Select Add Marker button | |\n+        | Press and Hold on the marker | Verify that popup menu appears |\n+        | Press on the map | Verify that popup menu disappears | |\n+        | Pan the map | Verify that marker doesn't change it's coordinate. |\n+        | Flick the map both ways | Verify that marker doesn't change it's coordinate. |\n+        | Drag the marker | Verify that marker can be dragged correctly. |\""\n+        ));\n+    },\n+\n+\n+    qml_mapquickitem_contains_mouse: function()\n+    {\n+        // Test meta data\n+        testTitle = \""QML: Maps and Navigation - Mapitems contained mouse\"";\n+        testBinary = \""qml_location_mapviewer\"";\n+        testSource = \""$QTDIR/qtlocation/examples/declarative/mapviewer\""\n+        testGoal = \""Verify that mapitem can correctly detect wheter the mouse is inside the mouse area or not.\"";\n+        testPreconditions = \""Internet connection is required for this test case.\"";\n+        testGroups = \""BAT, 5.0\"";\n+        testRequirements = \""MOBILITY-2861, QTBUG-20096\"";\n+\n+        // Test steps\n+        prompt(twiki(\""---+++ \"" + testTitle + \""<br><br>\n+        *Goal:* \"" + testGoal + \""<br>\n+        *Pre-Requisites:* \"" + testPreconditions + \""<br>\n+        *Tested Binary:* \"" + testBinary + \""<br>\n+        *Requirements:* \"" + testRequirements + \""<br>\n+\n+        | *Step* | *Verification* |\n+        | Launch \"" + testBinary + \"" | App launches normally. Map is displayed on the screen |\n+        | Select Tools | |\n+        | Select Reverse geocode | |\n+        | Select Go! | |\n+        | Wait for successful geocode results | |\n+        | Select Ok button | |\n+        | Zoom in approximately to level 15 | |\n+        | Press and Hold on the circle | Verify that the circle is green. |\n+        | | Verify that popup menu appears. |\n+        | Select Info | Verify that the circle is red. |\""\n+        ));\n+    },\n+\n+    qml_mapitem_bounding_box_events: function()\n+    {\n+        // Test meta data\n+        testTitle = \""QML: Maps and Navigation - Bounding box events of mapitems\"";\n+        testBinary = \""qml_location_mapviewer\"";\n+        testSource = \""$QTDIR/qtlocation/examples/declarative/mapviewer\""\n+        testGoal = \""Verify that mouse events can go through bounding box of a mapitemroute.\"";\n+        testPreconditions = \""Internet connection is required for this test case.\"";\n+        testGroups = \""BAT, 5.0\"";\n+        testRequirements = \""MOBILITY-2861, QTBUG-24537\"";\n+\n+        // Test steps\n+        prompt(twiki(\""---+++ \"" + testTitle + \""<br><br>\n+        *Goal:* \"" + testGoal + \""<br>\n+        *Pre-Requisites:* \"" + testPreconditions + \""<br>\n+        *Tested Binary:* \"" + testBinary + \""<br>\n+        *Requirements:* \"" + testRequirements + \""<br>\n+\n+        | *Step* | *Verification* |\n+        | Launch \"" + testBinary + \"" | App launches normally. Map is displayed on the screen |\n+        | Select Tools | |\n+        | Select Reverse geocode | |\n+        | Select Go! | |\n+        | Wait for successful geocode results | |\n+        | Select Ok button | |\n+        | Zoom in approximately to level 15 | |\n+        | Select Tools | |\n+        | Select Route | |\n+        | Select Go! button | |\n+        | Wait for successful route result | |\n+        | Press and Hold on the circle inside route's bounding box | Verify that circle is green. |\""\n+        ));\n+    },\n+\n+    qml_route_interaction: function()\n+    {\n+        // Test meta data\n+        testTitle = \""QML: Maps and Navigation - Interaction with route\"";\n+        testBinary = \""qml_location_mapviewer\"";\n+        testSource = \""$QTDIR/qtlocation/examples/declarative/mapviewer\""\n+        testGoal = \""Verify that route can handle touch/mouse events.\"";\n+        testPreconditions = \""Internet connection is required for this test case.\"";\n+        testGroups = \""BAT, 5.0\"";\n+        testRequirements = \""MOBILITY-2861\"";\n+\n+        // Test steps\n+        prompt(twiki(\""---+++ \"" + testTitle + \""<br><br>\n+        *Goal:* \"" + testGoal + \""<br>\n+        *Pre-Requisites:* \"" + testPreconditions + \""<br>\n+        *Tested Binary:* \"" + testBinary + \""<br>\n+        *Requirements:* \"" + testRequirements + \""<br>\n+\n+        | *Step* | *Verification* |\n+        | Launch \"" + testBinary + \"" | App launches normally. Map is displayed on the screen |\n+        | Select Tools | |\n+        | Select Route | |\n+        | Select Go! button | |\n+        | Wait for successful route result | |\n+        | Press and Hold on the route | Verify that route is green. |\n+        | Select Delete | Verify that route was red before deleting. |\""\n+        ));\n+    },\n+\n+\n+    qml_mapitem_border_interaction:{\n+        nodes:[\""-27.1144\"", \""152.6594\"", \""-27.7434\"", \""153.3021\""],\n+    },\n+\n+    qml_mapitem_border_interaction:function(rectlat1, rectlong1, rectlat2, rectlong2)\n+    {\n+        // Test meta data\n+        testTitle = \""QML: Maps and Navigation - Interaction with borders of mapitems\"";\n+        testBinary = \""qml_location_mapviewer\"";\n+        testSource = \""$QTDIR/qtlocation/examples/declarative/mapviewer\""\n+        testGoal = \""Verify that mapitem's border can handle touch/mouse events ().\"";\n+        testPreconditions = \""Internet connection is required for this test case.\"";\n+        testGroups = \""BAT, 5.0\"";\n+        testRequirements = \""MOBILITY-2861, QTBUG-23985\"";\n+\n+        // Test steps\n+        prompt(twiki(\""---+++ \"" + testTitle + \""<br><br>\n+        *Goal:* \"" + testGoal + \""<br>\n+        *Pre-Requisites:* \"" + testPreconditions + \""<br>\n+        *Tested Binary:* \"" + testBinary + \""<br>\n+        *Requirements:* \"" + testRequirements + \""<br>\n+\n+        | *Step* | *Verification* |\n+        | Launch \"" + testBinary + \"" | App launches normally. Map is displayed on the screen |\n+        | Press and Hold on the map | |\n+//        | Select Add Marker button | |\n+        | Press and Hold on the map | |\n+        | Select Add Marker button | |\n+        | Press and Hold on the first marker | |\n+        | Select Move To button | |\n+        | Fill in \"" + rectlat1 + \"" in Latitude field | |\n+        | Fill in \"" + rectlong1 + \"" in Longitude | |\n+        | Select Go! button | |\n+        | Press and Hold on the second marker | |\n+        | Select Move To button | |\n+        | Fill in \"" + rectlat2 + \"" in Latitude field | |\n+        | Fill in \"" + rectlong2 + \"" in Longitude | |\n+        | Select Go! button | |\n+        | Pan the map to see both Markers |\n+        | Press and Hold on the first marker | |\n+        | Select Draw | |\n+        | Select Rectangle | |\n+        | Press and Hold on the left border | Verify that rectangle is green. |\n+        | Press and Hold on the top border | Verify that rectangle is green. |\n+        | Press and Hold on the right border | Verify that rectangle is green. |\n+        | Press and Hold on the bottom border | Verify that rectangle is green. |\""\n+        ));\n+    }\n }  // end of testcase\n""}",test,"test 
",resource;test;
13815.0,13815.0,test,Joerg Bornemann,make tst_QProcess::softExitInSlots pass in under 120 seconds,"make tst_QProcess::softExitInSlots pass in under 120 seconds

Due to unconditional waits this test always needed 120 seconds to pass.
Now we're using QTRY_VERIFY and make sure that we write the data before
the process got killed even in the cases 3 and 4.
On my machine this test now takes 8 seconds.

Change-Id: I606a8b43ba4c97704be5202a6c5d8d1c75337f9c",['tests/auto/corelib/io/qprocess/tst_qprocess.cpp'],"{""tst_qprocess.cpp"": ""@@ -1000,9 +1000,21 @@ public:\n         }\n     }\n \n+    void writeAfterStart(const char *buf, int count)\n+    {\n+        dataToWrite = QByteArray(buf, count);\n+    }\n+\n+    void start(const QString &program)\n+    {\n+        QProcess::start(program);\n+        writePendingData();\n+    }\n+\n public slots:\n     void terminateSlot()\n     {\n+        writePendingData(); // In cases 3 and 4 we haven't written the data yet.\n         if (killing || (n == 4 && state() != Running)) {\n             // Don't try to kill the process before it is running - that can\n             // be hazardous, as the actual child process might not be running\n@@ -1024,9 +1036,19 @@ public slots:\n         waitedForFinished = true;\n     }\n \n+private:\n+    void writePendingData()\n+    {\n+        if (!dataToWrite.isEmpty()) {\n+            write(dataToWrite);\n+            dataToWrite.clear();\n+        }\n+    }\n+\n private:\n     int n;\n     bool killing;\n+    QByteArray dataToWrite;\n };\n \n //-----------------------------------------------------------------------------\n@@ -1049,11 +1071,10 @@ void tst_QProcess::softExitInSlots()\n \n     for (int i = 0; i < 5; ++i) {\n         SoftExitProcess proc(i);\n+        proc.writeAfterStart(\""OLEBOLE\"", 8); // include the \\0\n         proc.start(appName);\n-        proc.write(\""OLEBOLE\"", 8); // include the \\0\n-        QTestEventLoop::instance().enterLoop(10);\n+        QTRY_VERIFY(proc.waitedForFinished);\n         QCOMPARE(proc.state(), QProcess::NotRunning);\n-        QVERIFY(proc.waitedForFinished);\n     }\n }\n \n""}",test,"bug, test 
",test;
7385.0,7385.0,test ,Eike Ziller,Remove unnecessary code.,"Remove unnecessary code.

Change-Id: I07a382696c57f5451645e854e55aa30e9e81326c","['src/plugins/qmljseditor/qmljseditorfactory.h', 'src/plugins/qmljseditor/qmljseditorfactory.cpp']","{""qmljseditorfactory.cpp"": ""@@ -53,37 +53,6 @@\n #include <QtGui/QPushButton>\n #include <QtGui/QMainWindow>\n \n-namespace {\n-    const char * const QMLDESIGNER_INFO_BAR = \""QmlJSEditor.QmlDesignerInfoBar\"";\n-    const char * const KEY_QMLGROUP = \""QML\"";\n-    const char * const KEY_NAGABOUTDESIGNER = \""AskAboutVisualDesigner\"";\n-\n-    bool isQmlDesignerExperimentallyDisabled()\n-    {\n-        ExtensionSystem::PluginManager *pm = ExtensionSystem::PluginManager::instance();\n-        foreach (const ExtensionSystem::PluginSpec *spec, pm->plugins()) {\n-            if (spec->name() == QLatin1String(\""QmlDesigner\"")) {\n-                if (spec->isExperimental() && !spec->isEnabled())\n-                    return true;\n-                return false;\n-            }\n-        }\n-        return false;\n-    }\n-\n-    bool isNaggingAboutExperimentalDesignerEnabled()\n-    {\n-        if (!isQmlDesignerExperimentallyDisabled()) {\n-            return false;\n-        }\n-        QSettings *settings = Core::ICore::instance()->settings();\n-        settings->beginGroup(QLatin1String(KEY_QMLGROUP));\n-        bool nag = settings->value(QLatin1String(KEY_NAGABOUTDESIGNER), true).toBool();\n-        settings->endGroup();\n-        return nag;\n-    }\n-}\n-\n using namespace QmlJSEditor;\n using namespace QmlJSEditor::Internal;\n using namespace QmlJSEditor::Constants;\n@@ -123,13 +92,6 @@ Core::IEditor *QmlJSEditorFactory::createEditor(QWidget *parent)\n {\n     QmlJSEditor::QmlJSTextEditorWidget *rc = new QmlJSEditor::QmlJSTextEditorWidget(parent);\n     QmlJSEditorPlugin::instance()->initializeEditor(rc);\n-    if (isNaggingAboutExperimentalDesignerEnabled()) {\n-        Core::InfoBarEntry info(QMLDESIGNER_INFO_BAR,\n-                                tr(\""Do you want to enable the experimental Qt Quick Designer?\""));\n-        info.setCustomButtonInfo(tr(\""Enable Qt Quick Designer\""), this, SLOT(activateQmlDesigner()));\n-        info.setCancelButtonInfo(this, SLOT(neverAskAgainAboutQmlDesigner()));\n-        rc->file()->infoBar()->addInfo(info);\n-    }\n     return rc->editor();\n }\n \n@@ -137,50 +99,3 @@ QStringList QmlJSEditorFactory::mimeTypes() const\n {\n     return m_mimeTypes;\n }\n-\n-void QmlJSEditorFactory::activateQmlDesigner()\n-{\n-    QString menu;\n-#ifdef Q_WS_MAC\n-    menu = tr(\""Qt Creator -> About Plugins...\"");\n-#else\n-    menu = tr(\""Help -> About Plugins...\"");\n-#endif\n-    QMessageBox message(Core::ICore::instance()->mainWindow());\n-    message.setWindowTitle(tr(\""Enable experimental Qt Quick Designer?\""));\n-    message.setText(tr(\""Do you want to enable the experimental Qt Quick Designer? \""\n-                       \""After enabling it, you can access the visual design capabilities by switching to Design Mode. \""\n-                       \""This can affect the overall stability of Qt Creator. \""\n-                       \""To disable Qt Quick Designer again, visit the menu '%1' and disable 'QmlDesigner'.\"").arg(menu));\n-    message.setIcon(QMessageBox::Question);\n-    QPushButton *enable = message.addButton(tr(\""Enable Qt Quick Designer\""), QMessageBox::AcceptRole);\n-    message.addButton(tr(\""Cancel\""), QMessageBox::RejectRole);\n-    message.exec();\n-    if (message.clickedButton() == enable) {\n-        ExtensionSystem::PluginManager *pm = ExtensionSystem::PluginManager::instance();\n-        foreach (ExtensionSystem::PluginSpec *spec, pm->plugins()) {\n-            if (spec->name() == QLatin1String(\""QmlDesigner\"")) {\n-                spec->setEnabled(true);\n-                pm->writeSettings();\n-                QMessageBox::information(Core::ICore::instance()->mainWindow(), tr(\""Please restart Qt Creator\""),\n-                                         tr(\""Please restart Qt Creator to make the change effective.\""));\n-                foreach (Core::IEditor *editor, Core::EditorManager::instance()->openedEditors())\n-                    if (qobject_cast<QmlJSEditorEditable *>(editor))\n-                        editor->file()->infoBar()->removeInfo(QMLDESIGNER_INFO_BAR);\n-                neverAskAgainAboutQmlDesigner();\n-                return;\n-            }\n-        }\n-    }\n-}\n-\n-void QmlJSEditorFactory::neverAskAgainAboutQmlDesigner()\n-{\n-    QSettings *settings = Core::ICore::instance()->settings();\n-    settings->beginGroup(QLatin1String(KEY_QMLGROUP));\n-    settings->setValue(QLatin1String(KEY_NAGABOUTDESIGNER), false);\n-    settings->endGroup();\n-    settings->sync();\n-    disconnect(Core::EditorManager::instance(), SIGNAL(currentEditorChanged(Core::IEditor*)),\n-             this, SLOT(updateEditorInfoBar(Core::IEditor*)));\n-}\n"", ""qmljseditorfactory.h"": ""@@ -54,10 +54,6 @@ public:\n     Core::IFile *open(const QString &fileName);\n     Core::IEditor *createEditor(QWidget *parent);\n \n-private slots:\n-    void activateQmlDesigner();\n-    void neverAskAgainAboutQmlDesigner();\n-\n private:\n     QStringList m_mimeTypes;\n };\n""}",deprecat,"refactor 
",deprecat;
2200.0,2200.0,deprecat ,Tobias Hunger,Git: Fix thinko when trying to find merged branches,"Git: Fix thinko when trying to find merged branches

Fix thinko when trying to find out whether a branch was merged or not.

Change-Id: I6c4d600508af8a68fe0bac7e61f0b912c43cec32",['src/plugins/git/branchmodel.cpp'],"{""branchmodel.cpp"": ""@@ -470,15 +470,17 @@ bool BranchModel::branchIsMerged(const QModelIndex &idx)\n     QString output;\n     QStringList args;\n \n-    args << QLatin1String(\""--contains\"") << sha(idx);\n+    args << QLatin1String(\""-a\"") << QLatin1String(\""--contains\"") << sha(idx);\n     if (!m_client->synchronousBranchCmd(m_workingDirectory, args, &output, &errorMessage)) {\n         VCSBase::VCSBaseOutputWindow::instance()->appendError(errorMessage);\n         return false;\n     }\n \n-    QStringList lines = output.split(QLatin1Char('/'), QString::SkipEmptyParts);\n+    QStringList lines = output.split(QLatin1Char('\\n'), QString::SkipEmptyParts);\n     foreach (const QString &l, lines) {\n-        if (l.startsWith(QLatin1String(\""  \"")) && l.count() >= 3)\n+        QString currentBranch = l.mid(2); // remove first letters (\""  \"" or \""* \"" depending on whether the\n+                                          // it is the currently checked out branch or not)\n+        if (currentBranch != branch)\n             return true;\n     }\n     return false;\n""}",bug,"bug 
",bug;
3398.0,3398.0,bug ,"Daniel Molkentin (CLOSED NOKIA IDENTITY, DO NOT USE ANYMORE!)",WelcomeScreen: Don't move ScrollBar beyond scroll area.,"WelcomeScreen: Don't move ScrollBar beyond scroll area.

Change-Id: I931256ced736c9d5514e50e7a2bd383d2e3fcfd0",['share/qtcreator/welcomescreen/widgets/ExampleBrowser.qml'],"{""ExampleBrowser.qml"": ""@@ -54,7 +54,7 @@ Item {\n         anchors.right: parent.right\n         anchors.bottomMargin: - 8\n         anchors.leftMargin: -8\n-        anchors.rightMargin: scrollArea.verticalScrollBar.visible ? 8 : -8\n+        anchors.rightMargin: -8\n \n \n         CheckBox {\n@@ -117,7 +117,6 @@ Item {\n                 delegate: ExampleDelegate { width: scrollArea.width; onTagClicked: exampleBrowserRoot.appendTag(tag) }\n             }\n         }\n-        Component.onCompleted: verticalScrollBar.anchors.bottomMargin = -(scrollArea.anchors.bottomMargin + 8)\n     }\n \n     Rectangle {\n""}",bug; resource,"bug 
",resource;
16634.0,16634.0,bug; resource,Eike Ziller,Add ActionContainer::insertGroup,"Add ActionContainer::insertGroup

Change-Id: I1a7047e0ccc074bb38661ecd34e2c0e64469d843","['src/plugins/coreplugin/actionmanager/actioncontainer.cpp', 'src/plugins/coreplugin/actionmanager/actioncontainer_p.h', 'src/plugins/coreplugin/actionmanager/actioncontainer.h']","{""actioncontainer.cpp"": ""@@ -187,6 +187,18 @@ void ActionContainerPrivate::appendGroup(const Id &groupId)\n     m_groups.append(Group(groupId));\n }\n \n+void ActionContainerPrivate::insertGroup(const Id &before, const Id &groupId)\n+{\n+    QList<Group>::iterator it = m_groups.begin();\n+    while (it != m_groups.end()) {\n+        if (it->id == before) {\n+            m_groups.insert(it, Group(groupId));\n+            break;\n+        }\n+        ++it;\n+    }\n+}\n+\n QList<Group>::const_iterator ActionContainerPrivate::findGroup(const Id &groupId) const\n {\n     QList<Group>::const_iterator it = m_groups.constBegin();\n"", ""actioncontainer.h"": ""@@ -68,6 +68,7 @@ public:\n \n     virtual QAction *insertLocation(const Id &group) const = 0;\n     virtual void appendGroup(const Id &group) = 0;\n+    virtual void insertGroup(const Id &before, const Id &group) = 0;\n     virtual void addAction(Command *action, const Id &group = Id()) = 0;\n     virtual void addMenu(ActionContainer *menu, const Id &group = Id()) = 0;\n     virtual void addMenu(ActionContainer *before, ActionContainer *menu, const Id &group = Id()) = 0;\n"", ""actioncontainer_p.h"": ""@@ -61,6 +61,7 @@ public:\n \n     QAction *insertLocation(const Id &groupId) const;\n     void appendGroup(const Id &id);\n+    void insertGroup(const Id &before, const Id &groupId);\n     void addAction(Command *action, const Id &group = Id());\n     void addMenu(ActionContainer *menu, const Id &group = Id());\n     void addMenu(ActionContainer *before, ActionContainer *menu, const Id &group = Id());\n""}",feature,"feature 
",feature;
4046.0,4046.0,feature,Alan Alpert (Inactive),Add clear property to QSGParticleSystem,"Add clear property to QSGParticleSystem

Makes it possible to pause the system when all particles are expired.

Change-Id: Iebeb987c2e2af261bdffa4584d75f3b108dcf050","['src/declarative/particles/qsgparticlesystem_p.h', 'src/declarative/particles/qsgparticlesystem.cpp', 'examples/declarative/particles/trails/overburst.qml']","{""overburst.qml"": ""@@ -45,7 +45,10 @@ Rectangle{\n     color: \""black\""\n     width: 360\n     height: 540\n-    ParticleSystem{ id: sys }\n+    ParticleSystem{\n+        id: sys\n+        onClearChanged: if (clear) sys.pause();\n+    }\n     ImageParticle{\n         system: sys\n         id: cp\n@@ -69,6 +72,7 @@ Rectangle{\n     }\n     MouseArea{\n         anchors.fill: parent\n+        onPressed: sys.resume()\n         id: ma\n     }\n     MouseArea{\n"", ""qsgparticlesystem.cpp"": ""@@ -80,9 +80,24 @@ DEFINE_BOOL_CONFIG_OPTION(qmlParticlesDebug, QML_PARTICLES_DEBUG)\n     paused is set to false again, the simulation will resume from the same point it was\n     paused.\n \n+    The simulation will automatically pause if it detects that there are no live particles\n+    left, and unpause when new live particles are added.\n+\n     It can also be controlled with the pause() and resume() methods.\n */\n \n+/*!\n+    \\qmlproperty bool QtQuick.Particles2::ParticleSystem::clear\n+\n+    clear is set to true when there are no live particles left in the system.\n+\n+    You can use this to pause the system, keeping it from spending any time updating,\n+    but you will need to resume it in order for additional particles to be generated\n+    by the system.\n+\n+    To kill all the particles in the system, use a Kill affector.\n+*/\n+\n /*!\n     \\qmlproperty int QtQuick.Particles2::ParticleSystem::startTime\n \n@@ -267,7 +282,8 @@ void QSGParticleGroupData::initList()\n     dataHeap.clear();\n }\n \n-void QSGParticleGroupData::kill(QSGParticleData* d){\n+void QSGParticleGroupData::kill(QSGParticleData* d)\n+{\n     Q_ASSERT(d->group == index);\n     d->lifeSpan = 0;//Kill off\n     foreach (QSGParticlePainter* p, painters)\n@@ -275,21 +291,14 @@ void QSGParticleGroupData::kill(QSGParticleData* d){\n     reusableIndexes << d->index;\n }\n \n-QSGParticleData* QSGParticleGroupData::newDatum(bool respectsLimits){\n-    while (dataHeap.top() <= m_system->m_timeInt){\n-        foreach (QSGParticleData* datum, dataHeap.pop()){\n-            if (!datum->stillAlive()){\n-                reusableIndexes << datum->index;\n-            }else{\n-                prepareRecycler(datum); //ttl has been altered mid-way, put it back\n-            }\n-        }\n-    }\n+QSGParticleData* QSGParticleGroupData::newDatum(bool respectsLimits)\n+{\n+    //recycle();//Extra recycler round to be sure?\n \n     while (!reusableIndexes.empty()){\n         int idx = *(reusableIndexes.begin());\n         reusableIndexes.remove(idx);\n-        if (data[idx]->stillAlive()){// ### This means resurrection of dead particles. Is that allowed?\n+        if (data[idx]->stillAlive()){// ### This means resurrection of 'dead' particles. Is that allowed?\n             prepareRecycler(data[idx]);\n             continue;\n         }\n@@ -304,6 +313,22 @@ QSGParticleData* QSGParticleGroupData::newDatum(bool respectsLimits){\n     return data[oldSize];\n }\n \n+bool QSGParticleGroupData::recycle()\n+{\n+    while (dataHeap.top() <= m_system->m_timeInt){\n+        foreach (QSGParticleData* datum, dataHeap.pop()){\n+            if (!datum->stillAlive()){\n+                reusableIndexes << datum->index;\n+            }else{\n+                prepareRecycler(datum); //ttl has been altered mid-way, put it back\n+            }\n+        }\n+    }\n+\n+    //TODO: If the data is clear, gc (consider shrinking stack size)?\n+    return reusableIndexes.count() == m_size;\n+}\n+\n void QSGParticleGroupData::prepareRecycler(QSGParticleData* d){\n     dataHeap.insert(d);\n }\n@@ -870,6 +895,7 @@ QSGParticleData* QSGParticleSystem::newDatum(int groupId, bool respectLimits, in\n     if (m_spriteEngine)\n         m_spriteEngine->startSprite(ret->systemIndex, ret->group);\n \n+    m_clear = false;\n     return ret;\n }\n \n@@ -899,8 +925,6 @@ void QSGParticleSystem::finishNewDatum(QSGParticleData *pd){\n \n void QSGParticleSystem::updateCurrentTime( int currentTime )\n {\n-    if (!m_running)\n-        return;\n     if (!m_initialized)\n         return;//error in initialization\n \n@@ -910,6 +934,13 @@ void QSGParticleSystem::updateCurrentTime( int currentTime )\n     qreal time =  m_timeInt / 1000.;\n     dt = time - dt;\n     m_needsReset.clear();\n+\n+    bool oldClear = m_clear;\n+    foreach (QSGParticleGroupData* gd, m_groupData){//Recycle all groups and see if they're out of live particles\n+        m_clear = true;\n+        m_clear = m_clear && gd->recycle();\n+    }\n+\n     if (m_spriteEngine)\n         m_spriteEngine->updateSprites(m_timeInt);\n \n@@ -923,6 +954,9 @@ void QSGParticleSystem::updateCurrentTime( int currentTime )\n         foreach (QSGParticlePainter* p, m_groupData[d->group]->painters)\n             if (p && d)\n                 p->reload(d);\n+\n+    if (oldClear != m_clear)\n+        clearChanged(m_clear);\n }\n \n int QSGParticleSystem::systemSync(QSGParticlePainter* p)\n"", ""qsgparticlesystem_p.h"": ""@@ -117,6 +117,7 @@ public:\n     QVector<QSGParticleData*> data;\n     QSGParticleDataHeap dataHeap;\n     QSet<int> reusableIndexes;\n+    bool recycle(); //Force recycling round, reutrns true if all indexes are now reusable\n \n     void initList();\n     void kill(QSGParticleData* d);\n@@ -219,6 +220,7 @@ class QSGParticleSystem : public QSGItem\n     Q_OBJECT\n     Q_PROPERTY(bool running READ isRunning WRITE setRunning NOTIFY runningChanged)\n     Q_PROPERTY(bool paused READ isPaused WRITE setPaused NOTIFY pausedChanged)\n+    Q_PROPERTY(bool clear READ isClear NOTIFY clearChanged)\n     Q_PROPERTY(int startTime READ startTime WRITE setStartTime NOTIFY startTimeChanged)\n     Q_PROPERTY(QDeclarativeListProperty<QSGSprite> particleStates READ particleStates)\n \n@@ -250,6 +252,8 @@ signals:\n \n     void pausedChanged(bool arg);\n \n+    void clearChanged(bool arg);\n+\n public slots:\n     void start(){setRunning(true);}\n     void stop(){setRunning(false);}\n@@ -315,6 +319,11 @@ public://###but only really for related class usage. Perhaps we should all be fr\n         return m_paused;\n     }\n \n+    bool isClear() const\n+    {\n+        return m_clear;\n+    }\n+\n private:\n     void initializeSystem();\n     void initGroups();\n@@ -337,6 +346,8 @@ private:\n     QSGParticleSystemAnimation* m_animation;\n     bool m_paused;\n     bool m_debugMode;\n+    bool m_allDead;\n+    bool m_clear;\n };\n \n // Internally, this animation drives all the timing. Painters sync up in their updatePaintNode\n""}",feature,"feature 
",feature;
22245.0,22245.0,feature ,Michael Brasser,"Revert ""Add QQmlBoundSignalNoParams""","Revert ""Add QQmlBoundSignalNoParams""

This reverts commit ec7deb3d123bb44b5d57590615a60ed48b1d2860.

Other Qt modules may be relying on QObject::receivers() to
know when there is a QML signal handler for a signal, and
using QQmlNotifierEndpoint in QQmlBoundSignalNoParams breaks
this assumption.

Change-Id: I1b8085254697d909f85a88617eb4e3f258b88950","['src/qml/qml/qqmlvme.cpp', 'src/qml/debugger/qqmlprofilerservice_p.h', 'src/qml/qml/qqmlproperty.cpp', 'src/qml/qml/qqmlboundsignal_p.h', 'src/qml/qml/qqmlboundsignal.cpp']","{""qqmlprofilerservice_p.h"": ""@@ -205,16 +205,16 @@ struct QQmlHandlingSignalProfiler {\n     {\n         enabled = QQmlProfilerService::instance\n                 ? QQmlProfilerService::instance->profilingEnabled() : false;\n-        if (enabled)\n-            init(signal, expression);\n-    }\n-\n-    QQmlHandlingSignalProfiler(QObject *object, int index, QQmlBoundSignalExpression *expression)\n-    {\n-        enabled = QQmlProfilerService::instance\n-                ? QQmlProfilerService::instance->profilingEnabled() : false;\n-        if (enabled)\n-            init(object->metaObject()->method(index), expression);\n+        if (enabled) {\n+            QQmlProfilerService *service = QQmlProfilerService::instance;\n+            service->startRange(QQmlProfilerService::HandlingSignal);\n+            service->rangeData(QQmlProfilerService::HandlingSignal,\n+                               QLatin1String(signal.signature()) + QLatin1String(\"": \"")\n+                               + expression->expression());\n+            service->rangeLocation(QQmlProfilerService::HandlingSignal,\n+                                   expression->sourceFile(), expression->lineNumber(),\n+                                   expression->columnNumber());\n+        }\n     }\n \n     ~QQmlHandlingSignalProfiler()\n@@ -224,19 +224,6 @@ struct QQmlHandlingSignalProfiler {\n     }\n \n     bool enabled;\n-\n-private:\n-    void init(const QMetaMethod &signal, QQmlBoundSignalExpression *expression)\n-    {\n-        QQmlProfilerService *service = QQmlProfilerService::instance;\n-        service->startRange(QQmlProfilerService::HandlingSignal);\n-        service->rangeData(QQmlProfilerService::HandlingSignal,\n-                           QLatin1String(signal.signature()) + QLatin1String(\"": \"")\n-                           + expression->expression());\n-        service->rangeLocation(QQmlProfilerService::HandlingSignal,\n-                               expression->sourceFile(), expression->lineNumber(),\n-                               expression->columnNumber());\n-    }\n };\n \n struct QQmlObjectCreatingProfiler {\n"", ""qqmlboundsignal.cpp"": ""@@ -400,70 +400,6 @@ int QQmlBoundSignalParameters::metaCall(QMetaObject::Call c, int id, void **a)\n     }\n }\n \n-////////////////////////////////////////////////////////////////////////\n-\n-QQmlBoundSignalNoParams::QQmlBoundSignalNoParams(QObject *scope, const QMetaMethod &signal,\n-                               QObject *owner)\n-: m_expression(0), m_owner(owner), m_index(signal.methodIndex()), m_isEvaluating(false)\n-{\n-    callback = &subscriptionCallback;\n-    QQmlNotifierEndpoint::connect(scope, m_index);\n-}\n-\n-QQmlBoundSignalNoParams::~QQmlBoundSignalNoParams()\n-{\n-    delete m_expression;\n-    m_expression = 0;\n-}\n-\n-int QQmlBoundSignalNoParams::index() const\n-{\n-    return m_index;\n-}\n-\n-/*!\n-    Returns the signal expression.\n-*/\n-QQmlBoundSignalExpression *QQmlBoundSignalNoParams::expression() const\n-{\n-    return m_expression;\n-}\n-\n-/*!\n-    Sets the signal expression to \\a e.  Returns the current signal expression,\n-    or null if there is no signal expression.\n-\n-    The QQmlBoundSignalNoParams instance takes ownership of \\a e.  The caller is\n-    assumes ownership of the returned QQmlExpression.\n-*/\n-QQmlBoundSignalExpression *QQmlBoundSignalNoParams::setExpression(QQmlBoundSignalExpression *e)\n-{\n-    QQmlBoundSignalExpression *rv = m_expression;\n-    m_expression = e;\n-    if (m_expression) m_expression->setNotifyOnValueChanged(false);\n-    return rv;\n-}\n-\n-void QQmlBoundSignalNoParams::subscriptionCallback(QQmlNotifierEndpoint *e)\n-{\n-    QQmlBoundSignalNoParams *s = static_cast<QQmlBoundSignalNoParams*>(e);\n-    if (!s->m_expression)\n-        return;\n-\n-    if (QQmlDebugService::isDebuggingEnabled())\n-        QV8DebugService::instance()->signalEmitted(QString::fromAscii(s->m_owner->metaObject()->method(s->m_index).signature()));\n-\n-    QQmlHandlingSignalProfiler prof(s->m_owner, s->m_index, s->m_expression);\n-\n-    s->m_isEvaluating = true;\n-    if (s->m_expression && s->m_expression->engine()) {\n-        s->m_expression->evaluate(); // evaluate signal expression.\n-        if (s->m_expression && s->m_expression->hasError())\n-            QQmlEnginePrivate::warning(s->m_expression->engine(), s->m_expression->error());\n-    }\n-    s->m_isEvaluating = false;\n-}\n-\n QT_END_NAMESPACE\n \n #include <qqmlboundsignal.moc>\n"", ""qqmlboundsignal_p.h"": ""@@ -57,7 +57,6 @@\n \n #include <private/qqmlabstractexpression_p.h>\n #include <private/qqmljavascriptexpression_p.h>\n-#include <private/qqmlnotifier_p.h>\n #include <private/qobject_p.h>\n \n QT_BEGIN_NAMESPACE\n@@ -148,31 +147,6 @@ private:\n     QObject *m_owner;\n };\n \n-class Q_QML_EXPORT QQmlBoundSignalNoParams : public QQmlAbstractBoundSignal,\n-                                             public QQmlNotifierEndpoint\n-{\n-public:\n-    QQmlBoundSignalNoParams(QObject *scope, const QMetaMethod &signal, QObject *owner);\n-    virtual ~QQmlBoundSignalNoParams();\n-\n-    int index() const;\n-\n-    QQmlBoundSignalExpression *expression() const;\n-    QQmlBoundSignalExpression *setExpression(QQmlBoundSignalExpression *);\n-    QObject *object() { return m_owner; }\n-\n-    static void subscriptionCallback(QQmlNotifierEndpoint *e);\n-\n-    bool isEvaluating() const { return m_isEvaluating; }\n-\n-private:\n-    QQmlBoundSignalExpression *m_expression;\n-    QObject *m_owner;\n-    int m_index;\n-    bool m_isEvaluating;\n-};\n-\n-\n QT_END_NAMESPACE\n \n #endif // QQMLBOUNDSIGNAL_P_H\n"", ""qqmlproperty.cpp"": ""@@ -970,11 +970,7 @@ QQmlPropertyPrivate::setSignalExpression(const QQmlProperty &that,\n         return signalHandler->setExpression(expr);\n \n     if (expr) {\n-        QQmlAbstractBoundSignal *signal = 0;\n-        if (that.method().parameterTypes().count())\n-            signal = new QQmlBoundSignal(that.d->object, that.method(), that.d->object);\n-        else\n-            signal = new QQmlBoundSignalNoParams(that.d->object, that.method(), that.d->object);\n+        QQmlBoundSignal *signal = new QQmlBoundSignal(that.d->object, that.method(), that.d->object);\n         QQmlBoundSignalExpression *oldExpr = signal->setExpression(expr);\n         signal->addToObject();\n         return oldExpr;\n"", ""qqmlvme.cpp"": ""@@ -711,11 +711,7 @@ QObject *QQmlVME::run(QList<QQmlError> *errors,\n \n             QMetaMethod signal = target->metaObject()->method(instr.signalIndex);\n \n-            QQmlAbstractBoundSignal *bs = 0;\n-            if (signal.parameterTypes().count())\n-                bs = new QQmlBoundSignal(target, signal, target);\n-            else\n-                bs = new QQmlBoundSignalNoParams(target, signal, target);\n+            QQmlBoundSignal *bs = new QQmlBoundSignal(target, signal, target);\n             QQmlBoundSignalExpression *expr =\n                 new QQmlBoundSignalExpression(CTXT, context, DATAS.at(instr.value), true, COMP->name, instr.line, instr.column);\n             bs->setExpression(expr);\n""}",bug,"bug 
",others;
9308.0,9308.0,bug,Qt Submodule Update Bot,Updated submodules.,"Updated submodules.

Change-Id: Ibec935589fb365db9d340752c0c7c480e9f8e930","['qtbase', 'qtquick3d', 'qttools', 'qtlocation', 'qtdeclarative', 'qtjsondb', 'qtdoc', 'qtpim']","{""qtbase"": ""@@ -1 +1 @@\n-Subproject commit 0c6597e59f64c0bb7bf1069e0e0a8b8d2fc88198\n+Subproject commit 67106b169cd847f30ad6f1e7932acb0e3c3c8fe1\n"", ""qtdeclarative"": ""@@ -1 +1 @@\n-Subproject commit b811bd2f2d4d412f4fed8e6d716336193df3683e\n+Subproject commit 62a31676830aca745df23a5dc18b59c4211eea56\n"", ""qtdoc"": ""@@ -1 +1 @@\n-Subproject commit 3e7f031375639b501ef5bf99ea2a57c95c47aed9\n+Subproject commit 3e89a341a3a6c8df6e3a82f233c38aeaebc5df73\n"", ""qtjsondb"": ""@@ -1 +1 @@\n-Subproject commit 58026e33401cc35647c20f62ebb1860222ef5ae6\n+Subproject commit fabfb50829df92612ee966d47cbcf533ef78e31a\n"", ""qtlocation"": ""@@ -1 +1 @@\n-Subproject commit 21388ebc73474e8ab24e4a7c697d1ce3e28f5748\n+Subproject commit ff9c60ef866004f6e6d38e33da17577d949000c4\n"", ""qtpim"": ""@@ -1 +1 @@\n-Subproject commit ecada68c321ca70d03da703b9fdacf39f90bbcb9\n+Subproject commit ce2d03895bdf259e0c25e26575805ccf8245e7c2\n"", ""qtquick3d"": ""@@ -1 +1 @@\n-Subproject commit 03c073181b1842efe9d8ea7e7f1d774f4bc76404\n+Subproject commit cd8f91741a7bb8d0a1b1bdce163e5801ede81555\n"", ""qttools"": ""@@ -1 +1 @@\n-Subproject commit 2366e5288ec1cc5a9b256b5afdc614b3e293f881\n+Subproject commit 89ae399dfb6d42422396fbb0d869b5a39c4e8bf6\n""}",reource,"merge 
",feature;
8924.0,8924.0,reource,Martin Jones,Remove unused code in qquickimplicitsizeitem.,"Remove unused code in qquickimplicitsizeitem.

Change-Id: I47ad98e0c515ddc5a9ac224048cdf396cce22699","['src/declarative/items/qquickimplicitsizeitem_p_p.h', 'src/declarative/items/qquickimplicitsizeitem.cpp', 'src/declarative/items/qquickimplicitsizeitem_p.h']","{""qquickimplicitsizeitem.cpp"": ""@@ -56,37 +56,9 @@ void QQuickImplicitSizeItemPrivate::implicitHeightChanged()\n     emit q->implicitHeightChanged();\n }\n \n-QQuickImplicitSizeItem::QQuickImplicitSizeItem(QQuickItem *parent)\n-    : QQuickItem(*(new QQuickImplicitSizeItemPrivate), parent)\n-{\n-}\n-\n QQuickImplicitSizeItem::QQuickImplicitSizeItem(QQuickImplicitSizeItemPrivate &dd, QQuickItem *parent)\n     : QQuickItem(dd, parent)\n {\n }\n \n-\n-void QQuickImplicitSizePaintedItemPrivate::implicitWidthChanged()\n-{\n-    Q_Q(QQuickImplicitSizePaintedItem);\n-    emit q->implicitWidthChanged();\n-}\n-\n-void QQuickImplicitSizePaintedItemPrivate::implicitHeightChanged()\n-{\n-    Q_Q(QQuickImplicitSizePaintedItem);\n-    emit q->implicitHeightChanged();\n-}\n-\n-QQuickImplicitSizePaintedItem::QQuickImplicitSizePaintedItem(QQuickItem *parent)\n-    : QQuickPaintedItem(*(new QQuickImplicitSizePaintedItemPrivate), parent)\n-{\n-}\n-\n-QQuickImplicitSizePaintedItem::QQuickImplicitSizePaintedItem(QQuickImplicitSizePaintedItemPrivate &dd, QQuickItem *parent)\n-    : QQuickPaintedItem(dd, parent)\n-{\n-}\n-\n QT_END_NAMESPACE\n"", ""qquickimplicitsizeitem_p.h"": ""@@ -56,9 +56,6 @@ class Q_AUTOTEST_EXPORT QQuickImplicitSizeItem : public QQuickItem\n     Q_PROPERTY(qreal implicitWidth READ implicitWidth NOTIFY implicitWidthChanged)\n     Q_PROPERTY(qreal implicitHeight READ implicitHeight NOTIFY implicitHeightChanged)\n \n-public:\n-    QQuickImplicitSizeItem(QQuickItem *parent = 0);\n-\n protected:\n     QQuickImplicitSizeItem(QQuickImplicitSizeItemPrivate &dd, QQuickItem *parent);\n \n@@ -71,29 +68,6 @@ private:\n     Q_DECLARE_PRIVATE(QQuickImplicitSizeItem)\n };\n \n-class QQuickImplicitSizePaintedItemPrivate;\n-class Q_AUTOTEST_EXPORT QQuickImplicitSizePaintedItem : public QQuickPaintedItem\n-{\n-    Q_OBJECT\n-    Q_PROPERTY(qreal implicitWidth READ implicitWidth NOTIFY implicitWidthChanged)\n-    Q_PROPERTY(qreal implicitHeight READ implicitHeight NOTIFY implicitHeightChanged)\n-\n-public:\n-    QQuickImplicitSizePaintedItem(QQuickItem *parent = 0);\n-\n-protected:\n-    QQuickImplicitSizePaintedItem(QQuickImplicitSizePaintedItemPrivate &dd, QQuickItem *parent);\n-    virtual void drawContents(QPainter *, const QRect &) {};\n-\n-Q_SIGNALS:\n-    void implicitWidthChanged();\n-    void implicitHeightChanged();\n-\n-private:\n-    Q_DISABLE_COPY(QQuickImplicitSizePaintedItem)\n-    Q_DECLARE_PRIVATE(QQuickImplicitSizePaintedItem)\n-};\n-\n QT_END_NAMESPACE\n \n QT_END_HEADER\n"", ""qquickimplicitsizeitem_p_p.h"": ""@@ -73,20 +73,6 @@ public:\n     virtual void implicitHeightChanged();\n };\n \n-\n-class QQuickImplicitSizePaintedItemPrivate : public QQuickPaintedItemPrivate\n-{\n-    Q_DECLARE_PUBLIC(QQuickImplicitSizePaintedItem)\n-\n-public:\n-    QQuickImplicitSizePaintedItemPrivate()\n-    {\n-    }\n-\n-    virtual void implicitWidthChanged();\n-    virtual void implicitHeightChanged();\n-};\n-\n QT_END_NAMESPACE\n \n #endif // QQUICKIMPLICITSIZEITEM_P_H\n""}",deprecat,"refactor 
",deprecat;
6282.0,6282.0,deprecat ,Rohan McGovern [inactive],Updated submodules.,"Updated submodules.

Change-Id: Ic4705728344b26f28db617afc486938eae0dcc1b",['qtsensors'],"{""qtsensors"": ""@@ -1 +1 @@\n-Subproject commit 6f390c5d4abd460e80c6c07cc0c885d53db865c1\n+Subproject commit 10103b5649a8e0a0450f6de14635f0f07f52485d\n""}",resource,"merge 
",resource;
18375.0,18375.0,resource ,Chris Craig,"add error object to server validation signals, add debug stream operator","add error object to server validation signals, add debug stream operator

Change-Id: Iaf6c9b4ddab9d2532096830bcb87ca222549e435","['src/qtjsonschema/schemaerror.cpp', 'src/qtjsonschema/schemaerror.h', 'src/jsonserver.h', 'src/jsonserver.cpp']","{""jsonserver.cpp"": ""@@ -261,7 +261,7 @@ void JsonServer::receiveMessage(const QString &identifier, const QJsonObject &me\n         if (!m_inboundValidator->validateSchema(message))\n         {\n             if (validatorFlags().testFlag(WarnIfInvalid)) {\n-                emit inboundMessageValidationFailed(message);\n+                emit inboundMessageValidationFailed(message, m_inboundValidator->getLastError());\n             }\n             if (validatorFlags().testFlag(DropIfInvalid)) {\n                 return;\n@@ -373,7 +373,7 @@ bool JsonServer::send(const QString &identifier, const QJsonObject &message)\n         if (!m_outboundValidator->validateSchema(message))\n         {\n             if (validatorFlags().testFlag(WarnIfInvalid)) {\n-                emit outboundMessageValidationFailed(message);\n+                emit outboundMessageValidationFailed(message, m_outboundValidator->getLastError());\n             }\n             if (validatorFlags().testFlag(DropIfInvalid)) {\n                 return false;\n@@ -407,7 +407,7 @@ void JsonServer::broadcast(const QJsonObject &message)\n         if (!m_outboundValidator->validateSchema(message))\n         {\n             if (validatorFlags().testFlag(WarnIfInvalid)) {\n-                emit outboundMessageValidationFailed(message);\n+                emit outboundMessageValidationFailed(message, m_outboundValidator->getLastError());\n             }\n             if (validatorFlags().testFlag(DropIfInvalid)) {\n                 return;\n"", ""jsonserver.h"": ""@@ -50,6 +50,7 @@\n class QLocalServer;\n \n #include \""jsonstream-global.h\""\n+#include \""schemaerror.h\""\n \n QT_BEGIN_NAMESPACE_JSONSTREAM\n \n@@ -107,8 +108,8 @@ signals:\n     void messageReceived(const QString &identifier, const QJsonObject &message);\n     void authorizationFailed();\n \n-    void inboundMessageValidationFailed(const QJsonObject &message);\n-    void outboundMessageValidationFailed(const QJsonObject &message);\n+    void inboundMessageValidationFailed(const QJsonObject &message, const QtAddOn::JsonStream::SchemaError &error);\n+    void outboundMessageValidationFailed(const QJsonObject &message, const QtAddOn::JsonStream::SchemaError &error);\n \n protected slots:\n     virtual void handleClientAuthorized(const QString &identifier);\n"", ""schemaerror.cpp"": ""@@ -42,6 +42,7 @@\n #include \""schemaerror.h\""\n \n #include <QStringList>\n+#include <QDebug>\n \n QT_BEGIN_NAMESPACE_JSONSTREAM\n \n@@ -124,4 +125,10 @@ QList<SchemaError> SchemaError::subErrors() const\n     return errors;\n }\n \n+QDebug operator <<(QDebug dbg, const SchemaError &e)\n+{\n+    dbg << \""SchemaError(\"" << e.m_data << \"")\"";\n+    return dbg;\n+}\n+\n QT_END_NAMESPACE_JSONSTREAM\n"", ""schemaerror.h"": ""@@ -85,6 +85,8 @@ public:\n     static const QString kErrorPrefixStr;\n \n private:\n+    friend Q_ADDON_JSONSTREAM_EXPORT QDebug operator<<(QDebug, const SchemaError &);\n+\n     QJsonObject m_data;\n };\n \n""}",feature,"feature, bug 
",bug;
22356.0,22356.0,feature,Oswald Buddenhagen,add $$format_number() function,"add $$format_number() function

Change-Id: I04266c1f5fb72af94073f3f508cee59085e365b6",['qmake/project.cpp'],"{""project.cpp"": ""@@ -78,7 +78,7 @@ QT_BEGIN_NAMESPACE\n \n //expand functions\n enum ExpandFunc { E_MEMBER=1, E_FIRST, E_LAST, E_CAT, E_FROMFILE, E_EVAL, E_LIST,\n-                  E_SPRINTF, E_JOIN, E_SPLIT, E_BASENAME, E_DIRNAME, E_SECTION,\n+                  E_SPRINTF, E_FORMAT_NUMBER, E_JOIN, E_SPLIT, E_BASENAME, E_DIRNAME, E_SECTION,\n                   E_FIND, E_SYSTEM, E_UNIQUE, E_QUOTE, E_ESCAPE_EXPAND,\n                   E_UPPER, E_LOWER, E_FILES, E_PROMPT, E_RE_ESCAPE, E_VAL_ESCAPE, E_REPLACE,\n                   E_SIZE, E_SORT_DEPENDS, E_RESOLVE_DEPENDS, E_ENUMERATE_VARS, E_SHADOWED };\n@@ -96,6 +96,7 @@ QHash<QString, ExpandFunc> qmake_expandFunctions()\n         qmake_expand_functions->insert(\""eval\"", E_EVAL);\n         qmake_expand_functions->insert(\""list\"", E_LIST);\n         qmake_expand_functions->insert(\""sprintf\"", E_SPRINTF);\n+        qmake_expand_functions->insert(\""format_number\"", E_FORMAT_NUMBER);\n         qmake_expand_functions->insert(\""join\"", E_JOIN);\n         qmake_expand_functions->insert(\""split\"", E_SPLIT);\n         qmake_expand_functions->insert(\""basename\"", E_BASENAME);\n@@ -2017,6 +2018,71 @@ QMakeProject::doProjectExpand(QString func, QList<QStringList> args_list,\n             ret = split_value_list(tmp);\n         }\n         break; }\n+    case E_FORMAT_NUMBER:\n+        if (args.count() != 2) {\n+            fprintf(stderr, \""%s:%d: format_number(number, options...) requires two arguments.\\n\"",\n+                    parser.file.toLatin1().constData(), parser.line_no);\n+        } else {\n+            int ibase = 10;\n+            int obase = 10;\n+            int width = 0;\n+            bool zeropad = false;\n+            bool leftalign = false;\n+            enum { DefaultSign, PadSign, AlwaysSign } sign = DefaultSign;\n+            foreach (const QString &opt, split_value_list(args.at(1))) {\n+                if (opt.startsWith(QLatin1String(\""ibase=\""))) {\n+                    ibase = opt.mid(6).toInt();\n+                } else if (opt.startsWith(QLatin1String(\""obase=\""))) {\n+                    obase = opt.mid(6).toInt();\n+                } else if (opt.startsWith(QLatin1String(\""width=\""))) {\n+                    width = opt.mid(6).toInt();\n+                } else if (opt == QLatin1String(\""zeropad\"")) {\n+                    zeropad = true;\n+                } else if (opt == QLatin1String(\""padsign\"")) {\n+                    sign = PadSign;\n+                } else if (opt == QLatin1String(\""alwayssign\"")) {\n+                    sign = AlwaysSign;\n+                } else if (opt == QLatin1String(\""leftalign\"")) {\n+                    leftalign = true;\n+                } else {\n+                    fprintf(stderr, \""%s:%d: format_number: invalid format option.\\n\"",\n+                            parser.file.toLatin1().constData(), parser.line_no);\n+                    break;\n+                }\n+            }\n+            if (args.at(0).contains(QLatin1Char('.'))) {\n+                fprintf(stderr, \""%s:%d: format_number: floats are currently not supported.\\n\"",\n+                        parser.file.toLatin1().constData(), parser.line_no);\n+                break;\n+            }\n+            bool ok;\n+            qlonglong num = args.at(0).toLongLong(&ok, ibase);\n+            if (!ok) {\n+                fprintf(stderr, \""%s:%d: format_number: malformed number %s for base %d.\\n\"",\n+                        parser.file.toLatin1().constData(), parser.line_no,\n+                        args.at(0).toLatin1().constData(), ibase);\n+                break;\n+            }\n+            QString outstr;\n+            if (num < 0) {\n+                num = -num;\n+                outstr = QLatin1Char('-');\n+            } else if (sign == AlwaysSign) {\n+                outstr = QLatin1Char('+');\n+            } else if (sign == PadSign) {\n+                outstr = QLatin1Char(' ');\n+            }\n+            QString numstr = QString::number(num, obase);\n+            int space = width - outstr.length() - numstr.length();\n+            if (space <= 0)\n+                outstr += numstr;\n+            else if (leftalign)\n+                outstr += numstr + QString(space, QLatin1Char(' '));\n+            else\n+                outstr += QString(space, zeropad ? QLatin1Char('0') : QLatin1Char(' ')) + numstr;\n+            ret += outstr;\n+        }\n+        break;\n     case E_JOIN: {\n         if(args.count() < 1 || args.count() > 4) {\n             fprintf(stderr, \""%s:%d: join(var, glue, before, after) requires four\""\n""}",feature,"feature 
",feature;
21257.0,21257.0,feature ,Pasi Pentikäinen,Symbian: drop OpenGL ES in non-supported hardware,"Symbian: drop OpenGL ES in non-supported hardware

When hardware configuration has no OpenGL ES 2 support indicated, leave
OpenGL ES out of Qt compilation alltogether.

Task-number: ou1cimx1#987609
Change-Id: If43a8de059596fbdb52c97535436c441760c97ab
Reviewed-by: Gareth Stockwell <ext-gareth.stockwell@nokia.com>
Reviewed-by: Jani Hautakangas <jani.hautakangas@nokia.com>
(cherry picked from commit 327fa27f7d06d6328df2716eb7d78916fd0938cf)","['src/s60installs/qt.iby', 'config.profiles/symbian/bld.inf']","{""bld.inf"": ""@@ -119,5 +119,12 @@ translations/qt_zh_TW.ts       /epoc32/include/platform/qt/translations/\n PRJ_EXTENSIONS\n START EXTENSION qt/qtconfig\n OPTION QT_ROOT ..\n-OPTION OPTIONS -opensource -confirm-license -openvg -opengl es2 -script -no-scripttools -no-webkit -make make -graphicssystem openvg -phonon -phonon-backend -usedeffiles -dont-process -nomake examples -nomake demos -nomake tools -audio-backend -fpu softvfp+vfpv2 -debug -debug-and-release\n+\n+#ifdef VSW_GSW_HAVE_OPENGL_ES2\n+#  define QT_OPENGL_ES_CONFIG -opengl es2\n+#else\n+#  define QT_OPENGL_ES_CONFIG\n+#endif\n+\n+OPTION OPTIONS -opensource -confirm-license -openvg QT_OPENGL_ES_CONFIG -script -no-scripttools -no-webkit -make make -graphicssystem openvg -phonon -phonon-backend -usedeffiles -dont-process -nomake examples -nomake demos -nomake tools -audio-backend -fpu softvfp+vfpv2 -debug -debug-and-release\n END\n"", ""qt.iby"": ""@@ -19,7 +19,10 @@ file=ABI_DIR\\BUILD_DIR\\phonon.dll            SHARED_LIB_DIR\\phonon.dll\n file=ABI_DIR\\BUILD_DIR\\QtMultimedia.dll      SHARED_LIB_DIR\\QtMultimedia.dll\n file=ABI_DIR\\BUILD_DIR\\QtXmlPatterns.dll     SHARED_LIB_DIR\\QtXmlPatterns.dll\n file=ABI_DIR\\BUILD_DIR\\QtDeclarative.dll     SHARED_LIB_DIR\\QtDeclarative.dll\n+\n+#ifdef VSW_GSW_HAVE_OPENGL_ES2\n file=ABI_DIR\\BUILD_DIR\\QtOpenGL.dll          SHARED_LIB_DIR\\QtOpenGL.dll\n+#endif\n \n // imageformats\n file=ABI_DIR\\BUILD_DIR\\qgif.dll              SHARED_LIB_DIR\\qgif.dll\n""}",resource,"bug,feature 
",resource;
328.0,328.0,resource,Jiang Jiang,Correct antialias disabling logic for Core Text,"Correct antialias disabling logic for Core Text

We should always turn antialias off when QFont::NoAntialias being
passed in styleStrategy. That corrects some QStaticText tests.

Change-Id: Iaffc5f3bb7f501dcb648cab41a8b6ffcf93f90ae",['src/gui/text/qfontengine_coretext.mm'],"{""qfontengine_coretext.mm"": ""@@ -745,9 +745,8 @@ QImage QCoreTextFontEngine::imageForGlyph(glyph_t glyph, QFixed subPixelPosition\n                                              8, im.bytesPerLine(), colorspace,\n                                              cgflags);\n     CGContextSetFontSize(ctx, fontDef.pixelSize);\n-    CGContextSetShouldAntialias(ctx, aa ||\n-                                (fontDef.pointSize > qt_antialiasing_threshold\n-                                 && !(fontDef.styleStrategy & QFont::NoAntialias)));\n+    CGContextSetShouldAntialias(ctx, (aa || fontDef.pointSize > qt_antialiasing_threshold)\n+                                 && !(fontDef.styleStrategy & QFont::NoAntialias));\n     CGContextSetShouldSmoothFonts(ctx, aa);\n     CGAffineTransform oldTextMatrix = CGContextGetTextMatrix(ctx);\n     CGAffineTransform cgMatrix = CGAffineTransformMake(1, 0, 0, 1, 0, 0);\n""}",bug,"bug 
",refactor;resource;test;
4637.0,4637.0,bug,"NOT IN USE, DO NOT ADD (was Bradley T. Hughes)",Don't call ref() in QByteArray::QByteArray(),"Don't call ref() in QByteArray::QByteArray()

The call is unnecessary; it does nothing since the shared_null ref count
is negative.

Change-Id: I0d0c35a554e4fc5b734a25dab06f04bee7a9ae24",['src/corelib/tools/qbytearray.h'],"{""qbytearray.h"": ""@@ -402,7 +402,7 @@ public:\n     inline DataPtr &data_ptr() { return d; }\n };\n \n-inline QByteArray::QByteArray(): d(const_cast<Data *>(&shared_null.ba)) { d->ref.ref(); }\n+inline QByteArray::QByteArray(): d(const_cast<Data *>(&shared_null.ba)) { }\n inline QByteArray::~QByteArray() { if (!d->ref.deref()) qFree(d); }\n inline int QByteArray::size() const\n { return d->size; }\n""}",deprecat,"bug, refactor 
",others;
12808.0,12808.0,deprecat,Wolf-Michael Bolle,Get unit tests to work.,"Get unit tests to work.

Change-Id: I0633cca7276f727b99b5675389b9ede3c50733d0","['tests/auto/qmimedatabase/qmimedatabase-xml/qmimedatabase-xml.pro', 'tests/auto/qmimetype/qmimetype.pro']","{""qmimedatabase-xml.pro"": ""@@ -30,7 +30,7 @@ contains(QMAKE_CXX, --sysroot): {\n \n     QMAKE_EXTRA_TARGETS += check\n     check.depends = $$TARGET\n-    check.commands = ./$$TARGET -xunitxml -o $${TARGET}.xml\n+    check.commands = LD_LIBRARY_PATH=$$LD_LIBRARY_PATH:$$OUT_PWD/../../../../src/mimetypes ./$$TARGET -xunitxml -o $${TARGET}.xml\n }\n \n QMAKE_CXXFLAGS += -W -Wall -Wextra -Werror -Wshadow -Wno-long-long -Wnon-virtual-dtor\n"", ""qmimetype.pro"": ""@@ -21,7 +21,7 @@ HEADERS += tst_qmimetype.h\n \n QMAKE_EXTRA_TARGETS += check\n check.depends = $$TARGET\n-check.commands = ./$$TARGET -xunitxml -o $${TARGET}.xml\n+check.commands = LD_LIBRARY_PATH=$$LD_LIBRARY_PATH:$$OUT_PWD/../../../src/mimetypes ./$$TARGET -xunitxml -o $${TARGET}.xml\n \n exists($${TARGET}.xml): {\n     tests_results.files += $${TARGET}.xml\n""}",test,"test 
",resource;test;
12060.0,12060.0,test,Morten Johan Sørvig,Reduce PLATFORM_MAC usage in the configure script,"WIP: remove PLATFORM_MAC from configure

This variable is not set any more, all builds are
lighthouse/QPA builds.

Do one of two things: either remove the PLATFORM_MAC
code path or test on BUILD_ON_MAC instead.

Change-Id: I6037a1a5f79498d9e0b5c2607e3698319fc7f68f",['configure'],"{""configure"": ""@@ -188,7 +188,6 @@ PLATFORM_X11=no\n PLATFORM_QWS=no\n PLATFORM_QPA=yes\n BUILD_ON_MAC=no\n-PLATFORM_MAC=no\n if [ -d /System/Library/Frameworks/Carbon.framework ]; then\n     BUILD_ON_MAC=yes\n fi\n@@ -316,7 +315,6 @@ earlyArgParse()\n         embedded)\n             CFG_EMBEDDED=\""$VAL\""\n             PLATFORM_X11=no\n-            PLATFORM_MAC=no\n             PLATFORM_QWS=yes\n             PLATFORM_QPA=no\n             ;;\n@@ -325,7 +323,6 @@ earlyArgParse()\n             if [ \""$PLATFORM_QPA\"" != \""no\"" ]; then\n                 if [ \""$PLATFORM_QPA\"" = \""maybe\"" ]; then\n                     PLATFORM_X11=no\n-                    PLATFORM_MAC=no\n                     PLATFORM_QWS=no\n                     PLATFORM_QPA=yes\n                 fi\n@@ -337,7 +334,6 @@ earlyArgParse()\n         nacl)\n             echo \""Using NaCl at $VAL.\""\n             PLATFORM_X11=no\n-            PLATFORM_MAC=no\n             PLATFORM_QWS=no\n             CFG_NACL_PATH=$VAL\n             CFG_EMBEDDED=nacl\n@@ -390,17 +386,14 @@ if [ \""$CFG_NOKIA\"" = \""yes\"" ]; then\n     Edition=\""NokiaInternalBuild\""\n     EditionString=\""Nokia Internal Build\""\n     QT_EDITION=\""QT_EDITION_OPENSOURCE\""\n-    [ \""$PLATFORM_MAC\"" = \""maybe\"" ] && PLATFORM_MAC=yes\n elif [ -f \""$relpath\""/LICENSE.PREVIEW.COMMERCIAL ] && [ $COMMERCIAL_USER = \""yes\"" ]; then\n     # Commercial preview release\n-    [ \""$PLATFORM_MAC\"" = \""maybe\"" ] && PLATFORM_MAC=yes\n     Licensee=\""Preview\""\n     Edition=\""Preview\""\n     QT_EDITION=\""QT_EDITION_DESKTOP\""\n     LicenseType=\""Technology Preview\""\n elif [ $COMMERCIAL_USER = \""yes\"" ]; then\n     # one of commercial editions\n-    [ \""$PLATFORM_MAC\"" = \""maybe\"" ] && PLATFORM_MAC=yes\n     [ \""$PLATFORM_QPA\"" = \""maybe\"" ] && PLATFORM_QPA=no\n     [ \""$PLATFORM_QWS\"" = \""maybe\"" ] && PLATFORM_QWS=no\n \n@@ -495,7 +488,7 @@ elif [ $COMMERCIAL_USER = \""yes\"" ]; then\n \t    ;;\n     esac\n     ### EMBEDDED_QPA logic missing ###\n-    case \""$PlatformCode,$PLATFORM_MAC,$PLATFORM_QWS\"" in\n+    case \""$PlatformCode,$PLATFORM_QWS\"" in\n         X9,* | XC,* | XU,* | XW,* | XM,*)\n             # Qt All-OS\n             LICENSE_EXTENSION=\""-ALLOS\""\n@@ -514,7 +507,6 @@ elif [ $COMMERCIAL_USER = \""yes\"" ]; then\n             ;;\n         *)\n             Platform=Linux/X11\n-            [ \""$PLATFORM_MAC\"" = \""yes\"" ] && Platform='Mac OS X'\n             [ \""$PLATFORM_QWS\"" = \""yes\"" ] && Platform='Embedded Linux'\n             echo\n             echo \""You are not licensed for the $Platform platform.\""\n@@ -598,7 +590,6 @@ elif [ $COMMERCIAL_USER = \""yes\"" ]; then\n     fi\n elif [ $COMMERCIAL_USER = \""no\"" ]; then\n     # Open Source edition - may only be used under the terms of the GPL or LGPL.\n-    [ \""$PLATFORM_MAC\"" = \""maybe\"" ] && PLATFORM_MAC=yes\n     Licensee=\""Open Source\""\n     Edition=\""OpenSource\""\n     EditionString=\""Open Source\""\n@@ -797,7 +788,6 @@ CFG_RPATH=yes\n CFG_FRAMEWORK=auto\n MAC_CONFIG_TEST_COMMANDLINE=  # used to make the configure tests run with the correct arch's and SDK settings\n CFG_MAC_DWARF2=auto\n-CFG_MAC_XARCH=auto\n CFG_MAC_HARFBUZZ=no\n CFG_SXE=no\n CFG_PREFIX_INSTALL=yes\n@@ -1307,14 +1297,12 @@ while [ \""$#\"" -gt 0 ]; do\n     embedded)\n         CFG_EMBEDDED=\""$VAL\""\n         PLATFORM_X11=no\n-        PLATFORM_MAC=no\n         PLATFORM_QWS=yes\n         PLATFORM_QPA=no\n         ;;\n     embedded-lite|qpa)\n         CFG_EMBEDDED=\""no\""\n         PLATFORM_X11=no\n-        PLATFORM_MAC=no\n         PLATFORM_QWS=no\n         PLATFORM_QPA=yes\n         ;;\n@@ -1399,12 +1387,11 @@ while [ \""$#\"" -gt 0 ]; do\n         ;;\n     x11)\n         PLATFORM_QPA=no\n-        PLATFORM_MAC=no\n         PLATFORM_QWS=no\n         PLATFORM_X11=yes\n         ;;\n     sdk)\n-        if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+        if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n             CFG_SDK=\""$VAL\""\n         else\n             UNKNOWN_OPT=yes\n@@ -1424,7 +1411,7 @@ while [ \""$#\"" -gt 0 ]; do\n         CFG_HOST_ARCH=$VAL\n         ;;\n     harfbuzz)\n-        if [ \""$PLATFORM_MAC\"" = \""yes\"" ] && [ \""$VAL\"" = \""yes\"" ]; then\n+        if [ \""$BUILD_ON_MAC\"" = \""yes\"" ] && [ \""$VAL\"" = \""yes\"" ]; then\n             CFG_MAC_HARFBUZZ=\""$VAL\""\n         else\n             UNKNOWN_OPT=yes\n@@ -1432,7 +1419,7 @@ while [ \""$#\"" -gt 0 ]; do\n         ;;\n \n     framework)\n-        if [ \""$PLATFORM_MAC\"" = \""yes\"" ] || [ \""$PLATFORM_QPA\"" = \""yes\"" ]; then\n+        if [ \""$BUILD_ON_MAC\"" = \""yes\"" ] || [ \""$PLATFORM_QPA\"" = \""yes\"" ]; then\n             CFG_FRAMEWORK=\""$VAL\""\n         else\n             UNKNOWN_OPT=yes\n@@ -2268,7 +2255,7 @@ while [ \""$#\"" -gt 0 ]; do\n         l_FLAGS=\""$l_FLAGS -l\\\""${VAL}\\\""\""\n         ;;\n     add_fpath)\n-        if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+        if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n             L_FLAGS=\""$L_FLAGS -F\\\""${VAL}\\\""\""\n             I_FLAGS=\""$I_FLAGS -F\\\""${VAL}\\\""\""\n         else\n@@ -2276,7 +2263,7 @@ while [ \""$#\"" -gt 0 ]; do\n         fi\n         ;;\n     add_framework)\n-        if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+        if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n             l_FLAGS=\""$l_FLAGS -framework \\\""${VAL}\\\""\""\n         else\n             UNKNOWN_OPT=yes\n@@ -2639,7 +2626,7 @@ if [ -z \""$PLATFORM\"" ]; then\n     PLATFORM_NOTES=\n     case \""$UNAME_SYSTEM:$UNAME_RELEASE\"" in\n      Darwin:*)\n-        if [ \""$PLATFORM_MAC\"" = \""yes\"" -o \""$PLATFORM_QPA\"" = \""yes\"" ]; then\n+        if [ \""$BUILD_ON_MAC\"" = \""yes\"" -o \""$PLATFORM_QPA\"" = \""yes\"" ]; then\n           PLATFORM=macx-g++\n         # PLATFORM=macx-xcode\n         else\n@@ -2827,7 +2814,7 @@ if [ \""$PLATFORM\"" != \""$XPLATFORM\"" ]; then\n     QMAKE_CONFIG=\""$QMAKE_CONFIG cross_compile\""\n fi\n \n-if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n    if [ `basename $QMAKESPEC` = \""macx-xcode\"" ] || [ `basename $XQMAKESPEC` = \""macx-xcode\"" ]; then\n       echo >&2\n       echo \""   Platform 'macx-xcode' should not be used when building Qt/Mac.\"" >&2\n@@ -3089,8 +3076,6 @@ if [ \""$PLATFORM\"" != \""$XPLATFORM\"" -a \""$CFG_EMBEDDED\"" != \""no\"" ]; then\n     esac\n elif [ \""$XPLATFORM_MINGW\"" = \""yes\"" ]; then\n     [ -z \""$CFG_ARCH\"" ] && CFG_ARCH=\""windows\""\n-elif [ \""$PLATFORM_MAC\"" = \""yes\"" ] || [ -z \""$CFG_ARCH\"" ]; then\n-    CFG_ARCH=$CFG_HOST_ARCH\n fi\n \n # for compatibility\n@@ -3254,7 +3239,7 @@ if [ \""$CFG_PRECOMPILE\"" = \""auto\"" ]; then\n fi\n \n #auto-detect DWARF2 on the mac\n-if [ \""$PLATFORM_MAC\"" = \""yes\"" ] && [ \""$CFG_MAC_DWARF2\"" = \""auto\"" ]; then\n+if [ \""$BUILD_ON_MAC\"" = \""yes\"" ] && [ \""$CFG_MAC_DWARF2\"" = \""auto\"" ]; then\n     if \""$mactests/dwarf2.test\"" \""$TEST_COMPILER\"" \""$OPT_VERBOSE\"" \""$mactests\"" ; then\n         CFG_MAC_DWARF2=no\n     else\n@@ -3318,13 +3303,6 @@ if [ \""$PLATFORM_QWS\"" = \""yes\"" ] && [ \""$CFG_OPENGL\"" = \""auto\"" ]; then\n         CFG_OPENGL=no\n fi\n \n-# mac\n-if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n-    if [ \""$CFG_OPENGL\"" = \""auto\"" ] || [ \""$CFG_OPENGL\"" = \""yes\"" ]; then\n-        CFG_OPENGL=desktop\n-    fi\n-fi\n-\n # find the default framework value\n if [ \""$CFG_ARCH\"" = \""macosx\"" ]; then\n     if [ \""$CFG_FRAMEWORK\"" = \""auto\"" ]; then\n@@ -3339,18 +3317,6 @@ else\n     CFG_FRAMEWORK=no\n fi\n \n-# Print a warning if configure was called with the 10.4u SDK option on Snow Leopard\n-# with the default mkspec. The 10.4u SDK does not support gcc 4.2.\n-if [ \""$PLATFORM_MAC\"" = \""yes\"" ] && [ '!' -z \""$CFG_SDK\"" ]; then\n-    # get the darwin version. 10.0.0 and up means snow leopard.\n-    VERSION=`uname -r | tr '.' ' ' | awk '{print $1}'`\n-    if [ \""$VERSION\"" -gt 9 ] && [ \""$CFG_SDK\"" == \""/Developer/SDKs/MacOSX10.4u.sdk/\"" ] && [ \""$PLATFORM\"" == \""macx-g++\"" ]; then\n-        echo\n-        echo \""WARNING: The 10.4u SDK does not support gcc 4.2. Configure with -platform macx-g++40. \""\n-        echo\n-    fi\n-fi\n-\n # x11 tests are done after qmake is built\n \n \n@@ -3388,7 +3354,7 @@ QT_INSTALL_PREFIX=`\""$relpath/config.tests/unix/makeabs\"" \""$QT_INSTALL_PREFIX\""`\n \n if [ -z \""$QT_INSTALL_DOCS\"" ]; then #default\n     if [ \""$CFG_PREFIX_INSTALL\"" = \""no\"" ]; then\n-        if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+        if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n             QT_INSTALL_DOCS=\""/Developer/Documentation/Qt\""\n         fi\n     fi\n@@ -3399,7 +3365,7 @@ QT_INSTALL_DOCS=`\""$relpath/config.tests/unix/makeabs\"" \""$QT_INSTALL_DOCS\""`\n \n if [ -z \""$QT_INSTALL_HEADERS\"" ]; then #default\n     if [ \""$CFG_PREFIX_INSTALL\"" = \""no\"" ]; then\n-        if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+        if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n             if [ \""$CFG_FRAMEWORK\"" = \""yes\"" ]; then\n                 QT_INSTALL_HEADERS=\n             fi\n@@ -3412,7 +3378,7 @@ QT_INSTALL_HEADERS=`\""$relpath/config.tests/unix/makeabs\"" \""$QT_INSTALL_HEADERS\""`\n \n if [ -z \""$QT_INSTALL_LIBS\"" ]; then #default\n     if [ \""$CFG_PREFIX_INSTALL\"" = \""no\"" ]; then\n-        if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+        if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n             if [ \""$CFG_FRAMEWORK\"" = \""yes\"" ]; then\n                 QT_INSTALL_LIBS=\""/Libraries/Frameworks\""\n             fi\n@@ -3424,7 +3390,7 @@ QT_INSTALL_LIBS=`\""$relpath/config.tests/unix/makeabs\"" \""$QT_INSTALL_LIBS\""`\n \n if [ -z \""$QT_INSTALL_BINS\"" ]; then #default\n     if [ \""$CFG_PREFIX_INSTALL\"" = \""no\"" ]; then\n-        if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+        if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n             QT_INSTALL_BINS=\""/Developer/Applications/Qt\""\n         fi\n     fi\n@@ -3434,7 +3400,7 @@ QT_INSTALL_BINS=`\""$relpath/config.tests/unix/makeabs\"" \""$QT_INSTALL_BINS\""`\n \n if [ -z \""$QT_INSTALL_PLUGINS\"" ]; then #default\n     if [ \""$CFG_PREFIX_INSTALL\"" = \""no\"" ]; then\n-        if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+        if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n             QT_INSTALL_PLUGINS=\""/Developer/Applications/Qt/plugins\""\n         fi\n     fi\n@@ -3444,7 +3410,7 @@ QT_INSTALL_PLUGINS=`\""$relpath/config.tests/unix/makeabs\"" \""$QT_INSTALL_PLUGINS\""`\n \n if [ -z \""$QT_INSTALL_IMPORTS\"" ]; then #default\n     if [ \""$CFG_PREFIX_INSTALL\"" = \""no\"" ]; then\n-        if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+        if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n             QT_INSTALL_IMPORTS=\""/Developer/Applications/Qt/imports\""\n         fi\n     fi\n@@ -3463,7 +3429,7 @@ fi\n QT_INSTALL_TRANSLATIONS=`\""$relpath/config.tests/unix/makeabs\"" \""$QT_INSTALL_TRANSLATIONS\""`\n \n if [ -z \""$QT_INSTALL_SETTINGS\"" ]; then #default\n-    if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+    if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n         QT_INSTALL_SETTINGS=/Library/Preferences/Qt\n     else\n         QT_INSTALL_SETTINGS=/etc/xdg\n@@ -3473,7 +3439,7 @@ QT_INSTALL_SETTINGS=`\""$relpath/config.tests/unix/makeabs\"" \""$QT_INSTALL_SETTINGS\""\n \n if [ -z \""$QT_INSTALL_EXAMPLES\"" ]; then #default\n     if [ \""$CFG_PREFIX_INSTALL\"" = \""no\"" ]; then\n-        if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+        if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n             QT_INSTALL_EXAMPLES=\""/Developer/Examples/Qt\""\n         fi\n     fi\n@@ -3484,7 +3450,7 @@ QT_INSTALL_EXAMPLES=`\""$relpath/config.tests/unix/makeabs\"" \""$QT_INSTALL_EXAMPLES\""\n #tests\n if [ -z \""$QT_INSTALL_TESTS\"" ]; then #default\n     if [ \""$CFG_PREFIX_INSTALL\"" = \""no\"" ]; then\n-        if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+        if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n             QT_INSTALL_TESTS=\""/Developer/Tests/Qt\""\n         fi\n     fi\n@@ -4118,7 +4084,7 @@ Qt/X11 only:\n EOF\n fi\n \n-if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n     cat << EOF\n \n Qt/Mac only:\n@@ -4277,8 +4243,6 @@ if [ \""$PLATFORM_QWS\"" = \""yes\"" ]; then\n     Platform=\""Qt for Embedded Linux\""\n elif [ \""$PLATFORM_QPA\"" = \""yes\"" ]; then\n     Platform=\""Qt Lighthouse\""\n-elif [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n-    Platform=\""Qt for Mac OS X\""\n elif [ \""$XPLATFORM_MINGW\"" = \""yes\"" ]; then\n     Platform=\""Qt for Windows\""\n elif [ '!' -z \""`getQMakeConf \\\""$XQMAKESPEC\\\"" | grep QMAKE_LIBS_X11 | awk '{print $3;}'`\"" ]; then\n@@ -5096,7 +5060,7 @@ for _SQLDR in $CFG_SQL_AVAILABLE; do\n         ;;\n         odbc)\n             if [ \""$CFG_SQL_odbc\"" != \""no\"" ]; then\n-                if ( [ \""$PLATFORM_MAC\"" != \""yes\"" ] || [ \""$XPLATFORM_MINGW\"" = \""yes\"" ] ) && \""$unixtests/compile.test\"" \""$XQMAKESPEC\"" \""$QMAKE_CONFIG\"" $OPT_VERBOSE \""$relpath\"" \""$outpath\"" config.tests/unix/odbc \""ODBC\"" $L_FLAGS $I_FLAGS $l_FLAGS $MAC_CONFIG_TEST_COMMANDLINE; then\n+                if ( [ \""$BUILD_ON_MAC\"" != \""yes\"" ] || [ \""$XPLATFORM_MINGW\"" = \""yes\"" ] ) && \""$unixtests/compile.test\"" \""$XQMAKESPEC\"" \""$QMAKE_CONFIG\"" $OPT_VERBOSE \""$relpath\"" \""$outpath\"" config.tests/unix/odbc \""ODBC\"" $L_FLAGS $I_FLAGS $l_FLAGS $MAC_CONFIG_TEST_COMMANDLINE; then\n                     if [ \""$CFG_SQL_odbc\"" = \""auto\"" ]; then\n                         CFG_SQL_odbc=plugin\n                     fi\n@@ -5883,7 +5847,7 @@ if [ \""$PLATFORM_X11\"" = \""yes\"" ]; then\n fi # X11\n \n \n-if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n     if [ \""$CFG_PHONON\"" != \""no\"" ]; then\n         # Always enable Phonon (unless it was explicitly disabled)\n         CFG_PHONON=yes\n@@ -6243,7 +6207,6 @@ fi\n \n # freetype support\n [ \""x$CFG_EMBEDDED\"" != \""xno\"" ] && CFG_LIBFREETYPE=\""$CFG_QWS_FREETYPE\""\n-[ \""x$PLATFORM_MAC\"" = \""xyes\"" ] && CFG_LIBFREETYPE=no\n [ \""$XPLATFORM_MINGW\"" = \""yes\"" ] && [ \""$CFG_LIBFREETYPE\"" = \""auto\"" ] && CFG_LIBFREETYPE=no\n if [ \""$CFG_LIBFREETYPE\"" = \""auto\"" ]; then\n     if \""$unixtests/compile.test\"" \""$XQMAKESPEC\"" \""$QMAKE_CONFIG\"" $OPT_VERBOSE \""$relpath\"" \""$outpath\"" config.tests/unix/freetype \""FreeType\"" $L_FLAGS $I_FLAGS $l_FLAGS $MAC_CONFIG_TEST_COMMANDLINE; then\n@@ -6256,7 +6219,7 @@ fi\n if [ \""$CFG_ENDIAN\"" = \""auto\"" ]; then\n     if [ \""$XPLATFORM_MINGW\"" = \""yes\"" ]; then\n         CFG_ENDIAN=\""Q_LITTLE_ENDIAN\""\n-    elif [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+    elif [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n         true #leave as auto\n     else\n         \""$unixtests/endian.test\"" \""$XQMAKESPEC\"" $OPT_VERBOSE \""$relpath\"" \""$outpath\""\n@@ -6277,7 +6240,7 @@ if [ \""$CFG_ENDIAN\"" = \""auto\"" ]; then\n fi\n \n if [ \""$CFG_HOST_ENDIAN\"" = \""auto\"" ]; then\n-    if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+    if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n \ttrue #leave as auto\n     else\n         \""$unixtests/endian.test\"" \""$QMAKESPEC\"" $OPT_VERBOSE \""$relpath\"" \""$outpath\""\n@@ -6836,7 +6799,7 @@ else\n fi\n \n \n-if [ \""x$PLATFORM_MAC\"" = \""xyes\"" ] && [ \""$XPLATFORM_MINGW\"" != \""yes\"" ]; then\n+if [ \""x$BUILD_ON_MAC\"" = \""xyes\"" ] && [ \""$XPLATFORM_MINGW\"" != \""yes\"" ]; then\n     #On Mac we implicitly link against libz, so we\n     #never use the 3rdparty stuff.\n     [ \""$CFG_ZLIB\"" = \""yes\"" ] && CFG_ZLIB=\""system\""\n@@ -7473,7 +7436,7 @@ if [ \""$CFG_FRAMEWORK\"" = \""yes\"" ]; then\n     echo \""#define QT_MAC_FRAMEWORK_BUILD\"" >>\""$outpath/src/corelib/global/qconfig.h.new\""\n fi\n \n-if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n     cat >>\""$outpath/src/corelib/global/qconfig.h.new\"" <<EOF\n #if defined(__LP64__)\n # define QT_POINTER_SIZE 8\n@@ -7831,11 +7794,6 @@ if [ '!' -z \""$CFG_SDK\"" ]; then\n    echo \""QMAKE_MAC_SDK = $CFG_SDK\"" >> \""$QTMODULE.tmp\""\n fi\n \n-# mac gcc -Xarch support\n-if [ \""$CFG_MAC_XARCH\"" = \""no\"" ]; then\n-   echo \""QMAKE_MAC_XARCH = no\"" >> \""$QTMODULE.tmp\""\n-fi\n-\n # cmdline args\n cat \""$QMAKE_VARS_FILE\"" >> \""$QTMODULE.tmp\""\n rm -f \""$QMAKE_VARS_FILE\"" 2>/dev/null\n@@ -7947,7 +7905,7 @@ EOF\n *) ;;\n esac\n \n-if [ \""$PLATFORM_MAC\"" = \""yes\"" ] && [ \""$CFG_MAC_DWARF2\"" = \""no\"" ]  && [ \""$CFG_WEBKIT\"" != \""no\"" ] && [ \""$CFG_DEBUG_RELEASE\"" = \""yes\"" ]; then\n+if [ \""$BUILD_ON_MAC\"" = \""yes\"" ] && [ \""$CFG_MAC_DWARF2\"" = \""no\"" ]  && [ \""$CFG_WEBKIT\"" != \""no\"" ] && [ \""$CFG_DEBUG_RELEASE\"" = \""yes\"" ]; then\n     cat <<EOF\n         WARNING: DWARF2 debug symbols are not enabled. Linking webkit\n         in debug mode will run out of memory on systems with 2GB or less.\n@@ -8149,7 +8107,7 @@ elif [ \""$CFG_OPENSSL\"" = \""linked\"" ]; then\n fi\n echo \""OpenSSL support ........ $CFG_OPENSSL $OPENSSL_LINKAGE\""\n echo \""Alsa support ........... $CFG_ALSA\""\n-if [ \""$PLATFORM_MAC\"" = \""yes\"" ]; then\n+if [ \""$BUILD_ON_MAC\"" = \""yes\"" ]; then\n     echo \""CoreWlan support ....... $CFG_COREWLAN\""\n fi\n echo \""ICD support ............ $CFG_ICD\""\n@@ -8180,7 +8138,7 @@ if [ \""$CFG_OPENSSL\"" = \""linked\"" ] && [ \""$OPENSSL_LIBS\"" = \""\"" ]; then\n     echo \""    OPENSSL_LIBS='-L/opt/ssl/lib -lssl -lcrypto' ./configure -openssl-linked\""\n     echo\n fi\n-if [ \""$PLATFORM_MAC\"" = \""yes\"" ] && [ \""$CFG_FRAMEWORK\"" = \""yes\"" ] && [ \""$CFG_DEBUG\"" = \""yes\"" ] && [ \""$CFG_DEBUG_RELEASE\"" = \""no\"" ]; then\n+if [ \""$BUILD_ON_MAC\"" = \""yes\"" ] && [ \""$CFG_FRAMEWORK\"" = \""yes\"" ] && [ \""$CFG_DEBUG\"" = \""yes\"" ] && [ \""$CFG_DEBUG_RELEASE\"" = \""no\"" ]; then\n     echo\n     echo \""Error: debug-only framework builds are not supported. Configure with -no-framework\""\n     echo \""if you want a pure debug build.\""\n""}",resource,"refactor
",deprecat;resource;test;
429.0,429.0,resource,Christiaan Janssen,"QmlProfiler: removed scrollbar, timeline stretches automatically","QmlProfiler: removed scrollbar, timeline stretches automatically

Change-Id: Ibc012d517556914e61ccbf58245a6d83cb4c8a80
Reviewed-by: Kai Koehne","['src/plugins/qmlprofiler/qml/MainView.qml', 'src/plugins/qmlprofiler/tracewindow.cpp', 'src/plugins/qmlprofiler/qml/qml.qrc', 'src/plugins/qmlprofiler/timelineview.cpp', 'src/plugins/qmlprofiler/qml/VerticalScrollbar.qml', 'src/plugins/qmlprofiler/qmlprofiler.pro']","{""MainView.qml"": ""@@ -152,14 +152,14 @@ Rectangle {\n         anchors.left: labels.right\n         anchors.bottom: canvas.top\n         contentWidth: view.totalWidth\n-        contentHeight: view.height\n+        contentHeight: height\n         flickableDirection: Flickable.HorizontalFlick\n \n         TimelineView {\n             id: view\n \n             width: flick.width;\n-            height: 50 * 5;\n+            height: flick.contentHeight;\n \n             startX: flick.contentX\n             onStartXChanged: {\n@@ -192,7 +192,8 @@ Rectangle {\n                         mouseArea.exited()\n                 }\n \n-                height: 50\n+                height: view.height / labels.rowCount\n+                y: type * view.height / labels.rowCount;\n                 gradient: Gradient {\n                     GradientStop { position: 0.0; color: myColor }\n                     GradientStop { position: 0.5; color: Qt.darker(myColor, 1.1) }\n@@ -241,20 +242,6 @@ Rectangle {\n         }\n     }\n \n-    VerticalScrollbar {\n-        id: verticalScrollbar\n-\n-        flickable: flick\n-        anchors.top: parent.top\n-        anchors.right : flick.right\n-        anchors.bottom : canvas.top\n-        anchors.topMargin: 1\n-        anchors.bottomMargin: 1\n-        anchors.rightMargin: 0\n-        anchors.leftMargin: 0\n-        width: 10\n-    }\n-\n     //popup showing the details for the hovered range\n     RangeDetails {\n         id: rangeDetails\n@@ -267,13 +254,16 @@ Rectangle {\n         y: -flick.contentY\n         height: flick.contentHeight\n \n+        property int rowCount: 5\n+\n         Column {\n+            id: col\n             //### change to use Repeater + Plotter.names?\n-            Label { text: \""Painting\"" }\n-            Label { text: \""Compiling\"" }\n-            Label { text: \""Creating\"" }\n-            Label { text: \""Binding\"" }\n-            Label { text: \""Signal Handler\"" }\n+            Label { text: \""Painting\""; height: labels.height/labels.rowCount}\n+            Label { text: \""Compiling\""; height: labels.height/labels.rowCount }\n+            Label { text: \""Creating\""; height: labels.height/labels.rowCount }\n+            Label { text: \""Binding\""; height: labels.height/labels.rowCount }\n+            Label { text: \""Signal Handler\""; height: labels.height/labels.rowCount }\n         }\n \n         //right border divider\n"", ""VerticalScrollbar.qml"": ""@@ -1,96 +0,0 @@\n-import QtQuick 1.0\n-\n-Item {\n-    property variant flickable: this;\n-    property int viewPosition: 0;\n-    property int viewSize: ( flickable.height>=0 ? flickable.height : 0 );\n-    property int contentSize: ( flickable.contentHeight >= 0 ? flickable.contentHeight : 0 );\n-\n-    id: verticalScrollbar\n-\n-    onViewPositionChanged: flickable.contentY = viewPosition;\n-    onViewSizeChanged: {\n-        if ((contentSize > viewSize) && (viewPosition > contentSize - viewSize))\n-            viewPosition = contentSize - viewSize;\n-    }\n-\n-    onContentSizeChanged:  {\n-        contentSizeDecreased();\n-    }\n-\n-    function contentSizeDecreased()  {\n-        if ((contentSize > viewSize) && (viewPosition > contentSize - viewSize))\n-            viewPosition = contentSize - viewSize;\n-    }\n-\n-    Rectangle {\n-        id: groove\n-        height: parent.height - 4\n-        width: 6\n-        color: \""#FFFFFF\""\n-        radius: 3\n-        border.width: 1\n-        border.color: \""#666666\""\n-        anchors.top: parent.top\n-        anchors.topMargin: 2\n-        anchors.bottom: parent.bottom\n-        anchors.bottomMargin: 2\n-        anchors.horizontalCenter: parent.horizontalCenter\n-        y: 2\n-    }\n-\n-    // the scrollbar\n-    Item {\n-        id: bar\n-        height: parent.height\n-        width: parent.width\n-        y: Math.floor( (verticalScrollbar.contentSize > 0 ? verticalScrollbar.viewPosition * verticalScrollbar.height / verticalScrollbar.contentSize : 0));\n-\n-        Rectangle {\n-            id: handle\n-            height: {\n-                if (verticalScrollbar.contentSize > 0) {\n-                    if (verticalScrollbar.viewSize > verticalScrollbar.contentSize || parent.height < 0) {\n-                        verticalScrollbar.visible = false;\n-                        return parent.height;\n-                    } else {\n-                        verticalScrollbar.visible = true;\n-                        return Math.floor(verticalScrollbar.viewSize / verticalScrollbar.contentSize  * parent.height);\n-                    }\n-                } else {\n-                    return 0;\n-                }\n-            }\n-\n-            width: parent.width\n-            y:0\n-            border.color: \""#666666\""\n-            border.width: 1\n-            radius: 3\n-\n-            gradient: Gradient {\n-                GradientStop { position: 0.20; color: \""#CCCCCC\"" }\n-                GradientStop { position: 0.23; color: \""#AAAAAA\"" }\n-                GradientStop { position: 0.85; color: \""#888888\"" }\n-            }\n-\n-            MouseArea {\n-                property int dragging:0;\n-                property int originalY:0;\n-\n-                anchors.fill: parent\n-                onPressed: { dragging = 1; originalY = mouse.y; }\n-                onReleased: { dragging = 0; }\n-                onPositionChanged: {\n-                    if (dragging) {\n-                        var newY = mouse.y - originalY + bar.y;\n-                        if (newY<0) newY=0;\n-                        if (newY>verticalScrollbar.height - handle.height)\n-                            newY=verticalScrollbar.height - handle.height;\n-                        verticalScrollbar.viewPosition = (newY * verticalScrollbar.contentSize / verticalScrollbar.height);\n-                    }\n-                }\n-            }\n-        }\n-    }\n-}\n"", ""qml.qrc"": ""@@ -12,6 +12,5 @@\n         <file>RecordButton.qml</file>\n         <file>ToolButton.qml</file>\n         <file>analyzer_category_small.png</file>\n-        <file>VerticalScrollbar.qml</file>\n     </qresource>\n </RCC>\n"", ""qmlprofiler.pro"": ""@@ -50,8 +50,7 @@ OTHER_FILES += \\\n     qml/RangeMover.qml \\\n     qml/RecordButton.qml \\\n     qml/ToolButton.qml \\\n-    qml/MainView.js \\\n-    qml/VerticalScrollbar.qml\n+    qml/MainView.js\n \n FORMS += \\\n     qmlprofilerattachdialog.ui\n"", ""timelineview.cpp"": ""@@ -221,7 +221,6 @@ void TimelineView::updateTimeline(bool updateStartX)\n             }\n             ctxt->setContextProperty(\""label\"", label);\n             ctxt->setContextProperty(\""type\"", type);\n-            item->setY(type*50);\n             item->setParentItem(this);\n         }\n         if (item) {\n"", ""tracewindow.cpp"": ""@@ -279,8 +279,8 @@ TraceWindow::TraceWindow(QWidget *parent)\n \n     setLayout(groupLayout);\n \n-    // Maximum height: 5 rows of 50 pixels + scrollbar of 50 pixels\n-//    setFixedHeight(300);\n+    // Minimum height: 5 rows of 20 pixels + scrollbar of 50 pixels + 20 pixels margin\n+    setMinimumHeight(170);\n }\n \n TraceWindow::~TraceWindow()\n""}",deprecat,"feature, refactor 
",deprecat;
21591.0,21591.0,deprecat ,Tobias Hunger,WelcomePage: Make welcome page more resilient,"WelcomePage: Make welcome page more resilient

Do not try to open non-existant project files when asked to open
an example.

Change-Id: Ibcd106a0a8354f98998e61cafa3f5cd2ce2844b0",['src/plugins/qtsupport/gettingstartedwelcomepage.cpp'],"{""gettingstartedwelcomepage.cpp"": ""@@ -401,6 +401,9 @@ void ExamplesWelcomePage::openProject(const QString &projectFile, const QStringL\n \n     QStringList filesToOpen = additionalFilesToOpen;\n     QFileInfo proFileInfo(proFile);\n+    if (!proFileInfo.exists())\n+        return;\n+\n     // If the Qt is a distro Qt on Linux, it will not be writable, hence compilation will fail\n     if (!proFileInfo.isWritable())\n         proFile = copyToAlternativeLocation(proFileInfo, filesToOpen, dependencies);\n""}",feature,"bug, feature 
",others;
15575.0,15575.0,feature,Tobias Hunger,Gcc: Fix isDirty of GccToolChainConfigWidget,"Gcc: Fix isDirty of GccToolChainConfigWidget

Change-Id: Ida9dc8cc9110ac8e993dada7c539bb0a6bb11361",['src/plugins/projectexplorer/gcctoolchain.cpp'],"{""gcctoolchain.cpp"": ""@@ -727,7 +727,8 @@ bool Internal::GccToolChainConfigWidget::isDirty() const\n     GccToolChain *tc = static_cast<GccToolChain *>(toolChain());\n     Q_ASSERT(tc);\n     return m_compilerCommand->fileName() != tc->compilerCommand()\n-            || m_abiWidget->currentAbi() != tc->targetAbi();\n+            || m_abiWidget->currentAbi() != tc->targetAbi()\n+            || debuggerCommand() != tc->debuggerCommand();\n }\n \n void Internal::GccToolChainConfigWidget::makeReadOnly()\n""}",bug,"bug 
",bug;resource;
2478.0,2478.0,bug,Sarah Jane Smith,Add fuel to lander example,"Add fuel to lander example

QTBUG-19687 - Fix picking for dynamically created Item3Ds

Fixed missing reference to forest.qrc.

Change-Id: I850ed03de3cdfdab56925253cbc1b8f078b523bf","['examples/quick3d/lander/qml/lander.qml', 'src/imports/threed/viewport.cpp', 'src/quick3d/qdeclarativeitem3d.cpp', 'tests/auto/qml3d/picking/tst_picking.qml', 'examples/quick3d/forest/forest.pro', 'src/imports/threed/viewport.h']","{""forest.pro"": ""@@ -6,9 +6,11 @@ CONFIG += qt warn_on\n SOURCES += main.cpp\n \n include(../../../qt3dquick_pkg_dep.pri)\n-include(../../../qml_pkg.pri)\n \n OTHER_FILES += \\\n     forest.rc\n \n RC_FILE = forest.rc\n+\n+RESOURCES += \\\n+    forest.qrc\n"", ""lander.qml"": ""@@ -60,10 +60,6 @@ Image {\n         anchors.fill: parent\n         visible: false\n \n-        Rectangle {\n-            id: fuelGauge\n-        }\n-\n         camera: Camera {\n             eye.x: cameraTarget.x\n             // Keep the lander and pad in view for reasonable values\n@@ -94,7 +90,8 @@ Image {\n \n             mesh: Mesh { source: \""meshes/lunar-landscape.obj\"" }\n \n-            // HACK.  There should be API for this\n+            // This is the top of the model, where we want the lander to land.\n+            // It would be nice if there was API for this\n             property real yMax : y + 3.6;\n         }\n \n@@ -121,18 +118,19 @@ Image {\n                 Rotation3D {\n                     Behavior on angle { NumberAnimation { duration: 200}}\n                     axis: Qt.vector3d(-1.0,0,0)\n-                    angle: gameLogic.zBoostInput * 50\n+                    angle: gameLogic.fuel > 0 ? gameLogic.zBoostInput * 50 : 0\n                 },\n                 Rotation3D {\n                     Behavior on angle { NumberAnimation { duration: 200}}\n                     axis: Qt.vector3d(0,0,1.0)\n-                    angle: gameLogic.xBoostInput * 50\n+                    angle: gameLogic.fuel > 0 ? gameLogic.xBoostInput * 50 : 0\n                 }\n             ]\n \n             // HACK.  There should be API for this\n             property real yMin: -0.37;\n-            property bool jetsVisible: true\n+            property bool jetsVisible: gameLogic.gameRunning &&\n+                                       gameLogic.fuel > 0.0\n             property real yBoostScaleFactor: (gameLogic.yboosting ? 1.3 : 0.8)\n             property real activeScaleFactor: 1.3\n \n@@ -171,6 +169,25 @@ Image {\n             }\n         }\n \n+        Rectangle {\n+            id: fuelGauge\n+            color: \""#333333\""\n+            anchors.left: parent.left\n+            anchors.bottom: parent.bottom\n+            anchors.top: parent.top\n+            width: 15\n+            visible: true\n+\n+            Rectangle {\n+                id: gauge\n+                anchors.bottom: fuelGauge.bottom\n+                anchors.horizontalCenter: parent.horizontalCenter\n+                height: fuelGauge.height * gameLogic.fuel;\n+                width: fuelGauge.width * 0.8\n+                color: Qt.rgba(1.0 -gameLogic.fuel,0.2,gameLogic.fuel)\n+            }\n+        }\n+\n         MouseArea {\n             id: gameInputPad\n             anchors.fill: parent\n@@ -203,6 +220,9 @@ Image {\n             // Game State\n             property int score : 0\n             property int hiScore : 0\n+            property bool gameRunning: false\n+            property real fuel : 1.0;\n+\n             property real xBoostInput: 0.0\n             property real xVelocity : 0\n             property real xBoostFactor: gravity\n@@ -217,6 +237,8 @@ Image {\n \n             // Constants\n             property real gravity: 0.1 / 60.0;\n+            // Should be about 5 seconds of fuel\n+            property real fuelConsuptionRate: 1.0 / 60.0 / 5.0\n \n             Timer {\n                 id: simulationTickTimer\n@@ -231,10 +253,16 @@ Image {\n             function tick() {\n                 // apply gravity and user inputs to velocities\n                 yVelocity -= gravity;\n-                if (yboosting)\n-                    yVelocity += yBoostFactor;\n-                xVelocity -= xBoostInput * xBoostFactor;\n-                zVelocity -= zBoostInput * zBoostFactor;\n+                if (fuel > 0.0)\n+                {\n+                    if (yboosting)\n+                    {\n+                        yVelocity += yBoostFactor;\n+                        fuel -= fuelConsuptionRate;\n+                    }\n+                    xVelocity -= xBoostInput * xBoostFactor;\n+                    zVelocity -= zBoostInput * zBoostFactor;\n+                }\n \n                 // update lander position\n                 lander.x += xVelocity;\n@@ -251,11 +279,10 @@ Image {\n             }\n \n             function win() {\n-                // Theoretical max score is 100^5, or 10,000,000,000\n+                // Theoretical max score is 2 * 100^5, or 20,000,000,000\n                 score = Math.floor(sanitize(xVelocity) / sanitize(yVelocity) /\n                                    sanitize(zVelocity) / sanitize(lander.x)\n-                                   / sanitize(lander.z)\n-                                   );\n+                                   / sanitize(lander.z) * (fuel + 1)                                   );\n                 if (score > hiScore) hiScore = score;\n                 simulationTickTimer.running = false;\n                 endGame();\n@@ -272,7 +299,7 @@ Image {\n                 viewport.visible = true;\n                 simulationTickTimer.running = true;\n                 gameInputPad.enabled = true;\n-                lander.jetsVisible = true;\n+                gameLogic.gameRunning = true;\n \n                 // reset state\n                 score = 0;\n@@ -281,6 +308,7 @@ Image {\n                 zBoostInput = 0.0\n                 zVelocity = 0\n                 yboosting = false\n+                fuel = 1.0;\n \n                 // Random starting position\n                 lander.position = Qt.vector3d(Math.random() * 10.0 - 5.0,\n@@ -297,7 +325,7 @@ Image {\n                 // Tidy up visuals\n                 titleBar.visible = true;\n                 gameInputPad.enabled = false;\n-                lander.jetsVisible = false;\n+                gameLogic.gameRunning = false;\n                 gameLogic.zBoostInput = 0.0;\n                 gameLogic.xBoostInput = 0.0;\n                 gameLogic.yboosting = false;\n"", ""viewport.cpp"": ""@@ -1174,4 +1174,17 @@ QPointF Viewport::viewDelta(qreal deltax, qreal deltay)\n     return QPointF(deltax * scaleX / w, deltay * scaleY / h);\n }\n \n+void Viewport::itemChange(QSGItem::ItemChange change, const ItemChangeData &value)\n+{\n+    if (change == QSGItem::ItemChildAddedChange)\n+    {\n+        QSGItem *newItem = value.item;\n+        if (QDeclarativeItem3D* item3d =\n+                qobject_cast<QDeclarativeItem3D*>(newItem))\n+        {\n+            setItemViewport(item3d);\n+        }\n+    };\n+    return QSGItem::itemChange(change, value);\n+}\n QT_END_NAMESPACE\n"", ""viewport.h"": ""@@ -121,6 +121,7 @@ protected:\n     void hoverLeaveEvent(QHoverEvent *event);\n     void wheelEvent(QWheelEvent *event);\n     void keyPressEvent(QKeyEvent *event);\n+    void itemChange(QSGItem::ItemChange change, const ItemChangeData &value);\n \n private:\n     ViewportPrivate *d;\n"", ""qdeclarativeitem3d.cpp"": ""@@ -1040,6 +1040,8 @@ void QDeclarativeItem3D::draw(QGLPainter *painter)\n     // Bail out if this item and its children have been disabled.\n     if (!d->isEnabled)\n         return;\n+    if (!d->isInitialized)\n+        initialize(painter);\n \n     int prevId = painter->objectPickId();\n     painter->setObjectPickId(d->objectPickId);\n@@ -1163,6 +1165,16 @@ void QDeclarativeItem3D::initialize(QGLPainter *painter)\n {\n     if (d->isInitialized) return;\n \n+    if (!d->viewport)\n+    {\n+        if (QDeclarativeItem3D* parentItem =\n+                qobject_cast<QDeclarativeItem3D*>(parent()))\n+        {\n+            d->viewport = parentItem->d->viewport;\n+            Q_ASSERT(d->viewport);\n+        }\n+    }\n+\n     d->objectPickId = d->viewport->registerPickableObject(this);\n \n     for (int index = 0; index < children().size(); ++index) {\n"", ""tst_picking.qml"": ""@@ -106,6 +106,34 @@ Rectangle\n             }\n         }\n \n+        Component {\n+            id: pickTestDelegate\n+            Quad {\n+                objectName: \""foo\""\n+                transform: [\n+                    Rotation3D {\n+                        axis: Qt.vector3d(1,0,0);\n+                        angle: 90\n+                    },\n+                    // Bring quad forwards a little bit to ensure it's drawn\n+                    Translation3D { translate: Qt.vector3d(0,0,0.1)}\n+                ]\n+\n+                // Ensure items are above smallerQuad\n+                position: Qt.vector3d(0, 0, (index + 1) * 0.1)\n+                property color color: model.color\n+            }\n+        }\n+\n+        ListModel{\n+            id: pickTestModel\n+        }\n+\n+        Repeater {\n+            delegate: pickTestDelegate\n+            model: pickTestModel\n+        }\n+\n         // picking fails until the first paint occurs.  There's no\n         // straight-forward way to wait for the first paint, so we'll use a\n         // timer to allow the paint to happen.\n@@ -153,6 +181,12 @@ Rectangle\n                        \""Didn't find smaller quad at midpoint\"");\n                 verify(viewport.objectForPoint(-midX,-midY) == null,\n                        \""Incorrectly found object off viewport\"");\n+                pickTestModel.append({\""color\"":\""#00ff00\""});\n+                verify(viewport.objectForPoint(midX,midY).color == \""#00ff00\"",\n+                       \""Didn't find modelview quad at midpoint\"");\n+                pickTestModel.append({\""color\"":\""#ff00ff\""});\n+                verify(viewport.objectForPoint(midX,midY).color == \""#ff00ff\"",\n+                       \""Didn't find second modelview quad at midpoint\"");\n             }\n         }\n     }\n""}",bug,"bug, feature 
",bug;
4288.0,4288.0,bug ,Marco Bubke,QmlDesigner.NodeInstances: Show stripes for items without content,"QmlDesigner.NodeInstances: Show stripes for items without content

Change-Id: I6c737616d485445d77efd8b6d73b2d8259e5120b","['src/plugins/qmldesigner/designercore/instances/nodeinstance.cpp', 'src/plugins/qmldesigner/components/formeditor/formeditoritem.cpp', 'src/plugins/qmldesigner/designercore/instances/nodeinstanceview.cpp', 'src/plugins/qmldesigner/designercore/include/qmlitemnode.h', 'src/plugins/qmldesigner/components/formeditor/formeditoritem.h', 'src/plugins/qmldesigner/designercore/model/qmlitemnode.cpp', 'src/plugins/qmldesigner/components/formeditor/formeditorview.cpp', 'src/plugins/qmldesigner/designercore/include/nodeinstance.h']","{""formeditoritem.cpp"": ""@@ -53,7 +53,7 @@\n \n namespace QmlDesigner {\n \n-\n+QPixmap FormEditorItem::s_invisibleItemPixmap = QPixmap();\n \n FormEditorScene *FormEditorItem::scene() const {\n     return qobject_cast<FormEditorScene*>(QGraphicsItem::scene());\n@@ -242,6 +242,7 @@ void FormEditorItem::paintBoundingRect(QPainter *painter) const\n \n     QPen pen;\n     pen.setJoinStyle(Qt::MiterJoin);\n+    pen.setStyle(Qt::DotLine);\n \n     switch(scene()->paintMode()) {\n         case FormEditorScene::AnchorMode: {\n@@ -280,8 +281,55 @@ void FormEditorItem::paint(QPainter *painter, const QStyleOptionGraphicsItem *,\n \n     painter->save();\n \n-    if (isContentVisible())\n+    if (qmlItemNode().instanceIsRenderPixmapNull()) {\n+        if (scene()->showBoundingRects()) {\n+            if (s_invisibleItemPixmap.isNull()) {\n+                QImage invisibleItemImage(14, 14, QImage::Format_ARGB32_Premultiplied);\n+\n+                invisibleItemImage.fill(0xFF999999);\n+                QPainter fillPainter(&invisibleItemImage);\n+                fillPainter.setCompositionMode(QPainter::CompositionMode_Source);\n+                fillPainter.rotate(-45);\n+                fillPainter.translate(-10, 0);\n+                fillPainter.fillRect(0, -4, 20, 7, QColor(100, 100, 100, 0));\n+                fillPainter.translate(0, 10);\n+                fillPainter.fillRect(0, -4, 20, 7, QColor(100, 100, 100, 0));\n+                fillPainter.translate(0, 9);\n+                fillPainter.fillRect(0, -3, 20, 6, QColor(100, 100, 100, 0));\n+\n+\n+\n+\n+                s_invisibleItemPixmap = QPixmap::fromImage(invisibleItemImage);\n+            }\n+\n+            painter->drawTiledPixmap(boundingRect(), s_invisibleItemPixmap);\n+\n+\n+\n+            QString displayText = qmlItemNode().id();\n+\n+            if (displayText.isEmpty())\n+                displayText = qmlItemNode().simplifiedTypeName();\n+\n+            QTextOption textOption;\n+            textOption.setAlignment(Qt::AlignCenter);\n+            textOption.setWrapMode(QTextOption::WrapAtWordBoundaryOrAnywhere);\n+\n+            painter->save();\n+\n+            QFont font;\n+            font.setPixelSize(18);\n+            painter->setFont(font);\n+\n+            painter->drawText(boundingRect(), displayText, textOption);\n+\n+            painter->restore();\n+        }\n+\n+    } else {\n         qmlItemNode().paintInstance(painter);\n+    }\n \n     if (!qmlItemNode().isRootModelNode())\n         paintBoundingRect(painter);\n"", ""formeditoritem.h"": ""@@ -133,6 +133,7 @@ private: // variables\n     bool m_highlightBoundingRect;\n     bool m_isContentVisible;\n     bool m_isFormEditorVisible;\n+    static QPixmap s_invisibleItemPixmap;\n };\n \n \n"", ""formeditorview.cpp"": ""@@ -285,6 +285,12 @@ FormEditorWidget *FormEditorView::widget() const\n void FormEditorView::nodeIdChanged(const ModelNode& node, const QString& newId, const QString& oldId)\n {\n     QmlModelView::nodeIdChanged(node, newId, oldId);\n+    QmlItemNode itemNode(node);\n+\n+    if (itemNode.isValid()) {\n+        FormEditorItem *item = m_scene->itemForQmlItemNode(itemNode);\n+        item->update();\n+    }\n }\n \n void FormEditorView::selectedNodesChanged(const QList<ModelNode> &selectedNodeList,\n"", ""nodeinstance.h"": ""@@ -83,6 +83,8 @@ public:\n     qint32 parentId() const;\n     qint32 instanceId() const;\n \n+    QPixmap renderPixmap() const;\n+\n protected:\n     void setProperty(const QString &name, const QVariant &value);\n     InformationName setInformation(InformationName name,\n@@ -108,7 +110,7 @@ protected:\n     InformationName setInformationHasBindingForProperty(const QString &property, bool hasProperty);\n \n     void setParentId(qint32 instanceId);\n-    void setRenderImage(const QImage &image);\n+    void setRenderPixmap(const QImage &image);\n     NodeInstance(ProxyNodeInstanceData *d);\n \n private:\n"", ""qmlitemnode.h"": ""@@ -84,6 +84,7 @@ public:\n     QPointF instancePosition() const;\n     QSizeF instanceSize() const;\n     int instancePenWidth() const;\n+    bool instanceIsRenderPixmapNull() const;\n \n \n     void paintInstance(QPainter *painter);\n"", ""nodeinstance.cpp"": ""@@ -75,7 +75,7 @@ public:\n     QHash<QString, bool> hasAnchors;\n     QHash<QString, QString> instanceTypes;\n \n-    QImage renderImage;\n+    QPixmap renderPixmap;\n     QHash<QString, QPair<QString, qint32> > anchors;\n };\n \n@@ -249,8 +249,8 @@ int NodeInstance::penWidth() const\n \n void NodeInstance::paint(QPainter *painter)\n {\n-    if (isValid() && !d->renderImage.isNull())\n-        painter->drawImage(boundingRect().topLeft(), d->renderImage);\n+    if (isValid() && !d->renderPixmap.isNull())\n+        painter->drawPixmap(boundingRect().topLeft(), d->renderPixmap);\n }\n \n QVariant NodeInstance::property(const QString &name) const\n@@ -307,9 +307,15 @@ void NodeInstance::setProperty(const QString &name, const QVariant &value)\n     d->propertyValues.insert(name, value);\n }\n \n-void NodeInstance::setRenderImage(const QImage &image)\n+QPixmap NodeInstance::renderPixmap() const\n {\n-    d->renderImage = image;\n+    return d->renderPixmap;\n+}\n+\n+void NodeInstance::setRenderPixmap(const QImage &image)\n+{\n+    if (!image.isNull())\n+        d->renderPixmap = QPixmap::fromImage(image);\n }\n \n void NodeInstance::setParentId(qint32 instanceId)\n"", ""nodeinstanceview.cpp"": ""@@ -1069,7 +1069,7 @@ void NodeInstanceView::pixmapChanged(const PixmapChangedCommand &command)\n         if (hasInstanceForId(container.instanceId())) {\n             NodeInstance instance = instanceForId(container.instanceId());\n             if (instance.isValid()) {\n-                instance.setRenderImage(container.image());\n+                instance.setRenderPixmap(container.image());\n                 renderImageChangeSet.insert(instance.modelNode());\n             }\n         }\n"", ""qmlitemnode.cpp"": ""@@ -270,6 +270,11 @@ int QmlItemNode::instancePenWidth() const\n     return nodeInstance().penWidth();\n }\n \n+bool QmlItemNode::instanceIsRenderPixmapNull() const\n+{\n+    return nodeInstance().renderPixmap().isNull();\n+}\n+\n void QmlItemNode::paintInstance(QPainter *painter)\n {\n     if (nodeInstance().isValid())\n""}",bug,"feature
",others;
26725.0,26725.0,bug,Thiago Macieira,Add the QUrl::FullyDecoded flag to the component formatting,"Add the QUrl::FullyDecoded flag to the component formatting

This allows the QUrl component getters to return fully decoded data,
like they did in Qt 4. This is necessary for some use-cases where the
component like the user name, password or path are used outside the
context of a URL. In those contexts, the percent-encoded data makes no
sense, and the loss of data of what could be represented in a URL is
acceptable.

Also take the opportunity to expand the documentation of those getter
methods, explaining what the options argument does.

Discussed-on: http://lists.qt-project.org/pipermail/development/2012-May/003811.html
Change-Id: I89f743cde78c02f169c88314bff0768714341419","['tests/auto/corelib/io/qurlinternal/tst_qurlinternal.cpp', 'src/corelib/io/qurl.cpp', 'src/corelib/io/qurl.h', 'tests/auto/corelib/io/qurl/tst_qurl.cpp', 'src/corelib/io/qurlrecode.cpp']","{""qurl.cpp"": ""@@ -242,11 +242,17 @@\n                            URL in QString form, exactly equal to the result of\n                            toEncoded()\n \n-    \\value MostDecoded     Attempt to decode as much as possible. For individual\n+    \\value FullyDecoded    Attempt to decode as much as possible. For individual\n                            components of the URL, this decodes every percent\n-                           encoding sequence, control characters (U+0000 to U+001F)\n-                           and non-US-ASCII sequences that aren't valid UTF-8\n-                           sequences.\n+                           encoding sequence, including control characters (U+0000\n+                           to U+001F) and UTF-8 sequences found in percent-encoded form.\n+                           Note: if the component contains non-US-ASCII sequences\n+                           that aren't valid UTF-8 sequences, the behaviour is\n+                           undefined since QString cannot represent those values\n+                           (data will be lost!)\n+                           This mode is should not be used in functions where more\n+                           than one URL component is returned (userInfo() and authority())\n+                           and it is not allowed in url() and toString().\n \n     The values of EncodeReserved and DecodeReserved should not be used together\n     in one call. The behaviour is undefined if that happens. They are provided\n@@ -254,6 +260,15 @@\n     to reserved characters is different on certain components and specially on\n     the full URL.\n \n+    The FullyDecoded mode is similar to the behaviour of the functions\n+    returning QString in Qt 4.x, including the fact that they will most likely\n+    cause data loss if the component in question contains a non-UTF-8\n+    percent-encoded sequence. Fortunately, those cases aren't common, so this\n+    mode should be used when the component in question is used in a non-URL\n+    context. For example, in an FTP client application, the path to the remote\n+    file could be stored in a QUrl object, and the string to be transmitted to\n+    the FTP server should be obtained using this flag.\n+\n     \\sa QUrl::FormattingOptions\n */\n \n@@ -280,17 +295,6 @@ inline static bool isHex(char c)\n     return (c >= '0' && c <= '9') || (c >= 'a' && c <= 'f');\n }\n \n-static inline char toHex(quint8 c)\n-{\n-    return c > 9 ? c - 10 + 'A' : c + '0';\n-}\n-\n-static inline quint8 fromHex(quint8 c)\n-{\n-    c |= 0x20;\n-    return c >= 'a' ? c - 'a' + 10 : c - '0';\n-}\n-\n static inline QString ftpScheme()\n {\n     return QStringLiteral(\""ftp\"");\n@@ -1672,7 +1676,15 @@ void QUrl::setAuthority(const QString &authority, ParsingMode mode)\n     Returns the authority of the URL if it is defined; otherwise\n     an empty string is returned.\n \n-    \\sa setAuthority()\n+    The \\a options argument controls how to format the authority portion of the\n+    URL. The value of QUrl::FullyDecoded should be avoided, since it may\n+    produce an ambiguous return value (for example, if the username contains a\n+    colon ':' or either the username or password contain an at-sign '@'). In\n+    all other cases, this function returns an unambiguous value, which may\n+    contain those characters still percent-encoded, plus some control\n+    sequences not representable in decoded form in QString.\n+\n+    \\sa setAuthority(), userInfo(), userName(), password(), host(), port()\n */\n QString QUrl::authority(ComponentFormattingOptions options) const\n {\n@@ -1725,6 +1737,15 @@ void QUrl::setUserInfo(const QString &userInfo, ParsingMode mode)\n /*!\n     Returns the user info of the URL, or an empty string if the user\n     info is undefined.\n+\n+    The \\a options argument controls how to format the user info component. The\n+    value of QUrl::FullyDecoded should be avoided, since it may produce an\n+    ambiguous return value (for example, if the username contains a colon ':').\n+    In all other cases, this function returns an unambiguous value, which may\n+    contain that characters still percent-encoded, plus some control sequences\n+    not representable in decoded form in QString.\n+\n+    \\sa setUserInfo(), userName(), password(), authority()\n */\n QString QUrl::userInfo(ComponentFormattingOptions options) const\n {\n@@ -1775,7 +1796,18 @@ void QUrl::setUserName(const QString &userName, ParsingMode mode)\n     Returns the user name of the URL if it is defined; otherwise\n     an empty string is returned.\n \n-    \\sa setUserName(), encodedUserName()\n+    The \\a options argument controls how to format the user name component. All\n+    values produce an unambiguous result. With QUrl::FullyDecoded, all\n+    percent-encoded sequences are decoded; otherwise, the returned value may\n+    contain some percent-encoded sequences for some control sequences not\n+    representable in decoded form in QString.\n+\n+    Note that QUrl::FullyDecoded may cause data loss if those non-representable\n+    sequences are present. It is recommended to use that value when the result\n+    will be used in a non-URL context, such as setting in QAuthenticator or\n+    negotiating a login.\n+\n+    \\sa setUserName(), userInfo()\n */\n QString QUrl::userName(ComponentFormattingOptions options) const\n {\n@@ -1825,6 +1857,17 @@ void QUrl::setPassword(const QString &password, ParsingMode mode)\n     Returns the password of the URL if it is defined; otherwise\n     an empty string is returned.\n \n+    The \\a options argument controls how to format the user name component. All\n+    values produce an unambiguous result. With QUrl::FullyDecoded, all\n+    percent-encoded sequences are decoded; otherwise, the returned value may\n+    contain some percent-encoded sequences for some control sequences not\n+    representable in decoded form in QString.\n+\n+    Note that QUrl::FullyDecoded may cause data loss if those non-representable\n+    sequences are present. It is recommended to use that value when the result\n+    will be used in a non-URL context, such as setting in QAuthenticator or\n+    negotiating a login.\n+\n     \\sa setPassword()\n */\n QString QUrl::password(ComponentFormattingOptions options) const\n@@ -1887,6 +1930,20 @@ void QUrl::setHost(const QString &host, ParsingMode mode)\n /*!\n     Returns the host of the URL if it is defined; otherwise\n     an empty string is returned.\n+\n+    The \\a options argument controls how the hostname will be formatted. The\n+    QUrl::EncodeUnicode option will cause this function to return the hostname\n+    in the ASCII-Compatible Encoding (ACE) form, which is suitable for use in\n+    channels that are not 8-bit clean or that require the legacy hostname (such\n+    as DNS requests or in HTTP request headers). If that flag is not present,\n+    this function returns the International Domain Name (IDN) in Unicode form,\n+    according to the list of permissible top-level domains (see\n+    idnWhiteList()).\n+\n+    All other flags are ignored. Host names cannot contain control or percent\n+    characters, so the returned value can be considered fully decoded.\n+\n+    \\sa setHost(), idnWhiteList(), setIdnWhiteList(), authority()\n */\n QString QUrl::host(ComponentFormattingOptions options) const\n {\n@@ -1983,6 +2040,16 @@ void QUrl::setPath(const QString &path, ParsingMode mode)\n /*!\n     Returns the path of the URL.\n \n+    The \\a options argument controls how to format the path component. All\n+    values produce an unambiguous result. With QUrl::FullyDecoded, all\n+    percent-encoded sequences are decoded; otherwise, the returned value may\n+    contain some percent-encoded sequences for some control sequences not\n+    representable in decoded form in QString.\n+\n+    Note that QUrl::FullyDecoded may cause data loss if those non-representable\n+    sequences are present. It is recommended to use that value when the result\n+    will be used in a non-URL context, such as sending to an FTP server.\n+\n     \\sa setPath()\n */\n QString QUrl::path(ComponentFormattingOptions options) const\n@@ -1999,7 +2066,7 @@ QString QUrl::path(ComponentFormattingOptions options) const\n \n     Returns true if this URL contains a Query (i.e., if ? was seen on it).\n \n-    \\sa hasQueryItem(), encodedQuery()\n+    \\sa setQuery(), query(), hasFragment()\n */\n bool QUrl::hasQuery() const\n {\n@@ -2028,7 +2095,15 @@ bool QUrl::hasQuery() const\n     In DecodedMode, '%' stand for themselves and encoded characters are not\n     possible.\n \n-    \\sa encodedQuery(), hasQuery()\n+    Query strings often contain percent-encoded sequences, so use of\n+    DecodedMode is discouraged. One special sequence to be aware of is that of\n+    the plus character ('+'). QUrl does not convert spaces to plus characters,\n+    even though HTML forms posted by web browsers do. In order to represent an\n+    actual plus character in a query, the sequence \""%2B\"" is usually used. This\n+    function will leave \""%2B\"" sequences untouched in TolerantMode or\n+    StrictMode.\n+\n+    \\sa query(), hasQuery()\n */\n void QUrl::setQuery(const QString &query, ParsingMode mode)\n {\n@@ -2045,6 +2120,17 @@ void QUrl::setQuery(const QString &query, ParsingMode mode)\n         d->sectionIsPresent &= ~QUrlPrivate::Query;\n }\n \n+/*!\n+    \\overload\n+    \\since 5.0\n+    Sets the query string of the URL to \\a query.\n+\n+    This function reconstructs the query string from the QUrlQuery object and\n+    sets on this QUrl object. This function does not have parsing parameters\n+    because the QUrlQuery contains data that is already parsed.\n+\n+    \\sa query(), hasQuery()\n+*/\n void QUrl::setQuery(const QUrlQuery &query)\n {\n     detach();\n@@ -2058,7 +2144,21 @@ void QUrl::setQuery(const QUrlQuery &query)\n }\n \n /*!\n-    Returns the query string of the URL in percent encoded form.\n+    Returns the query string of the URL if there's a query string, or an empty\n+    result if not. To determine if the parsed URL contained a query string, use\n+    hasQuery().\n+\n+    The \\a options argument controls how to format the query component. All\n+    values produce an unambiguous result. With QUrl::FullyDecoded, all\n+    percent-encoded sequences are decoded; otherwise, the returned value may\n+    contain some percent-encoded sequences for some control sequences not\n+    representable in decoded form in QString.\n+\n+    Note that use of QUrl::FullyDecoded in queries is discouraged, as queries\n+    often contain data that is supposed to remain percent-encoded, including\n+    the use of the \""%2B\"" sequence to represent a plus character ('+').\n+\n+    \\sa setQuery(), hasQuery()\n */\n QString QUrl::query(ComponentFormattingOptions options) const\n {\n@@ -2116,9 +2216,20 @@ void QUrl::setFragment(const QString &fragment, ParsingMode mode)\n }\n \n /*!\n-    Returns the fragment of the URL.\n+    Returns the fragment of the URL. To determine if the parsed URL contained a\n+    fragment, use hasFragment().\n \n-    \\sa setFragment()\n+    The \\a options argument controls how to format the fragment component. All\n+    values produce an unambiguous result. With QUrl::FullyDecoded, all\n+    percent-encoded sequences are decoded; otherwise, the returned value may\n+    contain some percent-encoded sequences for some control sequences not\n+    representable in decoded form in QString.\n+\n+    Note that QUrl::FullyDecoded may cause data loss if those non-representable\n+    sequences are present. It is recommended to use that value when the result\n+    will be used in a non-URL context.\n+\n+    \\sa setFragment(), hasFragment()\n */\n QString QUrl::fragment(ComponentFormattingOptions options) const\n {\n@@ -2258,8 +2369,9 @@ bool QUrl::isRelative() const\n }\n \n /*!\n-    Returns a string representation of the URL.\n-    The output can be customized by passing flags with \\a options.\n+    Returns a string representation of the URL. The output can be customized by\n+    passing flags with \\a options. The option QUrl::FullyDecoded is not\n+    permitted in this function since it would generate ambiguous data.\n \n     The resulting QString can be passed back to a QUrl later on.\n \n@@ -2273,14 +2385,19 @@ QString QUrl::url(FormattingOptions options) const\n }\n \n /*!\n-    Returns a string representation of the URL.\n-    The output can be customized by passing flags with \\a options.\n+    Returns a string representation of the URL. The output can be customized by\n+    passing flags with \\a options. The option QUrl::FullyDecoded is not\n+    permitted in this function since it would generate ambiguous data.\n \n     \\sa FormattingOptions, url(), setUrl()\n */\n QString QUrl::toString(FormattingOptions options) const\n {\n     if (!d) return QString();\n+    if (options == QUrl::FullyDecoded) {\n+        qWarning(\""QUrl: QUrl::FullyDecoded is not permitted when reconstructing the full URL\"");\n+        options = QUrl::PrettyDecoded;\n+    }\n \n     // return just the path if:\n     //  - QUrl::PreferLocalFile is passed\n@@ -2688,7 +2805,7 @@ QString QUrl::toLocalFile() const\n         return QString();\n \n     QString tmp;\n-    QString ourPath = path(QUrl::MostDecoded);\n+    QString ourPath = path(QUrl::FullyDecoded);\n \n     // magic for shared drive on windows\n     if (!d->host.isEmpty()) {\n@@ -2702,21 +2819,6 @@ QString QUrl::toLocalFile() const\n             tmp.remove(0, 1);\n #endif\n     }\n-\n-    // check if we need to do one more decoding pass\n-    int pct = tmp.indexOf(QLatin1Char('%'));\n-    while (pct != -1) {\n-        Q_ASSERT(tmp.size() >= pct + 2);\n-        ushort char1 = tmp.at(pct + 1).unicode();\n-        ushort char2 = tmp.at(pct + 2).unicode();\n-\n-        Q_ASSERT(isHex(char1) && char1 < 0x80u);\n-        Q_ASSERT(isHex(char2) && char2 < 0x80u);\n-        tmp.replace(pct, 3, QChar(fromHex(char1) << 4 | fromHex(char2)));\n-\n-        // next iteration\n-        pct = tmp.indexOf(QLatin1Char('%'), pct + 1);\n-    }\n     return tmp;\n }\n \n"", ""qurl.h"": ""@@ -145,9 +145,10 @@ public:\n         EncodeDelimiters = 0x400000 | 0x800000,\n         EncodeReserved = 0x1000000,\n         DecodeReserved = 0x2000000,\n+        // 0x4000000 used to indicate full-decode mode\n \n         FullyEncoded = EncodeSpaces | EncodeUnicode | EncodeDelimiters | EncodeReserved,\n-        MostDecoded = PrettyDecoded | DecodeReserved\n+        FullyDecoded = FullyEncoded | DecodeReserved | 0x4000000\n     };\n     Q_DECLARE_FLAGS(ComponentFormattingOptions, ComponentFormattingOption)\n #ifdef qdoc\n"", ""qurlrecode.cpp"": ""@@ -560,6 +560,43 @@ non_trivial:\n     return 0;\n }\n \n+static int decode(QString &appendTo, const ushort *begin, const ushort *end)\n+{\n+    const int origSize = appendTo.size();\n+    const ushort *input = begin;\n+    ushort *output = 0;\n+    while (input != end) {\n+        if (*input != '%') {\n+            if (output)\n+                *output++ = *input;\n+            ++input;\n+            continue;\n+        }\n+\n+        if (Q_UNLIKELY(!output)) {\n+            // detach\n+            appendTo.resize(origSize + (end - begin));\n+            output = reinterpret_cast<ushort *>(appendTo.begin()) + origSize;\n+            memcpy(output, begin, (input - begin) * sizeof(ushort));\n+            output += input - begin;\n+        }\n+\n+        ++input;\n+        Q_ASSERT(input <= end - 2); // we need two characters\n+        Q_ASSERT(isHex(input[0]));\n+        Q_ASSERT(isHex(input[1]));\n+        *output++ = decodeNibble(input[0]) << 4 | decodeNibble(input[1]);\n+        input += 2;\n+    }\n+\n+    if (output) {\n+        int len = output - reinterpret_cast<ushort *>(appendTo.begin());\n+        appendTo.truncate(len);\n+        return len - origSize;\n+    }\n+    return 0;\n+}\n+\n template <size_t N>\n static void maskTable(uchar (&table)[N], const uchar (&mask)[N])\n {\n@@ -583,6 +620,12 @@ static void maskTable(uchar (&table)[N], const uchar (&mask)[N])\n     \\li QUrl::EncodeSpaces: if set, spaces will be encoded to \""%20\""; if unset, they will be \"" \""\n     \\li QUrl::EncodeUnicode: if set, characters above U+0080 will be encoded to their UTF-8\n                              percent-encoded form; if unset, they will be decoded to UTF-16\n+    \\li QUrl::FullyDecoded: if set, this function will decode all percent-encoded sequences,\n+                            including that of the percent character. The resulting string\n+                            will not be percent-encoded anymore. Use with caution!\n+                            In this mode, the behaviour is undefined if the input string\n+                            contains any percent-encoding sequences above %80.\n+                            Also, the function will not correct bad % sequences.\n     \\endlist\n \n     Other flags are ignored (including QUrl::EncodeReserved).\n@@ -599,6 +642,10 @@ qt_urlRecode(QString &appendTo, const QChar *begin, const QChar *end,\n              QUrl::ComponentFormattingOptions encoding, const ushort *tableModifications)\n {\n     uchar actionTable[sizeof defaultActionTable];\n+    if (encoding == QUrl::FullyDecoded) {\n+        return decode(appendTo, reinterpret_cast<const ushort *>(begin), reinterpret_cast<const ushort *>(end));\n+    }\n+\n     if (!(encoding & QUrl::EncodeDelimiters) && encoding & QUrl::DecodeReserved) {\n         // reset the table\n         memset(actionTable, DecodeCharacter, sizeof actionTable);\n"", ""tst_qurl.cpp"": ""@@ -3059,6 +3059,26 @@ void tst_QUrl::setComponents_data()\n     QTest::newRow(\""fragment-encode\"") << QUrl(\""http://example.com/foo#z\"")\n                                      << int(Fragment) << \""bar%23\"" << Decoded << true\n                                      << PrettyDecoded << \""bar%2523\"" << \""http://example.com/foo#bar%2523\"";\n+    // force decoding; note how the userinfo becomes ambiguous\n+    QTest::newRow(\""userinfo-decode\"") << QUrl(\""http://example.com\"")\n+                                     << int(UserInfo) << \""hello%3Aworld:}}>b9o%25kR(\"" << Tolerant << true\n+                                     << FullyDecoded << \""hello:world:}}>b9o%kR(\""\n+                                     << \""http://hello%3Aworld:%7D%7D%3Eb9o%25kR(@example.com\"";\n+    QTest::newRow(\""username-decode\"") << QUrl(\""http://example.com\"")\n+                                     << int(UserName) << \""hello%3Aworld%25\"" << Tolerant << true\n+                                     << FullyDecoded << \""hello:world%\"" << \""http://hello%3Aworld%25@example.com\"";\n+    QTest::newRow(\""password-decode\"") << QUrl(\""http://example.com\"")\n+                                     << int(Password) << \""}}>b9o%25kR(\"" << Tolerant << true\n+                                     << FullyDecoded << \""}}>b9o%kR(\"" << \""http://:%7D%7D%3Eb9o%25kR(@example.com\"";\n+    QTest::newRow(\""path-decode\"") << QUrl(\""http://example.com/\"")\n+                                 << int(Path) << \""/bar%25foo\"" << Tolerant << true\n+                                 << FullyDecoded << \""/bar%foo\"" << \""http://example.com/bar%25foo\"";\n+    QTest::newRow(\""query-decode\"") << QUrl(\""http://example.com/foo?qq\"")\n+                                  << int(Query) << \""bar%25foo\"" << Tolerant << true\n+                                  << FullyDecoded << \""bar%foo\"" << \""http://example.com/foo?bar%25foo\"";\n+    QTest::newRow(\""fragment-decode\"") << QUrl(\""http://example.com/foo#qq\"")\n+                                     << int(Fragment) << \""bar%25foo\"" << Tolerant << true\n+                                     << FullyDecoded << \""bar%foo\"" << \""http://example.com/foo#bar%25foo\"";\n }\n \n void tst_QUrl::setComponents()\n"", ""tst_qurlinternal.cpp"": ""@@ -886,6 +886,14 @@ void tst_QUrlInternal::encodingRecode_data()\n         QTest::newRow(\""control-unreserved-0x\"" + code) << \""Foo%00Bar%0D%0Abksp%7F\"" << mode << \""Foo%00Bar%0D%0Abksp%7F\"";\n     }\n \n+    // however, control characters and the percent *are* decoded in FullyDecoded mode\n+    // this is the only exception\n+    QTest::newRow(\""control-nul-fullydecoded\"") << \""%00\"" << F(QUrl::FullyDecoded) << QStringLiteral(\""\\0\"");\n+    QTest::newRow(\""control-fullydecoded\"") << \""%0D%0A%1F%1A%7F\"" << F(QUrl::FullyDecoded) << \""\\r\\n\\x1f\\x1a\\x7f\"";\n+    QTest::newRow(\""percent-fullydecoded\"") << \""25%2525\"" << F(QUrl::FullyDecoded) << \""25%25\"";\n+    QTest::newRow(\""control-unreserved-fullydecoded\"") << \""Foo%00Bar%0D%0Abksp%7F\"" << F(QUrl::FullyDecoded)\n+                                                     << QStringLiteral(\""Foo\\0Bar\\r\\nbksp\\x7F\"");\n+\n     //    gen-delims    = \"":\"" / \""/\"" / \""?\"" / \""#\"" / \""[\"" / \""]\"" / \""@\""\n     //    sub-delims    = \""!\"" / \""$\"" / \""&\"" / \""'\"" / \""(\"" / \"")\""\n     //                  / \""*\"" / \""+\"" / \"",\"" / \"";\"" / \""=\""\n""}",feature; test,"feature 
",feature;
11366.0,11366.0,feature; test,Christian Stenger,Squish: Fixed a typo,"Squish: Fixed a typo

Change-Id: I4bdad749d82ace835d8051a80cf9b17ad0eb43cc",['tests/system/objects.map'],"{""objects.map"": ""@@ -16,7 +16,7 @@\n :New_Core::Internal::NewDialog\t{name='Core__Internal__NewDialog' type='Core::Internal::NewDialog' visible='1' windowTitle='New'}\n :Next_QPushButton\t{text~='(Next.*|Continue)' type='QPushButton' visible='1'}\n :Options.qt_tabwidget_tabbar_QTabBar\t{name='qt_tabwidget_tabbar' type='QTabBar' visible='1' window=':Options_Core::Internal::SettingsDialog'}\n-:Options_Core::Internal::SettingsDialog\t{type='Core::Internal::SettingsDialog' unnamed='1' visible='1' windowTitle~='(Options|Preference)'}\n+:Options_Core::Internal::SettingsDialog\t{type='Core::Internal::SettingsDialog' unnamed='1' visible='1' windowTitle~='(Options|Preferences)'}\n :Project Setup.scrollArea_QScrollArea\t{name='scrollArea' type='QScrollArea' visible='1' window=':Project Setup_Qt4ProjectManager::Internal::ProjectLoadWizard'}\n :Project Setup_Qt4ProjectManager::Internal::ProjectLoadWizard\t{type='Qt4ProjectManager::Internal::ProjectLoadWizard' unnamed='1' visible='1' windowTitle='Project Setup'}\n :Qt Creator.QtCreator.MenuBar_QMenuBar\t{name='QtCreator.MenuBar' type='QMenuBar' visible='1' window=':Qt Creator_Core::Internal::MainWindow'}\n""}",test,"bug, test 
",bug;resource;
12064.0,12064.0,test,Stephen Kelly (Unused account),Remove dead code from the configures,"Remove parts of the configure script which are no longer in qtbase.

Change-Id: Ibb26e4f48ca8239c2c4396e4abefab4c87322be2",['configure'],"{""configure"": ""@@ -653,9 +653,6 @@ CFG_CONFIGURE_EXIT_ON_ERROR=yes\n CFG_PROFILE=no\n CFG_EXCEPTIONS=unspecified\n CFG_GUI=auto # (yes|no|auto)\n-CFG_SCRIPT=auto # (yes|no|auto)\n-CFG_SCRIPTTOOLS=auto # (yes|no|auto)\n-CFG_XMLPATTERNS=auto # (yes|no|auto)\n CFG_INCREMENTAL=auto\n CFG_QCONFIG=full\n CFG_DEBUG=auto\n@@ -699,18 +696,8 @@ QT_DEFAULT_BUILD_PARTS=\""libs examples tests\""\n CFG_BUILD_PARTS=\""\""\n CFG_NOBUILD_PARTS=\""\""\n CFG_RELEASE_QMAKE=no\n-CFG_PHONON=auto\n-CFG_PHONON_BACKEND=yes\n-CFG_MULTIMEDIA=auto\n-CFG_AUDIO_BACKEND=auto\n-CFG_SVG=auto\n CFG_V8=auto\n CFG_V8SNAPSHOT=auto\n-CFG_DECLARATIVE=auto\n-CFG_DECLARATIVE_DEBUG=yes\n-CFG_WEBKIT=auto # (yes|no|auto|debug)\n-CFG_JAVASCRIPTCORE_JIT=auto\n-CFG_LOCATION=auto\n \n CFG_GFX_AVAILABLE=\""linuxfb transformed qvfb vnc multiscreen directfb\""\n CFG_GFX_ON=\""linuxfb multiscreen\""\n@@ -758,7 +745,6 @@ CFG_CUPS=auto\n CFG_ICONV=auto\n CFG_DBUS=auto\n CFG_GLIB=auto\n-CFG_GSTREAMER=auto\n CFG_QGTKSTYLE=auto\n CFG_LARGEFILE=auto\n CFG_OPENSSL=auto\n@@ -866,10 +852,6 @@ QT_LIBS_DBUS=\n QT_CFLAGS_GLIB=\n QT_LIBS_GLIB=\n \n-# flags for GStreamer (X11 only)\n-QT_CFLAGS_GSTREAMER=\n-QT_LIBS_GSTREAMER=\n-\n # flags for libconnsettings0 (used for Maemo ICD bearer management plugin)\n QT_CFLAGS_CONNSETTINGS=\n QT_LIBS_CONNSETTINGS=\n@@ -967,14 +949,8 @@ if [ \""$CFG_EMBEDDED\"" = \""nacl\"" ]; then\n         L_FLAGS=\""$L_FLAGS -I${CFG_NACL_PATH}/toolchain/mac_x86/sdk/nacl-sdk/lib\""\n     fi\n \n-    echo \""-no-multimedia -no-webkit -no-phonon -no-nultimedia -no-mediaservices -no-xmlpatterns -no-script -no-sql-sqlite -nomake tests\""\n-    CFG_MULTIMEDIA=no\n-    CFG_WEBKIT=no\n-    CFG_PHONON=no\n-    CFG_MULTIMEDIA=no\n+    echo \""-no-mediaservices -no-sql-sqlite -nomake tests\""\n     CFG_MEDIASERVICES=no\n-    CFG_XMLPATTERNS=no\n-    CFG_SCRIPT=no\n     CFG_SQLITE=no\n     CFG_SQL_sqlite=no\n     CFG_LIBTIFF=no\n@@ -1017,26 +993,13 @@ while [ \""$#\"" -gt 0 ]; do\n         VAR=`echo $1 | sed \""s,^-[^-]*-\\(.*\\),\\1,\""`\n         VAL=`echo $1 | sed \""s,^-\\([^-]*\\).*,\\1,\""`\n         ;;\n-    #WebKit options\n-    -webkit)\n-        VAR=\""webkit\""\n-        VAL=\""yes\""\n-        ;;\n-    -webkit-debug)\n-        VAR=\""webkit\""\n-        VAL=\""debug\""\n-        ;;\n-    -no-webkit)\n-        VAR=\""webkit\""\n-        VAL=\""no\""\n-        ;;\n     #Qt style no options\n     -no-*)\n         VAR=`echo $1 | sed \""s,^-no-\\(.*\\),\\1,\""`\n         VAL=no\n         ;;\n     #Qt style yes options\n-    -incremental|-qvfb|-profile|-shared|-static|-sm|-xinerama|-xshape|-xsync|-xinput|-xinput2|-egl|-reduce-exports|-pch|-separate-debug-info|-stl|-freetype|-xcursor|-xfixes|-xrandr|-xrender|-mitshm|-fontconfig|-xkb|-xcb|-wayland|-nis|-qdbus|-dbus|-dbus-linked|-glib|-gstreamer|-gtkstyle|-cups|-iconv|-largefile|-h|-help|-v|-verbose|-debug|-release|-fast|-accessibility|-confirm-license|-gnumake|-framework|-debug-and-release|-exceptions|-cocoa|-carbon|-universal|-harfbuzz|-prefix-install|-silent|-armfpa|-optimized-qmake|-dwarf2|-reduce-relocations|-sse|-openssl|-openssl-linked|-xmlpatterns|-phonon|-phonon-backend|-multimedia|-audio-backend|-svg|-v8|-declarative|-declarative-debug|-javascript-jit|-script|-scripttools|-rpath|-force-pkg-config|-icu|-force-asserts|-testcocoon)\n+    -incremental|-qvfb|-profile|-shared|-static|-sm|-xinerama|-xshape|-xsync|-xinput|-xinput2|-egl|-reduce-exports|-pch|-separate-debug-info|-stl|-freetype|-xcursor|-xfixes|-xrandr|-xrender|-mitshm|-fontconfig|-xkb|-xcb|-wayland|-nis|-dbus|-dbus-linked|-glib|-gtkstyle|-cups|-iconv|-largefile|-h|-help|-v|-verbose|-debug|-release|-fast|-accessibility|-confirm-license|-gnumake|-framework|-debug-and-release|-exceptions|-cocoa|-carbon|-universal|-harfbuzz|-prefix-install|-silent|-armfpa|-optimized-qmake|-dwarf2|-reduce-relocations|-sse|-openssl|-openssl-linked|-v8|-debug|-rpath|-force-pkg-config|-icu|-force-asserts|-testcocoon)\n         VAR=`echo $1 | sed \""s,^-\\(.*\\),\\1,\""`\n         VAL=yes\n         ;;\n@@ -1952,13 +1915,6 @@ while [ \""$#\"" -gt 0 ]; do\n             UNKNOWN_OPT=yes\n         fi\n         ;;\n-    gstreamer)\n-        if [ \""$VAL\"" = \""yes\"" ] || [ \""$VAL\"" = \""no\"" ]; then\n-            CFG_GSTREAMER=\""$VAL\""\n-        else\n-            UNKNOWN_OPT=yes\n-        fi\n-        ;;\n     gtkstyle)\n         if [ \""$VAL\"" = \""yes\"" ] || [ \""$VAL\"" = \""no\"" ]; then\n             CFG_QGTKSTYLE=\""$VAL\""\n@@ -1977,7 +1933,7 @@ while [ \""$#\"" -gt 0 ]; do\n             fi\n         fi\n         ;;\n-    qdbus|dbus)\n+    dbus)\n         if [ \""$VAL\"" = \""yes\"" ] || [ \""$VAL\"" = \""no\"" ] || [ \""$VAL\"" = \""linked\"" ]; then\n             CFG_DBUS=\""$VAL\""\n \telif [ \""$VAL\"" = \""runtime\"" ]; then\n@@ -2021,50 +1977,6 @@ while [ \""$#\"" -gt 0 ]; do\n             UNKNOWN_OPT=yes\n         fi\n         ;;\n-    xmlpatterns)\n-        if [ \""$VAL\"" = \""yes\"" ] || [ \""$VAL\"" = \""auto\"" ]; then\n-            CFG_XMLPATTERNS=\""yes\""\n-        else\n-            if [ \""$VAL\"" = \""no\"" ]; then\n-                CFG_XMLPATTERNS=\""no\""\n-            else\n-                UNKNOWN_OPT=yes\n-            fi\n-        fi\n-        ;;\n-    script)\n-        if [ \""$VAL\"" = \""yes\"" ] || [ \""$VAL\"" = \""auto\"" ]; then\n-            CFG_SCRIPT=\""yes\""\n-        else\n-            if [ \""$VAL\"" = \""no\"" ]; then\n-                CFG_SCRIPT=\""no\""\n-            else\n-                UNKNOWN_OPT=yes\n-            fi\n-        fi\n-        ;;\n-    scripttools)\n-        if [ \""$VAL\"" = \""yes\"" ] || [ \""$VAL\"" = \""auto\"" ]; then\n-            CFG_SCRIPTTOOLS=\""yes\""\n-        else\n-            if [ \""$VAL\"" = \""no\"" ]; then\n-                CFG_SCRIPTTOOLS=\""no\""\n-            else\n-                UNKNOWN_OPT=yes\n-            fi\n-        fi\n-        ;;\n-    svg)\n-        if [ \""$VAL\"" = \""yes\"" ] || [ \""$VAL\"" = \""auto\"" ]; then\n-            CFG_SVG=\""yes\""\n-        else\n-            if [ \""$VAL\"" = \""no\"" ]; then\n-                CFG_SVG=\""no\""\n-            else\n-                UNKNOWN_OPT=yes\n-            fi\n-        fi\n-        ;;\n     v8)\n         if [ \""$VAL\"" = \""yes\"" ]; then\n             CFG_V8=\""yes\""\n@@ -2076,50 +1988,6 @@ while [ \""$#\"" -gt 0 ]; do\n             fi\n         fi\n         ;;\n-    declarative)\n-        if [ \""$VAL\"" = \""yes\"" ]; then\n-            CFG_DECLARATIVE=\""yes\""\n-        else\n-            if [ \""$VAL\"" = \""no\"" ]; then\n-                CFG_DECLARATIVE=\""no\""\n-            else\n-                UNKNOWN_OPT=yes\n-            fi\n-        fi\n-\t;;\n-    declarative-debug)\n-        if [ \""$VAL\"" = \""yes\"" ]; then\n-            CFG_DECLARATIVE_DEBUG=\""yes\""\n-        else\n-            if [ \""$VAL\"" = \""no\"" ]; then\n-                CFG_DECLARATIVE_DEBUG=\""no\""\n-            else\n-                UNKNOWN_OPT=yes\n-            fi\n-        fi\n-        ;;\n-    webkit)\n-        [ \""$VAL\"" = \""auto\"" ] && VAL=\""yes\""\n-        CFG_WEBKIT=\""$VAL\""\n-        ;;\n-    location)\n-        if [ \""$VAL\"" = \""yes\"" ]; then\n-            CFG_LOCATION=\""yes\""\n-        else\n-            if [ \""$VAL\"" = \""no\"" ]; then\n-                CFG_LOCATION=\""no\""\n-            else\n-                UNKNOWN_OPT=yes\n-            fi\n-        fi\n-\t;;\n-    javascript-jit)\n-        if [ \""$VAL\"" = \""yes\"" ] || [ \""$VAL\"" = \""auto\"" ] || [ \""$VAL\"" = \""no\"" ]; then \n-            CFG_JAVASCRIPTCORE_JIT=\""$VAL\""\n-        else\n-            UNKNOWN_OPT=yes\n-        fi\n-        ;;\n     confirm-license)\n         if [ \""$VAL\"" = \""yes\"" ]; then\n             OPT_CONFIRM_LICENSE=\""$VAL\""\n@@ -2317,40 +2185,12 @@ while [ \""$#\"" -gt 0 ]; do\n     silent)\n         CFG_SILENT=\""$VAL\""\n         ;;\n-    phonon)\n-        if [ \""$VAL\"" = \""yes\"" ] || [ \""$VAL\"" = \""no\"" ]; then\n-            CFG_PHONON=\""$VAL\""\n-        else\n-            UNKNOWN_OPT=yes\n-        fi\n-        ;;\n-    phonon-backend)\n-        if [ \""$VAL\"" = \""yes\"" ] || [ \""$VAL\"" = \""no\"" ]; then\n-            CFG_PHONON_BACKEND=\""$VAL\""\n-        else\n-            UNKNOWN_OPT=yes\n-        fi\n-        ;;\n-    multimedia)\n-        if [ \""$VAL\"" = \""yes\"" ] || [ \""$VAL\"" = \""no\"" ]; then\n-            CFG_MULTIMEDIA=\""$VAL\""\n-        else\n-            UNKNOWN_OPT=yes\n-        fi\n-        ;;\n     dont-process)\n         CFG_NOPROCESS=yes\n         ;;\n     process)\n         CFG_NOPROCESS=no\n         ;;\n-    audio-backend)\n-        if [ \""$VAL\"" = \""yes\"" ] || [ \""$VAL\"" = \""no\"" ]; then\n-            CFG_AUDIO_BACKEND=\""$VAL\""\n-        else\n-            UNKNOWN_OPT=yes\n-        fi\n-        ;;\n     icu)\n         if [ \""$VAL\"" = \""yes\"" ] || [ \""$VAL\"" = \""no\"" ]; then\n             CFG_ICU=\""$VAL\""\n@@ -2539,7 +2379,7 @@ if [ \""$OPT_SHADOW\"" = \""yes\"" ]; then\n     rm -rf \""$outpath/doc\""\n     ln -s \""$relpath/doc\"" \""$outpath/doc\""\n \n-    # make sure q3porting.xml can be found\n+    # make sure q3porting. can be found\n     mkdir -p \""$outpath/tools/porting/src\""\n     rm -f \""$outpath/tools/porting/src/q3porting.xml\""\n     ln -s \""$relpath/tools/porting/src/q3porting.xml\"" \""$outpath/tools/porting/src\""\n@@ -3654,15 +3494,9 @@ Usage:  $relconf [-h] [-prefix <dir>] [-prefix-install] [-bindir <dir>] [-libdir\n         [-no-separate-debug-info] [-no-mmx] [-no-3dnow] [-no-sse] [-no-sse2]\n         [-no-sse3] [-no-ssse3] [-no-sse4.1] [-no-sse4.2] [-no-avx] [-no-neon]\n         [-qtnamespace <namespace>] [-qtlibinfix <infix>] [-separate-debug-info] [-armfpa]\n-        [-no-optimized-qmake] [-optimized-qmake] [-no-xmlpatterns] [-xmlpatterns]\n-        [-no-multimedia] [-multimedia] [-no-phonon] [-phonon] [-no-phonon-backend] [-phonon-backend]\n-        [-no-media-backend] [-media-backend] [-no-audio-backend] [-audio-backend] \n+        [-no-optimized-qmake] [-optimized-qmake]\n         [-no-openssl] [-openssl] [-openssl-linked]\n-        [-no-gtkstyle] [-gtkstyle] [-no-svg] [-svg] [-no-webkit] [-webkit] [-webkit-debug]\n-        [-no-javascript-jit] [-javascript-jit]\n-        [-no-script] [-script] [-no-scripttools] [-scripttools] \n-        [-no-declarative] [-declarative] [-no-declarative-debug] [-declarative-debug]\n-        [-no-location] [-location]\n+        [-no-gtkstyle] [-gtkstyle]\n         [additional platform specific options (see below)]\n \n \n@@ -3785,52 +3619,9 @@ fi\n \n     -system-sqlite ..... Use sqlite from the operating system.\n \n-    -no-xmlpatterns .... Do not build the QtXmlPatterns module.\n- +  -xmlpatterns ....... Build the QtXmlPatterns module.\n-                         QtXmlPatterns is built if a decent C++ compiler\n-                         is used and exceptions are enabled.\n-\n-    -no-multimedia ..... Do not build the QtMultimedia module.\n- +  -multimedia ........ Build the QtMultimedia module.\n-\n-    -no-audio-backend .. Do not build the platform audio backend into QtMultimedia.\n- +  -audio-backend ..... Build the platform audio backend into QtMultimedia if available.\n-\n-    -no-phonon ......... Do not build the Phonon module.\n- +  -phonon ............ Build the Phonon module.\n-                         Phonon is built if a decent C++ compiler is used.\n-    -no-phonon-backend.. Do not build the platform phonon plugin.\n- +  -phonon-backend..... Build the platform phonon plugin.\n-\n-    -no-svg ............ Do not build the SVG module.\n- +  -svg ............... Build the SVG module.\n-\n-    -no-webkit ......... Do not build the WebKit module.\n- +  -webkit ............ Build the WebKit module.\n-                         WebKit is built if a decent C++ compiler is used.\n-    -webkit-debug ...... Build the WebKit module with debug symbols.\n-\n-    -no-javascript-jit . Do not build the JavaScriptCore JIT compiler.\n- +  -javascript-jit .... Build the JavaScriptCore JIT compiler.\n-\n-    -no-script ......... Do not build the QtScript module.\n- +  -script ............ Build the QtScript module.\n-\n-    -no-scripttools .... Do not build the QtScriptTools module.\n- +  -scripttools ....... Build the QtScriptTools module.\n-\n     -no-v8 ............. Do not build the V8 module.\n  +  -v8 ................ Build the V8 module.\n \n-    -no-declarative ..... Do not build the declarative module.\n- +  -declarative ....... Build the declarative module.\n-\n-    -no-declarative-debug ..... Do not build the declarative debugging support.\n- +  -declarative-debug ....... Build the declarative debugging support.\n-\n-    -no-location ....... Do not build the QtLocation module.\n- +  -location .......... Build the QtLocation module.\n-\n     -platform target ... The operating system and compiler you are building\n                          on ($PLATFORM).\n \n@@ -5436,15 +5227,6 @@ if [ \""$CFG_DBUS\"" != \""no\"" ]; then\n     fi\n fi\n \n-if [ \""$CFG_MULTIMEDIA\"" = \""auto\"" ]; then\n-    CFG_MULTIMEDIA=\""$CFG_GUI\""\n-fi\n-\n-if [ \""$CFG_MULTIMEDIA\"" = \""yes\"" ] && [ \""$CFG_GUI\"" = \""no\"" ]; then\n-    echo \""QtMultimedia requested, but it can't be built without QtGui\""\n-    exit 1\n-fi\n-\n # Generate a CRC of the namespace for using in constants for the Carbon port.\n # This should mean that you really *can* load two Qt's and have our custom\n # Carbon events work.\n@@ -5478,66 +5260,6 @@ if [ \""$PLATFORM_X11\"" = \""yes\"" -o \""$PLATFORM_QWS\"" = \""yes\"" -o \""$PLATFORM_QPA\"" = \""ye\n         fi\n     fi\n \n-    if [ \""$CFG_GUI\"" = \""no\"" ]; then\n-        if [ \""$CFG_PHONON\"" = \""auto\"" ]; then\n-            CFG_PHONON=no\n-        fi\n-        if [ \""$CFG_PHONON\"" != \""no\"" ]; then\n-            echo \""Phonon enabled, but GUI disabled.\""\n-            echo \"" You might need to either enable the GUI or disable Phonon\""\n-            exit 1\n-        fi\n-    fi\n-\n-    # Auto-detect GStreamer support (needed for Phonon)\n-    if [ \""$CFG_PHONON\"" != \""no\"" ]; then\n-        if [ \""$CFG_GLIB\"" = \""yes\"" -a \""$CFG_GSTREAMER\"" != \""no\"" ]; then\n-            if [ -n \""$PKG_CONFIG\"" ]; then\n-                QT_CFLAGS_GSTREAMER=`$PKG_CONFIG --cflags gstreamer-0.10 gstreamer-plugins-base-0.10 2>/dev/null`\n-                QT_LIBS_GSTREAMER=`$PKG_CONFIG --libs gstreamer-0.10 gstreamer-plugins-base-0.10 2>/dev/null`\n-            fi\n-            if \""$unixtests/compile.test\"" \""$XQMAKESPEC\"" \""$QMAKE_CONFIG\"" $OPT_VERBOSE \""$relpath\"" \""$outpath\"" config.tests/unix/gstreamer \""GStreamer\"" $L_FLAGS $I_FLAGS $l_FLAGS $QT_CFLAGS_GSTREAMER $QT_LIBS_GSTREAMER $X11TESTS_FLAGS; then\n-                CFG_GSTREAMER=yes\n-                QMakeVar set QT_CFLAGS_GSTREAMER \""$QT_CFLAGS_GSTREAMER\""\n-                QMakeVar set QT_LIBS_GSTREAMER \""$QT_LIBS_GSTREAMER\""\n-            else\n-                if [ \""$CFG_GSTREAMER\"" = \""yes\"" ] && [ \""$CFG_CONFIGURE_EXIT_ON_ERROR\"" = \""yes\"" ]; then\n-                    echo \""Gstreamer support cannot be enabled due to functionality tests!\""\n-                    echo \"" Turn on verbose messaging (-v) to $0 to see the final report.\""\n-                    echo \"" If you believe this message is in error you may use the continue\""\n-                    echo \"" switch (-continue) to $0 to continue.\""\n-                    exit 101\n-                else\n-                    CFG_GSTREAMER=no\n-                fi\n-            fi\n-        elif [ \""$CFG_GLIB\"" = \""no\"" ]; then\n-            CFG_GSTREAMER=no\n-        fi\n-    else\n-        CFG_GSTREAMER=no\n-    fi\n-\n-    if [ \""$CFG_PHONON\"" != \""no\"" ]; then\n-        if [ \""$CFG_PHONON_BACKEND\"" != \""no\"" ]; then\n-            if [ \""$CFG_GSTREAMER\"" = \""yes\"" ]; then\n-                CFG_PHONON=yes\n-            else\n-                if [ \""$CFG_PHONON\"" = \""yes\"" ] && [ \""$CFG_CONFIGURE_EXIT_ON_ERROR\"" = \""yes\"" ]; then\n-                    echo \""Phonon support cannot be enabled due to functionality tests!\""\n-                    echo \"" Turn on verbose messaging (-v) to $0 to see the final report.\""\n-                    echo \"" If you believe this message is in error you may use the continue\""\n-                    echo \"" switch (-continue) to $0 to continue.\""\n-                    exit 101\n-                else\n-                    CFG_PHONON=no\n-                fi\n-            fi\n-        else\n-            CFG_PHONON=yes\n-        fi\n-    fi\n-\n     # auto-detect icd support\n     if [ \""$CFG_GLIB\"" = \""yes\"" -a \""$CFG_ICD\"" != \""no\"" ]; then\n         if [ -n \""$PKG_CONFIG\"" ]; then\n@@ -5785,12 +5507,6 @@ if [ \""$PLATFORM_X11\"" = \""yes\"" ]; then\n \tfi\n     fi\n \n-    # Additional check to decide if WebKit support will be included\n-    if [ \""$CFG_XRENDER\"" = \""no\"" ] && [ \""$CFG_WEBKIT\"" != \""no\"" ]; then\n-        echo \""Warning: -no-xrender will disable the QtWebkit module.\""\n-        CFG_WEBKIT=\""no\""\n-    fi\n-\n     # auto-detect MIT-SHM support\n     if [ \""$CFG_MITSHM\"" != \""no\"" ]; then\n \tif \""$unixtests/compile.test\"" \""$XQMAKESPEC\"" \""$QMAKE_CONFIG\"" $OPT_VERBOSE \""$relpath\"" \""$outpath\"" config.tests/x11/mitshm \""mitshm\"" $L_FLAGS $I_FLAGS $l_FLAGS $X11TESTS_FLAGS; then\n@@ -6626,31 +6342,6 @@ if [ \""$CFG_ALSA\"" = \""auto\"" ]; then\n     fi\n fi\n \n-if [ \""$CFG_JAVASCRIPTCORE_JIT\"" = \""yes\"" ] || [ \""$CFG_JAVASCRIPTCORE_JIT\"" = \""auto\"" ]; then \n-    if [ \""$CFG_ARCH\"" = \""arm\"" ]; then\n-       \""$unixtests/compile.test\"" \""$XQMAKESPEC\"" \""$QMAKE_CONFIG\"" $OPT_VERBOSE \""$relpath\"" \""$outpath\"" config.tests/unix/javascriptcore-jit \""javascriptcore-jit\"" $L_FLAGS $I_FLAGS $l_FLAGS\n-        if [ $? != \""0\"" ]; then\n-           CFG_JAVASCRIPTCORE_JIT=no\n-        fi\n-    else\n-\tcase \""$XPLATFORM\"" in\n-\t    linux-icc*)\n-\t\tCFG_JAVASCRIPTCORE_JIT=no\n-\t\t;;\n-\tesac\n-    fi\n-fi\n-\n-if [ \""$CFG_JAVASCRIPTCORE_JIT\"" = \""yes\"" ]; then\n-    QMakeVar set JAVASCRIPTCORE_JIT yes\n-elif [ \""$CFG_JAVASCRIPTCORE_JIT\"" = \""no\"" ]; then\n-    QMakeVar set JAVASCRIPTCORE_JIT no\n-fi\n-\n-if [ \""$CFG_AUDIO_BACKEND\"" = \""auto\"" ]; then\n-    CFG_AUDIO_BACKEND=yes\n-fi\n-\n if [ \""$CFG_LARGEFILE\"" != \""yes\"" ] && [ \""$XPLATFORM_MINGW\"" = \""yes\"" ]; then\n     echo \""Warning: largefile support cannot be disabled for win32.\""\n     CFG_LARGEFILE=\""yes\""\n@@ -6766,17 +6457,6 @@ fi\n # but disable Cocoa if cross-building for mingw\n [ \""$XPLATFORM_MINGW\"" = \""yes\"" ] && CFG_MAC_COCOA=\""no\""\n \n-# enable Phonon\n-if [ \""$CFG_PHONON\"" = \""yes\"" ]; then\n-    # No longer needed after modularization\n-    #QT_CONFIG=\""$QT_CONFIG phonon\""\n-    if [ \""$CFG_PHONON_BACKEND\"" = \""yes\"" ]; then\n-        QT_CONFIG=\""$QT_CONFIG phonon-backend\""\n-    fi\n-else\n-    QCONFIG_FLAGS=\""$QCONFIG_FLAGS QT_NO_PHONON\""\n-fi\n-\n # disable accessibility\n if [ \""$CFG_ACCESSIBILITY\"" = \""no\"" ]; then\n     QCONFIG_FLAGS=\""$QCONFIG_FLAGS QT_NO_ACCESSIBILITY\""\n@@ -7016,7 +6696,6 @@ fi\n [ \""$CFG_ICONV\"" = \""sun\"" ] && QT_CONFIG=\""$QT_CONFIG sun-libiconv\""\n [ \""$CFG_ICONV\"" = \""gnu\"" ] && QT_CONFIG=\""$QT_CONFIG gnu-libiconv\""\n [ \""$CFG_GLIB\"" = \""yes\"" ] && QT_CONFIG=\""$QT_CONFIG glib\""\n-[ \""$CFG_GSTREAMER\"" = \""yes\"" ] && QT_CONFIG=\""$QT_CONFIG gstreamer\""\n [ \""$CFG_DBUS\"" = \""yes\"" ] && QT_CONFIG=\""$QT_CONFIG dbus\""\n [ \""$CFG_DBUS\"" = \""linked\"" ] && QT_CONFIG=\""$QT_CONFIG dbus dbus-linked\""\n [ \""$CFG_NAS\"" = \""system\"" ] && QT_CONFIG=\""$QT_CONFIG nas\""\n@@ -7313,90 +6992,6 @@ else\n     QT_CONFIG=\""$QT_CONFIG concurrent\""\n fi\n \n-if [ \""$CFG_XMLPATTERNS\"" = \""yes\"" -a \""$CFG_EXCEPTIONS\"" = \""no\"" ]; then\n-    echo \""QtXmlPatterns was requested, but it can't be built due to exceptions being disabled.\""\n-    exit 1\n-fi\n-if [ \""$CFG_XMLPATTERNS\"" = \""auto\"" -a \""$CFG_EXCEPTIONS\"" != \""no\"" ]; then\n-    CFG_XMLPATTERNS=\""$canBuildQtXmlPatterns\""\n-elif [ \""$CFG_EXCEPTIONS\"" = \""no\"" ]; then\n-    CFG_XMLPATTERNS=\""no\""\n-fi\n-# No longer needed after modularization\n-#if [ \""$CFG_XMLPATTERNS\"" = \""yes\"" ]; then\n-#    QT_CONFIG=\""$QT_CONFIG xmlpatterns\""\n-#else\n-#    QCONFIG_FLAGS=\""$QCONFIG_FLAGS QT_NO_XMLPATTERNS\""\n-#fi\n-\n-# No longer needed after modularization\n-#if [ \""$CFG_MULTIMEDIA\"" = \""no\"" ]; then\n-#    QCONFIG_FLAGS=\""$QCONFIG_FLAGS QT_NO_MULTIMEDIA\""\n-#else\n-#    QT_CONFIG=\""$QT_CONFIG multimedia\""\n-#fi\n-\n-if [ \""$CFG_AUDIO_BACKEND\"" = \""yes\"" ]; then\n-    QT_CONFIG=\""$QT_CONFIG audio-backend\""\n-fi\n-\n-if [ \""$CFG_SVG\"" = \""auto\"" ]; then\n-    CFG_SVG=$CFG_GUI\n-fi\n-\n-if [ \""$CFG_SVG\"" = \""yes\"" ] && [ \""$CFG_GUI\"" = \""no\"" ]; then\n-    echo \""QtSvg requested, but it can't be built without QtGui\""\n-    exit 1\n-fi\n-\n-if [ \""$CFG_SVG\"" = \""yes\"" ]; then\n-    QT_CONFIG=\""$QT_CONFIG svg\""\n-else\n-    QCONFIG_FLAGS=\""$QCONFIG_FLAGS QT_NO_SVG\""\n-fi\n-\n-if [ \""$CFG_WEBKIT\"" != \""no\"" ]; then\n-    CFG_WEBKIT=\""$canBuildWebKit\""\n-fi\n-\n-if [ \""$CFG_WEBKIT\"" != \""no\"" ]; then\n-    # No longer needed after modularization\n-    #QT_CONFIG=\""$QT_CONFIG webkit\""\n-    # The reason we set CFG_WEBKIT, is such that the printed overview of what will be enabled, shows correctly.\n-    if [ \""$CFG_WEBKIT\"" = \""debug\"" ]; then\n-        QMAKE_CONFIG=\""$QMAKE_CONFIG webkit-debug\""\n-    fi\n-fi\n-\n-if [ \""$CFG_SCRIPT\"" = \""auto\"" ]; then\n-    CFG_SCRIPT=\""yes\""\n-fi\n-\n-# No longer needed after modularization\n-#if [ \""$CFG_SCRIPT\"" = \""yes\"" ]; then\n-#    QT_CONFIG=\""$QT_CONFIG script\""\n-#else\n-#    QCONFIG_FLAGS=\""$QCONFIG_FLAGS QT_NO_SCRIPT\""\n-#fi\n-\n-if [ \""$CFG_SCRIPTTOOLS\"" = \""yes\"" -a \""$CFG_SCRIPT\"" = \""no\"" ]; then\n-    echo \""QtScriptTools was requested, but it can't be built due to QtScript being disabled.\""\n-    exit 1\n-fi\n-if [ \""$CFG_SCRIPTTOOLS\"" = \""auto\"" -a \""$CFG_SCRIPT\"" != \""no\"" ]; then\n-    CFG_SCRIPTTOOLS=\""yes\""\n-elif [ \""$CFG_SCRIPT\"" = \""no\"" ]; then\n-    CFG_SCRIPTTOOLS=\""no\""\n-fi\n-\n-# No longer needed after modularization\n-#if [ \""$CFG_SCRIPTTOOLS\"" = \""yes\"" ]; then\n-#    QT_CONFIG=\""$QT_CONFIG scripttools\""\n-#else\n-#    QCONFIG_FLAGS=\""$QCONFIG_FLAGS QT_NO_SCRIPTTOOLS\""\n-#fi\n-\n-\n case \""$CFG_ARCH\"" in\n i386|x86_64|arm|mips|macosx) ;;\n *) canBuildV8=\""no\"";;\n@@ -7436,46 +7031,6 @@ else\n     fi\n fi\n \n-if [ \""$CFG_DECLARATIVE\"" = \""yes\"" ]; then\n-    if [ \""$CFG_V8\"" = \""no\"" -o \""$CFG_GUI\"" = \""no\"" ]; then\n-        echo \""Error: QtDeclarative was requested, but it can't be built due to QtV8 or QtGui being disabled.\""\n-        exit 1\n-    fi\n-fi\n-if [ \""$CFG_DECLARATIVE\"" = \""auto\"" ]; then\n-    if [ \""$CFG_V8\"" = \""no\"" -o \""$CFG_GUI\"" = \""no\"" ]; then\n-            CFG_DECLARATIVE=no\n-    else\n-            CFG_DECLARATIVE=yes\n-    fi\n-fi\n-\n-if [ \""$CFG_DECLARATIVE\"" = \""yes\"" ]; then\n-    # No longer needed after modularization\n-    #QT_CONFIG=\""$QT_CONFIG declarative\""\n-    if [ \""$CFG_DECLARATIVE_DEBUG\"" = \""no\"" ]; then\n-        QCONFIG_FLAGS=\""$QCONFIG_FLAGS QDECLARATIVE_NO_DEBUG_PROTOCOL\""\n-    fi\n-else\n-    QCONFIG_FLAGS=\""$QCONFIG_FLAGS QT_NO_DECLARATIVE\""\n-fi\n-\n-if [ \""$CFG_LOCATION\"" = \""auto\"" ]; then\n-    CFG_LOCATION=\""$CFG_GUI\""\n-fi\n-\n-if [ \""$CFG_LOCATION\"" = \""yes\"" ] && [ \""$CFG_GUI\"" = \""no\"" ]; then\n-    echo \""QtLocation requested, but it can't be built without QtGui\""\n-    exit 1\n-fi\n-\n-#Disable QtLocation until ready\n-CFG_LOCATION=\""no\""\n-\n-if [ \""$CFG_LOCATION\"" = \""no\"" ]; then\n-    QCONFIG_FLAGS=\""$QCONFIG_FLAGS QT_NO_LOCATION\""\n-fi\n-\n if [ \""$CFG_EXCEPTIONS\"" = \""no\"" ]; then\n     case \""$COMPILER\"" in\n     g++*)\n@@ -7778,7 +7333,6 @@ QCONFIG_FLAGS=\""$QCONFIG_FLAGS QT_NO_STYLE_S60\""\n [ \""$CFG_CUPS\"" = \""no\"" ]       && QCONFIG_FLAGS=\""$QCONFIG_FLAGS QT_NO_CUPS\""\n [ \""$CFG_ICONV\"" = \""no\"" ]      && QCONFIG_FLAGS=\""$QCONFIG_FLAGS QT_NO_ICONV\""\n [ \""$CFG_GLIB\"" != \""yes\"" ]     && QCONFIG_FLAGS=\""$QCONFIG_FLAGS QT_NO_GLIB\""\n-[ \""$CFG_GSTREAMER\"" != \""yes\"" ] && QCONFIG_FLAGS=\""$QCONFIG_FLAGS QT_NO_GSTREAMER\""\n [ \""$CFG_QGTKSTYLE\"" != \""yes\"" ] && QCONFIG_FLAGS=\""$QCONFIG_FLAGS QT_NO_STYLE_GTK\""\n [ \""$CFG_CLOCK_MONOTONIC\"" = \""no\"" ] && QCONFIG_FLAGS=\""$QCONFIG_FLAGS QT_NO_CLOCK_MONOTONIC\""\n [ \""$CFG_MREMAP\"" = \""no\"" ]     && QCONFIG_FLAGS=\""$QCONFIG_FLAGS QT_NO_MREMAP\""\n@@ -8061,9 +7615,7 @@ QT_BUILD_PARTS = $CFG_BUILD_PARTS\n \n #local paths that cannot be queried from the QT_INSTALL_* properties while building QTDIR\n QMAKE_MOC        = \\$\\$QT_BUILD_TREE/bin/moc\n-QMAKE_UIC        = \\$\\$QT_BUILD_TREE/bin/uic\n QMAKE_RCC        = \\$\\$QT_BUILD_TREE/bin/rcc\n-QMAKE_QDBUSXML2CPP = \\$\\$QT_BUILD_TREE/bin/qdbusxml2cpp\n QMAKE_INCDIR_QT  = \\$\\$QT_BUILD_TREE/include\n QMAKE_LIBDIR_QT  = \\$\\$QT_BUILD_TREE/lib\n \n@@ -8147,15 +7699,6 @@ EOF\n *) ;;\n esac\n \n-if [ \""$PLATFORM_MAC\"" = \""yes\"" ] && [ \""$CFG_MAC_DWARF2\"" = \""no\"" ]  && [ \""$CFG_WEBKIT\"" != \""no\"" ] && [ \""$CFG_DEBUG_RELEASE\"" = \""yes\"" ]; then\n-    cat <<EOF\n-        WARNING: DWARF2 debug symbols are not enabled. Linking webkit\n-        in debug mode will run out of memory on systems with 2GB or less.\n-        Install Xcode 2.4.1 or higher to enable DWARF2, or configure with\n-         -no-webkit or -release to skip webkit debug.\n-EOF\n-fi\n-\n echo\n if [ \""$XPLATFORM\"" = \""$PLATFORM\"" ]; then\n     echo \""Build type:    $PLATFORM\""\n@@ -8217,30 +7760,7 @@ fi\n [ \""$CFG_DBUS\"" = \""linked\"" ] && echo \""QtDBus module .......... yes (linked)\""\n echo \""QtConcurrent code ...... $CFG_CONCURRENT\""\n echo \""QtGui module ........... $CFG_GUI\""\n-echo \""QtScript module ........ $CFG_SCRIPT\""\n-echo \""QtScriptTools module ... $CFG_SCRIPTTOOLS\""\n-echo \""QtXmlPatterns module ... $CFG_XMLPATTERNS\""\n-echo \""Phonon module .......... $CFG_PHONON\""\n-echo \""Multimedia module ...... $CFG_MULTIMEDIA\""\n-echo \""SVG module ............. $CFG_SVG\""\n-case \""$CFG_WEBKIT\"" in\n-    yes)   echo \""WebKit module .......... yes\"" ;;\n-    debug) echo \""WebKit module .......... yes (debug)\"" ;;\n-    no)    echo \""WebKit module .......... no\"" ;;\n-esac\n-if [ \""$CFG_WEBKIT\"" != \""no\"" ] || [ \""$CFG_SCRIPT\"" != \""no\"" ]; then\n-    if [ \""$CFG_JAVASCRIPTCORE_JIT\"" = \""auto\"" ]; then\n-        echo \""JavaScriptCore JIT ..... To be decided by JavaScriptCore\""\n-    else\n-        echo \""JavaScriptCore JIT ..... $CFG_JAVASCRIPTCORE_JIT\""\n-    fi\n-fi\n echo \""V8 module .............. $CFG_V8\""\n-echo \""Declarative module ..... $CFG_DECLARATIVE\""\n-if [ \""$CFG_DECLARATIVE\"" = \""yes\"" ]; then\n-    echo \""Declarative debugging ...$CFG_DECLARATIVE_DEBUG\""\n-fi\n-echo \""Location module ........ $CFG_LOCATION\""\n echo \""STL support ............ $CFG_STL\""\n echo \""PCH support ............ $CFG_PRECOMPILE\""\n echo \""MMX/3DNOW/SSE/SSE2/SSE3. ${CFG_MMX}/${CFG_3DNOW}/${CFG_SSE}/${CFG_SSE2}/${CFG_SSE3}\""\n@@ -8258,7 +7778,6 @@ echo \""NIS support ............ $CFG_NIS\""\n echo \""CUPS support ........... $CFG_CUPS\""\n echo \""Iconv support .......... $CFG_ICONV\""\n echo \""Glib support ........... $CFG_GLIB\""\n-echo \""GStreamer support ...... $CFG_GSTREAMER\""\n echo \""PulseAudio support ..... $CFG_PULSEAUDIO\""\n echo \""Large File support ..... $CFG_LARGEFILE\""\n echo \""GIF support ............ $CFG_GIF\""\n@@ -8549,7 +8068,7 @@ PART_ROOTS=\n for part in $CFG_BUILD_PARTS; do\n     case \""$part\"" in\n     tools) PART_ROOTS=\""$PART_ROOTS tools\"" ;;\n-    libs) PART_ROOTS=\""$PART_ROOTS src tools/linguist/lrelease\"" ;;\n+    libs) PART_ROOTS=\""$PART_ROOTS src\"" ;;\n     translations) PART_ROOTS=\""$PART_ROOTS translations\"" ;;\n     examples) PART_ROOTS=\""$PART_ROOTS examples\"" ;;\n     *) ;;\n@@ -8579,9 +8098,8 @@ for file in .projects .projects.3; do\n                 continue\n             fi\n             SPEC=$XQMAKESPEC ;;\n-        *examples/activeqt/*) continue ;;\n         */qmake/qmake.pro) continue ;;\n-        *tools/bootstrap*|*tools/moc*|*tools/rcc*|*tools/uic*|*linguist/lrelease*) SPEC=$QMAKESPEC ;;\n+        *tools/bootstrap*|*tools/moc*|*tools/rcc*) SPEC=$QMAKESPEC ;;\n         *tools/mkv8snapshot/*)\n             if [ \""$CFG_V8\"" = \""yes\"" -a \""$CFG_V8SNAPSHOT\"" = \""yes\"" ]; then\n                 SPEC=$QMAKESPEC\n""}",deprecat;resource,"refactor, deprecate 
",deprecat;resource;
5532.0,5532.0,deprecat;resource ,Eskil Abrahamsen Blomfeldt,Fix possible crash in QFontEngineFT,"Fix possible crash in QFontEngineFT

Avoid crash if set pointer is null.

Task-number: QTBUG-21647
Reviewed-by: Jiang Jiang
(cherry picked from commit e05734987594f0e54f58a2ab3037cdf4956e9036)

Change-Id: I49fde194ef6be5485a43c5d09fc43170ab9d4d6b",['src/gui/text/qfontengine_ft.cpp'],"{""qfontengine_ft.cpp"": ""@@ -814,7 +814,7 @@ int QFontEngineFT::loadFlags(QGlyphSet *set, GlyphFormat format, int flags,\n     if (set && set->outline_drawing)\n         load_flags = FT_LOAD_NO_BITMAP;\n \n-    if (default_hint_style == HintNone || (flags & HB_ShaperFlag_UseDesignMetrics) || set->outline_drawing)\n+    if (default_hint_style == HintNone || (flags & HB_ShaperFlag_UseDesignMetrics) || (set && set->outline_drawing))\n         load_flags |= FT_LOAD_NO_HINTING;\n     else\n         load_flags |= load_target;\n""}",bug,"bug 
",bug;
